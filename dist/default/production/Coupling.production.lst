

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jun 19 16:42:25 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataBANK0
    69  006D08                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _PID_Out_Max
    73  006D08  2710               	dw	10000
    74                           
    75                           ;initializer for _PID_Out_Min
    76  006D0A  D8F0               	dw	55536
    77  0000                     _PORTD	set	3971
    78  0000                     _PORTB	set	3969
    79  0000                     _PORTCbits	set	3970
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISD	set	3989
    82  0000                     _TRISB	set	3987
    83  0000                     _TMR3CS	set	32137
    84  0000                     _TMR1CS	set	32361
    85                           
    86                           ; #config settings
    87  0000                     
    88                           	psect	cinit
    89  006D54                     __pcinit:
    90                           	opt stack 0
    91  006D54                     start_initialization:
    92                           	opt stack 0
    93  006D54                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Initialize objects allocated to BANK0 (4 bytes)
    97                           ; load TBLPTR registers with __pidataBANK0
    98  006D54  0E08               	movlw	low __pidataBANK0
    99  006D56  6EF6               	movwf	tblptrl,c
   100  006D58  0E6D               	movlw	high __pidataBANK0
   101  006D5A  6EF7               	movwf	tblptrh,c
   102  006D5C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   103  006D5E  6EF8               	movwf	tblptru,c
   104  006D60  EE00  F0A8         	lfsr	0,__pdataBANK0
   105  006D64  EE10 F004          	lfsr	1,4
   106  006D68                     copy_data0:
   107  006D68  0009               	tblrd		*+
   108  006D6A  CFF5 FFEE          	movff	tablat,postinc0
   109  006D6E  50E5               	movf	postdec1,w,c
   110  006D70  50E1               	movf	fsr1l,w,c
   111  006D72  E1FA               	bnz	copy_data0
   112                           
   113                           ; Clear objects allocated to BANK0 (21 bytes)
   114  006D74  EE00  F093         	lfsr	0,__pbssBANK0
   115  006D78  0E15               	movlw	21
   116  006D7A                     clear_0:
   117  006D7A  6AEE               	clrf	postinc0,c
   118  006D7C  06E8               	decf	wreg,f,c
   119  006D7E  E1FD               	bnz	clear_0
   120                           
   121                           ; Clear objects allocated to COMRAM (2 bytes)
   122  006D80  6A43               	clrf	(__pbssCOMRAM+1)& (0+255),c
   123  006D82  6A42               	clrf	__pbssCOMRAM& (0+255),c
   124  006D84                     end_of_initialization:
   125                           	opt stack 0
   126  006D84                     __end_of__initialization:
   127                           	opt stack 0
   128  006D84  0100               	movlb	0
   129  006D86  EF3C  F03D         	goto	_main	;jump to C main() function
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           wreg	equ	0xFE8
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	bssCOMRAM
   140  000042                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000042                     _sign:
   143                           	opt stack 0
   144  000042                     	ds	2
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	bssBANK0
   155  000093                     __pbssBANK0:
   156                           	opt stack 0
   157  000093                     _D:
   158                           	opt stack 0
   159  000093                     	ds	3
   160  000096                     _C:
   161                           	opt stack 0
   162  000096                     	ds	3
   163  000099                     _B:
   164                           	opt stack 0
   165  000099                     	ds	3
   166  00009C                     _A:
   167                           	opt stack 0
   168  00009C                     	ds	3
   169  00009F                     _Input:
   170                           	opt stack 0
   171  00009F                     	ds	3
   172  0000A2                     _Output:
   173                           	opt stack 0
   174  0000A2                     	ds	3
   175  0000A5                     _Setpoint:
   176                           	opt stack 0
   177  0000A5                     	ds	2
   178  0000A7                     _output:
   179                           	opt stack 0
   180  0000A7                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           postdec1	equ	0xFE5
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	dataBANK0
   191  0000A8                     __pdataBANK0:
   192                           	opt stack 0
   193  0000A8                     _PID_Out_Max:
   194                           	opt stack 0
   195  0000A8                     	ds	2
   196  0000AA                     _PID_Out_Min:
   197                           	opt stack 0
   198  0000AA                     	ds	2
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	cstackBANK0
   209  000060                     __pcstackBANK0:
   210                           	opt stack 0
   211  000060                     _main$1037:
   212                           	opt stack 0
   213                           
   214                           ; 3 bytes @ 0x0
   215  000060                     	ds	3
   216  000063                     _main$1038:
   217                           	opt stack 0
   218                           
   219                           ; 3 bytes @ 0x3
   220  000063                     	ds	3
   221  000066                     main@PID:
   222                           	opt stack 0
   223                           
   224                           ; 45 bytes @ 0x6
   225  000066                     	ds	45
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	cstackCOMRAM
   236  000001                     __pcstackCOMRAM:
   237                           	opt stack 0
   238  000001                     ?___ftpack:
   239                           	opt stack 0
   240  000001                     ?___fttol:
   241                           	opt stack 0
   242  000001                     ___ftpack@arg:
   243                           	opt stack 0
   244  000001                     ___ftge@ff1:
   245                           	opt stack 0
   246  000001                     ___fttol@f1:
   247                           	opt stack 0
   248                           
   249                           ; 3 bytes @ 0x0
   250  000001                     	ds	3
   251  000004                     ___ftpack@exp:
   252                           	opt stack 0
   253  000004                     ___ftge@ff2:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x3
   257  000004                     	ds	1
   258  000005                     ??___fttol:
   259  000005                     ___ftpack@sign:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x4
   263  000005                     	ds	1
   264  000006                     ??___ftpack:
   265                           
   266                           ; 1 bytes @ 0x5
   267  000006                     	ds	1
   268  000007                     ??___ftge:
   269                           
   270                           ; 1 bytes @ 0x6
   271  000007                     	ds	2
   272  000009                     ?___ftmul:
   273                           	opt stack 0
   274  000009                     ?___awtoft:
   275                           	opt stack 0
   276  000009                     ?___lbtoft:
   277                           	opt stack 0
   278  000009                     ?___lltoft:
   279                           	opt stack 0
   280  000009                     ___awtoft@c:
   281                           	opt stack 0
   282  000009                     ___ftmul@f1:
   283                           	opt stack 0
   284  000009                     ___lltoft@c:
   285                           	opt stack 0
   286                           
   287                           ; 4 bytes @ 0x8
   288  000009                     	ds	1
   289  00000A                     ___fttol@sign1:
   290                           	opt stack 0
   291  00000A                     PID_Initialize@pid:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x9
   295  00000A                     	ds	1
   296  00000B                     ___fttol@lval:
   297                           	opt stack 0
   298                           
   299                           ; 4 bytes @ 0xA
   300  00000B                     	ds	1
   301  00000C                     ___awtoft@sign:
   302                           	opt stack 0
   303  00000C                     ___lbtoft@c:
   304                           	opt stack 0
   305  00000C                     PID_SetMode@pid:
   306                           	opt stack 0
   307  00000C                     ___ftmul@f2:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0xB
   311  00000C                     	ds	1
   312  00000D                     ??___lltoft:
   313  00000D                     PID_SetOutputLimits@pid:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0xC
   317  00000D                     	ds	1
   318  00000E                     PID_SetMode@Mode:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0xD
   322  00000E                     	ds	1
   323  00000F                     ??___ftmul:
   324  00000F                     ___fttol@exp1:
   325                           	opt stack 0
   326  00000F                     PID_SetOutputLimits@Min:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0xE
   330  00000F                     	ds	1
   331  000010                     PID_SetMode@newAuto:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0xF
   335  000010                     	ds	1
   336  000011                     ___lltoft@exp:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x10
   340  000011                     	ds	1
   341  000012                     ?___ftdiv:
   342                           	opt stack 0
   343  000012                     ___ftmul@exp:
   344                           	opt stack 0
   345  000012                     PID_SetOutputLimits@Max:
   346                           	opt stack 0
   347  000012                     ___ftdiv@f1:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x11
   351  000012                     	ds	1
   352  000013                     ___ftmul@f3_as_product:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x12
   356  000013                     	ds	2
   357  000015                     ___ftdiv@f2:
   358                           	opt stack 0
   359                           
   360                           ; 3 bytes @ 0x14
   361  000015                     	ds	1
   362  000016                     ___ftmul@cntr:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x15
   366  000016                     	ds	1
   367  000017                     ___ftmul@sign:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x16
   371  000017                     	ds	1
   372  000018                     ??___ftdiv:
   373  000018                     ?___ftadd:
   374                           	opt stack 0
   375  000018                     ___ftadd@f1:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0x17
   379  000018                     	ds	3
   380  00001B                     ___ftdiv@cntr:
   381                           	opt stack 0
   382  00001B                     ___ftadd@f2:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x1A
   386  00001B                     	ds	1
   387  00001C                     ___ftdiv@f3:
   388                           	opt stack 0
   389                           
   390                           ; 3 bytes @ 0x1B
   391  00001C                     	ds	2
   392  00001E                     ??___ftadd:
   393                           
   394                           ; 1 bytes @ 0x1D
   395  00001E                     	ds	1
   396  00001F                     ___ftdiv@exp:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x1E
   400  00001F                     	ds	1
   401  000020                     ___ftdiv@sign:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x1F
   405  000020                     	ds	1
   406  000021                     ___ftadd@sign:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x20
   410  000021                     	ds	1
   411  000022                     ___ftadd@exp2:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x21
   415  000022                     	ds	1
   416  000023                     ___ftadd@exp1:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x22
   420  000023                     	ds	1
   421  000024                     ?___ftneg:
   422                           	opt stack 0
   423  000024                     ___ftneg@f1:
   424                           	opt stack 0
   425                           
   426                           ; 3 bytes @ 0x23
   427  000024                     	ds	3
   428  000027                     PID_Compute@pid:
   429                           	opt stack 0
   430  000027                     PID_SetTunings@pid:
   431                           	opt stack 0
   432  000027                     PID_SetControllerDirection@pid:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x26
   436  000027                     	ds	2
   437  000029                     PID_SetControllerDirection@Direction:
   438                           	opt stack 0
   439  000029                     PID_Compute@dInput:
   440                           	opt stack 0
   441  000029                     PID_SetTunings@Kp:
   442                           	opt stack 0
   443                           
   444                           ; 3 bytes @ 0x28
   445  000029                     	ds	1
   446  00002A                     
   447                           ; 1 bytes @ 0x29
   448  00002A                     	ds	2
   449  00002C                     PID_SetTunings@Ki:
   450                           	opt stack 0
   451  00002C                     _PID_Compute$1039:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x2B
   455  00002C                     	ds	3
   456  00002F                     PID_Compute@error:
   457                           	opt stack 0
   458  00002F                     PID_SetTunings@Kd:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x2E
   462  00002F                     	ds	3
   463  000032                     PID_Compute@input:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x31
   467  000032                     	ds	1
   468  000033                     PID_SetTunings@SampleTimeInSec:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x32
   472  000033                     	ds	2
   473  000035                     PID_Compute@output:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0x34
   477  000035                     	ds	1
   478  000036                     PID_init@pid:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x35
   482  000036                     	ds	2
   483  000038                     PID_init@Kp:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x37
   487  000038                     	ds	3
   488  00003B                     PID_init@Ki:
   489                           	opt stack 0
   490                           
   491                           ; 3 bytes @ 0x3A
   492  00003B                     	ds	3
   493  00003E                     PID_init@Kd:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x3D
   497  00003E                     	ds	3
   498  000041                     PID_init@ControllerDirection:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x40
   502  000041                     	ds	1
   503  000042                     tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           ; 1 bytes @ 0x41
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 52 in file "newmain.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  PID            45    6[BANK0 ] struct .
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   532 ;;      Params:         0       0       0       0       0       0       0       0       0
   533 ;;      Locals:         0      51       0       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0
   535 ;;      Totals:         0      51       0       0       0       0       0       0       0
   536 ;;Total ram usage:       51 bytes
   537 ;; Hardware stack levels required when called:    4
   538 ;; This function calls:
   539 ;;		_PID_Compute
   540 ;;		_PID_SetMode
   541 ;;		_PID_SetOutputLimits
   542 ;;		_PID_init
   543 ;;		___awtoft
   544 ;;		___ftadd
   545 ;;		___ftge
   546 ;;		___ftneg
   547 ;;		___fttol
   548 ;;		___lbtoft
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text0
   555  007A78                     __ptext0:
   556                           	opt stack 0
   557  007A78                     _main:
   558                           	opt stack 27
   559                           
   560                           ;newmain.c: 53: TRISB = 0xFF;
   561                           
   562                           ;incstack = 0
   563  007A78  6893               	setf	3987,c	;volatile
   564                           
   565                           ;newmain.c: 54: TRISD = 0x00;
   566  007A7A  0E00               	movlw	0
   567  007A7C  6E95               	movwf	3989,c	;volatile
   568                           
   569                           ;newmain.c: 55: TRISC = 0b01000000;
   570  007A7E  0E40               	movlw	64
   571  007A80  6E94               	movwf	3988,c	;volatile
   572                           
   573                           ;newmain.c: 56: TMR1CS = 0;
   574  007A82  92CD               	bcf	4045,1,c	;volatile
   575                           
   576                           ;newmain.c: 57: TMR3CS = 0;
   577  007A84  92B1               	bcf	4017,1,c	;volatile
   578                           
   579                           ;newmain.c: 58: PORTCbits.RC0 = 0;
   580  007A86  9082               	bcf	3970,0,c	;volatile
   581                           
   582                           ;newmain.c: 59: PORTCbits.RC1 = 0;
   583  007A88  9282               	bcf	3970,1,c	;volatile
   584                           
   585                           ;newmain.c: 60: PORTCbits.RC2 = 1;
   586  007A8A  8482               	bsf	3970,2,c	;volatile
   587                           
   588                           ;newmain.c: 61: PORTCbits.RC7 = 0;
   589  007A8C  9E82               	bcf	3970,7,c	;volatile
   590  007A8E                     l1732:
   591                           
   592                           ;newmain.c: 66: PORTCbits.RC0 = 0;
   593  007A8E  9082               	bcf	3970,0,c	;volatile
   594                           
   595                           ;newmain.c: 67: PORTCbits.RC1 = 0;
   596  007A90  9282               	bcf	3970,1,c	;volatile
   597                           
   598                           ;newmain.c: 69: PORTCbits.RC2 = 1;
   599  007A92  8482               	bsf	3970,2,c	;volatile
   600                           
   601                           ;newmain.c: 70: _delay((unsigned long)((5)*(32000000/4000000.0)));
   602  007A94  0E0D               	movlw	13
   603  007A96                     u1657:
   604  007A96  2EE8               	decfsz	wreg,f,c
   605  007A98  D7FE               	bra	u1657
   606  007A9A  F000               	nop	
   607                           
   608                           ;newmain.c: 71: PORTCbits.RC2 = 0;
   609  007A9C  9482               	bcf	3970,2,c	;volatile
   610  007A9E                     l54:
   611  007A9E  BC82               	btfsc	3970,6,c	;volatile
   612  007AA0  D7FE               	goto	l54
   613                           
   614                           ;newmain.c: 74: A = PORTB;
   615  007AA2  5081               	movf	3969,w,c	;volatile
   616  007AA4  EC98  F036         	call	___lbtoft
   617  007AA8  C009  F09C         	movff	?___lbtoft,_A
   618  007AAC  C00A  F09D         	movff	?___lbtoft+1,_A+1
   619  007AB0  C00B  F09E         	movff	?___lbtoft+2,_A+2
   620                           
   621                           ;newmain.c: 76: _delay((unsigned long)((40)*(32000000/4000000.0)));
   622  007AB4  0E6A               	movlw	106
   623  007AB6                     u1667:
   624  007AB6  2EE8               	decfsz	wreg,f,c
   625  007AB8  D7FE               	bra	u1667
   626  007ABA  D000               	nop2	
   627                           
   628                           ;newmain.c: 78: PORTCbits.RC0 = 1;
   629  007ABC  8082               	bsf	3970,0,c	;volatile
   630                           
   631                           ;newmain.c: 79: PORTCbits.RC1 = 0;
   632  007ABE  9282               	bcf	3970,1,c	;volatile
   633                           
   634                           ;newmain.c: 81: PORTCbits.RC2 = 1;
   635  007AC0  8482               	bsf	3970,2,c	;volatile
   636                           
   637                           ;newmain.c: 82: _delay((unsigned long)((5)*(32000000/4000000.0)));
   638  007AC2  0E0D               	movlw	13
   639  007AC4                     u1677:
   640  007AC4  2EE8               	decfsz	wreg,f,c
   641  007AC6  D7FE               	bra	u1677
   642  007AC8  F000               	nop	
   643                           
   644                           ;newmain.c: 83: PORTCbits.RC2 = 0;
   645  007ACA  9482               	bcf	3970,2,c	;volatile
   646  007ACC                     l57:
   647  007ACC  BC82               	btfsc	3970,6,c	;volatile
   648  007ACE  D7FE               	goto	l57
   649                           
   650                           ;newmain.c: 86: B = PORTB;
   651  007AD0  5081               	movf	3969,w,c	;volatile
   652  007AD2  EC98  F036         	call	___lbtoft
   653  007AD6  C009  F099         	movff	?___lbtoft,_B
   654  007ADA  C00A  F09A         	movff	?___lbtoft+1,_B+1
   655  007ADE  C00B  F09B         	movff	?___lbtoft+2,_B+2
   656                           
   657                           ;newmain.c: 88: _delay((unsigned long)((40)*(32000000/4000000.0)));
   658  007AE2  0E6A               	movlw	106
   659  007AE4                     u1687:
   660  007AE4  2EE8               	decfsz	wreg,f,c
   661  007AE6  D7FE               	bra	u1687
   662  007AE8  D000               	nop2	
   663                           
   664                           ;newmain.c: 90: PORTCbits.RC0 = 0;
   665  007AEA  9082               	bcf	3970,0,c	;volatile
   666                           
   667                           ;newmain.c: 91: PORTCbits.RC1 = 1;
   668  007AEC  8282               	bsf	3970,1,c	;volatile
   669                           
   670                           ;newmain.c: 93: PORTCbits.RC2 = 1;
   671  007AEE  8482               	bsf	3970,2,c	;volatile
   672                           
   673                           ;newmain.c: 94: _delay((unsigned long)((5)*(32000000/4000000.0)));
   674  007AF0  0E0D               	movlw	13
   675  007AF2                     u1697:
   676  007AF2  2EE8               	decfsz	wreg,f,c
   677  007AF4  D7FE               	bra	u1697
   678  007AF6  F000               	nop	
   679                           
   680                           ;newmain.c: 95: PORTCbits.RC2 = 0;
   681  007AF8  9482               	bcf	3970,2,c	;volatile
   682  007AFA                     l60:
   683  007AFA  BC82               	btfsc	3970,6,c	;volatile
   684  007AFC  D7FE               	goto	l60
   685                           
   686                           ;newmain.c: 98: C = PORTB;
   687  007AFE  5081               	movf	3969,w,c	;volatile
   688  007B00  EC98  F036         	call	___lbtoft
   689  007B04  C009  F096         	movff	?___lbtoft,_C
   690  007B08  C00A  F097         	movff	?___lbtoft+1,_C+1
   691  007B0C  C00B  F098         	movff	?___lbtoft+2,_C+2
   692                           
   693                           ;newmain.c: 100: _delay((unsigned long)((40)*(32000000/4000000.0)));
   694  007B10  0E6A               	movlw	106
   695  007B12                     u1707:
   696  007B12  2EE8               	decfsz	wreg,f,c
   697  007B14  D7FE               	bra	u1707
   698  007B16  D000               	nop2	
   699                           
   700                           ;newmain.c: 102: PORTCbits.RC0 = 1;
   701  007B18  8082               	bsf	3970,0,c	;volatile
   702                           
   703                           ;newmain.c: 103: PORTCbits.RC1 = 1;
   704  007B1A  8282               	bsf	3970,1,c	;volatile
   705                           
   706                           ;newmain.c: 105: PORTCbits.RC2 = 1;
   707  007B1C  8482               	bsf	3970,2,c	;volatile
   708                           
   709                           ;newmain.c: 106: _delay((unsigned long)((5)*(32000000/4000000.0)));
   710  007B1E  0E0D               	movlw	13
   711  007B20                     u1717:
   712  007B20  2EE8               	decfsz	wreg,f,c
   713  007B22  D7FE               	bra	u1717
   714  007B24  F000               	nop	
   715                           
   716                           ;newmain.c: 107: PORTCbits.RC2 = 0;
   717  007B26  9482               	bcf	3970,2,c	;volatile
   718  007B28                     l63:
   719  007B28  BC82               	btfsc	3970,6,c	;volatile
   720  007B2A  D7FE               	goto	l63
   721                           
   722                           ;newmain.c: 110: D = PORTB;
   723  007B2C  5081               	movf	3969,w,c	;volatile
   724  007B2E  EC98  F036         	call	___lbtoft
   725  007B32  C009  F093         	movff	?___lbtoft,_D
   726  007B36  C00A  F094         	movff	?___lbtoft+1,_D+1
   727  007B3A  C00B  F095         	movff	?___lbtoft+2,_D+2
   728                           
   729                           ;newmain.c: 112: _delay((unsigned long)((40)*(32000000/4000000.0)));
   730  007B3E  0E6A               	movlw	106
   731  007B40                     u1727:
   732  007B40  2EE8               	decfsz	wreg,f,c
   733  007B42  D7FE               	bra	u1727
   734  007B44  D000               	nop2	
   735                           
   736                           ;newmain.c: 116: Input = (A+B)-(C+D);
   737  007B46  C093  F01B         	movff	_D,___ftadd@f2
   738  007B4A  C094  F01C         	movff	_D+1,___ftadd@f2+1
   739  007B4E  C095  F01D         	movff	_D+2,___ftadd@f2+2
   740  007B52  C096  F018         	movff	_C,___ftadd@f1
   741  007B56  C097  F019         	movff	_C+1,___ftadd@f1+1
   742  007B5A  C098  F01A         	movff	_C+2,___ftadd@f1+2
   743  007B5E  ECA6  F03A         	call	___ftadd	;wreg free
   744  007B62  C018  F024         	movff	?___ftadd,___ftneg@f1
   745  007B66  C019  F025         	movff	?___ftadd+1,___ftneg@f1+1
   746  007B6A  C01A  F026         	movff	?___ftadd+2,___ftneg@f1+2
   747  007B6E  EC86  F036         	call	___ftneg	;wreg free
   748  007B72  C024  F060         	movff	?___ftneg,_main$1037
   749  007B76  C025  F061         	movff	?___ftneg+1,_main$1037+1
   750  007B7A  C026  F062         	movff	?___ftneg+2,_main$1037+2
   751                           
   752                           ;newmain.c: 116: Input = (A+B)-(C+D);
   753  007B7E  C09C  F01B         	movff	_A,___ftadd@f2
   754  007B82  C09D  F01C         	movff	_A+1,___ftadd@f2+1
   755  007B86  C09E  F01D         	movff	_A+2,___ftadd@f2+2
   756  007B8A  C060  F018         	movff	_main$1037,___ftadd@f1
   757  007B8E  C061  F019         	movff	_main$1037+1,___ftadd@f1+1
   758  007B92  C062  F01A         	movff	_main$1037+2,___ftadd@f1+2
   759  007B96  ECA6  F03A         	call	___ftadd	;wreg free
   760  007B9A  C018  F063         	movff	?___ftadd,_main$1038
   761  007B9E  C019  F064         	movff	?___ftadd+1,_main$1038+1
   762  007BA2  C01A  F065         	movff	?___ftadd+2,_main$1038+2
   763                           
   764                           ;newmain.c: 116: Input = (A+B)-(C+D);
   765  007BA6  C063  F018         	movff	_main$1038,___ftadd@f1
   766  007BAA  C064  F019         	movff	_main$1038+1,___ftadd@f1+1
   767  007BAE  C065  F01A         	movff	_main$1038+2,___ftadd@f1+2
   768  007BB2  C099  F01B         	movff	_B,___ftadd@f2
   769  007BB6  C09A  F01C         	movff	_B+1,___ftadd@f2+1
   770  007BBA  C09B  F01D         	movff	_B+2,___ftadd@f2+2
   771  007BBE  ECA6  F03A         	call	___ftadd	;wreg free
   772  007BC2  C018  F09F         	movff	?___ftadd,_Input
   773  007BC6  C019  F0A0         	movff	?___ftadd+1,_Input+1
   774  007BCA  C01A  F0A1         	movff	?___ftadd+2,_Input+2
   775                           
   776                           ;newmain.c: 117: PidType PID;
   777                           ;newmain.c: 118: PID_init(&PID, 1, 0, 0, PID_Direction_Reverse);
   778  007BCE  0E66               	movlw	low main@PID
   779  007BD0  6E36               	movwf	PID_init@pid,c
   780  007BD2  0E00               	movlw	high main@PID
   781  007BD4  6E37               	movwf	PID_init@pid+1,c
   782  007BD6  0E00               	movlw	0
   783  007BD8  6E38               	movwf	PID_init@Kp,c
   784  007BDA  0E80               	movlw	128
   785  007BDC  6E39               	movwf	PID_init@Kp+1,c
   786  007BDE  0E3F               	movlw	63
   787  007BE0  6E3A               	movwf	PID_init@Kp+2,c
   788  007BE2  0E00               	movlw	0
   789  007BE4  6E3B               	movwf	PID_init@Ki,c
   790  007BE6  0E00               	movlw	0
   791  007BE8  6E3C               	movwf	PID_init@Ki+1,c
   792  007BEA  0E00               	movlw	0
   793  007BEC  6E3D               	movwf	PID_init@Ki+2,c
   794  007BEE  0E00               	movlw	0
   795  007BF0  6E3E               	movwf	PID_init@Kd,c
   796  007BF2  0E00               	movlw	0
   797  007BF4  6E3F               	movwf	PID_init@Kd+1,c
   798  007BF6  0E00               	movlw	0
   799  007BF8  6E40               	movwf	PID_init@Kd+2,c
   800  007BFA  0E01               	movlw	1
   801  007BFC  6E41               	movwf	PID_init@ControllerDirection,c
   802  007BFE  EC21  F03A         	call	_PID_init	;wreg free
   803                           
   804                           ;newmain.c: 119: PID_SetMode(&PID, PID_Mode_Automatic);
   805  007C02  0E66               	movlw	low main@PID
   806  007C04  6E0C               	movwf	PID_SetMode@pid,c
   807  007C06  0E00               	movlw	high main@PID
   808  007C08  6E0D               	movwf	PID_SetMode@pid+1,c
   809  007C0A  0E01               	movlw	1
   810  007C0C  6E0E               	movwf	PID_SetMode@Mode,c
   811  007C0E  ECE1  F036         	call	_PID_SetMode	;wreg free
   812                           
   813                           ;newmain.c: 120: PID_SetOutputLimits(&PID, PID_Out_Min, PID_Out_Max);
   814  007C12  0E66               	movlw	low main@PID
   815  007C14  6E0D               	movwf	PID_SetOutputLimits@pid,c
   816  007C16  0E00               	movlw	high main@PID
   817  007C18  6E0E               	movwf	PID_SetOutputLimits@pid+1,c
   818  007C1A  C0AA  F009         	movff	_PID_Out_Min,___awtoft@c
   819  007C1E  C0AB  F00A         	movff	_PID_Out_Min+1,___awtoft@c+1
   820  007C22  ECC5  F036         	call	___awtoft	;wreg free
   821  007C26  C009  F00F         	movff	?___awtoft,PID_SetOutputLimits@Min
   822  007C2A  C00A  F010         	movff	?___awtoft+1,PID_SetOutputLimits@Min+1
   823  007C2E  C00B  F011         	movff	?___awtoft+2,PID_SetOutputLimits@Min+2
   824  007C32  C0A8  F009         	movff	_PID_Out_Max,___awtoft@c
   825  007C36  C0A9  F00A         	movff	_PID_Out_Max+1,___awtoft@c+1
   826  007C3A  ECC5  F036         	call	___awtoft	;wreg free
   827  007C3E  C009  F012         	movff	?___awtoft,PID_SetOutputLimits@Max
   828  007C42  C00A  F013         	movff	?___awtoft+1,PID_SetOutputLimits@Max+1
   829  007C46  C00B  F014         	movff	?___awtoft+2,PID_SetOutputLimits@Max+2
   830  007C4A  EC7C  F03B         	call	_PID_SetOutputLimits	;wreg free
   831                           
   832                           ;newmain.c: 121: PID.mySetpoint = Setpoint;
   833  007C4E  C0A5  F009         	movff	_Setpoint,___awtoft@c
   834  007C52  C0A6  F00A         	movff	_Setpoint+1,___awtoft@c+1
   835  007C56  ECC5  F036         	call	___awtoft	;wreg free
   836  007C5A  C009  F07F         	movff	?___awtoft,main@PID+25
   837  007C5E  C00A  F080         	movff	?___awtoft+1,main@PID+26
   838  007C62  C00B  F081         	movff	?___awtoft+2,main@PID+27
   839                           
   840                           ;newmain.c: 122: PID.myInput = Input;
   841  007C66  C09F  F079         	movff	_Input,main@PID+19
   842  007C6A  C0A0  F07A         	movff	_Input+1,main@PID+20
   843  007C6E  C0A1  F07B         	movff	_Input+2,main@PID+21
   844                           
   845                           ;newmain.c: 123: PID_Compute(&PID);
   846  007C72  0E66               	movlw	low main@PID
   847  007C74  6E27               	movwf	PID_Compute@pid,c
   848  007C76  0E00               	movlw	high main@PID
   849  007C78  6E28               	movwf	PID_Compute@pid+1,c
   850  007C7A  EC74  F03E         	call	_PID_Compute	;wreg free
   851                           
   852                           ;newmain.c: 124: Output = PID.myOutput;
   853  007C7E  C07C  F0A2         	movff	main@PID+22,_Output
   854  007C82  C07D  F0A3         	movff	main@PID+23,_Output+1
   855  007C86  C07E  F0A4         	movff	main@PID+24,_Output+2
   856                           
   857                           ;newmain.c: 126: if(Output>0){
   858  007C8A  0E00               	movlw	0
   859  007C8C  6E01               	movwf	___ftge@ff1,c
   860  007C8E  0E00               	movlw	0
   861  007C90  6E02               	movwf	___ftge@ff1+1,c
   862  007C92  0E00               	movlw	0
   863  007C94  6E03               	movwf	___ftge@ff1+2,c
   864  007C96  C0A2  F004         	movff	_Output,___ftge@ff2
   865  007C9A  C0A3  F005         	movff	_Output+1,___ftge@ff2+1
   866  007C9E  C0A4  F006         	movff	_Output+2,___ftge@ff2+2
   867  007CA2  EC2F  F037         	call	___ftge	;wreg free
   868  007CA6  B0D8               	btfsc	status,0,c
   869  007CA8  D002               	goto	l1812
   870                           
   871                           ;newmain.c: 128: PORTCbits.RC7 = 0;
   872  007CAA  9E82               	bcf	3970,7,c	;volatile
   873                           
   874                           ;newmain.c: 129: }
   875  007CAC  D00F               	goto	l67
   876  007CAE                     l1812:
   877                           
   878                           ;newmain.c: 130: else{
   879                           ;newmain.c: 131: Output = -Output;
   880  007CAE  C0A2  F024         	movff	_Output,___ftneg@f1
   881  007CB2  C0A3  F025         	movff	_Output+1,___ftneg@f1+1
   882  007CB6  C0A4  F026         	movff	_Output+2,___ftneg@f1+2
   883  007CBA  EC86  F036         	call	___ftneg	;wreg free
   884  007CBE  C024  F0A2         	movff	?___ftneg,_Output
   885  007CC2  C025  F0A3         	movff	?___ftneg+1,_Output+1
   886  007CC6  C026  F0A4         	movff	?___ftneg+2,_Output+2
   887                           
   888                           ;newmain.c: 132: PORTCbits.RC7 = 1;
   889  007CCA  8E82               	bsf	3970,7,c	;volatile
   890  007CCC                     l67:
   891                           
   892                           ;newmain.c: 133: }
   893                           ;newmain.c: 134: output = Output;
   894  007CCC  C0A2  F001         	movff	_Output,___fttol@f1
   895  007CD0  C0A3  F002         	movff	_Output+1,___fttol@f1+1
   896  007CD4  C0A4  F003         	movff	_Output+2,___fttol@f1+2
   897  007CD8  EC25  F039         	call	___fttol	;wreg free
   898  007CDC  5001               	movf	?___fttol,w,c
   899  007CDE  0100               	movlb	0	; () banked
   900  007CE0  6FA7               	movwf	_output& (0+255),b
   901                           
   902                           ; BSR set to: 0
   903                           ;newmain.c: 135: PORTD = output;
   904  007CE2  C0A7  FF83         	movff	_output,3971	;volatile
   905                           
   906                           ; BSR set to: 0
   907  007CE6  D6D3               	goto	l1732
   908  007CE8                     __end_of_main:
   909                           	opt stack 0
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           tblptrl	equ	0xFF6
   913                           tablat	equ	0xFF5
   914                           postinc0	equ	0xFEE
   915                           wreg	equ	0xFE8
   916                           postdec1	equ	0xFE5
   917                           fsr1l	equ	0xFE1
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function ___lbtoft *****************
   921 ;; Defined at:
   922 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  c               1    wreg     unsigned char 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  c               1   11[COMRAM] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  3    8[COMRAM] float 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         3       0       0       0       0       0       0       0       0
   937 ;;      Locals:         1       0       0       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0
   939 ;;      Totals:         4       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:        4 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    1
   943 ;; This function calls:
   944 ;;		___ftpack
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text1
   951  006D30                     __ptext1:
   952                           	opt stack 0
   953  006D30                     ___lbtoft:
   954                           	opt stack 29
   955                           
   956                           ; BSR set to: 0
   957                           ;incstack = 0
   958                           ;___lbtoft@c stored from wreg
   959  006D30  6E0C               	movwf	___lbtoft@c,c
   960  006D32  500C               	movf	___lbtoft@c,w,c
   961  006D34  6E01               	movwf	___ftpack@arg,c
   962  006D36  6A02               	clrf	___ftpack@arg+1,c
   963  006D38  6A03               	clrf	___ftpack@arg+2,c
   964  006D3A  0E8E               	movlw	142
   965  006D3C  6E04               	movwf	___ftpack@exp,c
   966  006D3E  0E00               	movlw	0
   967  006D40  6E05               	movwf	___ftpack@sign,c
   968  006D42  EC77  F037         	call	___ftpack	;wreg free
   969  006D46  C001  F009         	movff	?___ftpack,?___lbtoft
   970  006D4A  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   971  006D4E  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   972  006D52  0012               	return	
   973  006D54                     __end_of___lbtoft:
   974                           	opt stack 0
   975                           tblptru	equ	0xFF8
   976                           tblptrh	equ	0xFF7
   977                           tblptrl	equ	0xFF6
   978                           tablat	equ	0xFF5
   979                           postinc0	equ	0xFEE
   980                           wreg	equ	0xFE8
   981                           postdec1	equ	0xFE5
   982                           fsr1l	equ	0xFE1
   983                           status	equ	0xFD8
   984                           
   985 ;; *************** function ___fttol *****************
   986 ;; Defined at:
   987 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  f1              3    0[COMRAM] float 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  lval            4   10[COMRAM] unsigned long 
   992 ;;  exp1            1   14[COMRAM] unsigned char 
   993 ;;  sign1           1    9[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  4    0[COMRAM] long 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1003 ;;      Params:         4       0       0       0       0       0       0       0       0
  1004 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1005 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1006 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1007 ;;Total ram usage:       15 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text2
  1017  00724A                     __ptext2:
  1018                           	opt stack 0
  1019  00724A                     ___fttol:
  1020                           	opt stack 30
  1021                           
  1022                           ;incstack = 0
  1023  00724A  C003  F005         	movff	___fttol@f1+2,??___fttol
  1024  00724E  6A06               	clrf	(??___fttol+1)& (0+255),c
  1025  007250  6A07               	clrf	(??___fttol+2)& (0+255),c
  1026  007252  3402               	rlcf	___fttol@f1+1,w,c
  1027  007254  3605               	rlcf	??___fttol& (0+255),f,c
  1028  007256  E301               	bnc	u1511
  1029  007258  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1030  00725A                     u1511:
  1031  00725A  5005               	movf	??___fttol,w,c
  1032  00725C  6E0F               	movwf	___fttol@exp1,c
  1033  00725E  500F               	movf	___fttol@exp1,w,c
  1034  007260  A4D8               	btfss	status,2,c
  1035  007262  D009               	goto	l1672
  1036  007264  0E00               	movlw	0
  1037  007266  6E01               	movwf	?___fttol,c
  1038  007268  0E00               	movlw	0
  1039  00726A  6E02               	movwf	?___fttol+1,c
  1040  00726C  0E00               	movlw	0
  1041  00726E  6E03               	movwf	?___fttol+2,c
  1042  007270  0E00               	movlw	0
  1043  007272  6E04               	movwf	?___fttol+3,c
  1044  007274  0012               	return	
  1045  007276                     l1672:
  1046  007276  0E17               	movlw	23
  1047  007278  6E05               	movwf	??___fttol& (0+255),c
  1048  00727A  C001  F006         	movff	___fttol@f1,??___fttol+1
  1049  00727E  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1050  007282  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1051  007286  2805               	incf	??___fttol,w,c
  1052  007288  6E09               	movwf	(??___fttol+4)& (0+255),c
  1053  00728A  D004               	goto	u1530
  1054  00728C                     u1535:
  1055  00728C  90D8               	bcf	status,0,c
  1056  00728E  3208               	rrcf	??___fttol+3,f,c
  1057  007290  3207               	rrcf	??___fttol+2,f,c
  1058  007292  3206               	rrcf	??___fttol+1,f,c
  1059  007294                     u1530:
  1060  007294  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1061  007296  D7FA               	goto	u1535
  1062  007298  5006               	movf	??___fttol+1,w,c
  1063  00729A  6E0A               	movwf	___fttol@sign1,c
  1064  00729C  8E02               	bsf	___fttol@f1+1,7,c
  1065  00729E  0EFF               	movlw	255
  1066  0072A0  1601               	andwf	___fttol@f1,f,c
  1067  0072A2  0EFF               	movlw	255
  1068  0072A4  1602               	andwf	___fttol@f1+1,f,c
  1069  0072A6  0E00               	movlw	0
  1070  0072A8  1603               	andwf	___fttol@f1+2,f,c
  1071  0072AA  5001               	movf	___fttol@f1,w,c
  1072  0072AC  6E0B               	movwf	___fttol@lval,c
  1073  0072AE  5002               	movf	___fttol@f1+1,w,c
  1074  0072B0  6E0C               	movwf	___fttol@lval+1,c
  1075  0072B2  5003               	movf	___fttol@f1+2,w,c
  1076  0072B4  6E0D               	movwf	___fttol@lval+2,c
  1077  0072B6  6A0E               	clrf	___fttol@lval+3,c
  1078  0072B8  0E8E               	movlw	142
  1079  0072BA  5E0F               	subwf	___fttol@exp1,f,c
  1080  0072BC  AE0F               	btfss	___fttol@exp1,7,c
  1081  0072BE  D016               	goto	l1694
  1082  0072C0  500F               	movf	___fttol@exp1,w,c
  1083  0072C2  0A80               	xorlw	128
  1084  0072C4  0F8F               	addlw	143
  1085  0072C6  B0D8               	btfsc	status,0,c
  1086  0072C8  D009               	goto	l1690
  1087  0072CA  0E00               	movlw	0
  1088  0072CC  6E01               	movwf	?___fttol,c
  1089  0072CE  0E00               	movlw	0
  1090  0072D0  6E02               	movwf	?___fttol+1,c
  1091  0072D2  0E00               	movlw	0
  1092  0072D4  6E03               	movwf	?___fttol+2,c
  1093  0072D6  0E00               	movlw	0
  1094  0072D8  6E04               	movwf	?___fttol+3,c
  1095  0072DA  0012               	return	
  1096  0072DC                     l1690:
  1097  0072DC  90D8               	bcf	status,0,c
  1098  0072DE  320E               	rrcf	___fttol@lval+3,f,c
  1099  0072E0  320D               	rrcf	___fttol@lval+2,f,c
  1100  0072E2  320C               	rrcf	___fttol@lval+1,f,c
  1101  0072E4  320B               	rrcf	___fttol@lval,f,c
  1102  0072E6  3E0F               	incfsz	___fttol@exp1,f,c
  1103  0072E8  D7F9               	goto	l1690
  1104  0072EA  D015               	goto	l1704
  1105  0072EC                     l1694:
  1106  0072EC  0E17               	movlw	23
  1107  0072EE  640F               	cpfsgt	___fttol@exp1,c
  1108  0072F0  D00F               	goto	l1702
  1109  0072F2  0E00               	movlw	0
  1110  0072F4  6E01               	movwf	?___fttol,c
  1111  0072F6  0E00               	movlw	0
  1112  0072F8  6E02               	movwf	?___fttol+1,c
  1113  0072FA  0E00               	movlw	0
  1114  0072FC  6E03               	movwf	?___fttol+2,c
  1115  0072FE  0E00               	movlw	0
  1116  007300  6E04               	movwf	?___fttol+3,c
  1117  007302  0012               	return	
  1118  007304                     l1700:
  1119  007304  90D8               	bcf	status,0,c
  1120  007306  360B               	rlcf	___fttol@lval,f,c
  1121  007308  360C               	rlcf	___fttol@lval+1,f,c
  1122  00730A  360D               	rlcf	___fttol@lval+2,f,c
  1123  00730C  360E               	rlcf	___fttol@lval+3,f,c
  1124  00730E  060F               	decf	___fttol@exp1,f,c
  1125  007310                     l1702:
  1126  007310  500F               	movf	___fttol@exp1,w,c
  1127  007312  A4D8               	btfss	status,2,c
  1128  007314  D7F7               	goto	l1700
  1129  007316                     l1704:
  1130  007316  500A               	movf	___fttol@sign1,w,c
  1131  007318  B4D8               	btfsc	status,2,c
  1132  00731A  D008               	goto	l1708
  1133  00731C  1E0E               	comf	___fttol@lval+3,f,c
  1134  00731E  1E0D               	comf	___fttol@lval+2,f,c
  1135  007320  1E0C               	comf	___fttol@lval+1,f,c
  1136  007322  6C0B               	negf	___fttol@lval,c
  1137  007324  0E00               	movlw	0
  1138  007326  220C               	addwfc	___fttol@lval+1,f,c
  1139  007328  220D               	addwfc	___fttol@lval+2,f,c
  1140  00732A  220E               	addwfc	___fttol@lval+3,f,c
  1141  00732C                     l1708:
  1142  00732C  C00B  F001         	movff	___fttol@lval,?___fttol
  1143  007330  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1144  007334  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1145  007338  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1146  00733C  0012               	return	
  1147  00733E                     __end_of___fttol:
  1148                           	opt stack 0
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           postinc0	equ	0xFEE
  1154                           wreg	equ	0xFE8
  1155                           postdec1	equ	0xFE5
  1156                           fsr1l	equ	0xFE1
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function ___awtoft *****************
  1160 ;; Defined at:
  1161 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  c               2    8[COMRAM] int 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  sign            1   11[COMRAM] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  3    8[COMRAM] float 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1175 ;;      Params:         3       0       0       0       0       0       0       0       0
  1176 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1178 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1179 ;;Total ram usage:        4 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    1
  1182 ;; This function calls:
  1183 ;;		___ftpack
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;;		_PID_SetSampleTime
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text3
  1191  006D8A                     __ptext3:
  1192                           	opt stack 0
  1193  006D8A                     ___awtoft:
  1194                           	opt stack 29
  1195                           
  1196                           ;incstack = 0
  1197  006D8A  0E00               	movlw	0
  1198  006D8C  6E0C               	movwf	___awtoft@sign,c
  1199  006D8E  AE0A               	btfss	___awtoft@c+1,7,c
  1200  006D90  D006               	goto	l1662
  1201  006D92  6C09               	negf	___awtoft@c,c
  1202  006D94  1E0A               	comf	___awtoft@c+1,f,c
  1203  006D96  B0D8               	btfsc	status,0,c
  1204  006D98  2A0A               	incf	___awtoft@c+1,f,c
  1205  006D9A  0E01               	movlw	1
  1206  006D9C  6E0C               	movwf	___awtoft@sign,c
  1207  006D9E                     l1662:
  1208  006D9E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1209  006DA2  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1210  006DA6  6A03               	clrf	___ftpack@arg+2,c
  1211  006DA8  0E8E               	movlw	142
  1212  006DAA  6E04               	movwf	___ftpack@exp,c
  1213  006DAC  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1214  006DB0  EC77  F037         	call	___ftpack	;wreg free
  1215  006DB4  C001  F009         	movff	?___ftpack,?___awtoft
  1216  006DB8  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1217  006DBC  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1218  006DC0  0012               	return	
  1219  006DC2                     __end_of___awtoft:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1l	equ	0xFE1
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _PID_init *****************
  1232 ;; Defined at:
  1233 ;;		line 16 in file "pid.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  pid             2   53[COMRAM] PTR struct .
  1236 ;;		 -> main@PID(45), 
  1237 ;;  Kp              3   55[COMRAM] float 
  1238 ;;  Ki              3   58[COMRAM] float 
  1239 ;;  Kd              3   61[COMRAM] float 
  1240 ;;  ControllerDi    1   64[COMRAM] enum E7
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1252 ;;      Params:        12       0       0       0       0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1255 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1256 ;;Total ram usage:       12 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    3
  1259 ;; This function calls:
  1260 ;;		_PID_SetControllerDirection
  1261 ;;		_PID_SetOutputLimits
  1262 ;;		_PID_SetTunings
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text4
  1269  007442                     __ptext4:
  1270                           	opt stack 0
  1271  007442                     _PID_init:
  1272                           	opt stack 27
  1273                           
  1274                           ;pid.c: 18: pid->myInput = 0;
  1275                           
  1276                           ;incstack = 0
  1277  007442  EE20 F013          	lfsr	2,19
  1278  007446  5036               	movf	PID_init@pid,w,c
  1279  007448  26D9               	addwf	fsr2l,f,c
  1280  00744A  5037               	movf	PID_init@pid+1,w,c
  1281  00744C  22DA               	addwfc	fsr2h,f,c
  1282  00744E  0E00               	movlw	0
  1283  007450  6EDE               	movwf	postinc2,c
  1284  007452  0E00               	movlw	0
  1285  007454  6EDE               	movwf	postinc2,c
  1286  007456  0E00               	movlw	0
  1287  007458  6EDE               	movwf	postinc2,c
  1288                           
  1289                           ;pid.c: 19: pid->myOutput = 0;
  1290  00745A  EE20 F016          	lfsr	2,22
  1291  00745E  5036               	movf	PID_init@pid,w,c
  1292  007460  26D9               	addwf	fsr2l,f,c
  1293  007462  5037               	movf	PID_init@pid+1,w,c
  1294  007464  22DA               	addwfc	fsr2h,f,c
  1295  007466  0E00               	movlw	0
  1296  007468  6EDE               	movwf	postinc2,c
  1297  00746A  0E00               	movlw	0
  1298  00746C  6EDE               	movwf	postinc2,c
  1299  00746E  0E00               	movlw	0
  1300  007470  6EDE               	movwf	postinc2,c
  1301                           
  1302                           ;pid.c: 20: pid->mySetpoint = 0;
  1303  007472  EE20 F019          	lfsr	2,25
  1304  007476  5036               	movf	PID_init@pid,w,c
  1305  007478  26D9               	addwf	fsr2l,f,c
  1306  00747A  5037               	movf	PID_init@pid+1,w,c
  1307  00747C  22DA               	addwfc	fsr2h,f,c
  1308  00747E  0E00               	movlw	0
  1309  007480  6EDE               	movwf	postinc2,c
  1310  007482  0E00               	movlw	0
  1311  007484  6EDE               	movwf	postinc2,c
  1312  007486  0E00               	movlw	0
  1313  007488  6EDE               	movwf	postinc2,c
  1314                           
  1315                           ;pid.c: 21: pid->ITerm = 0;
  1316  00748A  EE20 F01C          	lfsr	2,28
  1317  00748E  5036               	movf	PID_init@pid,w,c
  1318  007490  26D9               	addwf	fsr2l,f,c
  1319  007492  5037               	movf	PID_init@pid+1,w,c
  1320  007494  22DA               	addwfc	fsr2h,f,c
  1321  007496  0E00               	movlw	0
  1322  007498  6EDE               	movwf	postinc2,c
  1323  00749A  0E00               	movlw	0
  1324  00749C  6EDE               	movwf	postinc2,c
  1325  00749E  0E00               	movlw	0
  1326  0074A0  6EDE               	movwf	postinc2,c
  1327                           
  1328                           ;pid.c: 22: pid->lastInput = 0;
  1329  0074A2  EE20 F01F          	lfsr	2,31
  1330  0074A6  5036               	movf	PID_init@pid,w,c
  1331  0074A8  26D9               	addwf	fsr2l,f,c
  1332  0074AA  5037               	movf	PID_init@pid+1,w,c
  1333  0074AC  22DA               	addwfc	fsr2h,f,c
  1334  0074AE  0E00               	movlw	0
  1335  0074B0  6EDE               	movwf	postinc2,c
  1336  0074B2  0E00               	movlw	0
  1337  0074B4  6EDE               	movwf	postinc2,c
  1338  0074B6  0E00               	movlw	0
  1339  0074B8  6EDE               	movwf	postinc2,c
  1340                           
  1341                           ;pid.c: 23: pid->inAuto = 0;
  1342  0074BA  EE20 F02C          	lfsr	2,44
  1343  0074BE  5036               	movf	PID_init@pid,w,c
  1344  0074C0  26D9               	addwf	fsr2l,f,c
  1345  0074C2  5037               	movf	PID_init@pid+1,w,c
  1346  0074C4  22DA               	addwfc	fsr2h,f,c
  1347  0074C6  0E00               	movlw	0
  1348  0074C8  6EDF               	movwf	indf2,c
  1349                           
  1350                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
  1351  0074CA  C036  F00D         	movff	PID_init@pid,PID_SetOutputLimits@pid
  1352  0074CE  C037  F00E         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
  1353  0074D2  0E00               	movlw	0
  1354  0074D4  6E0F               	movwf	PID_SetOutputLimits@Min,c
  1355  0074D6  0E00               	movlw	0
  1356  0074D8  6E10               	movwf	PID_SetOutputLimits@Min+1,c
  1357  0074DA  0E00               	movlw	0
  1358  0074DC  6E11               	movwf	PID_SetOutputLimits@Min+2,c
  1359  0074DE  0EFF               	movlw	255
  1360  0074E0  6E12               	movwf	PID_SetOutputLimits@Max,c
  1361  0074E2  0E7F               	movlw	127
  1362  0074E4  6E13               	movwf	PID_SetOutputLimits@Max+1,c
  1363  0074E6  0E47               	movlw	71
  1364  0074E8  6E14               	movwf	PID_SetOutputLimits@Max+2,c
  1365  0074EA  EC7C  F03B         	call	_PID_SetOutputLimits	;wreg free
  1366                           
  1367                           ;pid.c: 28: pid->SampleTime = 1000;
  1368  0074EE  EE20 F022          	lfsr	2,34
  1369  0074F2  5036               	movf	PID_init@pid,w,c
  1370  0074F4  26D9               	addwf	fsr2l,f,c
  1371  0074F6  5037               	movf	PID_init@pid+1,w,c
  1372  0074F8  22DA               	addwfc	fsr2h,f,c
  1373  0074FA  0EE8               	movlw	232
  1374  0074FC  6EDE               	movwf	postinc2,c
  1375  0074FE  0E03               	movlw	3
  1376  007500  6EDE               	movwf	postinc2,c
  1377  007502  0E00               	movlw	0
  1378  007504  6EDE               	movwf	postinc2,c
  1379  007506  0E00               	movlw	0
  1380  007508  6EDD               	movwf	postdec2,c
  1381                           
  1382                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
  1383  00750A  C036  F027         	movff	PID_init@pid,PID_SetControllerDirection@pid
  1384  00750E  C037  F028         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
  1385  007512  C041  F029         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
  1386  007516  ECCE  F037         	call	_PID_SetControllerDirection	;wreg free
  1387                           
  1388                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
  1389  00751A  C036  F027         	movff	PID_init@pid,PID_SetTunings@pid
  1390  00751E  C037  F028         	movff	PID_init@pid+1,PID_SetTunings@pid+1
  1391  007522  C038  F029         	movff	PID_init@Kp,PID_SetTunings@Kp
  1392  007526  C039  F02A         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
  1393  00752A  C03A  F02B         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
  1394  00752E  C03B  F02C         	movff	PID_init@Ki,PID_SetTunings@Ki
  1395  007532  C03C  F02D         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
  1396  007536  C03D  F02E         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
  1397  00753A  C03E  F02F         	movff	PID_init@Kd,PID_SetTunings@Kd
  1398  00753E  C03F  F030         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
  1399  007542  C040  F031         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
  1400  007546  EC58  F03C         	call	_PID_SetTunings	;wreg free
  1401  00754A  0012               	return		;funcret
  1402  00754C                     __end_of_PID_init:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           indf2	equ	0xFDF
  1413                           postinc2	equ	0xFDE
  1414                           postdec2	equ	0xFDD
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _PID_SetTunings *****************
  1420 ;; Defined at:
  1421 ;;		line 85 in file "pid.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  pid             2   38[COMRAM] PTR struct .
  1424 ;;		 -> main@PID(45), 
  1425 ;;  Kp              3   40[COMRAM] float 
  1426 ;;  Ki              3   43[COMRAM] float 
  1427 ;;  Kd              3   46[COMRAM] float 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  SampleTimeIn    3   50[COMRAM] float 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1439 ;;      Params:        11       0       0       0       0       0       0       0       0
  1440 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1441 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1442 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1443 ;;Total ram usage:       15 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    2
  1446 ;; This function calls:
  1447 ;;		___ftdiv
  1448 ;;		___ftmul
  1449 ;;		___ftneg
  1450 ;;		___lltoft
  1451 ;; This function is called by:
  1452 ;;		_PID_init
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text5
  1457  0078B0                     __ptext5:
  1458                           	opt stack 0
  1459  0078B0                     _PID_SetTunings:
  1460                           	opt stack 27
  1461                           
  1462                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
  1463                           
  1464                           ;incstack = 0
  1465  0078B0  BE2B               	btfsc	PID_SetTunings@Kp+2,7,c
  1466  0078B2  0012               	return	
  1467  0078B4  BE2E               	btfsc	PID_SetTunings@Ki+2,7,c
  1468  0078B6  0012               	return	
  1469  0078B8  BE31               	btfsc	PID_SetTunings@Kd+2,7,c
  1470  0078BA  0012               	return	
  1471                           
  1472                           ;pid.c: 88: }
  1473                           ;pid.c: 90: pid->dispKp = Kp;
  1474                           
  1475                           ;pid.c: 87: return;
  1476  0078BC  C027  FFD9         	movff	PID_SetTunings@pid,fsr2l
  1477  0078C0  C028  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
  1478  0078C4  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1479  0078C8  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1480  0078CC  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1481                           
  1482                           ;pid.c: 91: pid->dispKi = Ki;
  1483  0078D0  EE20 F003          	lfsr	2,3
  1484  0078D4  5027               	movf	PID_SetTunings@pid,w,c
  1485  0078D6  26D9               	addwf	fsr2l,f,c
  1486  0078D8  5028               	movf	PID_SetTunings@pid+1,w,c
  1487  0078DA  22DA               	addwfc	fsr2h,f,c
  1488  0078DC  C02C  FFDE         	movff	PID_SetTunings@Ki,postinc2
  1489  0078E0  C02D  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
  1490  0078E4  C02E  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
  1491                           
  1492                           ;pid.c: 92: pid->dispKd = Kd;
  1493  0078E8  EE20 F006          	lfsr	2,6
  1494  0078EC  5027               	movf	PID_SetTunings@pid,w,c
  1495  0078EE  26D9               	addwf	fsr2l,f,c
  1496  0078F0  5028               	movf	PID_SetTunings@pid+1,w,c
  1497  0078F2  22DA               	addwfc	fsr2h,f,c
  1498  0078F4  C02F  FFDE         	movff	PID_SetTunings@Kd,postinc2
  1499  0078F8  C030  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
  1500  0078FC  C031  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
  1501                           
  1502                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
  1503  007900  EE20 F022          	lfsr	2,34
  1504  007904  5027               	movf	PID_SetTunings@pid,w,c
  1505  007906  26D9               	addwf	fsr2l,f,c
  1506  007908  5028               	movf	PID_SetTunings@pid+1,w,c
  1507  00790A  22DA               	addwfc	fsr2h,f,c
  1508  00790C  CFDE F009          	movff	postinc2,___lltoft@c
  1509  007910  CFDE F00A          	movff	postinc2,___lltoft@c+1
  1510  007914  CFDE F00B          	movff	postinc2,___lltoft@c+2
  1511  007918  CFDE F00C          	movff	postinc2,___lltoft@c+3
  1512  00791C  EC01  F037         	call	___lltoft	;wreg free
  1513  007920  C009  F012         	movff	?___lltoft,___ftdiv@f1
  1514  007924  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
  1515  007928  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
  1516  00792C  0E00               	movlw	0
  1517  00792E  6E15               	movwf	___ftdiv@f2,c
  1518  007930  0E7A               	movlw	122
  1519  007932  6E16               	movwf	___ftdiv@f2+1,c
  1520  007934  0E44               	movlw	68
  1521  007936  6E17               	movwf	___ftdiv@f2+2,c
  1522  007938  EC38  F038         	call	___ftdiv	;wreg free
  1523  00793C  C012  F033         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1524  007940  C013  F034         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1525  007944  C014  F035         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1526                           
  1527                           ;pid.c: 95: pid->kp = Kp;
  1528  007948  EE20 F009          	lfsr	2,9
  1529  00794C  5027               	movf	PID_SetTunings@pid,w,c
  1530  00794E  26D9               	addwf	fsr2l,f,c
  1531  007950  5028               	movf	PID_SetTunings@pid+1,w,c
  1532  007952  22DA               	addwfc	fsr2h,f,c
  1533  007954  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1534  007958  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1535  00795C  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1536                           
  1537                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1538  007960  C02C  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1539  007964  C02D  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1540  007968  C02E  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1541  00796C  C033  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1542  007970  C034  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1543  007974  C035  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1544  007978  ECAB  F038         	call	___ftmul	;wreg free
  1545  00797C  EE20 F00C          	lfsr	2,12
  1546  007980  5027               	movf	PID_SetTunings@pid,w,c
  1547  007982  26D9               	addwf	fsr2l,f,c
  1548  007984  5028               	movf	PID_SetTunings@pid+1,w,c
  1549  007986  22DA               	addwfc	fsr2h,f,c
  1550  007988  C009  FFDE         	movff	?___ftmul,postinc2
  1551  00798C  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1552  007990  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1553                           
  1554                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1555  007994  C02F  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1556  007998  C030  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1557  00799C  C031  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1558  0079A0  C033  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1559  0079A4  C034  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1560  0079A8  C035  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1561  0079AC  EC38  F038         	call	___ftdiv	;wreg free
  1562  0079B0  EE20 F00F          	lfsr	2,15
  1563  0079B4  5027               	movf	PID_SetTunings@pid,w,c
  1564  0079B6  26D9               	addwf	fsr2l,f,c
  1565  0079B8  5028               	movf	PID_SetTunings@pid+1,w,c
  1566  0079BA  22DA               	addwfc	fsr2h,f,c
  1567  0079BC  C012  FFDE         	movff	?___ftdiv,postinc2
  1568  0079C0  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1569  0079C4  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1570                           
  1571                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1572  0079C8  EE20 F012          	lfsr	2,18
  1573  0079CC  5027               	movf	PID_SetTunings@pid,w,c
  1574  0079CE  26D9               	addwf	fsr2l,f,c
  1575  0079D0  5028               	movf	PID_SetTunings@pid+1,w,c
  1576  0079D2  22DA               	addwfc	fsr2h,f,c
  1577  0079D4  04DE               	decf	postinc2,w,c
  1578  0079D6  A4D8               	btfss	status,2,c
  1579  0079D8  0012               	return	
  1580                           
  1581                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1582  0079DA  EE20 F009          	lfsr	2,9
  1583  0079DE  5027               	movf	PID_SetTunings@pid,w,c
  1584  0079E0  26D9               	addwf	fsr2l,f,c
  1585  0079E2  5028               	movf	PID_SetTunings@pid+1,w,c
  1586  0079E4  22DA               	addwfc	fsr2h,f,c
  1587  0079E6  CFDE F024          	movff	postinc2,___ftneg@f1
  1588  0079EA  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1589  0079EE  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1590  0079F2  EC86  F036         	call	___ftneg	;wreg free
  1591  0079F6  EE20 F009          	lfsr	2,9
  1592  0079FA  5027               	movf	PID_SetTunings@pid,w,c
  1593  0079FC  26D9               	addwf	fsr2l,f,c
  1594  0079FE  5028               	movf	PID_SetTunings@pid+1,w,c
  1595  007A00  22DA               	addwfc	fsr2h,f,c
  1596  007A02  C024  FFDE         	movff	?___ftneg,postinc2
  1597  007A06  C025  FFDE         	movff	?___ftneg+1,postinc2
  1598  007A0A  C026  FFDE         	movff	?___ftneg+2,postinc2
  1599                           
  1600                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1601  007A0E  EE20 F00C          	lfsr	2,12
  1602  007A12  5027               	movf	PID_SetTunings@pid,w,c
  1603  007A14  26D9               	addwf	fsr2l,f,c
  1604  007A16  5028               	movf	PID_SetTunings@pid+1,w,c
  1605  007A18  22DA               	addwfc	fsr2h,f,c
  1606  007A1A  CFDE F024          	movff	postinc2,___ftneg@f1
  1607  007A1E  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1608  007A22  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1609  007A26  EC86  F036         	call	___ftneg	;wreg free
  1610  007A2A  EE20 F00C          	lfsr	2,12
  1611  007A2E  5027               	movf	PID_SetTunings@pid,w,c
  1612  007A30  26D9               	addwf	fsr2l,f,c
  1613  007A32  5028               	movf	PID_SetTunings@pid+1,w,c
  1614  007A34  22DA               	addwfc	fsr2h,f,c
  1615  007A36  C024  FFDE         	movff	?___ftneg,postinc2
  1616  007A3A  C025  FFDE         	movff	?___ftneg+1,postinc2
  1617  007A3E  C026  FFDE         	movff	?___ftneg+2,postinc2
  1618                           
  1619                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1620  007A42  EE20 F00F          	lfsr	2,15
  1621  007A46  5027               	movf	PID_SetTunings@pid,w,c
  1622  007A48  26D9               	addwf	fsr2l,f,c
  1623  007A4A  5028               	movf	PID_SetTunings@pid+1,w,c
  1624  007A4C  22DA               	addwfc	fsr2h,f,c
  1625  007A4E  CFDE F024          	movff	postinc2,___ftneg@f1
  1626  007A52  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1627  007A56  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1628  007A5A  EC86  F036         	call	___ftneg	;wreg free
  1629  007A5E  EE20 F00F          	lfsr	2,15
  1630  007A62  5027               	movf	PID_SetTunings@pid,w,c
  1631  007A64  26D9               	addwf	fsr2l,f,c
  1632  007A66  5028               	movf	PID_SetTunings@pid+1,w,c
  1633  007A68  22DA               	addwfc	fsr2h,f,c
  1634  007A6A  C024  FFDE         	movff	?___ftneg,postinc2
  1635  007A6E  C025  FFDE         	movff	?___ftneg+1,postinc2
  1636  007A72  C026  FFDE         	movff	?___ftneg+2,postinc2
  1637  007A76  0012               	return	
  1638  007A78                     __end_of_PID_SetTunings:
  1639                           	opt stack 0
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec1	equ	0xFE5
  1647                           fsr1l	equ	0xFE1
  1648                           indf2	equ	0xFDF
  1649                           postinc2	equ	0xFDE
  1650                           postdec2	equ	0xFDD
  1651                           fsr2h	equ	0xFDA
  1652                           fsr2l	equ	0xFD9
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function ___lltoft *****************
  1656 ;; Defined at:
  1657 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  c               4    8[COMRAM] unsigned long 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  exp             1   16[COMRAM] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  3    8[COMRAM] float 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         4       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1674 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1675 ;;Total ram usage:        9 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		___ftpack
  1680 ;; This function is called by:
  1681 ;;		_PID_SetTunings
  1682 ;;		_PID_SetSampleTime
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text6
  1687  006E02                     __ptext6:
  1688                           	opt stack 0
  1689  006E02                     ___lltoft:
  1690                           	opt stack 27
  1691                           
  1692                           ;incstack = 0
  1693  006E02  0E8E               	movlw	142
  1694  006E04  6E11               	movwf	___lltoft@exp,c
  1695  006E06  D006               	goto	l1462
  1696  006E08                     l1460:
  1697  006E08  90D8               	bcf	status,0,c
  1698  006E0A  320C               	rrcf	___lltoft@c+3,f,c
  1699  006E0C  320B               	rrcf	___lltoft@c+2,f,c
  1700  006E0E  320A               	rrcf	___lltoft@c+1,f,c
  1701  006E10  3209               	rrcf	___lltoft@c,f,c
  1702  006E12  2A11               	incf	___lltoft@exp,f,c
  1703  006E14                     l1462:
  1704  006E14  0E00               	movlw	0
  1705  006E16  1409               	andwf	___lltoft@c,w,c
  1706  006E18  6E0D               	movwf	??___lltoft& (0+255),c
  1707  006E1A  0E00               	movlw	0
  1708  006E1C  140A               	andwf	___lltoft@c+1,w,c
  1709  006E1E  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1710  006E20  0E00               	movlw	0
  1711  006E22  140B               	andwf	___lltoft@c+2,w,c
  1712  006E24  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1713  006E26  0EFF               	movlw	255
  1714  006E28  140C               	andwf	___lltoft@c+3,w,c
  1715  006E2A  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1716  006E2C  500D               	movf	??___lltoft,w,c
  1717  006E2E  100E               	iorwf	??___lltoft+1,w,c
  1718  006E30  100F               	iorwf	??___lltoft+2,w,c
  1719  006E32  1010               	iorwf	??___lltoft+3,w,c
  1720  006E34  A4D8               	btfss	status,2,c
  1721  006E36  D7E8               	goto	l1460
  1722  006E38  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1723  006E3C  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1724  006E40  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1725  006E44  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1726  006E48  0E00               	movlw	0
  1727  006E4A  6E05               	movwf	___ftpack@sign,c
  1728  006E4C  EC77  F037         	call	___ftpack	;wreg free
  1729  006E50  C001  F009         	movff	?___ftpack,?___lltoft
  1730  006E54  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1731  006E58  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1732  006E5C  0012               	return	
  1733  006E5E                     __end_of___lltoft:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1l	equ	0xFE1
  1743                           indf2	equ	0xFDF
  1744                           postinc2	equ	0xFDE
  1745                           postdec2	equ	0xFDD
  1746                           fsr2h	equ	0xFDA
  1747                           fsr2l	equ	0xFD9
  1748                           status	equ	0xFD8
  1749                           
  1750 ;; *************** function ___ftdiv *****************
  1751 ;; Defined at:
  1752 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  f1              3   17[COMRAM] float 
  1755 ;;  f2              3   20[COMRAM] float 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  f3              3   27[COMRAM] float 
  1758 ;;  sign            1   31[COMRAM] unsigned char 
  1759 ;;  exp             1   30[COMRAM] unsigned char 
  1760 ;;  cntr            1   26[COMRAM] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  3   17[COMRAM] float 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1770 ;;      Params:         6       0       0       0       0       0       0       0       0
  1771 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1772 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1773 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1774 ;;Total ram usage:       15 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    1
  1777 ;; This function calls:
  1778 ;;		___ftpack
  1779 ;; This function is called by:
  1780 ;;		_PID_SetTunings
  1781 ;;		_PID_SetSampleTime
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text7
  1786  007070                     __ptext7:
  1787                           	opt stack 0
  1788  007070                     ___ftdiv:
  1789                           	opt stack 27
  1790                           
  1791                           ;incstack = 0
  1792  007070  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  1793  007074  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1794  007076  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1795  007078  3413               	rlcf	___ftdiv@f1+1,w,c
  1796  00707A  3618               	rlcf	??___ftdiv& (0+255),f,c
  1797  00707C  E301               	bnc	u911
  1798  00707E  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1799  007080                     u911:
  1800  007080  5018               	movf	??___ftdiv,w,c
  1801  007082  6E1F               	movwf	___ftdiv@exp,c
  1802  007084  501F               	movf	___ftdiv@exp,w,c
  1803  007086  A4D8               	btfss	status,2,c
  1804  007088  D007               	goto	l1348
  1805  00708A  0E00               	movlw	0
  1806  00708C  6E12               	movwf	?___ftdiv,c
  1807  00708E  0E00               	movlw	0
  1808  007090  6E13               	movwf	?___ftdiv+1,c
  1809  007092  0E00               	movlw	0
  1810  007094  6E14               	movwf	?___ftdiv+2,c
  1811  007096  0012               	return	
  1812  007098                     l1348:
  1813  007098  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  1814  00709C  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1815  00709E  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1816  0070A0  3416               	rlcf	___ftdiv@f2+1,w,c
  1817  0070A2  3618               	rlcf	??___ftdiv& (0+255),f,c
  1818  0070A4  E301               	bnc	u931
  1819  0070A6  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1820  0070A8                     u931:
  1821  0070A8  5018               	movf	??___ftdiv,w,c
  1822  0070AA  6E20               	movwf	___ftdiv@sign,c
  1823  0070AC  5020               	movf	___ftdiv@sign,w,c
  1824  0070AE  A4D8               	btfss	status,2,c
  1825  0070B0  D007               	goto	l1354
  1826  0070B2  0E00               	movlw	0
  1827  0070B4  6E12               	movwf	?___ftdiv,c
  1828  0070B6  0E00               	movlw	0
  1829  0070B8  6E13               	movwf	?___ftdiv+1,c
  1830  0070BA  0E00               	movlw	0
  1831  0070BC  6E14               	movwf	?___ftdiv+2,c
  1832  0070BE  0012               	return	
  1833  0070C0                     l1354:
  1834  0070C0  0E00               	movlw	0
  1835  0070C2  6E1C               	movwf	___ftdiv@f3,c
  1836  0070C4  0E00               	movlw	0
  1837  0070C6  6E1D               	movwf	___ftdiv@f3+1,c
  1838  0070C8  0E00               	movlw	0
  1839  0070CA  6E1E               	movwf	___ftdiv@f3+2,c
  1840  0070CC  5020               	movf	___ftdiv@sign,w,c
  1841  0070CE  0F89               	addlw	137
  1842  0070D0  5E1F               	subwf	___ftdiv@exp,f,c
  1843  0070D2  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  1844  0070D6  5017               	movf	___ftdiv@f2+2,w,c
  1845  0070D8  1A20               	xorwf	___ftdiv@sign,f,c
  1846  0070DA  0E80               	movlw	128
  1847  0070DC  1620               	andwf	___ftdiv@sign,f,c
  1848  0070DE  8E13               	bsf	___ftdiv@f1+1,7,c
  1849  0070E0  0EFF               	movlw	255
  1850  0070E2  1612               	andwf	___ftdiv@f1,f,c
  1851  0070E4  0EFF               	movlw	255
  1852  0070E6  1613               	andwf	___ftdiv@f1+1,f,c
  1853  0070E8  0E00               	movlw	0
  1854  0070EA  1614               	andwf	___ftdiv@f1+2,f,c
  1855  0070EC  8E16               	bsf	___ftdiv@f2+1,7,c
  1856  0070EE  0EFF               	movlw	255
  1857  0070F0  1615               	andwf	___ftdiv@f2,f,c
  1858  0070F2  0EFF               	movlw	255
  1859  0070F4  1616               	andwf	___ftdiv@f2+1,f,c
  1860  0070F6  0E00               	movlw	0
  1861  0070F8  1617               	andwf	___ftdiv@f2+2,f,c
  1862  0070FA  0E18               	movlw	24
  1863  0070FC  6E1B               	movwf	___ftdiv@cntr,c
  1864  0070FE                     l1374:
  1865  0070FE  90D8               	bcf	status,0,c
  1866  007100  361C               	rlcf	___ftdiv@f3,f,c
  1867  007102  361D               	rlcf	___ftdiv@f3+1,f,c
  1868  007104  361E               	rlcf	___ftdiv@f3+2,f,c
  1869  007106  5015               	movf	___ftdiv@f2,w,c
  1870  007108  5C12               	subwf	___ftdiv@f1,w,c
  1871  00710A  5016               	movf	___ftdiv@f2+1,w,c
  1872  00710C  5813               	subwfb	___ftdiv@f1+1,w,c
  1873  00710E  5017               	movf	___ftdiv@f2+2,w,c
  1874  007110  5814               	subwfb	___ftdiv@f1+2,w,c
  1875  007112  A0D8               	btfss	status,0,c
  1876  007114  D007               	goto	l425
  1877  007116  5015               	movf	___ftdiv@f2,w,c
  1878  007118  5E12               	subwf	___ftdiv@f1,f,c
  1879  00711A  5016               	movf	___ftdiv@f2+1,w,c
  1880  00711C  5A13               	subwfb	___ftdiv@f1+1,f,c
  1881  00711E  5017               	movf	___ftdiv@f2+2,w,c
  1882  007120  5A14               	subwfb	___ftdiv@f1+2,f,c
  1883  007122  801C               	bsf	___ftdiv@f3,0,c
  1884  007124                     l425:
  1885  007124  90D8               	bcf	status,0,c
  1886  007126  3612               	rlcf	___ftdiv@f1,f,c
  1887  007128  3613               	rlcf	___ftdiv@f1+1,f,c
  1888  00712A  3614               	rlcf	___ftdiv@f1+2,f,c
  1889  00712C  2E1B               	decfsz	___ftdiv@cntr,f,c
  1890  00712E  D7E7               	goto	l1374
  1891  007130  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  1892  007134  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1893  007138  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1894  00713C  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  1895  007140  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  1896  007144  EC77  F037         	call	___ftpack	;wreg free
  1897  007148  C001  F012         	movff	?___ftpack,?___ftdiv
  1898  00714C  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  1899  007150  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  1900  007154  0012               	return	
  1901  007156                     __end_of___ftdiv:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postdec1	equ	0xFE5
  1910                           fsr1l	equ	0xFE1
  1911                           indf2	equ	0xFDF
  1912                           postinc2	equ	0xFDE
  1913                           postdec2	equ	0xFDD
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _PID_SetOutputLimits *****************
  1919 ;; Defined at:
  1920 ;;		line 126 in file "pid.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  pid             2   12[COMRAM] PTR struct .
  1923 ;;		 -> main@PID(45), 
  1924 ;;  Min             3   14[COMRAM] float 
  1925 ;;  Max             3   17[COMRAM] float 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         8       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        8 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    1
  1944 ;; This function calls:
  1945 ;;		___ftge
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;;		_PID_init
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text8
  1953  0076F8                     __ptext8:
  1954                           	opt stack 0
  1955  0076F8                     _PID_SetOutputLimits:
  1956                           	opt stack 28
  1957                           
  1958                           ;pid.c: 127: if (Min >= Max) {
  1959                           
  1960                           ;incstack = 0
  1961  0076F8  C00F  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  1962  0076FC  C010  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  1963  007700  C011  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  1964  007704  C012  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  1965  007708  C013  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  1966  00770C  C014  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  1967  007710  EC2F  F037         	call	___ftge	;wreg free
  1968  007714  B0D8               	btfsc	status,0,c
  1969  007716  0012               	return	
  1970                           
  1971                           ;pid.c: 129: }
  1972                           ;pid.c: 130: pid->outMin = Min;
  1973                           
  1974                           ;pid.c: 128: return;
  1975  007718  EE20 F026          	lfsr	2,38
  1976  00771C  500D               	movf	PID_SetOutputLimits@pid,w,c
  1977  00771E  26D9               	addwf	fsr2l,f,c
  1978  007720  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1979  007722  22DA               	addwfc	fsr2h,f,c
  1980  007724  C00F  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  1981  007728  C010  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  1982  00772C  C011  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  1983                           
  1984                           ;pid.c: 131: pid->outMax = Max;
  1985  007730  EE20 F029          	lfsr	2,41
  1986  007734  500D               	movf	PID_SetOutputLimits@pid,w,c
  1987  007736  26D9               	addwf	fsr2l,f,c
  1988  007738  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1989  00773A  22DA               	addwfc	fsr2h,f,c
  1990  00773C  C012  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  1991  007740  C013  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  1992  007744  C014  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  1993                           
  1994                           ;pid.c: 133: if (pid->inAuto) {
  1995  007748  EE20 F02C          	lfsr	2,44
  1996  00774C  500D               	movf	PID_SetOutputLimits@pid,w,c
  1997  00774E  26D9               	addwf	fsr2l,f,c
  1998  007750  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1999  007752  22DA               	addwfc	fsr2h,f,c
  2000  007754  50DF               	movf	indf2,w,c
  2001  007756  B4D8               	btfsc	status,2,c
  2002  007758  0012               	return	
  2003                           
  2004                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  2005  00775A  EE20 F029          	lfsr	2,41
  2006  00775E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2007  007760  26D9               	addwf	fsr2l,f,c
  2008  007762  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2009  007764  22DA               	addwfc	fsr2h,f,c
  2010  007766  CFDE F001          	movff	postinc2,___ftge@ff1
  2011  00776A  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2012  00776E  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2013  007772  EE20 F016          	lfsr	2,22
  2014  007776  500D               	movf	PID_SetOutputLimits@pid,w,c
  2015  007778  26D9               	addwf	fsr2l,f,c
  2016  00777A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2017  00777C  22DA               	addwfc	fsr2h,f,c
  2018  00777E  CFDE F004          	movff	postinc2,___ftge@ff2
  2019  007782  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2020  007786  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2021  00778A  EC2F  F037         	call	___ftge	;wreg free
  2022  00778E  B0D8               	btfsc	status,0,c
  2023  007790  D003               	goto	l1478
  2024                           
  2025                           ;pid.c: 135: pid->myOutput = pid->outMax;
  2026  007792  EE20 F029          	lfsr	2,41
  2027  007796  D01E               	goto	L1
  2028  007798                     l1478:
  2029  007798  EE20 F016          	lfsr	2,22
  2030  00779C  500D               	movf	PID_SetOutputLimits@pid,w,c
  2031  00779E  26D9               	addwf	fsr2l,f,c
  2032  0077A0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2033  0077A2  22DA               	addwfc	fsr2h,f,c
  2034  0077A4  CFDE F001          	movff	postinc2,___ftge@ff1
  2035  0077A8  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2036  0077AC  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2037  0077B0  EE20 F026          	lfsr	2,38
  2038  0077B4  500D               	movf	PID_SetOutputLimits@pid,w,c
  2039  0077B6  26D9               	addwf	fsr2l,f,c
  2040  0077B8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2041  0077BA  22DA               	addwfc	fsr2h,f,c
  2042  0077BC  CFDE F004          	movff	postinc2,___ftge@ff2
  2043  0077C0  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2044  0077C4  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2045  0077C8  EC2F  F037         	call	___ftge	;wreg free
  2046  0077CC  B0D8               	btfsc	status,0,c
  2047  0077CE  D012               	goto	l1482
  2048                           
  2049                           ;pid.c: 137: pid->myOutput = pid->outMin;
  2050  0077D0  EE20 F026          	lfsr	2,38
  2051  0077D4                     L1:
  2052  0077D4  500D               	movf	PID_SetOutputLimits@pid,w,c
  2053  0077D6  26D9               	addwf	fsr2l,f,c
  2054  0077D8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2055  0077DA  22DA               	addwfc	fsr2h,f,c
  2056  0077DC  EE10 F016          	lfsr	1,22
  2057  0077E0  500D               	movf	PID_SetOutputLimits@pid,w,c
  2058  0077E2  26E1               	addwf	fsr1l,f,c
  2059  0077E4  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2060  0077E6  22E2               	addwfc	fsr1h,f,c
  2061  0077E8  CFDE FFE6          	movff	postinc2,postinc1
  2062  0077EC  CFDE FFE6          	movff	postinc2,postinc1
  2063  0077F0  CFDE FFE6          	movff	postinc2,postinc1
  2064  0077F4                     l1482:
  2065                           
  2066                           ;pid.c: 138: }
  2067                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  2068  0077F4  EE20 F029          	lfsr	2,41
  2069  0077F8  500D               	movf	PID_SetOutputLimits@pid,w,c
  2070  0077FA  26D9               	addwf	fsr2l,f,c
  2071  0077FC  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2072  0077FE  22DA               	addwfc	fsr2h,f,c
  2073  007800  CFDE F001          	movff	postinc2,___ftge@ff1
  2074  007804  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2075  007808  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2076  00780C  EE20 F01C          	lfsr	2,28
  2077  007810  500D               	movf	PID_SetOutputLimits@pid,w,c
  2078  007812  26D9               	addwf	fsr2l,f,c
  2079  007814  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2080  007816  22DA               	addwfc	fsr2h,f,c
  2081  007818  CFDE F004          	movff	postinc2,___ftge@ff2
  2082  00781C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2083  007820  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2084  007824  EC2F  F037         	call	___ftge	;wreg free
  2085  007828  B0D8               	btfsc	status,0,c
  2086  00782A  D013               	goto	l1486
  2087                           
  2088                           ;pid.c: 141: pid->ITerm = pid->outMax;
  2089  00782C  EE20 F029          	lfsr	2,41
  2090  007830  500D               	movf	PID_SetOutputLimits@pid,w,c
  2091  007832  26D9               	addwf	fsr2l,f,c
  2092  007834  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2093  007836  22DA               	addwfc	fsr2h,f,c
  2094  007838  EE10 F01C          	lfsr	1,28
  2095  00783C  500D               	movf	PID_SetOutputLimits@pid,w,c
  2096  00783E  26E1               	addwf	fsr1l,f,c
  2097  007840  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2098  007842  22E2               	addwfc	fsr1h,f,c
  2099  007844  CFDE FFE6          	movff	postinc2,postinc1
  2100  007848  CFDE FFE6          	movff	postinc2,postinc1
  2101  00784C  CFDE FFE6          	movff	postinc2,postinc1
  2102                           
  2103                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  2104  007850  0012               	return	
  2105  007852                     l1486:
  2106  007852  EE20 F01C          	lfsr	2,28
  2107  007856  500D               	movf	PID_SetOutputLimits@pid,w,c
  2108  007858  26D9               	addwf	fsr2l,f,c
  2109  00785A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2110  00785C  22DA               	addwfc	fsr2h,f,c
  2111  00785E  CFDE F001          	movff	postinc2,___ftge@ff1
  2112  007862  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2113  007866  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2114  00786A  EE20 F026          	lfsr	2,38
  2115  00786E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2116  007870  26D9               	addwf	fsr2l,f,c
  2117  007872  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2118  007874  22DA               	addwfc	fsr2h,f,c
  2119  007876  CFDE F004          	movff	postinc2,___ftge@ff2
  2120  00787A  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2121  00787E  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2122  007882  EC2F  F037         	call	___ftge	;wreg free
  2123  007886  B0D8               	btfsc	status,0,c
  2124  007888  0012               	return	
  2125                           
  2126                           ;pid.c: 143: pid->ITerm = pid->outMin;
  2127  00788A  EE20 F026          	lfsr	2,38
  2128  00788E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2129  007890  26D9               	addwf	fsr2l,f,c
  2130  007892  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2131  007894  22DA               	addwfc	fsr2h,f,c
  2132  007896  EE10 F01C          	lfsr	1,28
  2133  00789A  500D               	movf	PID_SetOutputLimits@pid,w,c
  2134  00789C  26E1               	addwf	fsr1l,f,c
  2135  00789E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2136  0078A0  22E2               	addwfc	fsr1h,f,c
  2137  0078A2  CFDE FFE6          	movff	postinc2,postinc1
  2138  0078A6  CFDE FFE6          	movff	postinc2,postinc1
  2139  0078AA  CFDE FFE6          	movff	postinc2,postinc1
  2140  0078AE  0012               	return	
  2141  0078B0                     __end_of_PID_SetOutputLimits:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postinc1	equ	0xFE6
  2150                           postdec1	equ	0xFE5
  2151                           fsr1h	equ	0xFE2
  2152                           fsr1l	equ	0xFE1
  2153                           indf2	equ	0xFDF
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _PID_SetControllerDirection *****************
  2161 ;; Defined at:
  2162 ;;		line 183 in file "pid.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  pid             2   38[COMRAM] PTR struct .
  2165 ;;		 -> main@PID(45), 
  2166 ;;  Direction       1   40[COMRAM] enum E7
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2178 ;;      Params:         3       0       0       0       0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2180 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2181 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2182 ;;Total ram usage:        4 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    1
  2185 ;; This function calls:
  2186 ;;		___ftneg
  2187 ;; This function is called by:
  2188 ;;		_PID_init
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text9
  2193  006F9C                     __ptext9:
  2194                           	opt stack 0
  2195  006F9C                     _PID_SetControllerDirection:
  2196                           	opt stack 28
  2197                           
  2198                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  2199                           
  2200                           ;incstack = 0
  2201  006F9C  EE20 F02C          	lfsr	2,44
  2202  006FA0  5027               	movf	PID_SetControllerDirection@pid,w,c
  2203  006FA2  26D9               	addwf	fsr2l,f,c
  2204  006FA4  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2205  006FA6  22DA               	addwfc	fsr2h,f,c
  2206  006FA8  50DF               	movf	indf2,w,c
  2207  006FAA  B4D8               	btfsc	status,2,c
  2208  006FAC  D058               	goto	l1496
  2209  006FAE  EE20 F012          	lfsr	2,18
  2210  006FB2  5027               	movf	PID_SetControllerDirection@pid,w,c
  2211  006FB4  26D9               	addwf	fsr2l,f,c
  2212  006FB6  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2213  006FB8  22DA               	addwfc	fsr2h,f,c
  2214  006FBA  5029               	movf	PID_SetControllerDirection@Direction,w,c
  2215  006FBC  18DE               	xorwf	postinc2,w,c
  2216  006FBE  B4D8               	btfsc	status,2,c
  2217  006FC0  D04E               	goto	l1496
  2218                           
  2219                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  2220  006FC2  EE20 F009          	lfsr	2,9
  2221  006FC6  5027               	movf	PID_SetControllerDirection@pid,w,c
  2222  006FC8  26D9               	addwf	fsr2l,f,c
  2223  006FCA  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2224  006FCC  22DA               	addwfc	fsr2h,f,c
  2225  006FCE  CFDE F024          	movff	postinc2,___ftneg@f1
  2226  006FD2  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2227  006FD6  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2228  006FDA  EC86  F036         	call	___ftneg	;wreg free
  2229  006FDE  EE20 F009          	lfsr	2,9
  2230  006FE2  5027               	movf	PID_SetControllerDirection@pid,w,c
  2231  006FE4  26D9               	addwf	fsr2l,f,c
  2232  006FE6  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2233  006FE8  22DA               	addwfc	fsr2h,f,c
  2234  006FEA  C024  FFDE         	movff	?___ftneg,postinc2
  2235  006FEE  C025  FFDE         	movff	?___ftneg+1,postinc2
  2236  006FF2  C026  FFDE         	movff	?___ftneg+2,postinc2
  2237                           
  2238                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  2239  006FF6  EE20 F00C          	lfsr	2,12
  2240  006FFA  5027               	movf	PID_SetControllerDirection@pid,w,c
  2241  006FFC  26D9               	addwf	fsr2l,f,c
  2242  006FFE  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2243  007000  22DA               	addwfc	fsr2h,f,c
  2244  007002  CFDE F024          	movff	postinc2,___ftneg@f1
  2245  007006  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2246  00700A  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2247  00700E  EC86  F036         	call	___ftneg	;wreg free
  2248  007012  EE20 F00C          	lfsr	2,12
  2249  007016  5027               	movf	PID_SetControllerDirection@pid,w,c
  2250  007018  26D9               	addwf	fsr2l,f,c
  2251  00701A  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2252  00701C  22DA               	addwfc	fsr2h,f,c
  2253  00701E  C024  FFDE         	movff	?___ftneg,postinc2
  2254  007022  C025  FFDE         	movff	?___ftneg+1,postinc2
  2255  007026  C026  FFDE         	movff	?___ftneg+2,postinc2
  2256                           
  2257                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  2258  00702A  EE20 F00F          	lfsr	2,15
  2259  00702E  5027               	movf	PID_SetControllerDirection@pid,w,c
  2260  007030  26D9               	addwf	fsr2l,f,c
  2261  007032  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2262  007034  22DA               	addwfc	fsr2h,f,c
  2263  007036  CFDE F024          	movff	postinc2,___ftneg@f1
  2264  00703A  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2265  00703E  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2266  007042  EC86  F036         	call	___ftneg	;wreg free
  2267  007046  EE20 F00F          	lfsr	2,15
  2268  00704A  5027               	movf	PID_SetControllerDirection@pid,w,c
  2269  00704C  26D9               	addwf	fsr2l,f,c
  2270  00704E  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2271  007050  22DA               	addwfc	fsr2h,f,c
  2272  007052  C024  FFDE         	movff	?___ftneg,postinc2
  2273  007056  C025  FFDE         	movff	?___ftneg+1,postinc2
  2274  00705A  C026  FFDE         	movff	?___ftneg+2,postinc2
  2275  00705E                     l1496:
  2276                           
  2277                           ;pid.c: 188: }
  2278                           ;pid.c: 189: pid->controllerDirection = Direction;
  2279  00705E  EE20 F012          	lfsr	2,18
  2280  007062  5027               	movf	PID_SetControllerDirection@pid,w,c
  2281  007064  26D9               	addwf	fsr2l,f,c
  2282  007066  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2283  007068  22DA               	addwfc	fsr2h,f,c
  2284  00706A  C029  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  2285  00706E  0012               	return		;funcret
  2286  007070                     __end_of_PID_SetControllerDirection:
  2287                           	opt stack 0
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           postinc1	equ	0xFE6
  2295                           postdec1	equ	0xFE5
  2296                           fsr1h	equ	0xFE2
  2297                           fsr1l	equ	0xFE1
  2298                           indf2	equ	0xFDF
  2299                           postinc2	equ	0xFDE
  2300                           postdec2	equ	0xFDD
  2301                           fsr2h	equ	0xFDA
  2302                           fsr2l	equ	0xFD9
  2303                           status	equ	0xFD8
  2304                           
  2305 ;; *************** function _PID_SetMode *****************
  2306 ;; Defined at:
  2307 ;;		line 153 in file "pid.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  pid             2   11[COMRAM] PTR struct .
  2310 ;;		 -> main@PID(45), 
  2311 ;;  Mode            1   13[COMRAM] enum E3
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  newAuto         1   15[COMRAM] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2323 ;;      Params:         3       0       0       0       0       0       0       0       0
  2324 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2325 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2326 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2327 ;;Total ram usage:        5 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    2
  2330 ;; This function calls:
  2331 ;;		_PID_Initialize
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text10
  2338  006DC2                     __ptext10:
  2339                           	opt stack 0
  2340  006DC2                     _PID_SetMode:
  2341                           	opt stack 28
  2342                           
  2343                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  2344                           
  2345                           ;incstack = 0
  2346  006DC2  040E               	decf	PID_SetMode@Mode,w,c
  2347  006DC4  A4D8               	btfss	status,2,c
  2348  006DC6  D002               	goto	u1420
  2349  006DC8  0E01               	movlw	1
  2350  006DCA  D001               	goto	u1430
  2351  006DCC                     u1420:
  2352  006DCC  0E00               	movlw	0
  2353  006DCE                     u1430:
  2354  006DCE  6E10               	movwf	PID_SetMode@newAuto,c
  2355                           
  2356                           ;pid.c: 156: if(newAuto != pid->inAuto)
  2357  006DD0  EE20 F02C          	lfsr	2,44
  2358  006DD4  500C               	movf	PID_SetMode@pid,w,c
  2359  006DD6  26D9               	addwf	fsr2l,f,c
  2360  006DD8  500D               	movf	PID_SetMode@pid+1,w,c
  2361  006DDA  22DA               	addwfc	fsr2h,f,c
  2362  006DDC  5010               	movf	PID_SetMode@newAuto,w,c
  2363  006DDE  18DE               	xorwf	postinc2,w,c
  2364  006DE0  B4D8               	btfsc	status,2,c
  2365  006DE2  D006               	goto	l1618
  2366                           
  2367                           ;pid.c: 157: {
  2368                           ;pid.c: 158: PID_Initialize(pid);
  2369  006DE4  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  2370  006DE8  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  2371  006DEC  EC9F  F039         	call	_PID_Initialize	;wreg free
  2372  006DF0                     l1618:
  2373                           
  2374                           ;pid.c: 159: }
  2375                           ;pid.c: 160: pid->inAuto = newAuto;
  2376  006DF0  EE20 F02C          	lfsr	2,44
  2377  006DF4  500C               	movf	PID_SetMode@pid,w,c
  2378  006DF6  26D9               	addwf	fsr2l,f,c
  2379  006DF8  500D               	movf	PID_SetMode@pid+1,w,c
  2380  006DFA  22DA               	addwfc	fsr2h,f,c
  2381  006DFC  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  2382  006E00  0012               	return		;funcret
  2383  006E02                     __end_of_PID_SetMode:
  2384                           	opt stack 0
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           postinc1	equ	0xFE6
  2392                           postdec1	equ	0xFE5
  2393                           fsr1h	equ	0xFE2
  2394                           fsr1l	equ	0xFE1
  2395                           indf2	equ	0xFDF
  2396                           postinc2	equ	0xFDE
  2397                           postdec2	equ	0xFDD
  2398                           fsr2h	equ	0xFDA
  2399                           fsr2l	equ	0xFD9
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _PID_Initialize *****************
  2403 ;; Defined at:
  2404 ;;		line 167 in file "pid.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  pid             2    9[COMRAM] PTR struct .
  2407 ;;		 -> main@PID(45), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2419 ;;      Params:         2       0       0       0       0       0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2422 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2423 ;;Total ram usage:        2 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    1
  2426 ;; This function calls:
  2427 ;;		___ftge
  2428 ;; This function is called by:
  2429 ;;		_PID_SetMode
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text11
  2434  00733E                     __ptext11:
  2435                           	opt stack 0
  2436  00733E                     _PID_Initialize:
  2437                           	opt stack 28
  2438                           
  2439                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  2440                           
  2441                           ;incstack = 0
  2442  00733E  EE20 F016          	lfsr	2,22
  2443  007342  500A               	movf	PID_Initialize@pid,w,c
  2444  007344  26D9               	addwf	fsr2l,f,c
  2445  007346  500B               	movf	PID_Initialize@pid+1,w,c
  2446  007348  22DA               	addwfc	fsr2h,f,c
  2447  00734A  EE10 F01C          	lfsr	1,28
  2448  00734E  500A               	movf	PID_Initialize@pid,w,c
  2449  007350  26E1               	addwf	fsr1l,f,c
  2450  007352  500B               	movf	PID_Initialize@pid+1,w,c
  2451  007354  22E2               	addwfc	fsr1h,f,c
  2452  007356  CFDE FFE6          	movff	postinc2,postinc1
  2453  00735A  CFDE FFE6          	movff	postinc2,postinc1
  2454  00735E  CFDE FFE6          	movff	postinc2,postinc1
  2455                           
  2456                           ;pid.c: 169: pid->lastInput = pid->myInput;
  2457  007362  EE20 F013          	lfsr	2,19
  2458  007366  500A               	movf	PID_Initialize@pid,w,c
  2459  007368  26D9               	addwf	fsr2l,f,c
  2460  00736A  500B               	movf	PID_Initialize@pid+1,w,c
  2461  00736C  22DA               	addwfc	fsr2h,f,c
  2462  00736E  EE10 F01F          	lfsr	1,31
  2463  007372  500A               	movf	PID_Initialize@pid,w,c
  2464  007374  26E1               	addwf	fsr1l,f,c
  2465  007376  500B               	movf	PID_Initialize@pid+1,w,c
  2466  007378  22E2               	addwfc	fsr1h,f,c
  2467  00737A  CFDE FFE6          	movff	postinc2,postinc1
  2468  00737E  CFDE FFE6          	movff	postinc2,postinc1
  2469  007382  CFDE FFE6          	movff	postinc2,postinc1
  2470                           
  2471                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  2472  007386  EE20 F029          	lfsr	2,41
  2473  00738A  500A               	movf	PID_Initialize@pid,w,c
  2474  00738C  26D9               	addwf	fsr2l,f,c
  2475  00738E  500B               	movf	PID_Initialize@pid+1,w,c
  2476  007390  22DA               	addwfc	fsr2h,f,c
  2477  007392  CFDE F001          	movff	postinc2,___ftge@ff1
  2478  007396  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2479  00739A  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2480  00739E  EE20 F01C          	lfsr	2,28
  2481  0073A2  500A               	movf	PID_Initialize@pid,w,c
  2482  0073A4  26D9               	addwf	fsr2l,f,c
  2483  0073A6  500B               	movf	PID_Initialize@pid+1,w,c
  2484  0073A8  22DA               	addwfc	fsr2h,f,c
  2485  0073AA  CFDE F004          	movff	postinc2,___ftge@ff2
  2486  0073AE  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2487  0073B2  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2488  0073B6  EC2F  F037         	call	___ftge	;wreg free
  2489  0073BA  B0D8               	btfsc	status,0,c
  2490  0073BC  D013               	goto	l1528
  2491                           
  2492                           ;pid.c: 171: pid->ITerm = pid->outMax;
  2493  0073BE  EE20 F029          	lfsr	2,41
  2494  0073C2  500A               	movf	PID_Initialize@pid,w,c
  2495  0073C4  26D9               	addwf	fsr2l,f,c
  2496  0073C6  500B               	movf	PID_Initialize@pid+1,w,c
  2497  0073C8  22DA               	addwfc	fsr2h,f,c
  2498  0073CA  EE10 F01C          	lfsr	1,28
  2499  0073CE  500A               	movf	PID_Initialize@pid,w,c
  2500  0073D0  26E1               	addwf	fsr1l,f,c
  2501  0073D2  500B               	movf	PID_Initialize@pid+1,w,c
  2502  0073D4  22E2               	addwfc	fsr1h,f,c
  2503  0073D6  CFDE FFE6          	movff	postinc2,postinc1
  2504  0073DA  CFDE FFE6          	movff	postinc2,postinc1
  2505  0073DE  CFDE FFE6          	movff	postinc2,postinc1
  2506                           
  2507                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  2508  0073E2  0012               	return	
  2509  0073E4                     l1528:
  2510  0073E4  EE20 F01C          	lfsr	2,28
  2511  0073E8  500A               	movf	PID_Initialize@pid,w,c
  2512  0073EA  26D9               	addwf	fsr2l,f,c
  2513  0073EC  500B               	movf	PID_Initialize@pid+1,w,c
  2514  0073EE  22DA               	addwfc	fsr2h,f,c
  2515  0073F0  CFDE F001          	movff	postinc2,___ftge@ff1
  2516  0073F4  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2517  0073F8  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2518  0073FC  EE20 F026          	lfsr	2,38
  2519  007400  500A               	movf	PID_Initialize@pid,w,c
  2520  007402  26D9               	addwf	fsr2l,f,c
  2521  007404  500B               	movf	PID_Initialize@pid+1,w,c
  2522  007406  22DA               	addwfc	fsr2h,f,c
  2523  007408  CFDE F004          	movff	postinc2,___ftge@ff2
  2524  00740C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2525  007410  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2526  007414  EC2F  F037         	call	___ftge	;wreg free
  2527  007418  B0D8               	btfsc	status,0,c
  2528  00741A  0012               	return	
  2529                           
  2530                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2531  00741C  EE20 F026          	lfsr	2,38
  2532  007420  500A               	movf	PID_Initialize@pid,w,c
  2533  007422  26D9               	addwf	fsr2l,f,c
  2534  007424  500B               	movf	PID_Initialize@pid+1,w,c
  2535  007426  22DA               	addwfc	fsr2h,f,c
  2536  007428  EE10 F01C          	lfsr	1,28
  2537  00742C  500A               	movf	PID_Initialize@pid,w,c
  2538  00742E  26E1               	addwf	fsr1l,f,c
  2539  007430  500B               	movf	PID_Initialize@pid+1,w,c
  2540  007432  22E2               	addwfc	fsr1h,f,c
  2541  007434  CFDE FFE6          	movff	postinc2,postinc1
  2542  007438  CFDE FFE6          	movff	postinc2,postinc1
  2543  00743C  CFDE FFE6          	movff	postinc2,postinc1
  2544  007440  0012               	return	
  2545  007442                     __end_of_PID_Initialize:
  2546                           	opt stack 0
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           postinc1	equ	0xFE6
  2554                           postdec1	equ	0xFE5
  2555                           fsr1h	equ	0xFE2
  2556                           fsr1l	equ	0xFE1
  2557                           indf2	equ	0xFDF
  2558                           postinc2	equ	0xFDE
  2559                           postdec2	equ	0xFDD
  2560                           fsr2h	equ	0xFDA
  2561                           fsr2l	equ	0xFD9
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _PID_Compute *****************
  2565 ;; Defined at:
  2566 ;;		line 43 in file "pid.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  pid             2   38[COMRAM] PTR struct .
  2569 ;;		 -> main@PID(45), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  output          3   52[COMRAM] float 
  2572 ;;  input           3   49[COMRAM] float 
  2573 ;;  error           3   46[COMRAM] float 
  2574 ;;  dInput          3   40[COMRAM] float 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      unsigned char 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0
  2585 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2587 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2588 ;;Total ram usage:       17 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    2
  2591 ;; This function calls:
  2592 ;;		___ftadd
  2593 ;;		___ftge
  2594 ;;		___ftmul
  2595 ;;		___ftneg
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text12
  2602  007CE8                     __ptext12:
  2603                           	opt stack 0
  2604  007CE8                     _PID_Compute:
  2605                           	opt stack 28
  2606                           
  2607                           ;pid.c: 44: if (!pid->inAuto) {
  2608                           
  2609                           ;incstack = 0
  2610  007CE8  EE20 F02C          	lfsr	2,44
  2611  007CEC  5027               	movf	PID_Compute@pid,w,c
  2612  007CEE  26D9               	addwf	fsr2l,f,c
  2613  007CF0  5028               	movf	PID_Compute@pid+1,w,c
  2614  007CF2  22DA               	addwfc	fsr2h,f,c
  2615  007CF4  50DF               	movf	indf2,w,c
  2616  007CF6  B4D8               	btfsc	status,2,c
  2617  007CF8  0012               	return	
  2618                           
  2619                           ;pid.c: 46: }
  2620                           ;pid.c: 51: FloatType input = pid->myInput;
  2621                           
  2622                           ;pid.c: 45: return 0;
  2623                           ;	Return value of _PID_Compute is never used
  2624  007CFA  EE20 F013          	lfsr	2,19
  2625  007CFE  5027               	movf	PID_Compute@pid,w,c
  2626  007D00  26D9               	addwf	fsr2l,f,c
  2627  007D02  5028               	movf	PID_Compute@pid+1,w,c
  2628  007D04  22DA               	addwfc	fsr2h,f,c
  2629  007D06  CFDE F032          	movff	postinc2,PID_Compute@input
  2630  007D0A  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2631  007D0E  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2632                           
  2633                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2634  007D12  C032  F024         	movff	PID_Compute@input,___ftneg@f1
  2635  007D16  C033  F025         	movff	PID_Compute@input+1,___ftneg@f1+1
  2636  007D1A  C034  F026         	movff	PID_Compute@input+2,___ftneg@f1+2
  2637  007D1E  EC86  F036         	call	___ftneg	;wreg free
  2638  007D22  C024  F018         	movff	?___ftneg,___ftadd@f1
  2639  007D26  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2640  007D2A  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2641  007D2E  EE20 F019          	lfsr	2,25
  2642  007D32  5027               	movf	PID_Compute@pid,w,c
  2643  007D34  26D9               	addwf	fsr2l,f,c
  2644  007D36  5028               	movf	PID_Compute@pid+1,w,c
  2645  007D38  22DA               	addwfc	fsr2h,f,c
  2646  007D3A  CFDE F01B          	movff	postinc2,___ftadd@f2
  2647  007D3E  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2648  007D42  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2649  007D46  ECA6  F03A         	call	___ftadd	;wreg free
  2650  007D4A  C018  F02F         	movff	?___ftadd,PID_Compute@error
  2651  007D4E  C019  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2652  007D52  C01A  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2653                           
  2654                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2655  007D56  EE20 F01C          	lfsr	2,28
  2656  007D5A  5027               	movf	PID_Compute@pid,w,c
  2657  007D5C  26D9               	addwf	fsr2l,f,c
  2658  007D5E  5028               	movf	PID_Compute@pid+1,w,c
  2659  007D60  22DA               	addwfc	fsr2h,f,c
  2660  007D62  CFDE F018          	movff	postinc2,___ftadd@f1
  2661  007D66  CFDE F019          	movff	postinc2,___ftadd@f1+1
  2662  007D6A  CFDD F01A          	movff	postdec2,___ftadd@f1+2
  2663  007D6E  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2664  007D72  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2665  007D76  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2666  007D7A  EE20 F00C          	lfsr	2,12
  2667  007D7E  5027               	movf	PID_Compute@pid,w,c
  2668  007D80  26D9               	addwf	fsr2l,f,c
  2669  007D82  5028               	movf	PID_Compute@pid+1,w,c
  2670  007D84  22DA               	addwfc	fsr2h,f,c
  2671  007D86  CFDE F009          	movff	postinc2,___ftmul@f1
  2672  007D8A  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2673  007D8E  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2674  007D92  ECAB  F038         	call	___ftmul	;wreg free
  2675  007D96  C009  F01B         	movff	?___ftmul,___ftadd@f2
  2676  007D9A  C00A  F01C         	movff	?___ftmul+1,___ftadd@f2+1
  2677  007D9E  C00B  F01D         	movff	?___ftmul+2,___ftadd@f2+2
  2678  007DA2  ECA6  F03A         	call	___ftadd	;wreg free
  2679  007DA6  EE20 F01C          	lfsr	2,28
  2680  007DAA  5027               	movf	PID_Compute@pid,w,c
  2681  007DAC  26D9               	addwf	fsr2l,f,c
  2682  007DAE  5028               	movf	PID_Compute@pid+1,w,c
  2683  007DB0  22DA               	addwfc	fsr2h,f,c
  2684  007DB2  C018  FFDE         	movff	?___ftadd,postinc2
  2685  007DB6  C019  FFDE         	movff	?___ftadd+1,postinc2
  2686  007DBA  C01A  FFDE         	movff	?___ftadd+2,postinc2
  2687                           
  2688                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2689  007DBE  EE20 F029          	lfsr	2,41
  2690  007DC2  5027               	movf	PID_Compute@pid,w,c
  2691  007DC4  26D9               	addwf	fsr2l,f,c
  2692  007DC6  5028               	movf	PID_Compute@pid+1,w,c
  2693  007DC8  22DA               	addwfc	fsr2h,f,c
  2694  007DCA  CFDE F001          	movff	postinc2,___ftge@ff1
  2695  007DCE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2696  007DD2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2697  007DD6  EE20 F01C          	lfsr	2,28
  2698  007DDA  5027               	movf	PID_Compute@pid,w,c
  2699  007DDC  26D9               	addwf	fsr2l,f,c
  2700  007DDE  5028               	movf	PID_Compute@pid+1,w,c
  2701  007DE0  22DA               	addwfc	fsr2h,f,c
  2702  007DE2  CFDE F004          	movff	postinc2,___ftge@ff2
  2703  007DE6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2704  007DEA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2705  007DEE  EC2F  F037         	call	___ftge	;wreg free
  2706  007DF2  B0D8               	btfsc	status,0,c
  2707  007DF4  D003               	goto	l1634
  2708                           
  2709                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2710  007DF6  EE20 F029          	lfsr	2,41
  2711  007DFA  D01E               	goto	L2
  2712  007DFC                     l1634:
  2713                           
  2714                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2715  007DFC  EE20 F01C          	lfsr	2,28
  2716  007E00  5027               	movf	PID_Compute@pid,w,c
  2717  007E02  26D9               	addwf	fsr2l,f,c
  2718  007E04  5028               	movf	PID_Compute@pid+1,w,c
  2719  007E06  22DA               	addwfc	fsr2h,f,c
  2720  007E08  CFDE F001          	movff	postinc2,___ftge@ff1
  2721  007E0C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2722  007E10  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2723  007E14  EE20 F026          	lfsr	2,38
  2724  007E18  5027               	movf	PID_Compute@pid,w,c
  2725  007E1A  26D9               	addwf	fsr2l,f,c
  2726  007E1C  5028               	movf	PID_Compute@pid+1,w,c
  2727  007E1E  22DA               	addwfc	fsr2h,f,c
  2728  007E20  CFDE F004          	movff	postinc2,___ftge@ff2
  2729  007E24  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2730  007E28  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2731  007E2C  EC2F  F037         	call	___ftge	;wreg free
  2732  007E30  B0D8               	btfsc	status,0,c
  2733  007E32  D012               	goto	l1638
  2734                           
  2735                           ;pid.c: 57: pid->ITerm = pid->outMin;
  2736  007E34  EE20 F026          	lfsr	2,38
  2737  007E38                     L2:
  2738  007E38  5027               	movf	PID_Compute@pid,w,c
  2739  007E3A  26D9               	addwf	fsr2l,f,c
  2740  007E3C  5028               	movf	PID_Compute@pid+1,w,c
  2741  007E3E  22DA               	addwfc	fsr2h,f,c
  2742  007E40  EE10 F01C          	lfsr	1,28
  2743  007E44  5027               	movf	PID_Compute@pid,w,c
  2744  007E46  26E1               	addwf	fsr1l,f,c
  2745  007E48  5028               	movf	PID_Compute@pid+1,w,c
  2746  007E4A  22E2               	addwfc	fsr1h,f,c
  2747  007E4C  CFDE FFE6          	movff	postinc2,postinc1
  2748  007E50  CFDE FFE6          	movff	postinc2,postinc1
  2749  007E54  CFDE FFE6          	movff	postinc2,postinc1
  2750  007E58                     l1638:
  2751                           
  2752                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  2753  007E58  EE20 F01F          	lfsr	2,31
  2754  007E5C  5027               	movf	PID_Compute@pid,w,c
  2755  007E5E  26D9               	addwf	fsr2l,f,c
  2756  007E60  5028               	movf	PID_Compute@pid+1,w,c
  2757  007E62  22DA               	addwfc	fsr2h,f,c
  2758  007E64  CFDE F024          	movff	postinc2,___ftneg@f1
  2759  007E68  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2760  007E6C  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2761  007E70  EC86  F036         	call	___ftneg	;wreg free
  2762  007E74  C024  F018         	movff	?___ftneg,___ftadd@f1
  2763  007E78  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2764  007E7C  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2765  007E80  C032  F01B         	movff	PID_Compute@input,___ftadd@f2
  2766  007E84  C033  F01C         	movff	PID_Compute@input+1,___ftadd@f2+1
  2767  007E88  C034  F01D         	movff	PID_Compute@input+2,___ftadd@f2+2
  2768  007E8C  ECA6  F03A         	call	___ftadd	;wreg free
  2769  007E90  C018  F029         	movff	?___ftadd,PID_Compute@dInput
  2770  007E94  C019  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  2771  007E98  C01A  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  2772                           
  2773                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2774  007E9C  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  2775  007EA0  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  2776  007EA4  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  2777  007EA8  EE20 F00F          	lfsr	2,15
  2778  007EAC  5027               	movf	PID_Compute@pid,w,c
  2779  007EAE  26D9               	addwf	fsr2l,f,c
  2780  007EB0  5028               	movf	PID_Compute@pid+1,w,c
  2781  007EB2  22DA               	addwfc	fsr2h,f,c
  2782  007EB4  CFDE F009          	movff	postinc2,___ftmul@f1
  2783  007EB8  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2784  007EBC  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2785  007EC0  ECAB  F038         	call	___ftmul	;wreg free
  2786  007EC4  C009  F024         	movff	?___ftmul,___ftneg@f1
  2787  007EC8  C00A  F025         	movff	?___ftmul+1,___ftneg@f1+1
  2788  007ECC  C00B  F026         	movff	?___ftmul+2,___ftneg@f1+2
  2789  007ED0  EC86  F036         	call	___ftneg	;wreg free
  2790  007ED4  C024  F01B         	movff	?___ftneg,___ftadd@f2
  2791  007ED8  C025  F01C         	movff	?___ftneg+1,___ftadd@f2+1
  2792  007EDC  C026  F01D         	movff	?___ftneg+2,___ftadd@f2+2
  2793  007EE0  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2794  007EE4  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2795  007EE8  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2796  007EEC  EE20 F009          	lfsr	2,9
  2797  007EF0  5027               	movf	PID_Compute@pid,w,c
  2798  007EF2  26D9               	addwf	fsr2l,f,c
  2799  007EF4  5028               	movf	PID_Compute@pid+1,w,c
  2800  007EF6  22DA               	addwfc	fsr2h,f,c
  2801  007EF8  CFDE F009          	movff	postinc2,___ftmul@f1
  2802  007EFC  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2803  007F00  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2804  007F04  ECAB  F038         	call	___ftmul	;wreg free
  2805  007F08  C009  F018         	movff	?___ftmul,___ftadd@f1
  2806  007F0C  C00A  F019         	movff	?___ftmul+1,___ftadd@f1+1
  2807  007F10  C00B  F01A         	movff	?___ftmul+2,___ftadd@f1+2
  2808  007F14  ECA6  F03A         	call	___ftadd	;wreg free
  2809  007F18  C018  F02C         	movff	?___ftadd,_PID_Compute$1039
  2810  007F1C  C019  F02D         	movff	?___ftadd+1,_PID_Compute$1039+1
  2811  007F20  C01A  F02E         	movff	?___ftadd+2,_PID_Compute$1039+2
  2812                           
  2813                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2814  007F24  C02C  F018         	movff	_PID_Compute$1039,___ftadd@f1
  2815  007F28  C02D  F019         	movff	_PID_Compute$1039+1,___ftadd@f1+1
  2816  007F2C  C02E  F01A         	movff	_PID_Compute$1039+2,___ftadd@f1+2
  2817  007F30  EE20 F01C          	lfsr	2,28
  2818  007F34  5027               	movf	PID_Compute@pid,w,c
  2819  007F36  26D9               	addwf	fsr2l,f,c
  2820  007F38  5028               	movf	PID_Compute@pid+1,w,c
  2821  007F3A  22DA               	addwfc	fsr2h,f,c
  2822  007F3C  CFDE F01B          	movff	postinc2,___ftadd@f2
  2823  007F40  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2824  007F44  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2825  007F48  ECA6  F03A         	call	___ftadd	;wreg free
  2826  007F4C  C018  F035         	movff	?___ftadd,PID_Compute@output
  2827  007F50  C019  F036         	movff	?___ftadd+1,PID_Compute@output+1
  2828  007F54  C01A  F037         	movff	?___ftadd+2,PID_Compute@output+2
  2829                           
  2830                           ;pid.c: 63: if (output > pid->outMax)
  2831  007F58  EE20 F029          	lfsr	2,41
  2832  007F5C  5027               	movf	PID_Compute@pid,w,c
  2833  007F5E  26D9               	addwf	fsr2l,f,c
  2834  007F60  5028               	movf	PID_Compute@pid+1,w,c
  2835  007F62  22DA               	addwfc	fsr2h,f,c
  2836  007F64  CFDE F001          	movff	postinc2,___ftge@ff1
  2837  007F68  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2838  007F6C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2839  007F70  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  2840  007F74  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  2841  007F78  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  2842  007F7C  EC2F  F037         	call	___ftge	;wreg free
  2843  007F80  B0D8               	btfsc	status,0,c
  2844  007F82  D003               	goto	l1648
  2845                           
  2846                           ;pid.c: 64: output = pid->outMax;
  2847  007F84  EE20 F029          	lfsr	2,41
  2848  007F88  D018               	goto	L3
  2849  007F8A                     l1648:
  2850                           
  2851                           ;pid.c: 65: else if (output < pid->outMin)
  2852  007F8A  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  2853  007F8E  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  2854  007F92  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  2855  007F96  EE20 F026          	lfsr	2,38
  2856  007F9A  5027               	movf	PID_Compute@pid,w,c
  2857  007F9C  26D9               	addwf	fsr2l,f,c
  2858  007F9E  5028               	movf	PID_Compute@pid+1,w,c
  2859  007FA0  22DA               	addwfc	fsr2h,f,c
  2860  007FA2  CFDE F004          	movff	postinc2,___ftge@ff2
  2861  007FA6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2862  007FAA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2863  007FAE  EC2F  F037         	call	___ftge	;wreg free
  2864  007FB2  B0D8               	btfsc	status,0,c
  2865  007FB4  D00C               	goto	l90
  2866                           
  2867                           ;pid.c: 66: output = pid->outMin;
  2868  007FB6  EE20 F026          	lfsr	2,38
  2869  007FBA                     L3:
  2870  007FBA  5027               	movf	PID_Compute@pid,w,c
  2871  007FBC  26D9               	addwf	fsr2l,f,c
  2872  007FBE  5028               	movf	PID_Compute@pid+1,w,c
  2873  007FC0  22DA               	addwfc	fsr2h,f,c
  2874  007FC2  CFDE F035          	movff	postinc2,PID_Compute@output
  2875  007FC6  CFDE F036          	movff	postinc2,PID_Compute@output+1
  2876  007FCA  CFDD F037          	movff	postdec2,PID_Compute@output+2
  2877  007FCE                     l90:
  2878                           
  2879                           ;pid.c: 67: pid->myOutput = output;
  2880  007FCE  EE20 F016          	lfsr	2,22
  2881  007FD2  5027               	movf	PID_Compute@pid,w,c
  2882  007FD4  26D9               	addwf	fsr2l,f,c
  2883  007FD6  5028               	movf	PID_Compute@pid+1,w,c
  2884  007FD8  22DA               	addwfc	fsr2h,f,c
  2885  007FDA  C035  FFDE         	movff	PID_Compute@output,postinc2
  2886  007FDE  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  2887  007FE2  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  2888                           
  2889                           ;pid.c: 70: pid->lastInput = input;
  2890  007FE6  EE20 F01F          	lfsr	2,31
  2891  007FEA  5027               	movf	PID_Compute@pid,w,c
  2892  007FEC  26D9               	addwf	fsr2l,f,c
  2893  007FEE  5028               	movf	PID_Compute@pid+1,w,c
  2894  007FF0  22DA               	addwfc	fsr2h,f,c
  2895  007FF2  C032  FFDE         	movff	PID_Compute@input,postinc2
  2896  007FF6  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  2897  007FFA  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  2898  007FFE  0012               	return	
  2899  008000                     __end_of_PID_Compute:
  2900                           	opt stack 0
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           postinc1	equ	0xFE6
  2908                           postdec1	equ	0xFE5
  2909                           fsr1h	equ	0xFE2
  2910                           fsr1l	equ	0xFE1
  2911                           indf2	equ	0xFDF
  2912                           postinc2	equ	0xFDE
  2913                           postdec2	equ	0xFDD
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function ___ftneg *****************
  2919 ;; Defined at:
  2920 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  f1              3   35[COMRAM] float 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  3   35[COMRAM] float 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         3       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        3 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;;		_PID_Compute
  2945 ;;		_PID_SetTunings
  2946 ;;		_PID_SetControllerDirection
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text13
  2951  006D0C                     __ptext13:
  2952                           	opt stack 0
  2953  006D0C                     ___ftneg:
  2954                           	opt stack 30
  2955                           
  2956                           ;incstack = 0
  2957  006D0C  5024               	movf	___ftneg@f1,w,c
  2958  006D0E  1025               	iorwf	___ftneg@f1+1,w,c
  2959  006D10  1026               	iorwf	___ftneg@f1+2,w,c
  2960  006D12  B4D8               	btfsc	status,2,c
  2961  006D14  D006               	goto	l447
  2962  006D16  0E00               	movlw	0
  2963  006D18  1A24               	xorwf	___ftneg@f1,f,c
  2964  006D1A  0E00               	movlw	0
  2965  006D1C  1A25               	xorwf	___ftneg@f1+1,f,c
  2966  006D1E  0E80               	movlw	128
  2967  006D20  1A26               	xorwf	___ftneg@f1+2,f,c
  2968  006D22                     l447:
  2969  006D22  C024  F024         	movff	___ftneg@f1,?___ftneg
  2970  006D26  C025  F025         	movff	___ftneg@f1+1,?___ftneg+1
  2971  006D2A  C026  F026         	movff	___ftneg@f1+2,?___ftneg+2
  2972  006D2E  0012               	return		;funcret
  2973  006D30                     __end_of___ftneg:
  2974                           	opt stack 0
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           postinc1	equ	0xFE6
  2982                           postdec1	equ	0xFE5
  2983                           fsr1h	equ	0xFE2
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           postinc2	equ	0xFDE
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function ___ftmul *****************
  2993 ;; Defined at:
  2994 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  f1              3    8[COMRAM] float 
  2997 ;;  f2              3   11[COMRAM] float 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  3000 ;;  sign            1   22[COMRAM] unsigned char 
  3001 ;;  cntr            1   21[COMRAM] unsigned char 
  3002 ;;  exp             1   17[COMRAM] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  3    8[COMRAM] float 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         6       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3015 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:       15 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    1
  3019 ;; This function calls:
  3020 ;;		___ftpack
  3021 ;; This function is called by:
  3022 ;;		_PID_Compute
  3023 ;;		_PID_SetTunings
  3024 ;;		_PID_SetSampleTime
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text14
  3029  007156                     __ptext14:
  3030                           	opt stack 0
  3031  007156                     ___ftmul:
  3032                           	opt stack 27
  3033                           
  3034                           ;incstack = 0
  3035  007156  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  3036  00715A  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3037  00715C  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3038  00715E  340A               	rlcf	___ftmul@f1+1,w,c
  3039  007160  360F               	rlcf	??___ftmul& (0+255),f,c
  3040  007162  E301               	bnc	u961
  3041  007164  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3042  007166                     u961:
  3043  007166  500F               	movf	??___ftmul,w,c
  3044  007168  6E12               	movwf	___ftmul@exp,c
  3045  00716A  5012               	movf	___ftmul@exp,w,c
  3046  00716C  A4D8               	btfss	status,2,c
  3047  00716E  D007               	goto	l1394
  3048  007170  0E00               	movlw	0
  3049  007172  6E09               	movwf	?___ftmul,c
  3050  007174  0E00               	movlw	0
  3051  007176  6E0A               	movwf	?___ftmul+1,c
  3052  007178  0E00               	movlw	0
  3053  00717A  6E0B               	movwf	?___ftmul+2,c
  3054  00717C  0012               	return	
  3055  00717E                     l1394:
  3056  00717E  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  3057  007182  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3058  007184  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3059  007186  340D               	rlcf	___ftmul@f2+1,w,c
  3060  007188  360F               	rlcf	??___ftmul& (0+255),f,c
  3061  00718A  E301               	bnc	u981
  3062  00718C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3063  00718E                     u981:
  3064  00718E  500F               	movf	??___ftmul,w,c
  3065  007190  6E17               	movwf	___ftmul@sign,c
  3066  007192  5017               	movf	___ftmul@sign,w,c
  3067  007194  A4D8               	btfss	status,2,c
  3068  007196  D007               	goto	l1400
  3069  007198  0E00               	movlw	0
  3070  00719A  6E09               	movwf	?___ftmul,c
  3071  00719C  0E00               	movlw	0
  3072  00719E  6E0A               	movwf	?___ftmul+1,c
  3073  0071A0  0E00               	movlw	0
  3074  0071A2  6E0B               	movwf	?___ftmul+2,c
  3075  0071A4  0012               	return	
  3076  0071A6                     l1400:
  3077  0071A6  5017               	movf	___ftmul@sign,w,c
  3078  0071A8  0F7B               	addlw	123
  3079  0071AA  2612               	addwf	___ftmul@exp,f,c
  3080  0071AC  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  3081  0071B0  500E               	movf	___ftmul@f2+2,w,c
  3082  0071B2  1A17               	xorwf	___ftmul@sign,f,c
  3083  0071B4  0E80               	movlw	128
  3084  0071B6  1617               	andwf	___ftmul@sign,f,c
  3085  0071B8  8E0A               	bsf	___ftmul@f1+1,7,c
  3086  0071BA  8E0D               	bsf	___ftmul@f2+1,7,c
  3087  0071BC  0EFF               	movlw	255
  3088  0071BE  160C               	andwf	___ftmul@f2,f,c
  3089  0071C0  0EFF               	movlw	255
  3090  0071C2  160D               	andwf	___ftmul@f2+1,f,c
  3091  0071C4  0E00               	movlw	0
  3092  0071C6  160E               	andwf	___ftmul@f2+2,f,c
  3093  0071C8  0E00               	movlw	0
  3094  0071CA  6E13               	movwf	___ftmul@f3_as_product,c
  3095  0071CC  0E00               	movlw	0
  3096  0071CE  6E14               	movwf	___ftmul@f3_as_product+1,c
  3097  0071D0  0E00               	movlw	0
  3098  0071D2  6E15               	movwf	___ftmul@f3_as_product+2,c
  3099  0071D4  0E07               	movlw	7
  3100  0071D6  6E16               	movwf	___ftmul@cntr,c
  3101  0071D8                     l1414:
  3102  0071D8  A009               	btfss	___ftmul@f1,0,c
  3103  0071DA  D006               	goto	l1418
  3104  0071DC  500C               	movf	___ftmul@f2,w,c
  3105  0071DE  2613               	addwf	___ftmul@f3_as_product,f,c
  3106  0071E0  500D               	movf	___ftmul@f2+1,w,c
  3107  0071E2  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3108  0071E4  500E               	movf	___ftmul@f2+2,w,c
  3109  0071E6  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3110  0071E8                     l1418:
  3111  0071E8  90D8               	bcf	status,0,c
  3112  0071EA  320B               	rrcf	___ftmul@f1+2,f,c
  3113  0071EC  320A               	rrcf	___ftmul@f1+1,f,c
  3114  0071EE  3209               	rrcf	___ftmul@f1,f,c
  3115  0071F0  90D8               	bcf	status,0,c
  3116  0071F2  360C               	rlcf	___ftmul@f2,f,c
  3117  0071F4  360D               	rlcf	___ftmul@f2+1,f,c
  3118  0071F6  360E               	rlcf	___ftmul@f2+2,f,c
  3119  0071F8  2E16               	decfsz	___ftmul@cntr,f,c
  3120  0071FA  D7EE               	goto	l1414
  3121  0071FC  0E09               	movlw	9
  3122  0071FE  6E16               	movwf	___ftmul@cntr,c
  3123  007200                     l1424:
  3124  007200  A009               	btfss	___ftmul@f1,0,c
  3125  007202  D006               	goto	l1428
  3126  007204  500C               	movf	___ftmul@f2,w,c
  3127  007206  2613               	addwf	___ftmul@f3_as_product,f,c
  3128  007208  500D               	movf	___ftmul@f2+1,w,c
  3129  00720A  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3130  00720C  500E               	movf	___ftmul@f2+2,w,c
  3131  00720E  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3132  007210                     l1428:
  3133  007210  90D8               	bcf	status,0,c
  3134  007212  320B               	rrcf	___ftmul@f1+2,f,c
  3135  007214  320A               	rrcf	___ftmul@f1+1,f,c
  3136  007216  3209               	rrcf	___ftmul@f1,f,c
  3137  007218  90D8               	bcf	status,0,c
  3138  00721A  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  3139  00721C  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  3140  00721E  3213               	rrcf	___ftmul@f3_as_product,f,c
  3141  007220  2E16               	decfsz	___ftmul@cntr,f,c
  3142  007222  D7EE               	goto	l1424
  3143  007224  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3144  007228  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3145  00722C  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3146  007230  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  3147  007234  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  3148  007238  EC77  F037         	call	___ftpack	;wreg free
  3149  00723C  C001  F009         	movff	?___ftpack,?___ftmul
  3150  007240  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  3151  007244  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  3152  007248  0012               	return	
  3153  00724A                     __end_of___ftmul:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           postinc0	equ	0xFEE
  3160                           wreg	equ	0xFE8
  3161                           postinc1	equ	0xFE6
  3162                           postdec1	equ	0xFE5
  3163                           fsr1h	equ	0xFE2
  3164                           fsr1l	equ	0xFE1
  3165                           indf2	equ	0xFDF
  3166                           postinc2	equ	0xFDE
  3167                           postdec2	equ	0xFDD
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function ___ftge *****************
  3173 ;; Defined at:
  3174 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  ff1             3    0[COMRAM] float 
  3177 ;;  ff2             3    3[COMRAM] float 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;		None               void
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         6       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3192 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        9 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;;		_PID_Compute
  3200 ;;		_PID_SetOutputLimits
  3201 ;;		_PID_Initialize
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text15
  3206  006E5E                     __ptext15:
  3207                           	opt stack 0
  3208  006E5E                     ___ftge:
  3209                           	opt stack 30
  3210                           
  3211                           ;incstack = 0
  3212  006E5E  AE03               	btfss	___ftge@ff1+2,7,c
  3213  006E60  D016               	goto	l1440
  3214  006E62  C001  F007         	movff	___ftge@ff1,??___ftge
  3215  006E66  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3216  006E6A  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3217  006E6E  1E07               	comf	??___ftge,f,c
  3218  006E70  1E08               	comf	??___ftge+1,f,c
  3219  006E72  1E09               	comf	??___ftge+2,f,c
  3220  006E74  2A07               	incf	??___ftge,f,c
  3221  006E76  0E00               	movlw	0
  3222  006E78  2208               	addwfc	??___ftge+1,f,c
  3223  006E7A  2209               	addwfc	??___ftge+2,f,c
  3224  006E7C  0E00               	movlw	0
  3225  006E7E  2407               	addwf	??___ftge,w,c
  3226  006E80  6E01               	movwf	___ftge@ff1,c
  3227  006E82  0E00               	movlw	0
  3228  006E84  2008               	addwfc	??___ftge+1,w,c
  3229  006E86  6E02               	movwf	___ftge@ff1+1,c
  3230  006E88  0E80               	movlw	128
  3231  006E8A  2009               	addwfc	??___ftge+2,w,c
  3232  006E8C  6E03               	movwf	___ftge@ff1+2,c
  3233  006E8E                     l1440:
  3234  006E8E  AE06               	btfss	___ftge@ff2+2,7,c
  3235  006E90  D016               	goto	l1444
  3236  006E92  C004  F007         	movff	___ftge@ff2,??___ftge
  3237  006E96  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3238  006E9A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3239  006E9E  1E07               	comf	??___ftge,f,c
  3240  006EA0  1E08               	comf	??___ftge+1,f,c
  3241  006EA2  1E09               	comf	??___ftge+2,f,c
  3242  006EA4  2A07               	incf	??___ftge,f,c
  3243  006EA6  0E00               	movlw	0
  3244  006EA8  2208               	addwfc	??___ftge+1,f,c
  3245  006EAA  2209               	addwfc	??___ftge+2,f,c
  3246  006EAC  0E00               	movlw	0
  3247  006EAE  2407               	addwf	??___ftge,w,c
  3248  006EB0  6E04               	movwf	___ftge@ff2,c
  3249  006EB2  0E00               	movlw	0
  3250  006EB4  2008               	addwfc	??___ftge+1,w,c
  3251  006EB6  6E05               	movwf	___ftge@ff2+1,c
  3252  006EB8  0E80               	movlw	128
  3253  006EBA  2009               	addwfc	??___ftge+2,w,c
  3254  006EBC  6E06               	movwf	___ftge@ff2+2,c
  3255  006EBE                     l1444:
  3256  006EBE  0E00               	movlw	0
  3257  006EC0  1A01               	xorwf	___ftge@ff1,f,c
  3258  006EC2  0E00               	movlw	0
  3259  006EC4  1A02               	xorwf	___ftge@ff1+1,f,c
  3260  006EC6  0E80               	movlw	128
  3261  006EC8  1A03               	xorwf	___ftge@ff1+2,f,c
  3262  006ECA  0E00               	movlw	0
  3263  006ECC  1A04               	xorwf	___ftge@ff2,f,c
  3264  006ECE  0E00               	movlw	0
  3265  006ED0  1A05               	xorwf	___ftge@ff2+1,f,c
  3266  006ED2  0E80               	movlw	128
  3267  006ED4  1A06               	xorwf	___ftge@ff2+2,f,c
  3268  006ED6  5004               	movf	___ftge@ff2,w,c
  3269  006ED8  5C01               	subwf	___ftge@ff1,w,c
  3270  006EDA  5005               	movf	___ftge@ff2+1,w,c
  3271  006EDC  5802               	subwfb	___ftge@ff1+1,w,c
  3272  006EDE  5006               	movf	___ftge@ff2+2,w,c
  3273  006EE0  5803               	subwfb	___ftge@ff1+2,w,c
  3274  006EE2  B0D8               	btfsc	status,0,c
  3275  006EE4  D002               	goto	l1450
  3276  006EE6  90D8               	bcf	status,0,c
  3277  006EE8  0012               	return	
  3278  006EEA                     l1450:
  3279  006EEA  80D8               	bsf	status,0,c
  3280  006EEC  0012               	return	
  3281  006EEE                     __end_of___ftge:
  3282                           	opt stack 0
  3283                           tblptru	equ	0xFF8
  3284                           tblptrh	equ	0xFF7
  3285                           tblptrl	equ	0xFF6
  3286                           tablat	equ	0xFF5
  3287                           postinc0	equ	0xFEE
  3288                           wreg	equ	0xFE8
  3289                           postinc1	equ	0xFE6
  3290                           postdec1	equ	0xFE5
  3291                           fsr1h	equ	0xFE2
  3292                           fsr1l	equ	0xFE1
  3293                           indf2	equ	0xFDF
  3294                           postinc2	equ	0xFDE
  3295                           postdec2	equ	0xFDD
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8
  3299                           
  3300 ;; *************** function ___ftadd *****************
  3301 ;; Defined at:
  3302 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  f1              3   23[COMRAM] float 
  3305 ;;  f2              3   26[COMRAM] float 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  exp1            1   34[COMRAM] unsigned char 
  3308 ;;  exp2            1   33[COMRAM] unsigned char 
  3309 ;;  sign            1   32[COMRAM] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  3   23[COMRAM] float 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3319 ;;      Params:         6       0       0       0       0       0       0       0       0
  3320 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3321 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3322 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3323 ;;Total ram usage:       12 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    1
  3326 ;; This function calls:
  3327 ;;		___ftpack
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;;		_PID_Compute
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text16
  3335  00754C                     __ptext16:
  3336                           	opt stack 0
  3337  00754C                     ___ftadd:
  3338                           	opt stack 29
  3339                           
  3340                           ;incstack = 0
  3341  00754C  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  3342  007550  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3343  007552  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3344  007554  3419               	rlcf	___ftadd@f1+1,w,c
  3345  007556  361E               	rlcf	??___ftadd& (0+255),f,c
  3346  007558  E301               	bnc	u1211
  3347  00755A  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3348  00755C                     u1211:
  3349  00755C  501E               	movf	??___ftadd,w,c
  3350  00755E  6E23               	movwf	___ftadd@exp1,c
  3351  007560  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  3352  007564  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3353  007566  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3354  007568  341C               	rlcf	___ftadd@f2+1,w,c
  3355  00756A  361E               	rlcf	??___ftadd& (0+255),f,c
  3356  00756C  E301               	bnc	u1221
  3357  00756E  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3358  007570                     u1221:
  3359  007570  501E               	movf	??___ftadd,w,c
  3360  007572  6E22               	movwf	___ftadd@exp2,c
  3361  007574  5023               	movf	___ftadd@exp1,w,c
  3362  007576  B4D8               	btfsc	status,2,c
  3363  007578  D00B               	goto	l390
  3364  00757A  5022               	movf	___ftadd@exp2,w,c
  3365  00757C  5C23               	subwf	___ftadd@exp1,w,c
  3366  00757E  B0D8               	btfsc	status,0,c
  3367  007580  D00E               	goto	l1540
  3368  007582  5023               	movf	___ftadd@exp1,w,c
  3369  007584  0800               	sublw	0
  3370  007586  2422               	addwf	___ftadd@exp2,w,c
  3371  007588  6E1E               	movwf	??___ftadd& (0+255),c
  3372  00758A  0E18               	movlw	24
  3373  00758C  641E               	cpfsgt	??___ftadd,c
  3374  00758E  D007               	goto	l1540
  3375  007590                     l390:
  3376  007590  C01B  F018         	movff	___ftadd@f2,?___ftadd
  3377  007594  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  3378  007598  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  3379  00759C  0012               	return	
  3380  00759E                     l1540:
  3381  00759E  5022               	movf	___ftadd@exp2,w,c
  3382  0075A0  B4D8               	btfsc	status,2,c
  3383  0075A2  D00B               	goto	l394
  3384  0075A4  5023               	movf	___ftadd@exp1,w,c
  3385  0075A6  5C22               	subwf	___ftadd@exp2,w,c
  3386  0075A8  B0D8               	btfsc	status,0,c
  3387  0075AA  D00E               	goto	l1546
  3388  0075AC  5022               	movf	___ftadd@exp2,w,c
  3389  0075AE  0800               	sublw	0
  3390  0075B0  2423               	addwf	___ftadd@exp1,w,c
  3391  0075B2  6E1E               	movwf	??___ftadd& (0+255),c
  3392  0075B4  0E18               	movlw	24
  3393  0075B6  641E               	cpfsgt	??___ftadd,c
  3394  0075B8  D007               	goto	l1546
  3395  0075BA                     l394:
  3396  0075BA  C018  F018         	movff	___ftadd@f1,?___ftadd
  3397  0075BE  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  3398  0075C2  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  3399  0075C6  0012               	return	
  3400  0075C8                     l1546:
  3401  0075C8  0E06               	movlw	6
  3402  0075CA  6E21               	movwf	___ftadd@sign,c
  3403  0075CC  BE1A               	btfsc	___ftadd@f1+2,7,c
  3404  0075CE  8E21               	bsf	___ftadd@sign,7,c
  3405  0075D0  BE1D               	btfsc	___ftadd@f2+2,7,c
  3406  0075D2  8C21               	bsf	___ftadd@sign,6,c
  3407  0075D4  8E19               	bsf	___ftadd@f1+1,7,c
  3408  0075D6  0EFF               	movlw	255
  3409  0075D8  1618               	andwf	___ftadd@f1,f,c
  3410  0075DA  0EFF               	movlw	255
  3411  0075DC  1619               	andwf	___ftadd@f1+1,f,c
  3412  0075DE  0E00               	movlw	0
  3413  0075E0  161A               	andwf	___ftadd@f1+2,f,c
  3414  0075E2  8E1C               	bsf	___ftadd@f2+1,7,c
  3415  0075E4  0EFF               	movlw	255
  3416  0075E6  161B               	andwf	___ftadd@f2,f,c
  3417  0075E8  0EFF               	movlw	255
  3418  0075EA  161C               	andwf	___ftadd@f2+1,f,c
  3419  0075EC  0E00               	movlw	0
  3420  0075EE  161D               	andwf	___ftadd@f2+2,f,c
  3421  0075F0  5022               	movf	___ftadd@exp2,w,c
  3422  0075F2  5C23               	subwf	___ftadd@exp1,w,c
  3423  0075F4  B0D8               	btfsc	status,0,c
  3424  0075F6  D01B               	goto	l1572
  3425  0075F8                     l1562:
  3426  0075F8  90D8               	bcf	status,0,c
  3427  0075FA  361B               	rlcf	___ftadd@f2,f,c
  3428  0075FC  361C               	rlcf	___ftadd@f2+1,f,c
  3429  0075FE  361D               	rlcf	___ftadd@f2+2,f,c
  3430  007600  0622               	decf	___ftadd@exp2,f,c
  3431  007602  5023               	movf	___ftadd@exp1,w,c
  3432  007604  1822               	xorwf	___ftadd@exp2,w,c
  3433  007606  B4D8               	btfsc	status,2,c
  3434  007608  D00D               	goto	l1570
  3435  00760A  0621               	decf	___ftadd@sign,f,c
  3436  00760C  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3437  007610  0E07               	movlw	7
  3438  007612  161E               	andwf	??___ftadd,f,c
  3439  007614  B4D8               	btfsc	status,2,c
  3440  007616  D006               	goto	l1570
  3441  007618  D7EF               	goto	l1562
  3442  00761A                     l1568:
  3443  00761A  90D8               	bcf	status,0,c
  3444  00761C  321A               	rrcf	___ftadd@f1+2,f,c
  3445  00761E  3219               	rrcf	___ftadd@f1+1,f,c
  3446  007620  3218               	rrcf	___ftadd@f1,f,c
  3447  007622  2A23               	incf	___ftadd@exp1,f,c
  3448  007624                     l1570:
  3449  007624  5022               	movf	___ftadd@exp2,w,c
  3450  007626  1823               	xorwf	___ftadd@exp1,w,c
  3451  007628  B4D8               	btfsc	status,2,c
  3452  00762A  D01F               	goto	l405
  3453  00762C  D7F6               	goto	l1568
  3454  00762E                     l1572:
  3455  00762E  5023               	movf	___ftadd@exp1,w,c
  3456  007630  5C22               	subwf	___ftadd@exp2,w,c
  3457  007632  B0D8               	btfsc	status,0,c
  3458  007634  D01A               	goto	l405
  3459  007636                     l1574:
  3460  007636  90D8               	bcf	status,0,c
  3461  007638  3618               	rlcf	___ftadd@f1,f,c
  3462  00763A  3619               	rlcf	___ftadd@f1+1,f,c
  3463  00763C  361A               	rlcf	___ftadd@f1+2,f,c
  3464  00763E  0623               	decf	___ftadd@exp1,f,c
  3465  007640  5023               	movf	___ftadd@exp1,w,c
  3466  007642  1822               	xorwf	___ftadd@exp2,w,c
  3467  007644  B4D8               	btfsc	status,2,c
  3468  007646  D00D               	goto	l1582
  3469  007648  0621               	decf	___ftadd@sign,f,c
  3470  00764A  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3471  00764E  0E07               	movlw	7
  3472  007650  161E               	andwf	??___ftadd,f,c
  3473  007652  B4D8               	btfsc	status,2,c
  3474  007654  D006               	goto	l1582
  3475  007656  D7EF               	goto	l1574
  3476  007658                     l1580:
  3477  007658  90D8               	bcf	status,0,c
  3478  00765A  321D               	rrcf	___ftadd@f2+2,f,c
  3479  00765C  321C               	rrcf	___ftadd@f2+1,f,c
  3480  00765E  321B               	rrcf	___ftadd@f2,f,c
  3481  007660  2A22               	incf	___ftadd@exp2,f,c
  3482  007662                     l1582:
  3483  007662  5022               	movf	___ftadd@exp2,w,c
  3484  007664  1823               	xorwf	___ftadd@exp1,w,c
  3485  007666  A4D8               	btfss	status,2,c
  3486  007668  D7F7               	goto	l1580
  3487  00766A                     l405:
  3488  00766A  AE21               	btfss	___ftadd@sign,7,c
  3489  00766C  D00C               	goto	l414
  3490  00766E  0EFF               	movlw	255
  3491  007670  1A18               	xorwf	___ftadd@f1,f,c
  3492  007672  0EFF               	movlw	255
  3493  007674  1A19               	xorwf	___ftadd@f1+1,f,c
  3494  007676  0EFF               	movlw	255
  3495  007678  1A1A               	xorwf	___ftadd@f1+2,f,c
  3496  00767A  0E01               	movlw	1
  3497  00767C  2618               	addwf	___ftadd@f1,f,c
  3498  00767E  0E00               	movlw	0
  3499  007680  2219               	addwfc	___ftadd@f1+1,f,c
  3500  007682  0E00               	movlw	0
  3501  007684  221A               	addwfc	___ftadd@f1+2,f,c
  3502  007686                     l414:
  3503  007686  AC21               	btfss	___ftadd@sign,6,c
  3504  007688  D00C               	goto	l1588
  3505  00768A  0EFF               	movlw	255
  3506  00768C  1A1B               	xorwf	___ftadd@f2,f,c
  3507  00768E  0EFF               	movlw	255
  3508  007690  1A1C               	xorwf	___ftadd@f2+1,f,c
  3509  007692  0EFF               	movlw	255
  3510  007694  1A1D               	xorwf	___ftadd@f2+2,f,c
  3511  007696  0E01               	movlw	1
  3512  007698  261B               	addwf	___ftadd@f2,f,c
  3513  00769A  0E00               	movlw	0
  3514  00769C  221C               	addwfc	___ftadd@f2+1,f,c
  3515  00769E  0E00               	movlw	0
  3516  0076A0  221D               	addwfc	___ftadd@f2+2,f,c
  3517  0076A2                     l1588:
  3518  0076A2  0E00               	movlw	0
  3519  0076A4  6E21               	movwf	___ftadd@sign,c
  3520  0076A6  5018               	movf	___ftadd@f1,w,c
  3521  0076A8  261B               	addwf	___ftadd@f2,f,c
  3522  0076AA  5019               	movf	___ftadd@f1+1,w,c
  3523  0076AC  221C               	addwfc	___ftadd@f2+1,f,c
  3524  0076AE  501A               	movf	___ftadd@f1+2,w,c
  3525  0076B0  221D               	addwfc	___ftadd@f2+2,f,c
  3526  0076B2  AE1D               	btfss	___ftadd@f2+2,7,c
  3527  0076B4  D00E               	goto	l1598
  3528  0076B6  0EFF               	movlw	255
  3529  0076B8  1A1B               	xorwf	___ftadd@f2,f,c
  3530  0076BA  0EFF               	movlw	255
  3531  0076BC  1A1C               	xorwf	___ftadd@f2+1,f,c
  3532  0076BE  0EFF               	movlw	255
  3533  0076C0  1A1D               	xorwf	___ftadd@f2+2,f,c
  3534  0076C2  0E01               	movlw	1
  3535  0076C4  261B               	addwf	___ftadd@f2,f,c
  3536  0076C6  0E00               	movlw	0
  3537  0076C8  221C               	addwfc	___ftadd@f2+1,f,c
  3538  0076CA  0E00               	movlw	0
  3539  0076CC  221D               	addwfc	___ftadd@f2+2,f,c
  3540  0076CE  0E01               	movlw	1
  3541  0076D0  6E21               	movwf	___ftadd@sign,c
  3542  0076D2                     l1598:
  3543  0076D2  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  3544  0076D6  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3545  0076DA  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3546  0076DE  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  3547  0076E2  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  3548  0076E6  EC77  F037         	call	___ftpack	;wreg free
  3549  0076EA  C001  F018         	movff	?___ftpack,?___ftadd
  3550  0076EE  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  3551  0076F2  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  3552  0076F6  0012               	return	
  3553  0076F8                     __end_of___ftadd:
  3554                           	opt stack 0
  3555                           tblptru	equ	0xFF8
  3556                           tblptrh	equ	0xFF7
  3557                           tblptrl	equ	0xFF6
  3558                           tablat	equ	0xFF5
  3559                           postinc0	equ	0xFEE
  3560                           wreg	equ	0xFE8
  3561                           postinc1	equ	0xFE6
  3562                           postdec1	equ	0xFE5
  3563                           fsr1h	equ	0xFE2
  3564                           fsr1l	equ	0xFE1
  3565                           indf2	equ	0xFDF
  3566                           postinc2	equ	0xFDE
  3567                           postdec2	equ	0xFDD
  3568                           fsr2h	equ	0xFDA
  3569                           fsr2l	equ	0xFD9
  3570                           status	equ	0xFD8
  3571                           
  3572 ;; *************** function ___ftpack *****************
  3573 ;; Defined at:
  3574 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  arg             3    0[COMRAM] unsigned um
  3577 ;;  exp             1    3[COMRAM] unsigned char 
  3578 ;;  sign            1    4[COMRAM] unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  3    0[COMRAM] float 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3590 ;;      Params:         5       0       0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3592 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3593 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3594 ;;Total ram usage:        8 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		___awtoft
  3600 ;;		___ftadd
  3601 ;;		___ftdiv
  3602 ;;		___ftmul
  3603 ;;		___lbtoft
  3604 ;;		___lltoft
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text17
  3609  006EEE                     __ptext17:
  3610                           	opt stack 0
  3611  006EEE                     ___ftpack:
  3612                           	opt stack 29
  3613                           
  3614                           ;incstack = 0
  3615  006EEE  5004               	movf	___ftpack@exp,w,c
  3616  006EF0  B4D8               	btfsc	status,2,c
  3617  006EF2  D005               	goto	l1310
  3618  006EF4  5001               	movf	___ftpack@arg,w,c
  3619  006EF6  1002               	iorwf	___ftpack@arg+1,w,c
  3620  006EF8  1003               	iorwf	___ftpack@arg+2,w,c
  3621  006EFA  A4D8               	btfss	status,2,c
  3622  006EFC  D00C               	goto	l1316
  3623  006EFE                     l1310:
  3624  006EFE  0E00               	movlw	0
  3625  006F00  6E01               	movwf	?___ftpack,c
  3626  006F02  0E00               	movlw	0
  3627  006F04  6E02               	movwf	?___ftpack+1,c
  3628  006F06  0E00               	movlw	0
  3629  006F08  6E03               	movwf	?___ftpack+2,c
  3630  006F0A  0012               	return	
  3631  006F0C                     l1314:
  3632  006F0C  2A04               	incf	___ftpack@exp,f,c
  3633  006F0E  90D8               	bcf	status,0,c
  3634  006F10  3203               	rrcf	___ftpack@arg+2,f,c
  3635  006F12  3202               	rrcf	___ftpack@arg+1,f,c
  3636  006F14  3201               	rrcf	___ftpack@arg,f,c
  3637  006F16                     l1316:
  3638  006F16  0E00               	movlw	0
  3639  006F18  1401               	andwf	___ftpack@arg,w,c
  3640  006F1A  6E06               	movwf	??___ftpack& (0+255),c
  3641  006F1C  0E00               	movlw	0
  3642  006F1E  1402               	andwf	___ftpack@arg+1,w,c
  3643  006F20  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3644  006F22  0EFE               	movlw	254
  3645  006F24  1403               	andwf	___ftpack@arg+2,w,c
  3646  006F26  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3647  006F28  5006               	movf	??___ftpack,w,c
  3648  006F2A  1007               	iorwf	??___ftpack+1,w,c
  3649  006F2C  1008               	iorwf	??___ftpack+2,w,c
  3650  006F2E  B4D8               	btfsc	status,2,c
  3651  006F30  D00C               	goto	l1322
  3652  006F32  D7EC               	goto	l1314
  3653  006F34                     l1318:
  3654  006F34  2A04               	incf	___ftpack@exp,f,c
  3655  006F36  0E01               	movlw	1
  3656  006F38  2601               	addwf	___ftpack@arg,f,c
  3657  006F3A  0E00               	movlw	0
  3658  006F3C  2202               	addwfc	___ftpack@arg+1,f,c
  3659  006F3E  0E00               	movlw	0
  3660  006F40  2203               	addwfc	___ftpack@arg+2,f,c
  3661  006F42  90D8               	bcf	status,0,c
  3662  006F44  3203               	rrcf	___ftpack@arg+2,f,c
  3663  006F46  3202               	rrcf	___ftpack@arg+1,f,c
  3664  006F48  3201               	rrcf	___ftpack@arg,f,c
  3665  006F4A                     l1322:
  3666  006F4A  0E00               	movlw	0
  3667  006F4C  1401               	andwf	___ftpack@arg,w,c
  3668  006F4E  6E06               	movwf	??___ftpack& (0+255),c
  3669  006F50  0E00               	movlw	0
  3670  006F52  1402               	andwf	___ftpack@arg+1,w,c
  3671  006F54  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3672  006F56  0EFF               	movlw	255
  3673  006F58  1403               	andwf	___ftpack@arg+2,w,c
  3674  006F5A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3675  006F5C  5006               	movf	??___ftpack,w,c
  3676  006F5E  1007               	iorwf	??___ftpack+1,w,c
  3677  006F60  1008               	iorwf	??___ftpack+2,w,c
  3678  006F62  B4D8               	btfsc	status,2,c
  3679  006F64  D006               	goto	l1326
  3680  006F66  D7E6               	goto	l1318
  3681  006F68                     l1324:
  3682  006F68  0604               	decf	___ftpack@exp,f,c
  3683  006F6A  90D8               	bcf	status,0,c
  3684  006F6C  3601               	rlcf	___ftpack@arg,f,c
  3685  006F6E  3602               	rlcf	___ftpack@arg+1,f,c
  3686  006F70  3603               	rlcf	___ftpack@arg+2,f,c
  3687  006F72                     l1326:
  3688  006F72  BE02               	btfsc	___ftpack@arg+1,7,c
  3689  006F74  D003               	goto	l367
  3690  006F76  0E02               	movlw	2
  3691  006F78  6004               	cpfslt	___ftpack@exp,c
  3692  006F7A  D7F6               	goto	l1324
  3693  006F7C                     l367:
  3694  006F7C  A004               	btfss	___ftpack@exp,0,c
  3695  006F7E  9E02               	bcf	___ftpack@arg+1,7,c
  3696  006F80  90D8               	bcf	status,0,c
  3697  006F82  3204               	rrcf	___ftpack@exp,f,c
  3698  006F84  5004               	movf	___ftpack@exp,w,c
  3699  006F86  1203               	iorwf	___ftpack@arg+2,f,c
  3700  006F88  5005               	movf	___ftpack@sign,w,c
  3701  006F8A  A4D8               	btfss	status,2,c
  3702  006F8C  8E03               	bsf	___ftpack@arg+2,7,c
  3703  006F8E  C001  F001         	movff	___ftpack@arg,?___ftpack
  3704  006F92  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3705  006F96  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3706  006F9A  0012               	return	
  3707  006F9C                     __end_of___ftpack:
  3708                           	opt stack 0
  3709  0000                     tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           postinc0	equ	0xFEE
  3714                           wreg	equ	0xFE8
  3715                           postinc1	equ	0xFE6
  3716                           postdec1	equ	0xFE5
  3717                           fsr1h	equ	0xFE2
  3718                           fsr1l	equ	0xFE1
  3719                           indf2	equ	0xFDF
  3720                           postinc2	equ	0xFDE
  3721                           postdec2	equ	0xFDD
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8
  3725                           tblptru	equ	0xFF8
  3726                           tblptrh	equ	0xFF7
  3727                           tblptrl	equ	0xFF6
  3728                           tablat	equ	0xFF5
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           postinc1	equ	0xFE6
  3732                           postdec1	equ	0xFE5
  3733                           fsr1h	equ	0xFE2
  3734                           fsr1l	equ	0xFE1
  3735                           indf2	equ	0xFDF
  3736                           postinc2	equ	0xFDE
  3737                           postdec2	equ	0xFDD
  3738                           fsr2h	equ	0xFDA
  3739                           fsr2l	equ	0xFD9
  3740                           status	equ	0xFD8
  3741                           
  3742                           	psect	rparam
  3743  0000                     tblptru	equ	0xFF8
  3744                           tblptrh	equ	0xFF7
  3745                           tblptrl	equ	0xFF6
  3746                           tablat	equ	0xFF5
  3747                           postinc0	equ	0xFEE
  3748                           wreg	equ	0xFE8
  3749                           postinc1	equ	0xFE6
  3750                           postdec1	equ	0xFE5
  3751                           fsr1h	equ	0xFE2
  3752                           fsr1l	equ	0xFE1
  3753                           indf2	equ	0xFDF
  3754                           postinc2	equ	0xFDE
  3755                           postdec2	equ	0xFDD
  3756                           fsr2h	equ	0xFDA
  3757                           fsr2l	equ	0xFD9
  3758                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      67
    BANK0           160     51      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftneg
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___awtoft
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftneg
    ___ftneg->___ftadd
    ___ftmul->___ftpack
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   43832
                                              0 BANK0     51    51      0
                        _PID_Compute
                        _PID_SetMode
                _PID_SetOutputLimits
                           _PID_init
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2939
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   15485
                                             53 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11356
                                             38 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3504
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2382
                                             12 COMRAM     8     0      8
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3    1059
                                             38 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    2045
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1760
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   11092
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     665
                                             35 COMRAM     3     0      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1420
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4582
                                             23 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_SetOutputLimits
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftneg
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      4C       5       47.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      43       1       70.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8F      20        0.0%
DATA                 0      0      8F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jun 19 16:42:25 2017

                                  _A 009C                                    _B 0099  
                                  _C 0096                                    _D 0093  
                    PID_SetMode@Mode 000E                                   l60 7AFA  
                                 l54 7A9E                                   l63 7B28  
                                 l57 7ACC                                   l90 7FCE  
                                 l67 7CCC               __end_of_PID_Initialize 7442  
                        __CFG_BORV$3 000000                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0023  
                       ___ftadd@exp2 0022                ??_PID_SetOutputLimits 0015  
                       ___ftadd@sign 0021                                  l405 766A  
                                l414 7686                                  l425 7124  
                                l390 7590                                  l367 6F7C  
                                l447 6D22                                  l394 75BA  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u911 7080                                  u931 70A8  
                                u961 7166                                  u981 718E  
                       __CFG_BOR$OFF 000000                    PID_Compute@dInput 0029  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 001B                         ___ftdiv@sign 0020  
                       __CFG_WDT$OFF 000000                                 l1310 6EFE  
                               l1400 71A6                                 l1322 6F4A  
                               l1314 6F0C                                 l1324 6F68  
                               l1316 6F16                                 l1326 6F72  
                               l1318 6F34                                 l1414 71D8  
                               l1440 6E8E                                 l1424 7200  
                               l1450 6EEA                                 l1418 71E8  
                               l1354 70C0                                 l1540 759E  
                               l1444 6EBE                                 l1428 7210  
                               l1348 7098                                 l1460 6E08  
                               l1700 7304                                 l1374 70FE  
                               l1462 6E14                                 l1702 7310  
                               l1528 73E4                                 l1704 7316  
                               l1570 7624                                 l1562 75F8  
                               l1546 75C8                                 l1394 717E  
                               l1634 7DFC                                 l1618 6DF0  
                               l1482 77F4                                 l1580 7658  
                               l1572 762E                                 l1708 732C  
                               l1812 7CAE                                 l1732 7A8E  
                               l1582 7662                                 l1574 7636  
                               l1638 7E58                                 l1486 7852  
                               l1478 7798                                 l1662 6D9E  
                               l1568 761A                                 l1648 7F8A  
                               l1496 705E                                 l1672 7276  
                               l1690 72DC                                 l1588 76A2  
                               l1598 76D2                                 l1694 72EC  
                               u1211 755C                                 u1221 7570  
                               u1420 6DCC                                 u1430 6DCE  
                               u1511 725A                                 u1530 7294  
                               u1535 728C                                 u1707 7B12  
                               u1717 7B20                                 u1727 7B40  
                               u1657 7A96                                 u1667 7AB6  
                               u1677 7AC4                                 u1687 7AE4  
                               u1697 7AF2                    PID_Compute@output 0035  
                       __CFG_PWRT$ON 000000                                 _main 7A78  
                       ___ftpack@arg 0001                         ___ftpack@exp 0004  
                               _sign 0042                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             PID_SetOutputLimits@Max 0012               PID_SetOutputLimits@Min 000F  
             PID_SetOutputLimits@pid 000D               __end_of_PID_SetTunings 7A78  
                               start 0000                        __CFG_IESO$OFF 000000  
                       ___ftmul@cntr 0016                         ___param_bank 000000  
                       ___ftmul@sign 0017                         ___fttol@exp1 000F  
                       ___fttol@lval 000B                        __CFG_PLLDIV$5 000000  
                    ?_PID_Initialize 000A                                ?_main 0001  
                    __end_of___ftadd 76F8                      __end_of___ftdiv 7156  
                    __end_of___ftneg 6D30                      __end_of___ftmul 724A  
                    __end_of___fttol 733E                                _PORTB 000F81  
                              _PORTD 000F83                        __CFG_USBDIV$1 000000  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                         ___lltoft@exp 0011  
                   __end_of_PID_init 754C                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                                _Input 009F  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                        ___awtoft@sign 000C  
                 PID_SetMode@newAuto 0010                        ___ftpack@sign 0005  
                              tablat 000FF5                                status 000FD8  
                     __CFG_ICPRT$OFF 000000                      ?_PID_SetTunings 0027  
                       ?_PID_Compute 0027                       __CFG_MCLRE$OFF 000000  
                    __initialization 6D54                         __end_of_main 7CE8  
                       ?_PID_SetMode 000C                               ??_main 0042  
                      ___fttol@sign1 000A                        __activetblptr 000000  
                   PID_SetTunings@Kd 002F                     PID_SetTunings@Ki 002C  
                   PID_SetTunings@Kp 0029                      __CFG_CCP2MX$OFF 000000  
                   __end_of___awtoft 6DC2                     __end_of___ftpack 6F9C  
                   __end_of___lbtoft 6D54                     __end_of___lltoft 6E5E  
                             _TMR1CS 007E69                               _TMR3CS 007D89  
                     __CFG_XINST$OFF 000000                               _Output 00A2  
                             ___ftge 6E5E                            ??___ftadd 001E  
                          ??___ftdiv 0018                            ??___ftneg 0027  
                          ??___ftmul 000F                            ??___fttol 0005  
                             clear_0 6D7A                               _output 00A7  
              ___ftmul@f3_as_product 0013                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0060              __end_of__initialization 6D84  
                    __CFG_PBADEN$OFF 000000                           ___ftadd@f1 0018  
                         ___ftadd@f2 001B                           ___ftge@ff1 0001  
                         ___ftge@ff2 0004                        ___rparam_used 000001  
                         ___ftdiv@f1 0012                           ___ftdiv@f2 0015  
                         ___ftdiv@f3 001C                           ___ftneg@f1 0024  
                         ___awtoft@c 0009                           ___lbtoft@c 000C  
                         ___ftmul@f1 0009                           ___ftmul@f2 000C  
                         ___fttol@f1 0001                       __pcstackCOMRAM 0001  
                          ?_PID_init 0036                         __pidataBANK0 6D08  
                         ___lltoft@c 0009                           __pbssBANK0 0093  
                  PID_SetTunings@pid 0027                     ??_PID_Initialize 000C  
                            ?___ftge 0001                           ??_PID_init 0042  
        __end_of_PID_SetOutputLimits 78B0                 __size_of_PID_Compute 0318  
               __size_of_PID_SetMode 0040                            ?___awtoft 0009  
                          ?___ftpack 0001                            ?___lbtoft 0009  
                          ?___lltoft 0009                          PID_init@pid 0036  
                   ??_PID_SetTunings 0032                       PID_Compute@pid 0027  
                    __CFG_VREGEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000         ??_PID_SetControllerDirection 002A  
PID_SetControllerDirection@Direction 0029                      __size_of___ftge 0090  
                            ___ftadd 754C                              ___ftdiv 7070  
                            ___ftneg 6D0C                              ___ftmul 7156  
                            ___fttol 724A                      __CFG_STVREN$OFF 000000  
                            __pcinit 6D54                           ??___awtoft 000C  
                         ??___ftpack 0006                           ??___lbtoft 000C  
                            __ramtop 0800                           ??___lltoft 000D  
                            __ptext0 7A78                              __ptext1 6D30  
                            __ptext2 724A                              __ptext3 6D8A  
                            __ptext4 7442                              __ptext5 78B0  
                            __ptext6 6E02                              __ptext7 7070  
                            __ptext8 76F8                              __ptext9 6F9C  
        PID_init@ControllerDirection 0041                              main@PID 0066  
               end_of_initialization 6D84  __size_of_PID_SetControllerDirection 00D4  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                            _PORTCbits 000F82  
                     PID_SetMode@pid 000C                     PID_Compute@error 002F  
                   PID_Compute@input 0032                          ___ftdiv@exp 001F  
                        ___ftmul@exp 0012                       __end_of___ftge 6EEE  
                  __size_of_PID_init 010A                  start_initialization 6D54  
                  PID_Initialize@pid 000A   __end_of_PID_SetControllerDirection 7070  
         _PID_SetControllerDirection 6F9C                             ??___ftge 0007  
                        __pdataBANK0 00A8                     __CFG_LPT1OSC$OFF 000000  
                  __size_of___awtoft 0038                    __size_of___ftpack 00AE  
                  __size_of___lbtoft 0024                    __size_of___lltoft 005C  
                        __pbssCOMRAM 0042                        __pcstackBANK0 0060  
                   _PID_Compute$1039 002C                        ??_PID_Compute 0029  
                          _main$1037 0060                            _main$1038 0063  
                      ??_PID_SetMode 000F                             ?___ftadd 0018  
                           ?___ftdiv 0012                             ?___ftneg 0024  
                           ?___ftmul 0009                             ?___fttol 0001  
                         PID_init@Kd 003E                           PID_init@Ki 003B  
                         PID_init@Kp 0038         __size_of_PID_SetOutputLimits 01B8  
                   __CFG_WDTPS$32768 000000                             _PID_init 7442  
                __end_of_PID_Compute 8000                  __end_of_PID_SetMode 6E02  
            __size_of_PID_Initialize 0104                            copy_data0 6D68  
                           __Hrparam 0000                             __Lrparam 0000  
            __size_of_PID_SetTunings 01C8                             _Setpoint 00A5  
                   __size_of___ftadd 01AC                     __size_of___ftdiv 00E6  
                   __size_of___ftneg 0024                     __size_of___ftmul 00F4  
                   __size_of___fttol 00F4                             ___awtoft 6D8A  
                           ___ftpack 6EEE                             ___lbtoft 6D30  
                           ___lltoft 6E02                             __ptext10 6DC2  
                           __ptext11 733E                             __ptext12 7CE8  
                           __ptext13 6D0C                             __ptext14 7156  
                           __ptext15 6E5E                             __ptext16 754C  
                           __ptext17 6EEE                        __size_of_main 0270  
                        _PID_Compute 7CE8          ?_PID_SetControllerDirection 0027  
                        _PID_SetMode 6DC2                          _PID_Out_Max 00A8  
                        _PID_Out_Min 00AA                __CFG_CPUDIV$OSC2_PLL3 000000  
      PID_SetControllerDirection@pid 0027                  _PID_SetOutputLimits 76F8  
                     _PID_Initialize 733E                 ?_PID_SetOutputLimits 000D  
                 __CFG_FOSC$HSPLL_HS 000000        PID_SetTunings@SampleTimeInSec 0033  
                     _PID_SetTunings 78B0  
