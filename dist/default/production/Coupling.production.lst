

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 22 11:24:27 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataBANK0
    69  006B4E                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _PID_Out_Max
    73  006B4E  2710               	dw	10000
    74                           
    75                           ;initializer for _PID_Out_Min
    76  006B50  D8F0               	dw	55536
    77  0000                     _PORTD	set	3971
    78  0000                     _PORTB	set	3969
    79  0000                     _PORTCbits	set	3970
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISD	set	3989
    82  0000                     _TRISB	set	3987
    83  0000                     _TMR3CS	set	32137
    84  0000                     _TMR1CS	set	32361
    85                           
    86                           ; #config settings
    87  0000                     
    88                           	psect	cinit
    89  006B9A                     __pcinit:
    90                           	opt stack 0
    91  006B9A                     start_initialization:
    92                           	opt stack 0
    93  006B9A                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Initialize objects allocated to BANK0 (4 bytes)
    97                           ; load TBLPTR registers with __pidataBANK0
    98  006B9A  0E4E               	movlw	low __pidataBANK0
    99  006B9C  6EF6               	movwf	tblptrl,c
   100  006B9E  0E6B               	movlw	high __pidataBANK0
   101  006BA0  6EF7               	movwf	tblptrh,c
   102  006BA2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   103  006BA4  6EF8               	movwf	tblptru,c
   104  006BA6  EE00  F0AE         	lfsr	0,__pdataBANK0
   105  006BAA  EE10 F004          	lfsr	1,4
   106  006BAE                     copy_data0:
   107  006BAE  0009               	tblrd		*+
   108  006BB0  CFF5 FFEE          	movff	tablat,postinc0
   109  006BB4  50E5               	movf	postdec1,w,c
   110  006BB6  50E1               	movf	fsr1l,w,c
   111  006BB8  E1FA               	bnz	copy_data0
   112                           
   113                           ; Clear objects allocated to BANK0 (22 bytes)
   114  006BBA  EE00  F098         	lfsr	0,__pbssBANK0
   115  006BBE  0E16               	movlw	22
   116  006BC0                     clear_0:
   117  006BC0  6AEE               	clrf	postinc0,c
   118  006BC2  06E8               	decf	wreg,f,c
   119  006BC4  E1FD               	bnz	clear_0
   120                           
   121                           ; Clear objects allocated to COMRAM (2 bytes)
   122  006BC6  6A43               	clrf	(__pbssCOMRAM+1)& (0+255),c
   123  006BC8  6A42               	clrf	__pbssCOMRAM& (0+255),c
   124  006BCA                     end_of_initialization:
   125                           	opt stack 0
   126  006BCA                     __end_of__initialization:
   127                           	opt stack 0
   128  006BCA  0100               	movlb	0
   129  006BCC  EFEB  F03D         	goto	_main	;jump to C main() function
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           wreg	equ	0xFE8
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	bssCOMRAM
   140  000042                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000042                     _sign:
   143                           	opt stack 0
   144  000042                     	ds	2
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	bssBANK0
   155  000098                     __pbssBANK0:
   156                           	opt stack 0
   157  000098                     _D:
   158                           	opt stack 0
   159  000098                     	ds	3
   160  00009B                     _C:
   161                           	opt stack 0
   162  00009B                     	ds	3
   163  00009E                     _B:
   164                           	opt stack 0
   165  00009E                     	ds	3
   166  0000A1                     _A:
   167                           	opt stack 0
   168  0000A1                     	ds	3
   169  0000A4                     _Input:
   170                           	opt stack 0
   171  0000A4                     	ds	3
   172  0000A7                     _Setpoint:
   173                           	opt stack 0
   174  0000A7                     	ds	3
   175  0000AA                     _Output:
   176                           	opt stack 0
   177  0000AA                     	ds	3
   178  0000AD                     _output:
   179                           	opt stack 0
   180  0000AD                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           postdec1	equ	0xFE5
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	dataBANK0
   191  0000AE                     __pdataBANK0:
   192                           	opt stack 0
   193  0000AE                     _PID_Out_Max:
   194                           	opt stack 0
   195  0000AE                     	ds	2
   196  0000B0                     _PID_Out_Min:
   197                           	opt stack 0
   198  0000B0                     	ds	2
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	cstackBANK0
   209  000060                     __pcstackBANK0:
   210                           	opt stack 0
   211  000060                     main@err:
   212                           	opt stack 0
   213                           
   214                           ; 3 bytes @ 0x0
   215  000060                     	ds	3
   216  000063                     _main$1039:
   217                           	opt stack 0
   218                           
   219                           ; 3 bytes @ 0x3
   220  000063                     	ds	3
   221  000066                     _main$1040:
   222                           	opt stack 0
   223                           
   224                           ; 3 bytes @ 0x6
   225  000066                     	ds	3
   226  000069                     main@count:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x9
   230  000069                     	ds	2
   231  00006B                     main@PID:
   232                           	opt stack 0
   233                           
   234                           ; 45 bytes @ 0xB
   235  00006B                     	ds	45
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           postdec1	equ	0xFE5
   243                           fsr1l	equ	0xFE1
   244                           
   245                           	psect	cstackCOMRAM
   246  000001                     __pcstackCOMRAM:
   247                           	opt stack 0
   248  000001                     ?___ftpack:
   249                           	opt stack 0
   250  000001                     ?___fttol:
   251                           	opt stack 0
   252  000001                     ___ftpack@arg:
   253                           	opt stack 0
   254  000001                     ___ftge@ff1:
   255                           	opt stack 0
   256  000001                     ___fttol@f1:
   257                           	opt stack 0
   258                           
   259                           ; 3 bytes @ 0x0
   260  000001                     	ds	3
   261  000004                     ___ftpack@exp:
   262                           	opt stack 0
   263  000004                     ___ftge@ff2:
   264                           	opt stack 0
   265                           
   266                           ; 3 bytes @ 0x3
   267  000004                     	ds	1
   268  000005                     ??___fttol:
   269  000005                     ___ftpack@sign:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x4
   273  000005                     	ds	1
   274  000006                     ??___ftpack:
   275                           
   276                           ; 1 bytes @ 0x5
   277  000006                     	ds	1
   278  000007                     ??___ftge:
   279                           
   280                           ; 1 bytes @ 0x6
   281  000007                     	ds	2
   282  000009                     ?___ftmul:
   283                           	opt stack 0
   284  000009                     ?___awtoft:
   285                           	opt stack 0
   286  000009                     ?___lbtoft:
   287                           	opt stack 0
   288  000009                     ?___lltoft:
   289                           	opt stack 0
   290  000009                     ___awtoft@c:
   291                           	opt stack 0
   292  000009                     ___ftmul@f1:
   293                           	opt stack 0
   294  000009                     ___lltoft@c:
   295                           	opt stack 0
   296                           
   297                           ; 4 bytes @ 0x8
   298  000009                     	ds	1
   299  00000A                     ___fttol@sign1:
   300                           	opt stack 0
   301  00000A                     PID_Initialize@pid:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x9
   305  00000A                     	ds	1
   306  00000B                     ___fttol@lval:
   307                           	opt stack 0
   308                           
   309                           ; 4 bytes @ 0xA
   310  00000B                     	ds	1
   311  00000C                     ___awtoft@sign:
   312                           	opt stack 0
   313  00000C                     ___lbtoft@c:
   314                           	opt stack 0
   315  00000C                     PID_SetMode@pid:
   316                           	opt stack 0
   317  00000C                     ___ftmul@f2:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0xB
   321  00000C                     	ds	1
   322  00000D                     ??___lltoft:
   323  00000D                     PID_SetOutputLimits@pid:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0xC
   327  00000D                     	ds	1
   328  00000E                     PID_SetMode@Mode:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0xD
   332  00000E                     	ds	1
   333  00000F                     ??___ftmul:
   334  00000F                     ___fttol@exp1:
   335                           	opt stack 0
   336  00000F                     PID_SetOutputLimits@Min:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0xE
   340  00000F                     	ds	1
   341  000010                     PID_SetMode@newAuto:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xF
   345  000010                     	ds	1
   346  000011                     ___lltoft@exp:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x10
   350  000011                     	ds	1
   351  000012                     ?___ftdiv:
   352                           	opt stack 0
   353  000012                     ___ftmul@exp:
   354                           	opt stack 0
   355  000012                     PID_SetOutputLimits@Max:
   356                           	opt stack 0
   357  000012                     ___ftdiv@f1:
   358                           	opt stack 0
   359                           
   360                           ; 3 bytes @ 0x11
   361  000012                     	ds	1
   362  000013                     ___ftmul@f3_as_product:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0x12
   366  000013                     	ds	2
   367  000015                     ___ftdiv@f2:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x14
   371  000015                     	ds	1
   372  000016                     ___ftmul@cntr:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x15
   376  000016                     	ds	1
   377  000017                     ___ftmul@sign:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x16
   381  000017                     	ds	1
   382  000018                     ??___ftdiv:
   383  000018                     ?___ftadd:
   384                           	opt stack 0
   385  000018                     ___ftadd@f1:
   386                           	opt stack 0
   387                           
   388                           ; 3 bytes @ 0x17
   389  000018                     	ds	3
   390  00001B                     ___ftdiv@cntr:
   391                           	opt stack 0
   392  00001B                     ___ftadd@f2:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0x1A
   396  00001B                     	ds	1
   397  00001C                     ___ftdiv@f3:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0x1B
   401  00001C                     	ds	2
   402  00001E                     ??___ftadd:
   403                           
   404                           ; 1 bytes @ 0x1D
   405  00001E                     	ds	1
   406  00001F                     ___ftdiv@exp:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x1E
   410  00001F                     	ds	1
   411  000020                     ___ftdiv@sign:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x1F
   415  000020                     	ds	1
   416  000021                     ___ftadd@sign:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x20
   420  000021                     	ds	1
   421  000022                     ___ftadd@exp2:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x21
   425  000022                     	ds	1
   426  000023                     ___ftadd@exp1:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x22
   430  000023                     	ds	1
   431  000024                     ?___ftneg:
   432                           	opt stack 0
   433  000024                     ___ftneg@f1:
   434                           	opt stack 0
   435                           
   436                           ; 3 bytes @ 0x23
   437  000024                     	ds	3
   438  000027                     PID_Compute@pid:
   439                           	opt stack 0
   440  000027                     PID_SetTunings@pid:
   441                           	opt stack 0
   442  000027                     PID_SetControllerDirection@pid:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x26
   446  000027                     	ds	2
   447  000029                     PID_SetControllerDirection@Direction:
   448                           	opt stack 0
   449  000029                     PID_Compute@dInput:
   450                           	opt stack 0
   451  000029                     PID_SetTunings@Kp:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x28
   455  000029                     	ds	1
   456  00002A                     
   457                           ; 1 bytes @ 0x29
   458  00002A                     	ds	2
   459  00002C                     PID_SetTunings@Ki:
   460                           	opt stack 0
   461  00002C                     _PID_Compute$1041:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x2B
   465  00002C                     	ds	3
   466  00002F                     PID_Compute@error:
   467                           	opt stack 0
   468  00002F                     PID_SetTunings@Kd:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x2E
   472  00002F                     	ds	3
   473  000032                     PID_Compute@input:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0x31
   477  000032                     	ds	1
   478  000033                     PID_SetTunings@SampleTimeInSec:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x32
   482  000033                     	ds	2
   483  000035                     PID_Compute@output:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x34
   487  000035                     	ds	1
   488  000036                     PID_init@pid:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x35
   492  000036                     	ds	2
   493  000038                     PID_init@Kp:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x37
   497  000038                     	ds	3
   498  00003B                     PID_init@Ki:
   499                           	opt stack 0
   500                           
   501                           ; 3 bytes @ 0x3A
   502  00003B                     	ds	3
   503  00003E                     PID_init@Kd:
   504                           	opt stack 0
   505                           
   506                           ; 3 bytes @ 0x3D
   507  00003E                     	ds	3
   508  000041                     PID_init@ControllerDirection:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x40
   512  000041                     	ds	1
   513  000042                     tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           
   522                           ; 1 bytes @ 0x41
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 52 in file "newmain.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  PID            45   11[BANK0 ] struct .
   533 ;;  err             3    0[BANK0 ] float 
   534 ;;  count           2    9[BANK0 ] int 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   544 ;;      Params:         0       0       0       0       0       0       0       0       0
   545 ;;      Locals:         0      56       0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0
   547 ;;      Totals:         0      56       0       0       0       0       0       0       0
   548 ;;Total ram usage:       56 bytes
   549 ;; Hardware stack levels required when called:    4
   550 ;; This function calls:
   551 ;;		_PID_Compute
   552 ;;		_PID_SetMode
   553 ;;		_PID_SetOutputLimits
   554 ;;		_PID_init
   555 ;;		___awtoft
   556 ;;		___ftadd
   557 ;;		___ftdiv
   558 ;;		___ftge
   559 ;;		___ftneg
   560 ;;		___fttol
   561 ;;		___lbtoft
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text0
   568  007BD6                     __ptext0:
   569                           	opt stack 0
   570  007BD6                     _main:
   571                           	opt stack 27
   572                           
   573                           ;newmain.c: 53: TRISB = 0xFF;
   574                           
   575                           ;incstack = 0
   576  007BD6  6893               	setf	3987,c	;volatile
   577                           
   578                           ;newmain.c: 54: TRISD = 0x00;
   579  007BD8  0E00               	movlw	0
   580  007BDA  6E95               	movwf	3989,c	;volatile
   581                           
   582                           ;newmain.c: 55: TRISC = 0b01000000;
   583  007BDC  0E40               	movlw	64
   584  007BDE  6E94               	movwf	3988,c	;volatile
   585                           
   586                           ;newmain.c: 56: TMR1CS = 0;
   587  007BE0  92CD               	bcf	4045,1,c	;volatile
   588                           
   589                           ;newmain.c: 57: TMR3CS = 0;
   590  007BE2  92B1               	bcf	4017,1,c	;volatile
   591                           
   592                           ;newmain.c: 58: PORTCbits.RC0 = 0;
   593  007BE4  9082               	bcf	3970,0,c	;volatile
   594                           
   595                           ;newmain.c: 59: PORTCbits.RC1 = 0;
   596  007BE6  9282               	bcf	3970,1,c	;volatile
   597                           
   598                           ;newmain.c: 60: PORTCbits.RC2 = 1;
   599  007BE8  8482               	bsf	3970,2,c	;volatile
   600                           
   601                           ;newmain.c: 61: PORTCbits.RC7 = 0;
   602  007BEA  9E82               	bcf	3970,7,c	;volatile
   603                           
   604                           ;newmain.c: 62: int count = 0;
   605  007BEC  0E00               	movlw	0
   606  007BEE  0100               	movlb	0	; () banked
   607  007BF0  6F6A               	movwf	(main@count+1)& (0+255),b
   608  007BF2  0E00               	movlw	0
   609  007BF4  6F69               	movwf	main@count& (0+255),b
   610                           
   611                           ;newmain.c: 63: float err;
   612                           ;newmain.c: 64: while (count<1000){
   613  007BF6  D0BE               	goto	l1883
   614  007BF8                     l1817:
   615                           
   616                           ; BSR set to: 0
   617                           ;newmain.c: 65: count = count+1;
   618  007BF8  0E01               	movlw	1
   619  007BFA  0100               	movlb	0	; () banked
   620  007BFC  2569               	addwf	main@count& (0+255),w,b
   621  007BFE  0100               	movlb	0	; () banked
   622  007C00  6F69               	movwf	main@count& (0+255),b
   623  007C02  0E00               	movlw	0
   624  007C04  0100               	movlb	0	; () banked
   625  007C06  216A               	addwfc	(main@count+1)& (0+255),w,b
   626  007C08  0100               	movlb	0	; () banked
   627  007C0A  6F6A               	movwf	(main@count+1)& (0+255),b
   628                           
   629                           ; BSR set to: 0
   630                           ;newmain.c: 66: PORTCbits.RC0 = 0;
   631  007C0C  9082               	bcf	3970,0,c	;volatile
   632                           
   633                           ; BSR set to: 0
   634                           ;newmain.c: 67: PORTCbits.RC1 = 0;
   635  007C0E  9282               	bcf	3970,1,c	;volatile
   636                           
   637                           ; BSR set to: 0
   638                           ;newmain.c: 69: PORTCbits.RC2 = 1;
   639  007C10  8482               	bsf	3970,2,c	;volatile
   640                           
   641                           ; BSR set to: 0
   642                           ;newmain.c: 70: _delay((unsigned long)((5)*(32000000/4000000.0)));
   643  007C12  0E0D               	movlw	13
   644  007C14                     u1757:
   645  007C14  2EE8               	decfsz	wreg,f,c
   646  007C16  D7FE               	bra	u1757
   647  007C18  F000               	nop	
   648                           
   649                           ;newmain.c: 71: PORTCbits.RC2 = 0;
   650  007C1A  9482               	bcf	3970,2,c	;volatile
   651  007C1C                     l55:
   652  007C1C  BC82               	btfsc	3970,6,c	;volatile
   653  007C1E  D7FE               	goto	l55
   654                           
   655                           ;newmain.c: 74: A = PORTB;
   656  007C20  5081               	movf	3969,w,c	;volatile
   657  007C22  ECBB  F035         	call	___lbtoft
   658  007C26  C009  F0A1         	movff	?___lbtoft,_A
   659  007C2A  C00A  F0A2         	movff	?___lbtoft+1,_A+1
   660  007C2E  C00B  F0A3         	movff	?___lbtoft+2,_A+2
   661                           
   662                           ;newmain.c: 76: _delay((unsigned long)((40)*(32000000/4000000.0)));
   663  007C32  0E6A               	movlw	106
   664  007C34                     u1767:
   665  007C34  2EE8               	decfsz	wreg,f,c
   666  007C36  D7FE               	bra	u1767
   667  007C38  D000               	nop2	
   668                           
   669                           ;newmain.c: 78: PORTCbits.RC0 = 1;
   670  007C3A  8082               	bsf	3970,0,c	;volatile
   671                           
   672                           ;newmain.c: 79: PORTCbits.RC1 = 0;
   673  007C3C  9282               	bcf	3970,1,c	;volatile
   674                           
   675                           ;newmain.c: 81: PORTCbits.RC2 = 1;
   676  007C3E  8482               	bsf	3970,2,c	;volatile
   677                           
   678                           ;newmain.c: 82: _delay((unsigned long)((5)*(32000000/4000000.0)));
   679  007C40  0E0D               	movlw	13
   680  007C42                     u1777:
   681  007C42  2EE8               	decfsz	wreg,f,c
   682  007C44  D7FE               	bra	u1777
   683  007C46  F000               	nop	
   684                           
   685                           ;newmain.c: 83: PORTCbits.RC2 = 0;
   686  007C48  9482               	bcf	3970,2,c	;volatile
   687  007C4A                     l58:
   688  007C4A  BC82               	btfsc	3970,6,c	;volatile
   689  007C4C  D7FE               	goto	l58
   690                           
   691                           ;newmain.c: 86: B = PORTB;
   692  007C4E  5081               	movf	3969,w,c	;volatile
   693  007C50  ECBB  F035         	call	___lbtoft
   694  007C54  C009  F09E         	movff	?___lbtoft,_B
   695  007C58  C00A  F09F         	movff	?___lbtoft+1,_B+1
   696  007C5C  C00B  F0A0         	movff	?___lbtoft+2,_B+2
   697                           
   698                           ;newmain.c: 88: _delay((unsigned long)((40)*(32000000/4000000.0)));
   699  007C60  0E6A               	movlw	106
   700  007C62                     u1787:
   701  007C62  2EE8               	decfsz	wreg,f,c
   702  007C64  D7FE               	bra	u1787
   703  007C66  D000               	nop2	
   704                           
   705                           ;newmain.c: 90: PORTCbits.RC0 = 0;
   706  007C68  9082               	bcf	3970,0,c	;volatile
   707                           
   708                           ;newmain.c: 91: PORTCbits.RC1 = 1;
   709  007C6A  8282               	bsf	3970,1,c	;volatile
   710                           
   711                           ;newmain.c: 93: PORTCbits.RC2 = 1;
   712  007C6C  8482               	bsf	3970,2,c	;volatile
   713                           
   714                           ;newmain.c: 94: _delay((unsigned long)((5)*(32000000/4000000.0)));
   715  007C6E  0E0D               	movlw	13
   716  007C70                     u1797:
   717  007C70  2EE8               	decfsz	wreg,f,c
   718  007C72  D7FE               	bra	u1797
   719  007C74  F000               	nop	
   720                           
   721                           ;newmain.c: 95: PORTCbits.RC2 = 0;
   722  007C76  9482               	bcf	3970,2,c	;volatile
   723  007C78                     l61:
   724  007C78  BC82               	btfsc	3970,6,c	;volatile
   725  007C7A  D7FE               	goto	l61
   726                           
   727                           ;newmain.c: 98: C = PORTB;
   728  007C7C  5081               	movf	3969,w,c	;volatile
   729  007C7E  ECBB  F035         	call	___lbtoft
   730  007C82  C009  F09B         	movff	?___lbtoft,_C
   731  007C86  C00A  F09C         	movff	?___lbtoft+1,_C+1
   732  007C8A  C00B  F09D         	movff	?___lbtoft+2,_C+2
   733                           
   734                           ;newmain.c: 100: _delay((unsigned long)((40)*(32000000/4000000.0)));
   735  007C8E  0E6A               	movlw	106
   736  007C90                     u1807:
   737  007C90  2EE8               	decfsz	wreg,f,c
   738  007C92  D7FE               	bra	u1807
   739  007C94  D000               	nop2	
   740                           
   741                           ;newmain.c: 102: PORTCbits.RC0 = 1;
   742  007C96  8082               	bsf	3970,0,c	;volatile
   743                           
   744                           ;newmain.c: 103: PORTCbits.RC1 = 1;
   745  007C98  8282               	bsf	3970,1,c	;volatile
   746                           
   747                           ;newmain.c: 105: PORTCbits.RC2 = 1;
   748  007C9A  8482               	bsf	3970,2,c	;volatile
   749                           
   750                           ;newmain.c: 106: _delay((unsigned long)((5)*(32000000/4000000.0)));
   751  007C9C  0E0D               	movlw	13
   752  007C9E                     u1817:
   753  007C9E  2EE8               	decfsz	wreg,f,c
   754  007CA0  D7FE               	bra	u1817
   755  007CA2  F000               	nop	
   756                           
   757                           ;newmain.c: 107: PORTCbits.RC2 = 0;
   758  007CA4  9482               	bcf	3970,2,c	;volatile
   759  007CA6                     l64:
   760  007CA6  BC82               	btfsc	3970,6,c	;volatile
   761  007CA8  D7FE               	goto	l64
   762                           
   763                           ;newmain.c: 110: D = PORTB;
   764  007CAA  5081               	movf	3969,w,c	;volatile
   765  007CAC  ECBB  F035         	call	___lbtoft
   766  007CB0  C009  F098         	movff	?___lbtoft,_D
   767  007CB4  C00A  F099         	movff	?___lbtoft+1,_D+1
   768  007CB8  C00B  F09A         	movff	?___lbtoft+2,_D+2
   769                           
   770                           ;newmain.c: 112: _delay((unsigned long)((40)*(32000000/4000000.0)));
   771  007CBC  0E6A               	movlw	106
   772  007CBE                     u1827:
   773  007CBE  2EE8               	decfsz	wreg,f,c
   774  007CC0  D7FE               	bra	u1827
   775  007CC2  D000               	nop2	
   776                           
   777                           ;newmain.c: 113: err = (A+B)-(C+D);
   778  007CC4  C098  F01B         	movff	_D,___ftadd@f2
   779  007CC8  C099  F01C         	movff	_D+1,___ftadd@f2+1
   780  007CCC  C09A  F01D         	movff	_D+2,___ftadd@f2+2
   781  007CD0  C09B  F018         	movff	_C,___ftadd@f1
   782  007CD4  C09C  F019         	movff	_C+1,___ftadd@f1+1
   783  007CD8  C09D  F01A         	movff	_C+2,___ftadd@f1+2
   784  007CDC  ECC9  F039         	call	___ftadd	;wreg free
   785  007CE0  C018  F024         	movff	?___ftadd,___ftneg@f1
   786  007CE4  C019  F025         	movff	?___ftadd+1,___ftneg@f1+1
   787  007CE8  C01A  F026         	movff	?___ftadd+2,___ftneg@f1+2
   788  007CEC  ECA9  F035         	call	___ftneg	;wreg free
   789  007CF0  C024  F063         	movff	?___ftneg,_main$1039
   790  007CF4  C025  F064         	movff	?___ftneg+1,_main$1039+1
   791  007CF8  C026  F065         	movff	?___ftneg+2,_main$1039+2
   792                           
   793                           ;newmain.c: 113: err = (A+B)-(C+D);
   794  007CFC  C0A1  F01B         	movff	_A,___ftadd@f2
   795  007D00  C0A2  F01C         	movff	_A+1,___ftadd@f2+1
   796  007D04  C0A3  F01D         	movff	_A+2,___ftadd@f2+2
   797  007D08  C063  F018         	movff	_main$1039,___ftadd@f1
   798  007D0C  C064  F019         	movff	_main$1039+1,___ftadd@f1+1
   799  007D10  C065  F01A         	movff	_main$1039+2,___ftadd@f1+2
   800  007D14  ECC9  F039         	call	___ftadd	;wreg free
   801  007D18  C018  F066         	movff	?___ftadd,_main$1040
   802  007D1C  C019  F067         	movff	?___ftadd+1,_main$1040+1
   803  007D20  C01A  F068         	movff	?___ftadd+2,_main$1040+2
   804                           
   805                           ;newmain.c: 113: err = (A+B)-(C+D);
   806  007D24  C066  F018         	movff	_main$1040,___ftadd@f1
   807  007D28  C067  F019         	movff	_main$1040+1,___ftadd@f1+1
   808  007D2C  C068  F01A         	movff	_main$1040+2,___ftadd@f1+2
   809  007D30  C09E  F01B         	movff	_B,___ftadd@f2
   810  007D34  C09F  F01C         	movff	_B+1,___ftadd@f2+1
   811  007D38  C0A0  F01D         	movff	_B+2,___ftadd@f2+2
   812  007D3C  ECC9  F039         	call	___ftadd	;wreg free
   813  007D40  C018  F060         	movff	?___ftadd,main@err
   814  007D44  C019  F061         	movff	?___ftadd+1,main@err+1
   815  007D48  C01A  F062         	movff	?___ftadd+2,main@err+2
   816                           
   817                           ;newmain.c: 114: Setpoint = Setpoint+err;
   818  007D4C  C0A7  F018         	movff	_Setpoint,___ftadd@f1
   819  007D50  C0A8  F019         	movff	_Setpoint+1,___ftadd@f1+1
   820  007D54  C0A9  F01A         	movff	_Setpoint+2,___ftadd@f1+2
   821  007D58  C060  F01B         	movff	main@err,___ftadd@f2
   822  007D5C  C061  F01C         	movff	main@err+1,___ftadd@f2+1
   823  007D60  C062  F01D         	movff	main@err+2,___ftadd@f2+2
   824  007D64  ECC9  F039         	call	___ftadd	;wreg free
   825  007D68  C018  F0A7         	movff	?___ftadd,_Setpoint
   826  007D6C  C019  F0A8         	movff	?___ftadd+1,_Setpoint+1
   827  007D70  C01A  F0A9         	movff	?___ftadd+2,_Setpoint+2
   828  007D74                     l1883:
   829  007D74  0100               	movlb	0	; () banked
   830  007D76  BF6A               	btfsc	(main@count+1)& (0+255),7,b
   831  007D78  D73F               	goto	l1817
   832  007D7A  0EE8               	movlw	232
   833  007D7C  0100               	movlb	0	; () banked
   834  007D7E  5D69               	subwf	main@count& (0+255),w,b
   835  007D80  0E03               	movlw	3
   836  007D82  0100               	movlb	0	; () banked
   837  007D84  596A               	subwfb	(main@count+1)& (0+255),w,b
   838  007D86  A0D8               	btfss	status,0,c
   839  007D88  D737               	goto	l1817
   840                           
   841                           ; BSR set to: 0
   842                           ;newmain.c: 115: }
   843                           ;newmain.c: 116: Setpoint = Setpoint/1000;
   844                           
   845                           ; BSR set to: 0
   846  007D8A  C0A7  F012         	movff	_Setpoint,___ftdiv@f1
   847  007D8E  C0A8  F013         	movff	_Setpoint+1,___ftdiv@f1+1
   848  007D92  C0A9  F014         	movff	_Setpoint+2,___ftdiv@f1+2
   849  007D96  0E00               	movlw	0
   850  007D98  6E15               	movwf	___ftdiv@f2,c
   851  007D9A  0E7A               	movlw	122
   852  007D9C  6E16               	movwf	___ftdiv@f2+1,c
   853  007D9E  0E44               	movlw	68
   854  007DA0  6E17               	movwf	___ftdiv@f2+2,c
   855  007DA2  EC5B  F037         	call	___ftdiv	;wreg free
   856  007DA6  C012  F0A7         	movff	?___ftdiv,_Setpoint
   857  007DAA  C013  F0A8         	movff	?___ftdiv+1,_Setpoint+1
   858  007DAE  C014  F0A9         	movff	?___ftdiv+2,_Setpoint+2
   859  007DB2                     l1887:
   860                           
   861                           ;newmain.c: 122: PORTCbits.RC0 = 0;
   862  007DB2  9082               	bcf	3970,0,c	;volatile
   863                           
   864                           ;newmain.c: 123: PORTCbits.RC1 = 0;
   865  007DB4  9282               	bcf	3970,1,c	;volatile
   866                           
   867                           ;newmain.c: 125: PORTCbits.RC2 = 1;
   868  007DB6  8482               	bsf	3970,2,c	;volatile
   869                           
   870                           ;newmain.c: 126: _delay((unsigned long)((5)*(32000000/4000000.0)));
   871  007DB8  0E0D               	movlw	13
   872  007DBA                     u1837:
   873  007DBA  2EE8               	decfsz	wreg,f,c
   874  007DBC  D7FE               	bra	u1837
   875  007DBE  F000               	nop	
   876                           
   877                           ;newmain.c: 127: PORTCbits.RC2 = 0;
   878  007DC0  9482               	bcf	3970,2,c	;volatile
   879  007DC2                     l69:
   880  007DC2  BC82               	btfsc	3970,6,c	;volatile
   881  007DC4  D7FE               	goto	l69
   882                           
   883                           ;newmain.c: 130: A = PORTB;
   884  007DC6  5081               	movf	3969,w,c	;volatile
   885  007DC8  ECBB  F035         	call	___lbtoft
   886  007DCC  C009  F0A1         	movff	?___lbtoft,_A
   887  007DD0  C00A  F0A2         	movff	?___lbtoft+1,_A+1
   888  007DD4  C00B  F0A3         	movff	?___lbtoft+2,_A+2
   889                           
   890                           ;newmain.c: 132: _delay((unsigned long)((40)*(32000000/4000000.0)));
   891  007DD8  0E6A               	movlw	106
   892  007DDA                     u1847:
   893  007DDA  2EE8               	decfsz	wreg,f,c
   894  007DDC  D7FE               	bra	u1847
   895  007DDE  D000               	nop2	
   896                           
   897                           ;newmain.c: 134: PORTCbits.RC0 = 1;
   898  007DE0  8082               	bsf	3970,0,c	;volatile
   899                           
   900                           ;newmain.c: 135: PORTCbits.RC1 = 0;
   901  007DE2  9282               	bcf	3970,1,c	;volatile
   902                           
   903                           ;newmain.c: 137: PORTCbits.RC2 = 1;
   904  007DE4  8482               	bsf	3970,2,c	;volatile
   905                           
   906                           ;newmain.c: 138: _delay((unsigned long)((5)*(32000000/4000000.0)));
   907  007DE6  0E0D               	movlw	13
   908  007DE8                     u1857:
   909  007DE8  2EE8               	decfsz	wreg,f,c
   910  007DEA  D7FE               	bra	u1857
   911  007DEC  F000               	nop	
   912                           
   913                           ;newmain.c: 139: PORTCbits.RC2 = 0;
   914  007DEE  9482               	bcf	3970,2,c	;volatile
   915  007DF0                     l72:
   916  007DF0  BC82               	btfsc	3970,6,c	;volatile
   917  007DF2  D7FE               	goto	l72
   918                           
   919                           ;newmain.c: 142: B = PORTB;
   920  007DF4  5081               	movf	3969,w,c	;volatile
   921  007DF6  ECBB  F035         	call	___lbtoft
   922  007DFA  C009  F09E         	movff	?___lbtoft,_B
   923  007DFE  C00A  F09F         	movff	?___lbtoft+1,_B+1
   924  007E02  C00B  F0A0         	movff	?___lbtoft+2,_B+2
   925                           
   926                           ;newmain.c: 144: _delay((unsigned long)((40)*(32000000/4000000.0)));
   927  007E06  0E6A               	movlw	106
   928  007E08                     u1867:
   929  007E08  2EE8               	decfsz	wreg,f,c
   930  007E0A  D7FE               	bra	u1867
   931  007E0C  D000               	nop2	
   932                           
   933                           ;newmain.c: 146: PORTCbits.RC0 = 0;
   934  007E0E  9082               	bcf	3970,0,c	;volatile
   935                           
   936                           ;newmain.c: 147: PORTCbits.RC1 = 1;
   937  007E10  8282               	bsf	3970,1,c	;volatile
   938                           
   939                           ;newmain.c: 149: PORTCbits.RC2 = 1;
   940  007E12  8482               	bsf	3970,2,c	;volatile
   941                           
   942                           ;newmain.c: 150: _delay((unsigned long)((5)*(32000000/4000000.0)));
   943  007E14  0E0D               	movlw	13
   944  007E16                     u1877:
   945  007E16  2EE8               	decfsz	wreg,f,c
   946  007E18  D7FE               	bra	u1877
   947  007E1A  F000               	nop	
   948                           
   949                           ;newmain.c: 151: PORTCbits.RC2 = 0;
   950  007E1C  9482               	bcf	3970,2,c	;volatile
   951  007E1E                     l75:
   952  007E1E  BC82               	btfsc	3970,6,c	;volatile
   953  007E20  D7FE               	goto	l75
   954                           
   955                           ;newmain.c: 154: C = PORTB;
   956  007E22  5081               	movf	3969,w,c	;volatile
   957  007E24  ECBB  F035         	call	___lbtoft
   958  007E28  C009  F09B         	movff	?___lbtoft,_C
   959  007E2C  C00A  F09C         	movff	?___lbtoft+1,_C+1
   960  007E30  C00B  F09D         	movff	?___lbtoft+2,_C+2
   961                           
   962                           ;newmain.c: 156: _delay((unsigned long)((40)*(32000000/4000000.0)));
   963  007E34  0E6A               	movlw	106
   964  007E36                     u1887:
   965  007E36  2EE8               	decfsz	wreg,f,c
   966  007E38  D7FE               	bra	u1887
   967  007E3A  D000               	nop2	
   968                           
   969                           ;newmain.c: 158: PORTCbits.RC0 = 1;
   970  007E3C  8082               	bsf	3970,0,c	;volatile
   971                           
   972                           ;newmain.c: 159: PORTCbits.RC1 = 1;
   973  007E3E  8282               	bsf	3970,1,c	;volatile
   974                           
   975                           ;newmain.c: 161: PORTCbits.RC2 = 1;
   976  007E40  8482               	bsf	3970,2,c	;volatile
   977                           
   978                           ;newmain.c: 162: _delay((unsigned long)((5)*(32000000/4000000.0)));
   979  007E42  0E0D               	movlw	13
   980  007E44                     u1897:
   981  007E44  2EE8               	decfsz	wreg,f,c
   982  007E46  D7FE               	bra	u1897
   983  007E48  F000               	nop	
   984                           
   985                           ;newmain.c: 163: PORTCbits.RC2 = 0;
   986  007E4A  9482               	bcf	3970,2,c	;volatile
   987  007E4C                     l78:
   988  007E4C  BC82               	btfsc	3970,6,c	;volatile
   989  007E4E  D7FE               	goto	l78
   990                           
   991                           ;newmain.c: 166: D = PORTB;
   992  007E50  5081               	movf	3969,w,c	;volatile
   993  007E52  ECBB  F035         	call	___lbtoft
   994  007E56  C009  F098         	movff	?___lbtoft,_D
   995  007E5A  C00A  F099         	movff	?___lbtoft+1,_D+1
   996  007E5E  C00B  F09A         	movff	?___lbtoft+2,_D+2
   997                           
   998                           ;newmain.c: 168: _delay((unsigned long)((40)*(32000000/4000000.0)));
   999  007E62  0E6A               	movlw	106
  1000  007E64                     u1907:
  1001  007E64  2EE8               	decfsz	wreg,f,c
  1002  007E66  D7FE               	bra	u1907
  1003  007E68  D000               	nop2	
  1004                           
  1005                           ;newmain.c: 172: Input = (A+B)-(C+D);
  1006  007E6A  C098  F01B         	movff	_D,___ftadd@f2
  1007  007E6E  C099  F01C         	movff	_D+1,___ftadd@f2+1
  1008  007E72  C09A  F01D         	movff	_D+2,___ftadd@f2+2
  1009  007E76  C09B  F018         	movff	_C,___ftadd@f1
  1010  007E7A  C09C  F019         	movff	_C+1,___ftadd@f1+1
  1011  007E7E  C09D  F01A         	movff	_C+2,___ftadd@f1+2
  1012  007E82  ECC9  F039         	call	___ftadd	;wreg free
  1013  007E86  C018  F024         	movff	?___ftadd,___ftneg@f1
  1014  007E8A  C019  F025         	movff	?___ftadd+1,___ftneg@f1+1
  1015  007E8E  C01A  F026         	movff	?___ftadd+2,___ftneg@f1+2
  1016  007E92  ECA9  F035         	call	___ftneg	;wreg free
  1017  007E96  C024  F063         	movff	?___ftneg,_main$1039
  1018  007E9A  C025  F064         	movff	?___ftneg+1,_main$1039+1
  1019  007E9E  C026  F065         	movff	?___ftneg+2,_main$1039+2
  1020                           
  1021                           ;newmain.c: 172: Input = (A+B)-(C+D);
  1022  007EA2  C0A1  F01B         	movff	_A,___ftadd@f2
  1023  007EA6  C0A2  F01C         	movff	_A+1,___ftadd@f2+1
  1024  007EAA  C0A3  F01D         	movff	_A+2,___ftadd@f2+2
  1025  007EAE  C063  F018         	movff	_main$1039,___ftadd@f1
  1026  007EB2  C064  F019         	movff	_main$1039+1,___ftadd@f1+1
  1027  007EB6  C065  F01A         	movff	_main$1039+2,___ftadd@f1+2
  1028  007EBA  ECC9  F039         	call	___ftadd	;wreg free
  1029  007EBE  C018  F066         	movff	?___ftadd,_main$1040
  1030  007EC2  C019  F067         	movff	?___ftadd+1,_main$1040+1
  1031  007EC6  C01A  F068         	movff	?___ftadd+2,_main$1040+2
  1032                           
  1033                           ;newmain.c: 172: Input = (A+B)-(C+D);
  1034  007ECA  C066  F018         	movff	_main$1040,___ftadd@f1
  1035  007ECE  C067  F019         	movff	_main$1040+1,___ftadd@f1+1
  1036  007ED2  C068  F01A         	movff	_main$1040+2,___ftadd@f1+2
  1037  007ED6  C09E  F01B         	movff	_B,___ftadd@f2
  1038  007EDA  C09F  F01C         	movff	_B+1,___ftadd@f2+1
  1039  007EDE  C0A0  F01D         	movff	_B+2,___ftadd@f2+2
  1040  007EE2  ECC9  F039         	call	___ftadd	;wreg free
  1041  007EE6  C018  F0A4         	movff	?___ftadd,_Input
  1042  007EEA  C019  F0A5         	movff	?___ftadd+1,_Input+1
  1043  007EEE  C01A  F0A6         	movff	?___ftadd+2,_Input+2
  1044                           
  1045                           ;newmain.c: 173: PidType PID;
  1046                           ;newmain.c: 174: PID_init(&PID, 1, 0, 0, PID_Direction_Reverse);
  1047  007EF2  0E6B               	movlw	low main@PID
  1048  007EF4  6E36               	movwf	PID_init@pid,c
  1049  007EF6  0E00               	movlw	high main@PID
  1050  007EF8  6E37               	movwf	PID_init@pid+1,c
  1051  007EFA  0E00               	movlw	0
  1052  007EFC  6E38               	movwf	PID_init@Kp,c
  1053  007EFE  0E80               	movlw	128
  1054  007F00  6E39               	movwf	PID_init@Kp+1,c
  1055  007F02  0E3F               	movlw	63
  1056  007F04  6E3A               	movwf	PID_init@Kp+2,c
  1057  007F06  0E00               	movlw	0
  1058  007F08  6E3B               	movwf	PID_init@Ki,c
  1059  007F0A  0E00               	movlw	0
  1060  007F0C  6E3C               	movwf	PID_init@Ki+1,c
  1061  007F0E  0E00               	movlw	0
  1062  007F10  6E3D               	movwf	PID_init@Ki+2,c
  1063  007F12  0E00               	movlw	0
  1064  007F14  6E3E               	movwf	PID_init@Kd,c
  1065  007F16  0E00               	movlw	0
  1066  007F18  6E3F               	movwf	PID_init@Kd+1,c
  1067  007F1A  0E00               	movlw	0
  1068  007F1C  6E40               	movwf	PID_init@Kd+2,c
  1069  007F1E  0E01               	movlw	1
  1070  007F20  6E41               	movwf	PID_init@ControllerDirection,c
  1071  007F22  EC44  F039         	call	_PID_init	;wreg free
  1072                           
  1073                           ;newmain.c: 175: PID_SetMode(&PID, PID_Mode_Automatic);
  1074  007F26  0E6B               	movlw	low main@PID
  1075  007F28  6E0C               	movwf	PID_SetMode@pid,c
  1076  007F2A  0E00               	movlw	high main@PID
  1077  007F2C  6E0D               	movwf	PID_SetMode@pid+1,c
  1078  007F2E  0E01               	movlw	1
  1079  007F30  6E0E               	movwf	PID_SetMode@Mode,c
  1080  007F32  EC04  F036         	call	_PID_SetMode	;wreg free
  1081                           
  1082                           ;newmain.c: 176: PID_SetOutputLimits(&PID, PID_Out_Min, PID_Out_Max);
  1083  007F36  0E6B               	movlw	low main@PID
  1084  007F38  6E0D               	movwf	PID_SetOutputLimits@pid,c
  1085  007F3A  0E00               	movlw	high main@PID
  1086  007F3C  6E0E               	movwf	PID_SetOutputLimits@pid+1,c
  1087  007F3E  C0B0  F009         	movff	_PID_Out_Min,___awtoft@c
  1088  007F42  C0B1  F00A         	movff	_PID_Out_Min+1,___awtoft@c+1
  1089  007F46  ECE8  F035         	call	___awtoft	;wreg free
  1090  007F4A  C009  F00F         	movff	?___awtoft,PID_SetOutputLimits@Min
  1091  007F4E  C00A  F010         	movff	?___awtoft+1,PID_SetOutputLimits@Min+1
  1092  007F52  C00B  F011         	movff	?___awtoft+2,PID_SetOutputLimits@Min+2
  1093  007F56  C0AE  F009         	movff	_PID_Out_Max,___awtoft@c
  1094  007F5A  C0AF  F00A         	movff	_PID_Out_Max+1,___awtoft@c+1
  1095  007F5E  ECE8  F035         	call	___awtoft	;wreg free
  1096  007F62  C009  F012         	movff	?___awtoft,PID_SetOutputLimits@Max
  1097  007F66  C00A  F013         	movff	?___awtoft+1,PID_SetOutputLimits@Max+1
  1098  007F6A  C00B  F014         	movff	?___awtoft+2,PID_SetOutputLimits@Max+2
  1099  007F6E  EC9F  F03A         	call	_PID_SetOutputLimits	;wreg free
  1100                           
  1101                           ;newmain.c: 177: PID.mySetpoint = Setpoint;
  1102  007F72  C0A7  F084         	movff	_Setpoint,main@PID+25
  1103  007F76  C0A8  F085         	movff	_Setpoint+1,main@PID+26
  1104  007F7A  C0A9  F086         	movff	_Setpoint+2,main@PID+27
  1105                           
  1106                           ;newmain.c: 178: PID.myInput = Input;
  1107  007F7E  C0A4  F07E         	movff	_Input,main@PID+19
  1108  007F82  C0A5  F07F         	movff	_Input+1,main@PID+20
  1109  007F86  C0A6  F080         	movff	_Input+2,main@PID+21
  1110                           
  1111                           ;newmain.c: 179: PID_Compute(&PID);
  1112  007F8A  0E6B               	movlw	low main@PID
  1113  007F8C  6E27               	movwf	PID_Compute@pid,c
  1114  007F8E  0E00               	movlw	high main@PID
  1115  007F90  6E28               	movwf	PID_Compute@pid+1,c
  1116  007F92  EC5F  F03C         	call	_PID_Compute	;wreg free
  1117                           
  1118                           ;newmain.c: 180: Output = PID.myOutput;
  1119  007F96  C081  F0AA         	movff	main@PID+22,_Output
  1120  007F9A  C082  F0AB         	movff	main@PID+23,_Output+1
  1121  007F9E  C083  F0AC         	movff	main@PID+24,_Output+2
  1122                           
  1123                           ;newmain.c: 182: if(Output>0){
  1124  007FA2  0E00               	movlw	0
  1125  007FA4  6E01               	movwf	___ftge@ff1,c
  1126  007FA6  0E00               	movlw	0
  1127  007FA8  6E02               	movwf	___ftge@ff1+1,c
  1128  007FAA  0E00               	movlw	0
  1129  007FAC  6E03               	movwf	___ftge@ff1+2,c
  1130  007FAE  C0AA  F004         	movff	_Output,___ftge@ff2
  1131  007FB2  C0AB  F005         	movff	_Output+1,___ftge@ff2+1
  1132  007FB6  C0AC  F006         	movff	_Output+2,___ftge@ff2+2
  1133  007FBA  EC52  F036         	call	___ftge	;wreg free
  1134  007FBE  B0D8               	btfsc	status,0,c
  1135  007FC0  D002               	goto	l1967
  1136                           
  1137                           ;newmain.c: 184: PORTCbits.RC7 = 0;
  1138  007FC2  9E82               	bcf	3970,7,c	;volatile
  1139                           
  1140                           ;newmain.c: 185: }
  1141  007FC4  D00F               	goto	l82
  1142  007FC6                     l1967:
  1143                           
  1144                           ;newmain.c: 186: else{
  1145                           ;newmain.c: 187: Output = -Output;
  1146  007FC6  C0AA  F024         	movff	_Output,___ftneg@f1
  1147  007FCA  C0AB  F025         	movff	_Output+1,___ftneg@f1+1
  1148  007FCE  C0AC  F026         	movff	_Output+2,___ftneg@f1+2
  1149  007FD2  ECA9  F035         	call	___ftneg	;wreg free
  1150  007FD6  C024  F0AA         	movff	?___ftneg,_Output
  1151  007FDA  C025  F0AB         	movff	?___ftneg+1,_Output+1
  1152  007FDE  C026  F0AC         	movff	?___ftneg+2,_Output+2
  1153                           
  1154                           ;newmain.c: 188: PORTCbits.RC7 = 1;
  1155  007FE2  8E82               	bsf	3970,7,c	;volatile
  1156  007FE4                     l82:
  1157                           
  1158                           ;newmain.c: 189: }
  1159                           ;newmain.c: 190: output = Output;
  1160  007FE4  C0AA  F001         	movff	_Output,___fttol@f1
  1161  007FE8  C0AB  F002         	movff	_Output+1,___fttol@f1+1
  1162  007FEC  C0AC  F003         	movff	_Output+2,___fttol@f1+2
  1163  007FF0  EC48  F038         	call	___fttol	;wreg free
  1164  007FF4  5001               	movf	?___fttol,w,c
  1165  007FF6  0100               	movlb	0	; () banked
  1166  007FF8  6FAD               	movwf	_output& (0+255),b
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;newmain.c: 191: PORTD = output;
  1170  007FFA  C0AD  FF83         	movff	_output,3971	;volatile
  1171                           
  1172                           ; BSR set to: 0
  1173  007FFE  D6D9               	goto	l1887
  1174  008000                     __end_of_main:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function ___lbtoft *****************
  1187 ;; Defined at:
  1188 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  c               1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  c               1   11[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  3    8[COMRAM] float 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         3       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        4 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    1
  1209 ;; This function calls:
  1210 ;;		___ftpack
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text1
  1217  006B76                     __ptext1:
  1218                           	opt stack 0
  1219  006B76                     ___lbtoft:
  1220                           	opt stack 29
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;incstack = 0
  1224                           ;___lbtoft@c stored from wreg
  1225  006B76  6E0C               	movwf	___lbtoft@c,c
  1226  006B78  500C               	movf	___lbtoft@c,w,c
  1227  006B7A  6E01               	movwf	___ftpack@arg,c
  1228  006B7C  6A02               	clrf	___ftpack@arg+1,c
  1229  006B7E  6A03               	clrf	___ftpack@arg+2,c
  1230  006B80  0E8E               	movlw	142
  1231  006B82  6E04               	movwf	___ftpack@exp,c
  1232  006B84  0E00               	movlw	0
  1233  006B86  6E05               	movwf	___ftpack@sign,c
  1234  006B88  EC9A  F036         	call	___ftpack	;wreg free
  1235  006B8C  C001  F009         	movff	?___ftpack,?___lbtoft
  1236  006B90  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1237  006B94  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1238  006B98  0012               	return	
  1239  006B9A                     __end_of___lbtoft:
  1240                           	opt stack 0
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1l	equ	0xFE1
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function ___fttol *****************
  1252 ;; Defined at:
  1253 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  f1              3    0[COMRAM] float 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  lval            4   10[COMRAM] unsigned long 
  1258 ;;  exp1            1   14[COMRAM] unsigned char 
  1259 ;;  sign1           1    9[COMRAM] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  4    0[COMRAM] long 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1269 ;;      Params:         4       0       0       0       0       0       0       0       0
  1270 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1271 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1272 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1273 ;;Total ram usage:       15 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text2
  1283  007090                     __ptext2:
  1284                           	opt stack 0
  1285  007090                     ___fttol:
  1286                           	opt stack 30
  1287                           
  1288                           ;incstack = 0
  1289  007090  C003  F005         	movff	___fttol@f1+2,??___fttol
  1290  007094  6A06               	clrf	(??___fttol+1)& (0+255),c
  1291  007096  6A07               	clrf	(??___fttol+2)& (0+255),c
  1292  007098  3402               	rlcf	___fttol@f1+1,w,c
  1293  00709A  3605               	rlcf	??___fttol& (0+255),f,c
  1294  00709C  E301               	bnc	u1561
  1295  00709E  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1296  0070A0                     u1561:
  1297  0070A0  5005               	movf	??___fttol,w,c
  1298  0070A2  6E0F               	movwf	___fttol@exp1,c
  1299  0070A4  500F               	movf	___fttol@exp1,w,c
  1300  0070A6  A4D8               	btfss	status,2,c
  1301  0070A8  D009               	goto	l1757
  1302  0070AA  0E00               	movlw	0
  1303  0070AC  6E01               	movwf	?___fttol,c
  1304  0070AE  0E00               	movlw	0
  1305  0070B0  6E02               	movwf	?___fttol+1,c
  1306  0070B2  0E00               	movlw	0
  1307  0070B4  6E03               	movwf	?___fttol+2,c
  1308  0070B6  0E00               	movlw	0
  1309  0070B8  6E04               	movwf	?___fttol+3,c
  1310  0070BA  0012               	return	
  1311  0070BC                     l1757:
  1312  0070BC  0E17               	movlw	23
  1313  0070BE  6E05               	movwf	??___fttol& (0+255),c
  1314  0070C0  C001  F006         	movff	___fttol@f1,??___fttol+1
  1315  0070C4  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1316  0070C8  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1317  0070CC  2805               	incf	??___fttol,w,c
  1318  0070CE  6E09               	movwf	(??___fttol+4)& (0+255),c
  1319  0070D0  D004               	goto	u1580
  1320  0070D2                     u1585:
  1321  0070D2  90D8               	bcf	status,0,c
  1322  0070D4  3208               	rrcf	??___fttol+3,f,c
  1323  0070D6  3207               	rrcf	??___fttol+2,f,c
  1324  0070D8  3206               	rrcf	??___fttol+1,f,c
  1325  0070DA                     u1580:
  1326  0070DA  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1327  0070DC  D7FA               	goto	u1585
  1328  0070DE  5006               	movf	??___fttol+1,w,c
  1329  0070E0  6E0A               	movwf	___fttol@sign1,c
  1330  0070E2  8E02               	bsf	___fttol@f1+1,7,c
  1331  0070E4  0EFF               	movlw	255
  1332  0070E6  1601               	andwf	___fttol@f1,f,c
  1333  0070E8  0EFF               	movlw	255
  1334  0070EA  1602               	andwf	___fttol@f1+1,f,c
  1335  0070EC  0E00               	movlw	0
  1336  0070EE  1603               	andwf	___fttol@f1+2,f,c
  1337  0070F0  5001               	movf	___fttol@f1,w,c
  1338  0070F2  6E0B               	movwf	___fttol@lval,c
  1339  0070F4  5002               	movf	___fttol@f1+1,w,c
  1340  0070F6  6E0C               	movwf	___fttol@lval+1,c
  1341  0070F8  5003               	movf	___fttol@f1+2,w,c
  1342  0070FA  6E0D               	movwf	___fttol@lval+2,c
  1343  0070FC  6A0E               	clrf	___fttol@lval+3,c
  1344  0070FE  0E8E               	movlw	142
  1345  007100  5E0F               	subwf	___fttol@exp1,f,c
  1346  007102  AE0F               	btfss	___fttol@exp1,7,c
  1347  007104  D016               	goto	l1779
  1348  007106  500F               	movf	___fttol@exp1,w,c
  1349  007108  0A80               	xorlw	128
  1350  00710A  0F8F               	addlw	143
  1351  00710C  B0D8               	btfsc	status,0,c
  1352  00710E  D009               	goto	l1775
  1353  007110  0E00               	movlw	0
  1354  007112  6E01               	movwf	?___fttol,c
  1355  007114  0E00               	movlw	0
  1356  007116  6E02               	movwf	?___fttol+1,c
  1357  007118  0E00               	movlw	0
  1358  00711A  6E03               	movwf	?___fttol+2,c
  1359  00711C  0E00               	movlw	0
  1360  00711E  6E04               	movwf	?___fttol+3,c
  1361  007120  0012               	return	
  1362  007122                     l1775:
  1363  007122  90D8               	bcf	status,0,c
  1364  007124  320E               	rrcf	___fttol@lval+3,f,c
  1365  007126  320D               	rrcf	___fttol@lval+2,f,c
  1366  007128  320C               	rrcf	___fttol@lval+1,f,c
  1367  00712A  320B               	rrcf	___fttol@lval,f,c
  1368  00712C  3E0F               	incfsz	___fttol@exp1,f,c
  1369  00712E  D7F9               	goto	l1775
  1370  007130  D015               	goto	l1789
  1371  007132                     l1779:
  1372  007132  0E17               	movlw	23
  1373  007134  640F               	cpfsgt	___fttol@exp1,c
  1374  007136  D00F               	goto	l1787
  1375  007138  0E00               	movlw	0
  1376  00713A  6E01               	movwf	?___fttol,c
  1377  00713C  0E00               	movlw	0
  1378  00713E  6E02               	movwf	?___fttol+1,c
  1379  007140  0E00               	movlw	0
  1380  007142  6E03               	movwf	?___fttol+2,c
  1381  007144  0E00               	movlw	0
  1382  007146  6E04               	movwf	?___fttol+3,c
  1383  007148  0012               	return	
  1384  00714A                     l1785:
  1385  00714A  90D8               	bcf	status,0,c
  1386  00714C  360B               	rlcf	___fttol@lval,f,c
  1387  00714E  360C               	rlcf	___fttol@lval+1,f,c
  1388  007150  360D               	rlcf	___fttol@lval+2,f,c
  1389  007152  360E               	rlcf	___fttol@lval+3,f,c
  1390  007154  060F               	decf	___fttol@exp1,f,c
  1391  007156                     l1787:
  1392  007156  500F               	movf	___fttol@exp1,w,c
  1393  007158  A4D8               	btfss	status,2,c
  1394  00715A  D7F7               	goto	l1785
  1395  00715C                     l1789:
  1396  00715C  500A               	movf	___fttol@sign1,w,c
  1397  00715E  B4D8               	btfsc	status,2,c
  1398  007160  D008               	goto	l1793
  1399  007162  1E0E               	comf	___fttol@lval+3,f,c
  1400  007164  1E0D               	comf	___fttol@lval+2,f,c
  1401  007166  1E0C               	comf	___fttol@lval+1,f,c
  1402  007168  6C0B               	negf	___fttol@lval,c
  1403  00716A  0E00               	movlw	0
  1404  00716C  220C               	addwfc	___fttol@lval+1,f,c
  1405  00716E  220D               	addwfc	___fttol@lval+2,f,c
  1406  007170  220E               	addwfc	___fttol@lval+3,f,c
  1407  007172                     l1793:
  1408  007172  C00B  F001         	movff	___fttol@lval,?___fttol
  1409  007176  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1410  00717A  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1411  00717E  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1412  007182  0012               	return	
  1413  007184                     __end_of___fttol:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           postinc0	equ	0xFEE
  1420                           wreg	equ	0xFE8
  1421                           postdec1	equ	0xFE5
  1422                           fsr1l	equ	0xFE1
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function ___awtoft *****************
  1426 ;; Defined at:
  1427 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  c               2    8[COMRAM] int 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  sign            1   11[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  3    8[COMRAM] float 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1441 ;;      Params:         3       0       0       0       0       0       0       0       0
  1442 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1444 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1445 ;;Total ram usage:        4 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    1
  1448 ;; This function calls:
  1449 ;;		___ftpack
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;;		_PID_SetSampleTime
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text3
  1457  006BD0                     __ptext3:
  1458                           	opt stack 0
  1459  006BD0                     ___awtoft:
  1460                           	opt stack 29
  1461                           
  1462                           ;incstack = 0
  1463  006BD0  0E00               	movlw	0
  1464  006BD2  6E0C               	movwf	___awtoft@sign,c
  1465  006BD4  AE0A               	btfss	___awtoft@c+1,7,c
  1466  006BD6  D006               	goto	l1747
  1467  006BD8  6C09               	negf	___awtoft@c,c
  1468  006BDA  1E0A               	comf	___awtoft@c+1,f,c
  1469  006BDC  B0D8               	btfsc	status,0,c
  1470  006BDE  2A0A               	incf	___awtoft@c+1,f,c
  1471  006BE0  0E01               	movlw	1
  1472  006BE2  6E0C               	movwf	___awtoft@sign,c
  1473  006BE4                     l1747:
  1474  006BE4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1475  006BE8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1476  006BEC  6A03               	clrf	___ftpack@arg+2,c
  1477  006BEE  0E8E               	movlw	142
  1478  006BF0  6E04               	movwf	___ftpack@exp,c
  1479  006BF2  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1480  006BF6  EC9A  F036         	call	___ftpack	;wreg free
  1481  006BFA  C001  F009         	movff	?___ftpack,?___awtoft
  1482  006BFE  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1483  006C02  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1484  006C06  0012               	return	
  1485  006C08                     __end_of___awtoft:
  1486                           	opt stack 0
  1487                           tblptru	equ	0xFF8
  1488                           tblptrh	equ	0xFF7
  1489                           tblptrl	equ	0xFF6
  1490                           tablat	equ	0xFF5
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           postdec1	equ	0xFE5
  1494                           fsr1l	equ	0xFE1
  1495                           status	equ	0xFD8
  1496                           
  1497 ;; *************** function _PID_init *****************
  1498 ;; Defined at:
  1499 ;;		line 16 in file "pid.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  pid             2   53[COMRAM] PTR struct .
  1502 ;;		 -> main@PID(45), 
  1503 ;;  Kp              3   55[COMRAM] float 
  1504 ;;  Ki              3   58[COMRAM] float 
  1505 ;;  Kd              3   61[COMRAM] float 
  1506 ;;  ControllerDi    1   64[COMRAM] enum E7
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1518 ;;      Params:        12       0       0       0       0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1521 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1522 ;;Total ram usage:       12 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    3
  1525 ;; This function calls:
  1526 ;;		_PID_SetControllerDirection
  1527 ;;		_PID_SetOutputLimits
  1528 ;;		_PID_SetTunings
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text4
  1535  007288                     __ptext4:
  1536                           	opt stack 0
  1537  007288                     _PID_init:
  1538                           	opt stack 27
  1539                           
  1540                           ;pid.c: 18: pid->myInput = 0;
  1541                           
  1542                           ;incstack = 0
  1543  007288  EE20 F013          	lfsr	2,19
  1544  00728C  5036               	movf	PID_init@pid,w,c
  1545  00728E  26D9               	addwf	fsr2l,f,c
  1546  007290  5037               	movf	PID_init@pid+1,w,c
  1547  007292  22DA               	addwfc	fsr2h,f,c
  1548  007294  0E00               	movlw	0
  1549  007296  6EDE               	movwf	postinc2,c
  1550  007298  0E00               	movlw	0
  1551  00729A  6EDE               	movwf	postinc2,c
  1552  00729C  0E00               	movlw	0
  1553  00729E  6EDE               	movwf	postinc2,c
  1554                           
  1555                           ;pid.c: 19: pid->myOutput = 0;
  1556  0072A0  EE20 F016          	lfsr	2,22
  1557  0072A4  5036               	movf	PID_init@pid,w,c
  1558  0072A6  26D9               	addwf	fsr2l,f,c
  1559  0072A8  5037               	movf	PID_init@pid+1,w,c
  1560  0072AA  22DA               	addwfc	fsr2h,f,c
  1561  0072AC  0E00               	movlw	0
  1562  0072AE  6EDE               	movwf	postinc2,c
  1563  0072B0  0E00               	movlw	0
  1564  0072B2  6EDE               	movwf	postinc2,c
  1565  0072B4  0E00               	movlw	0
  1566  0072B6  6EDE               	movwf	postinc2,c
  1567                           
  1568                           ;pid.c: 20: pid->mySetpoint = 0;
  1569  0072B8  EE20 F019          	lfsr	2,25
  1570  0072BC  5036               	movf	PID_init@pid,w,c
  1571  0072BE  26D9               	addwf	fsr2l,f,c
  1572  0072C0  5037               	movf	PID_init@pid+1,w,c
  1573  0072C2  22DA               	addwfc	fsr2h,f,c
  1574  0072C4  0E00               	movlw	0
  1575  0072C6  6EDE               	movwf	postinc2,c
  1576  0072C8  0E00               	movlw	0
  1577  0072CA  6EDE               	movwf	postinc2,c
  1578  0072CC  0E00               	movlw	0
  1579  0072CE  6EDE               	movwf	postinc2,c
  1580                           
  1581                           ;pid.c: 21: pid->ITerm = 0;
  1582  0072D0  EE20 F01C          	lfsr	2,28
  1583  0072D4  5036               	movf	PID_init@pid,w,c
  1584  0072D6  26D9               	addwf	fsr2l,f,c
  1585  0072D8  5037               	movf	PID_init@pid+1,w,c
  1586  0072DA  22DA               	addwfc	fsr2h,f,c
  1587  0072DC  0E00               	movlw	0
  1588  0072DE  6EDE               	movwf	postinc2,c
  1589  0072E0  0E00               	movlw	0
  1590  0072E2  6EDE               	movwf	postinc2,c
  1591  0072E4  0E00               	movlw	0
  1592  0072E6  6EDE               	movwf	postinc2,c
  1593                           
  1594                           ;pid.c: 22: pid->lastInput = 0;
  1595  0072E8  EE20 F01F          	lfsr	2,31
  1596  0072EC  5036               	movf	PID_init@pid,w,c
  1597  0072EE  26D9               	addwf	fsr2l,f,c
  1598  0072F0  5037               	movf	PID_init@pid+1,w,c
  1599  0072F2  22DA               	addwfc	fsr2h,f,c
  1600  0072F4  0E00               	movlw	0
  1601  0072F6  6EDE               	movwf	postinc2,c
  1602  0072F8  0E00               	movlw	0
  1603  0072FA  6EDE               	movwf	postinc2,c
  1604  0072FC  0E00               	movlw	0
  1605  0072FE  6EDE               	movwf	postinc2,c
  1606                           
  1607                           ;pid.c: 23: pid->inAuto = 0;
  1608  007300  EE20 F02C          	lfsr	2,44
  1609  007304  5036               	movf	PID_init@pid,w,c
  1610  007306  26D9               	addwf	fsr2l,f,c
  1611  007308  5037               	movf	PID_init@pid+1,w,c
  1612  00730A  22DA               	addwfc	fsr2h,f,c
  1613  00730C  0E00               	movlw	0
  1614  00730E  6EDF               	movwf	indf2,c
  1615                           
  1616                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
  1617  007310  C036  F00D         	movff	PID_init@pid,PID_SetOutputLimits@pid
  1618  007314  C037  F00E         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
  1619  007318  0E00               	movlw	0
  1620  00731A  6E0F               	movwf	PID_SetOutputLimits@Min,c
  1621  00731C  0E00               	movlw	0
  1622  00731E  6E10               	movwf	PID_SetOutputLimits@Min+1,c
  1623  007320  0E00               	movlw	0
  1624  007322  6E11               	movwf	PID_SetOutputLimits@Min+2,c
  1625  007324  0EFF               	movlw	255
  1626  007326  6E12               	movwf	PID_SetOutputLimits@Max,c
  1627  007328  0E7F               	movlw	127
  1628  00732A  6E13               	movwf	PID_SetOutputLimits@Max+1,c
  1629  00732C  0E47               	movlw	71
  1630  00732E  6E14               	movwf	PID_SetOutputLimits@Max+2,c
  1631  007330  EC9F  F03A         	call	_PID_SetOutputLimits	;wreg free
  1632                           
  1633                           ;pid.c: 28: pid->SampleTime = 1000;
  1634  007334  EE20 F022          	lfsr	2,34
  1635  007338  5036               	movf	PID_init@pid,w,c
  1636  00733A  26D9               	addwf	fsr2l,f,c
  1637  00733C  5037               	movf	PID_init@pid+1,w,c
  1638  00733E  22DA               	addwfc	fsr2h,f,c
  1639  007340  0EE8               	movlw	232
  1640  007342  6EDE               	movwf	postinc2,c
  1641  007344  0E03               	movlw	3
  1642  007346  6EDE               	movwf	postinc2,c
  1643  007348  0E00               	movlw	0
  1644  00734A  6EDE               	movwf	postinc2,c
  1645  00734C  0E00               	movlw	0
  1646  00734E  6EDD               	movwf	postdec2,c
  1647                           
  1648                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
  1649  007350  C036  F027         	movff	PID_init@pid,PID_SetControllerDirection@pid
  1650  007354  C037  F028         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
  1651  007358  C041  F029         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
  1652  00735C  ECF1  F036         	call	_PID_SetControllerDirection	;wreg free
  1653                           
  1654                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
  1655  007360  C036  F027         	movff	PID_init@pid,PID_SetTunings@pid
  1656  007364  C037  F028         	movff	PID_init@pid+1,PID_SetTunings@pid+1
  1657  007368  C038  F029         	movff	PID_init@Kp,PID_SetTunings@Kp
  1658  00736C  C039  F02A         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
  1659  007370  C03A  F02B         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
  1660  007374  C03B  F02C         	movff	PID_init@Ki,PID_SetTunings@Ki
  1661  007378  C03C  F02D         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
  1662  00737C  C03D  F02E         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
  1663  007380  C03E  F02F         	movff	PID_init@Kd,PID_SetTunings@Kd
  1664  007384  C03F  F030         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
  1665  007388  C040  F031         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
  1666  00738C  EC7B  F03B         	call	_PID_SetTunings	;wreg free
  1667  007390  0012               	return		;funcret
  1668  007392                     __end_of_PID_init:
  1669                           	opt stack 0
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1l	equ	0xFE1
  1678                           indf2	equ	0xFDF
  1679                           postinc2	equ	0xFDE
  1680                           postdec2	equ	0xFDD
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _PID_SetTunings *****************
  1686 ;; Defined at:
  1687 ;;		line 85 in file "pid.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  pid             2   38[COMRAM] PTR struct .
  1690 ;;		 -> main@PID(45), 
  1691 ;;  Kp              3   40[COMRAM] float 
  1692 ;;  Ki              3   43[COMRAM] float 
  1693 ;;  Kd              3   46[COMRAM] float 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  SampleTimeIn    3   50[COMRAM] float 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1705 ;;      Params:        11       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1708 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1709 ;;Total ram usage:       15 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    2
  1712 ;; This function calls:
  1713 ;;		___ftdiv
  1714 ;;		___ftmul
  1715 ;;		___ftneg
  1716 ;;		___lltoft
  1717 ;; This function is called by:
  1718 ;;		_PID_init
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text5
  1723  0076F6                     __ptext5:
  1724                           	opt stack 0
  1725  0076F6                     _PID_SetTunings:
  1726                           	opt stack 27
  1727                           
  1728                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
  1729                           
  1730                           ;incstack = 0
  1731  0076F6  BE2B               	btfsc	PID_SetTunings@Kp+2,7,c
  1732  0076F8  0012               	return	
  1733  0076FA  BE2E               	btfsc	PID_SetTunings@Ki+2,7,c
  1734  0076FC  0012               	return	
  1735  0076FE  BE31               	btfsc	PID_SetTunings@Kd+2,7,c
  1736  007700  0012               	return	
  1737                           
  1738                           ;pid.c: 88: }
  1739                           ;pid.c: 90: pid->dispKp = Kp;
  1740                           
  1741                           ;pid.c: 87: return;
  1742  007702  C027  FFD9         	movff	PID_SetTunings@pid,fsr2l
  1743  007706  C028  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
  1744  00770A  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1745  00770E  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1746  007712  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1747                           
  1748                           ;pid.c: 91: pid->dispKi = Ki;
  1749  007716  EE20 F003          	lfsr	2,3
  1750  00771A  5027               	movf	PID_SetTunings@pid,w,c
  1751  00771C  26D9               	addwf	fsr2l,f,c
  1752  00771E  5028               	movf	PID_SetTunings@pid+1,w,c
  1753  007720  22DA               	addwfc	fsr2h,f,c
  1754  007722  C02C  FFDE         	movff	PID_SetTunings@Ki,postinc2
  1755  007726  C02D  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
  1756  00772A  C02E  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
  1757                           
  1758                           ;pid.c: 92: pid->dispKd = Kd;
  1759  00772E  EE20 F006          	lfsr	2,6
  1760  007732  5027               	movf	PID_SetTunings@pid,w,c
  1761  007734  26D9               	addwf	fsr2l,f,c
  1762  007736  5028               	movf	PID_SetTunings@pid+1,w,c
  1763  007738  22DA               	addwfc	fsr2h,f,c
  1764  00773A  C02F  FFDE         	movff	PID_SetTunings@Kd,postinc2
  1765  00773E  C030  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
  1766  007742  C031  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
  1767                           
  1768                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
  1769  007746  EE20 F022          	lfsr	2,34
  1770  00774A  5027               	movf	PID_SetTunings@pid,w,c
  1771  00774C  26D9               	addwf	fsr2l,f,c
  1772  00774E  5028               	movf	PID_SetTunings@pid+1,w,c
  1773  007750  22DA               	addwfc	fsr2h,f,c
  1774  007752  CFDE F009          	movff	postinc2,___lltoft@c
  1775  007756  CFDE F00A          	movff	postinc2,___lltoft@c+1
  1776  00775A  CFDE F00B          	movff	postinc2,___lltoft@c+2
  1777  00775E  CFDE F00C          	movff	postinc2,___lltoft@c+3
  1778  007762  EC24  F036         	call	___lltoft	;wreg free
  1779  007766  C009  F012         	movff	?___lltoft,___ftdiv@f1
  1780  00776A  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
  1781  00776E  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
  1782  007772  0E00               	movlw	0
  1783  007774  6E15               	movwf	___ftdiv@f2,c
  1784  007776  0E7A               	movlw	122
  1785  007778  6E16               	movwf	___ftdiv@f2+1,c
  1786  00777A  0E44               	movlw	68
  1787  00777C  6E17               	movwf	___ftdiv@f2+2,c
  1788  00777E  EC5B  F037         	call	___ftdiv	;wreg free
  1789  007782  C012  F033         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1790  007786  C013  F034         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1791  00778A  C014  F035         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1792                           
  1793                           ;pid.c: 95: pid->kp = Kp;
  1794  00778E  EE20 F009          	lfsr	2,9
  1795  007792  5027               	movf	PID_SetTunings@pid,w,c
  1796  007794  26D9               	addwf	fsr2l,f,c
  1797  007796  5028               	movf	PID_SetTunings@pid+1,w,c
  1798  007798  22DA               	addwfc	fsr2h,f,c
  1799  00779A  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1800  00779E  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1801  0077A2  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1802                           
  1803                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1804  0077A6  C02C  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1805  0077AA  C02D  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1806  0077AE  C02E  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1807  0077B2  C033  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1808  0077B6  C034  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1809  0077BA  C035  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1810  0077BE  ECCE  F037         	call	___ftmul	;wreg free
  1811  0077C2  EE20 F00C          	lfsr	2,12
  1812  0077C6  5027               	movf	PID_SetTunings@pid,w,c
  1813  0077C8  26D9               	addwf	fsr2l,f,c
  1814  0077CA  5028               	movf	PID_SetTunings@pid+1,w,c
  1815  0077CC  22DA               	addwfc	fsr2h,f,c
  1816  0077CE  C009  FFDE         	movff	?___ftmul,postinc2
  1817  0077D2  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1818  0077D6  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1819                           
  1820                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1821  0077DA  C02F  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1822  0077DE  C030  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1823  0077E2  C031  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1824  0077E6  C033  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1825  0077EA  C034  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1826  0077EE  C035  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1827  0077F2  EC5B  F037         	call	___ftdiv	;wreg free
  1828  0077F6  EE20 F00F          	lfsr	2,15
  1829  0077FA  5027               	movf	PID_SetTunings@pid,w,c
  1830  0077FC  26D9               	addwf	fsr2l,f,c
  1831  0077FE  5028               	movf	PID_SetTunings@pid+1,w,c
  1832  007800  22DA               	addwfc	fsr2h,f,c
  1833  007802  C012  FFDE         	movff	?___ftdiv,postinc2
  1834  007806  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1835  00780A  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1836                           
  1837                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1838  00780E  EE20 F012          	lfsr	2,18
  1839  007812  5027               	movf	PID_SetTunings@pid,w,c
  1840  007814  26D9               	addwf	fsr2l,f,c
  1841  007816  5028               	movf	PID_SetTunings@pid+1,w,c
  1842  007818  22DA               	addwfc	fsr2h,f,c
  1843  00781A  04DE               	decf	postinc2,w,c
  1844  00781C  A4D8               	btfss	status,2,c
  1845  00781E  0012               	return	
  1846                           
  1847                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1848  007820  EE20 F009          	lfsr	2,9
  1849  007824  5027               	movf	PID_SetTunings@pid,w,c
  1850  007826  26D9               	addwf	fsr2l,f,c
  1851  007828  5028               	movf	PID_SetTunings@pid+1,w,c
  1852  00782A  22DA               	addwfc	fsr2h,f,c
  1853  00782C  CFDE F024          	movff	postinc2,___ftneg@f1
  1854  007830  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1855  007834  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1856  007838  ECA9  F035         	call	___ftneg	;wreg free
  1857  00783C  EE20 F009          	lfsr	2,9
  1858  007840  5027               	movf	PID_SetTunings@pid,w,c
  1859  007842  26D9               	addwf	fsr2l,f,c
  1860  007844  5028               	movf	PID_SetTunings@pid+1,w,c
  1861  007846  22DA               	addwfc	fsr2h,f,c
  1862  007848  C024  FFDE         	movff	?___ftneg,postinc2
  1863  00784C  C025  FFDE         	movff	?___ftneg+1,postinc2
  1864  007850  C026  FFDE         	movff	?___ftneg+2,postinc2
  1865                           
  1866                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1867  007854  EE20 F00C          	lfsr	2,12
  1868  007858  5027               	movf	PID_SetTunings@pid,w,c
  1869  00785A  26D9               	addwf	fsr2l,f,c
  1870  00785C  5028               	movf	PID_SetTunings@pid+1,w,c
  1871  00785E  22DA               	addwfc	fsr2h,f,c
  1872  007860  CFDE F024          	movff	postinc2,___ftneg@f1
  1873  007864  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1874  007868  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1875  00786C  ECA9  F035         	call	___ftneg	;wreg free
  1876  007870  EE20 F00C          	lfsr	2,12
  1877  007874  5027               	movf	PID_SetTunings@pid,w,c
  1878  007876  26D9               	addwf	fsr2l,f,c
  1879  007878  5028               	movf	PID_SetTunings@pid+1,w,c
  1880  00787A  22DA               	addwfc	fsr2h,f,c
  1881  00787C  C024  FFDE         	movff	?___ftneg,postinc2
  1882  007880  C025  FFDE         	movff	?___ftneg+1,postinc2
  1883  007884  C026  FFDE         	movff	?___ftneg+2,postinc2
  1884                           
  1885                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1886  007888  EE20 F00F          	lfsr	2,15
  1887  00788C  5027               	movf	PID_SetTunings@pid,w,c
  1888  00788E  26D9               	addwf	fsr2l,f,c
  1889  007890  5028               	movf	PID_SetTunings@pid+1,w,c
  1890  007892  22DA               	addwfc	fsr2h,f,c
  1891  007894  CFDE F024          	movff	postinc2,___ftneg@f1
  1892  007898  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1893  00789C  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1894  0078A0  ECA9  F035         	call	___ftneg	;wreg free
  1895  0078A4  EE20 F00F          	lfsr	2,15
  1896  0078A8  5027               	movf	PID_SetTunings@pid,w,c
  1897  0078AA  26D9               	addwf	fsr2l,f,c
  1898  0078AC  5028               	movf	PID_SetTunings@pid+1,w,c
  1899  0078AE  22DA               	addwfc	fsr2h,f,c
  1900  0078B0  C024  FFDE         	movff	?___ftneg,postinc2
  1901  0078B4  C025  FFDE         	movff	?___ftneg+1,postinc2
  1902  0078B8  C026  FFDE         	movff	?___ftneg+2,postinc2
  1903  0078BC  0012               	return	
  1904  0078BE                     __end_of_PID_SetTunings:
  1905                           	opt stack 0
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1l	equ	0xFE1
  1914                           indf2	equ	0xFDF
  1915                           postinc2	equ	0xFDE
  1916                           postdec2	equ	0xFDD
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function ___lltoft *****************
  1922 ;; Defined at:
  1923 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  c               4    8[COMRAM] unsigned long 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  exp             1   16[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  3    8[COMRAM] float 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         4       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        9 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    1
  1944 ;; This function calls:
  1945 ;;		___ftpack
  1946 ;; This function is called by:
  1947 ;;		_PID_SetTunings
  1948 ;;		_PID_SetSampleTime
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text6
  1953  006C48                     __ptext6:
  1954                           	opt stack 0
  1955  006C48                     ___lltoft:
  1956                           	opt stack 27
  1957                           
  1958                           ;incstack = 0
  1959  006C48  0E8E               	movlw	142
  1960  006C4A  6E11               	movwf	___lltoft@exp,c
  1961  006C4C  D006               	goto	l1547
  1962  006C4E                     l1545:
  1963  006C4E  90D8               	bcf	status,0,c
  1964  006C50  320C               	rrcf	___lltoft@c+3,f,c
  1965  006C52  320B               	rrcf	___lltoft@c+2,f,c
  1966  006C54  320A               	rrcf	___lltoft@c+1,f,c
  1967  006C56  3209               	rrcf	___lltoft@c,f,c
  1968  006C58  2A11               	incf	___lltoft@exp,f,c
  1969  006C5A                     l1547:
  1970  006C5A  0E00               	movlw	0
  1971  006C5C  1409               	andwf	___lltoft@c,w,c
  1972  006C5E  6E0D               	movwf	??___lltoft& (0+255),c
  1973  006C60  0E00               	movlw	0
  1974  006C62  140A               	andwf	___lltoft@c+1,w,c
  1975  006C64  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1976  006C66  0E00               	movlw	0
  1977  006C68  140B               	andwf	___lltoft@c+2,w,c
  1978  006C6A  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1979  006C6C  0EFF               	movlw	255
  1980  006C6E  140C               	andwf	___lltoft@c+3,w,c
  1981  006C70  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1982  006C72  500D               	movf	??___lltoft,w,c
  1983  006C74  100E               	iorwf	??___lltoft+1,w,c
  1984  006C76  100F               	iorwf	??___lltoft+2,w,c
  1985  006C78  1010               	iorwf	??___lltoft+3,w,c
  1986  006C7A  A4D8               	btfss	status,2,c
  1987  006C7C  D7E8               	goto	l1545
  1988  006C7E  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1989  006C82  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1990  006C86  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1991  006C8A  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1992  006C8E  0E00               	movlw	0
  1993  006C90  6E05               	movwf	___ftpack@sign,c
  1994  006C92  EC9A  F036         	call	___ftpack	;wreg free
  1995  006C96  C001  F009         	movff	?___ftpack,?___lltoft
  1996  006C9A  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1997  006C9E  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1998  006CA2  0012               	return	
  1999  006CA4                     __end_of___lltoft:
  2000                           	opt stack 0
  2001                           tblptru	equ	0xFF8
  2002                           tblptrh	equ	0xFF7
  2003                           tblptrl	equ	0xFF6
  2004                           tablat	equ	0xFF5
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           postdec1	equ	0xFE5
  2008                           fsr1l	equ	0xFE1
  2009                           indf2	equ	0xFDF
  2010                           postinc2	equ	0xFDE
  2011                           postdec2	equ	0xFDD
  2012                           fsr2h	equ	0xFDA
  2013                           fsr2l	equ	0xFD9
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function ___ftdiv *****************
  2017 ;; Defined at:
  2018 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  f1              3   17[COMRAM] float 
  2021 ;;  f2              3   20[COMRAM] float 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  f3              3   27[COMRAM] float 
  2024 ;;  sign            1   31[COMRAM] unsigned char 
  2025 ;;  exp             1   30[COMRAM] unsigned char 
  2026 ;;  cntr            1   26[COMRAM] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  3   17[COMRAM] float 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2036 ;;      Params:         6       0       0       0       0       0       0       0       0
  2037 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2038 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2039 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2040 ;;Total ram usage:       15 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    1
  2043 ;; This function calls:
  2044 ;;		___ftpack
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;;		_PID_SetTunings
  2048 ;;		_PID_SetSampleTime
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text7
  2053  006EB6                     __ptext7:
  2054                           	opt stack 0
  2055  006EB6                     ___ftdiv:
  2056                           	opt stack 29
  2057                           
  2058                           ;incstack = 0
  2059  006EB6  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  2060  006EBA  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  2061  006EBC  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  2062  006EBE  3413               	rlcf	___ftdiv@f1+1,w,c
  2063  006EC0  3618               	rlcf	??___ftdiv& (0+255),f,c
  2064  006EC2  E301               	bnc	u961
  2065  006EC4  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  2066  006EC6                     u961:
  2067  006EC6  5018               	movf	??___ftdiv,w,c
  2068  006EC8  6E1F               	movwf	___ftdiv@exp,c
  2069  006ECA  501F               	movf	___ftdiv@exp,w,c
  2070  006ECC  A4D8               	btfss	status,2,c
  2071  006ECE  D007               	goto	l1433
  2072  006ED0  0E00               	movlw	0
  2073  006ED2  6E12               	movwf	?___ftdiv,c
  2074  006ED4  0E00               	movlw	0
  2075  006ED6  6E13               	movwf	?___ftdiv+1,c
  2076  006ED8  0E00               	movlw	0
  2077  006EDA  6E14               	movwf	?___ftdiv+2,c
  2078  006EDC  0012               	return	
  2079  006EDE                     l1433:
  2080  006EDE  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  2081  006EE2  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  2082  006EE4  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  2083  006EE6  3416               	rlcf	___ftdiv@f2+1,w,c
  2084  006EE8  3618               	rlcf	??___ftdiv& (0+255),f,c
  2085  006EEA  E301               	bnc	u981
  2086  006EEC  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  2087  006EEE                     u981:
  2088  006EEE  5018               	movf	??___ftdiv,w,c
  2089  006EF0  6E20               	movwf	___ftdiv@sign,c
  2090  006EF2  5020               	movf	___ftdiv@sign,w,c
  2091  006EF4  A4D8               	btfss	status,2,c
  2092  006EF6  D007               	goto	l1439
  2093  006EF8  0E00               	movlw	0
  2094  006EFA  6E12               	movwf	?___ftdiv,c
  2095  006EFC  0E00               	movlw	0
  2096  006EFE  6E13               	movwf	?___ftdiv+1,c
  2097  006F00  0E00               	movlw	0
  2098  006F02  6E14               	movwf	?___ftdiv+2,c
  2099  006F04  0012               	return	
  2100  006F06                     l1439:
  2101  006F06  0E00               	movlw	0
  2102  006F08  6E1C               	movwf	___ftdiv@f3,c
  2103  006F0A  0E00               	movlw	0
  2104  006F0C  6E1D               	movwf	___ftdiv@f3+1,c
  2105  006F0E  0E00               	movlw	0
  2106  006F10  6E1E               	movwf	___ftdiv@f3+2,c
  2107  006F12  5020               	movf	___ftdiv@sign,w,c
  2108  006F14  0F89               	addlw	137
  2109  006F16  5E1F               	subwf	___ftdiv@exp,f,c
  2110  006F18  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  2111  006F1C  5017               	movf	___ftdiv@f2+2,w,c
  2112  006F1E  1A20               	xorwf	___ftdiv@sign,f,c
  2113  006F20  0E80               	movlw	128
  2114  006F22  1620               	andwf	___ftdiv@sign,f,c
  2115  006F24  8E13               	bsf	___ftdiv@f1+1,7,c
  2116  006F26  0EFF               	movlw	255
  2117  006F28  1612               	andwf	___ftdiv@f1,f,c
  2118  006F2A  0EFF               	movlw	255
  2119  006F2C  1613               	andwf	___ftdiv@f1+1,f,c
  2120  006F2E  0E00               	movlw	0
  2121  006F30  1614               	andwf	___ftdiv@f1+2,f,c
  2122  006F32  8E16               	bsf	___ftdiv@f2+1,7,c
  2123  006F34  0EFF               	movlw	255
  2124  006F36  1615               	andwf	___ftdiv@f2,f,c
  2125  006F38  0EFF               	movlw	255
  2126  006F3A  1616               	andwf	___ftdiv@f2+1,f,c
  2127  006F3C  0E00               	movlw	0
  2128  006F3E  1617               	andwf	___ftdiv@f2+2,f,c
  2129  006F40  0E18               	movlw	24
  2130  006F42  6E1B               	movwf	___ftdiv@cntr,c
  2131  006F44                     l1459:
  2132  006F44  90D8               	bcf	status,0,c
  2133  006F46  361C               	rlcf	___ftdiv@f3,f,c
  2134  006F48  361D               	rlcf	___ftdiv@f3+1,f,c
  2135  006F4A  361E               	rlcf	___ftdiv@f3+2,f,c
  2136  006F4C  5015               	movf	___ftdiv@f2,w,c
  2137  006F4E  5C12               	subwf	___ftdiv@f1,w,c
  2138  006F50  5016               	movf	___ftdiv@f2+1,w,c
  2139  006F52  5813               	subwfb	___ftdiv@f1+1,w,c
  2140  006F54  5017               	movf	___ftdiv@f2+2,w,c
  2141  006F56  5814               	subwfb	___ftdiv@f1+2,w,c
  2142  006F58  A0D8               	btfss	status,0,c
  2143  006F5A  D007               	goto	l440
  2144  006F5C  5015               	movf	___ftdiv@f2,w,c
  2145  006F5E  5E12               	subwf	___ftdiv@f1,f,c
  2146  006F60  5016               	movf	___ftdiv@f2+1,w,c
  2147  006F62  5A13               	subwfb	___ftdiv@f1+1,f,c
  2148  006F64  5017               	movf	___ftdiv@f2+2,w,c
  2149  006F66  5A14               	subwfb	___ftdiv@f1+2,f,c
  2150  006F68  801C               	bsf	___ftdiv@f3,0,c
  2151  006F6A                     l440:
  2152  006F6A  90D8               	bcf	status,0,c
  2153  006F6C  3612               	rlcf	___ftdiv@f1,f,c
  2154  006F6E  3613               	rlcf	___ftdiv@f1+1,f,c
  2155  006F70  3614               	rlcf	___ftdiv@f1+2,f,c
  2156  006F72  2E1B               	decfsz	___ftdiv@cntr,f,c
  2157  006F74  D7E7               	goto	l1459
  2158  006F76  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  2159  006F7A  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2160  006F7E  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2161  006F82  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  2162  006F86  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  2163  006F8A  EC9A  F036         	call	___ftpack	;wreg free
  2164  006F8E  C001  F012         	movff	?___ftpack,?___ftdiv
  2165  006F92  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  2166  006F96  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  2167  006F9A  0012               	return	
  2168  006F9C                     __end_of___ftdiv:
  2169                           	opt stack 0
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           postinc0	equ	0xFEE
  2175                           wreg	equ	0xFE8
  2176                           postdec1	equ	0xFE5
  2177                           fsr1l	equ	0xFE1
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           postdec2	equ	0xFDD
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _PID_SetOutputLimits *****************
  2186 ;; Defined at:
  2187 ;;		line 126 in file "pid.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  pid             2   12[COMRAM] PTR struct .
  2190 ;;		 -> main@PID(45), 
  2191 ;;  Min             3   14[COMRAM] float 
  2192 ;;  Max             3   17[COMRAM] float 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2204 ;;      Params:         8       0       0       0       0       0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2207 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2208 ;;Total ram usage:        8 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    1
  2211 ;; This function calls:
  2212 ;;		___ftge
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;;		_PID_init
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text8
  2220  00753E                     __ptext8:
  2221                           	opt stack 0
  2222  00753E                     _PID_SetOutputLimits:
  2223                           	opt stack 28
  2224                           
  2225                           ;pid.c: 127: if (Min >= Max) {
  2226                           
  2227                           ;incstack = 0
  2228  00753E  C00F  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  2229  007542  C010  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  2230  007546  C011  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  2231  00754A  C012  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  2232  00754E  C013  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  2233  007552  C014  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  2234  007556  EC52  F036         	call	___ftge	;wreg free
  2235  00755A  B0D8               	btfsc	status,0,c
  2236  00755C  0012               	return	
  2237                           
  2238                           ;pid.c: 129: }
  2239                           ;pid.c: 130: pid->outMin = Min;
  2240                           
  2241                           ;pid.c: 128: return;
  2242  00755E  EE20 F026          	lfsr	2,38
  2243  007562  500D               	movf	PID_SetOutputLimits@pid,w,c
  2244  007564  26D9               	addwf	fsr2l,f,c
  2245  007566  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2246  007568  22DA               	addwfc	fsr2h,f,c
  2247  00756A  C00F  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  2248  00756E  C010  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  2249  007572  C011  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  2250                           
  2251                           ;pid.c: 131: pid->outMax = Max;
  2252  007576  EE20 F029          	lfsr	2,41
  2253  00757A  500D               	movf	PID_SetOutputLimits@pid,w,c
  2254  00757C  26D9               	addwf	fsr2l,f,c
  2255  00757E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2256  007580  22DA               	addwfc	fsr2h,f,c
  2257  007582  C012  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  2258  007586  C013  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  2259  00758A  C014  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  2260                           
  2261                           ;pid.c: 133: if (pid->inAuto) {
  2262  00758E  EE20 F02C          	lfsr	2,44
  2263  007592  500D               	movf	PID_SetOutputLimits@pid,w,c
  2264  007594  26D9               	addwf	fsr2l,f,c
  2265  007596  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2266  007598  22DA               	addwfc	fsr2h,f,c
  2267  00759A  50DF               	movf	indf2,w,c
  2268  00759C  B4D8               	btfsc	status,2,c
  2269  00759E  0012               	return	
  2270                           
  2271                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  2272  0075A0  EE20 F029          	lfsr	2,41
  2273  0075A4  500D               	movf	PID_SetOutputLimits@pid,w,c
  2274  0075A6  26D9               	addwf	fsr2l,f,c
  2275  0075A8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2276  0075AA  22DA               	addwfc	fsr2h,f,c
  2277  0075AC  CFDE F001          	movff	postinc2,___ftge@ff1
  2278  0075B0  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2279  0075B4  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2280  0075B8  EE20 F016          	lfsr	2,22
  2281  0075BC  500D               	movf	PID_SetOutputLimits@pid,w,c
  2282  0075BE  26D9               	addwf	fsr2l,f,c
  2283  0075C0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2284  0075C2  22DA               	addwfc	fsr2h,f,c
  2285  0075C4  CFDE F004          	movff	postinc2,___ftge@ff2
  2286  0075C8  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2287  0075CC  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2288  0075D0  EC52  F036         	call	___ftge	;wreg free
  2289  0075D4  B0D8               	btfsc	status,0,c
  2290  0075D6  D003               	goto	l1563
  2291                           
  2292                           ;pid.c: 135: pid->myOutput = pid->outMax;
  2293  0075D8  EE20 F029          	lfsr	2,41
  2294  0075DC  D01E               	goto	L1
  2295  0075DE                     l1563:
  2296  0075DE  EE20 F016          	lfsr	2,22
  2297  0075E2  500D               	movf	PID_SetOutputLimits@pid,w,c
  2298  0075E4  26D9               	addwf	fsr2l,f,c
  2299  0075E6  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2300  0075E8  22DA               	addwfc	fsr2h,f,c
  2301  0075EA  CFDE F001          	movff	postinc2,___ftge@ff1
  2302  0075EE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2303  0075F2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2304  0075F6  EE20 F026          	lfsr	2,38
  2305  0075FA  500D               	movf	PID_SetOutputLimits@pid,w,c
  2306  0075FC  26D9               	addwf	fsr2l,f,c
  2307  0075FE  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2308  007600  22DA               	addwfc	fsr2h,f,c
  2309  007602  CFDE F004          	movff	postinc2,___ftge@ff2
  2310  007606  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2311  00760A  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2312  00760E  EC52  F036         	call	___ftge	;wreg free
  2313  007612  B0D8               	btfsc	status,0,c
  2314  007614  D012               	goto	l1567
  2315                           
  2316                           ;pid.c: 137: pid->myOutput = pid->outMin;
  2317  007616  EE20 F026          	lfsr	2,38
  2318  00761A                     L1:
  2319  00761A  500D               	movf	PID_SetOutputLimits@pid,w,c
  2320  00761C  26D9               	addwf	fsr2l,f,c
  2321  00761E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2322  007620  22DA               	addwfc	fsr2h,f,c
  2323  007622  EE10 F016          	lfsr	1,22
  2324  007626  500D               	movf	PID_SetOutputLimits@pid,w,c
  2325  007628  26E1               	addwf	fsr1l,f,c
  2326  00762A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2327  00762C  22E2               	addwfc	fsr1h,f,c
  2328  00762E  CFDE FFE6          	movff	postinc2,postinc1
  2329  007632  CFDE FFE6          	movff	postinc2,postinc1
  2330  007636  CFDE FFE6          	movff	postinc2,postinc1
  2331  00763A                     l1567:
  2332                           
  2333                           ;pid.c: 138: }
  2334                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  2335  00763A  EE20 F029          	lfsr	2,41
  2336  00763E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2337  007640  26D9               	addwf	fsr2l,f,c
  2338  007642  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2339  007644  22DA               	addwfc	fsr2h,f,c
  2340  007646  CFDE F001          	movff	postinc2,___ftge@ff1
  2341  00764A  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2342  00764E  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2343  007652  EE20 F01C          	lfsr	2,28
  2344  007656  500D               	movf	PID_SetOutputLimits@pid,w,c
  2345  007658  26D9               	addwf	fsr2l,f,c
  2346  00765A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2347  00765C  22DA               	addwfc	fsr2h,f,c
  2348  00765E  CFDE F004          	movff	postinc2,___ftge@ff2
  2349  007662  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2350  007666  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2351  00766A  EC52  F036         	call	___ftge	;wreg free
  2352  00766E  B0D8               	btfsc	status,0,c
  2353  007670  D013               	goto	l1571
  2354                           
  2355                           ;pid.c: 141: pid->ITerm = pid->outMax;
  2356  007672  EE20 F029          	lfsr	2,41
  2357  007676  500D               	movf	PID_SetOutputLimits@pid,w,c
  2358  007678  26D9               	addwf	fsr2l,f,c
  2359  00767A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2360  00767C  22DA               	addwfc	fsr2h,f,c
  2361  00767E  EE10 F01C          	lfsr	1,28
  2362  007682  500D               	movf	PID_SetOutputLimits@pid,w,c
  2363  007684  26E1               	addwf	fsr1l,f,c
  2364  007686  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2365  007688  22E2               	addwfc	fsr1h,f,c
  2366  00768A  CFDE FFE6          	movff	postinc2,postinc1
  2367  00768E  CFDE FFE6          	movff	postinc2,postinc1
  2368  007692  CFDE FFE6          	movff	postinc2,postinc1
  2369                           
  2370                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  2371  007696  0012               	return	
  2372  007698                     l1571:
  2373  007698  EE20 F01C          	lfsr	2,28
  2374  00769C  500D               	movf	PID_SetOutputLimits@pid,w,c
  2375  00769E  26D9               	addwf	fsr2l,f,c
  2376  0076A0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2377  0076A2  22DA               	addwfc	fsr2h,f,c
  2378  0076A4  CFDE F001          	movff	postinc2,___ftge@ff1
  2379  0076A8  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2380  0076AC  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2381  0076B0  EE20 F026          	lfsr	2,38
  2382  0076B4  500D               	movf	PID_SetOutputLimits@pid,w,c
  2383  0076B6  26D9               	addwf	fsr2l,f,c
  2384  0076B8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2385  0076BA  22DA               	addwfc	fsr2h,f,c
  2386  0076BC  CFDE F004          	movff	postinc2,___ftge@ff2
  2387  0076C0  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2388  0076C4  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2389  0076C8  EC52  F036         	call	___ftge	;wreg free
  2390  0076CC  B0D8               	btfsc	status,0,c
  2391  0076CE  0012               	return	
  2392                           
  2393                           ;pid.c: 143: pid->ITerm = pid->outMin;
  2394  0076D0  EE20 F026          	lfsr	2,38
  2395  0076D4  500D               	movf	PID_SetOutputLimits@pid,w,c
  2396  0076D6  26D9               	addwf	fsr2l,f,c
  2397  0076D8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2398  0076DA  22DA               	addwfc	fsr2h,f,c
  2399  0076DC  EE10 F01C          	lfsr	1,28
  2400  0076E0  500D               	movf	PID_SetOutputLimits@pid,w,c
  2401  0076E2  26E1               	addwf	fsr1l,f,c
  2402  0076E4  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2403  0076E6  22E2               	addwfc	fsr1h,f,c
  2404  0076E8  CFDE FFE6          	movff	postinc2,postinc1
  2405  0076EC  CFDE FFE6          	movff	postinc2,postinc1
  2406  0076F0  CFDE FFE6          	movff	postinc2,postinc1
  2407  0076F4  0012               	return	
  2408  0076F6                     __end_of_PID_SetOutputLimits:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postinc1	equ	0xFE6
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           indf2	equ	0xFDF
  2421                           postinc2	equ	0xFDE
  2422                           postdec2	equ	0xFDD
  2423                           fsr2h	equ	0xFDA
  2424                           fsr2l	equ	0xFD9
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _PID_SetControllerDirection *****************
  2428 ;; Defined at:
  2429 ;;		line 183 in file "pid.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  pid             2   38[COMRAM] PTR struct .
  2432 ;;		 -> main@PID(45), 
  2433 ;;  Direction       1   40[COMRAM] enum E7
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2445 ;;      Params:         3       0       0       0       0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2447 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2448 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2449 ;;Total ram usage:        4 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    1
  2452 ;; This function calls:
  2453 ;;		___ftneg
  2454 ;; This function is called by:
  2455 ;;		_PID_init
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text9
  2460  006DE2                     __ptext9:
  2461                           	opt stack 0
  2462  006DE2                     _PID_SetControllerDirection:
  2463                           	opt stack 28
  2464                           
  2465                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  2466                           
  2467                           ;incstack = 0
  2468  006DE2  EE20 F02C          	lfsr	2,44
  2469  006DE6  5027               	movf	PID_SetControllerDirection@pid,w,c
  2470  006DE8  26D9               	addwf	fsr2l,f,c
  2471  006DEA  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2472  006DEC  22DA               	addwfc	fsr2h,f,c
  2473  006DEE  50DF               	movf	indf2,w,c
  2474  006DF0  B4D8               	btfsc	status,2,c
  2475  006DF2  D058               	goto	l1581
  2476  006DF4  EE20 F012          	lfsr	2,18
  2477  006DF8  5027               	movf	PID_SetControllerDirection@pid,w,c
  2478  006DFA  26D9               	addwf	fsr2l,f,c
  2479  006DFC  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2480  006DFE  22DA               	addwfc	fsr2h,f,c
  2481  006E00  5029               	movf	PID_SetControllerDirection@Direction,w,c
  2482  006E02  18DE               	xorwf	postinc2,w,c
  2483  006E04  B4D8               	btfsc	status,2,c
  2484  006E06  D04E               	goto	l1581
  2485                           
  2486                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  2487  006E08  EE20 F009          	lfsr	2,9
  2488  006E0C  5027               	movf	PID_SetControllerDirection@pid,w,c
  2489  006E0E  26D9               	addwf	fsr2l,f,c
  2490  006E10  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2491  006E12  22DA               	addwfc	fsr2h,f,c
  2492  006E14  CFDE F024          	movff	postinc2,___ftneg@f1
  2493  006E18  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2494  006E1C  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2495  006E20  ECA9  F035         	call	___ftneg	;wreg free
  2496  006E24  EE20 F009          	lfsr	2,9
  2497  006E28  5027               	movf	PID_SetControllerDirection@pid,w,c
  2498  006E2A  26D9               	addwf	fsr2l,f,c
  2499  006E2C  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2500  006E2E  22DA               	addwfc	fsr2h,f,c
  2501  006E30  C024  FFDE         	movff	?___ftneg,postinc2
  2502  006E34  C025  FFDE         	movff	?___ftneg+1,postinc2
  2503  006E38  C026  FFDE         	movff	?___ftneg+2,postinc2
  2504                           
  2505                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  2506  006E3C  EE20 F00C          	lfsr	2,12
  2507  006E40  5027               	movf	PID_SetControllerDirection@pid,w,c
  2508  006E42  26D9               	addwf	fsr2l,f,c
  2509  006E44  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2510  006E46  22DA               	addwfc	fsr2h,f,c
  2511  006E48  CFDE F024          	movff	postinc2,___ftneg@f1
  2512  006E4C  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2513  006E50  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2514  006E54  ECA9  F035         	call	___ftneg	;wreg free
  2515  006E58  EE20 F00C          	lfsr	2,12
  2516  006E5C  5027               	movf	PID_SetControllerDirection@pid,w,c
  2517  006E5E  26D9               	addwf	fsr2l,f,c
  2518  006E60  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2519  006E62  22DA               	addwfc	fsr2h,f,c
  2520  006E64  C024  FFDE         	movff	?___ftneg,postinc2
  2521  006E68  C025  FFDE         	movff	?___ftneg+1,postinc2
  2522  006E6C  C026  FFDE         	movff	?___ftneg+2,postinc2
  2523                           
  2524                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  2525  006E70  EE20 F00F          	lfsr	2,15
  2526  006E74  5027               	movf	PID_SetControllerDirection@pid,w,c
  2527  006E76  26D9               	addwf	fsr2l,f,c
  2528  006E78  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2529  006E7A  22DA               	addwfc	fsr2h,f,c
  2530  006E7C  CFDE F024          	movff	postinc2,___ftneg@f1
  2531  006E80  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2532  006E84  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2533  006E88  ECA9  F035         	call	___ftneg	;wreg free
  2534  006E8C  EE20 F00F          	lfsr	2,15
  2535  006E90  5027               	movf	PID_SetControllerDirection@pid,w,c
  2536  006E92  26D9               	addwf	fsr2l,f,c
  2537  006E94  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2538  006E96  22DA               	addwfc	fsr2h,f,c
  2539  006E98  C024  FFDE         	movff	?___ftneg,postinc2
  2540  006E9C  C025  FFDE         	movff	?___ftneg+1,postinc2
  2541  006EA0  C026  FFDE         	movff	?___ftneg+2,postinc2
  2542  006EA4                     l1581:
  2543                           
  2544                           ;pid.c: 188: }
  2545                           ;pid.c: 189: pid->controllerDirection = Direction;
  2546  006EA4  EE20 F012          	lfsr	2,18
  2547  006EA8  5027               	movf	PID_SetControllerDirection@pid,w,c
  2548  006EAA  26D9               	addwf	fsr2l,f,c
  2549  006EAC  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2550  006EAE  22DA               	addwfc	fsr2h,f,c
  2551  006EB0  C029  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  2552  006EB4  0012               	return		;funcret
  2553  006EB6                     __end_of_PID_SetControllerDirection:
  2554                           	opt stack 0
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           postinc1	equ	0xFE6
  2562                           postdec1	equ	0xFE5
  2563                           fsr1h	equ	0xFE2
  2564                           fsr1l	equ	0xFE1
  2565                           indf2	equ	0xFDF
  2566                           postinc2	equ	0xFDE
  2567                           postdec2	equ	0xFDD
  2568                           fsr2h	equ	0xFDA
  2569                           fsr2l	equ	0xFD9
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _PID_SetMode *****************
  2573 ;; Defined at:
  2574 ;;		line 153 in file "pid.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  pid             2   11[COMRAM] PTR struct .
  2577 ;;		 -> main@PID(45), 
  2578 ;;  Mode            1   13[COMRAM] enum E3
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  newAuto         1   15[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2590 ;;      Params:         3       0       0       0       0       0       0       0       0
  2591 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2592 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2593 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:        5 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    2
  2597 ;; This function calls:
  2598 ;;		_PID_Initialize
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text10
  2605  006C08                     __ptext10:
  2606                           	opt stack 0
  2607  006C08                     _PID_SetMode:
  2608                           	opt stack 28
  2609                           
  2610                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  2611                           
  2612                           ;incstack = 0
  2613  006C08  040E               	decf	PID_SetMode@Mode,w,c
  2614  006C0A  A4D8               	btfss	status,2,c
  2615  006C0C  D002               	goto	u1470
  2616  006C0E  0E01               	movlw	1
  2617  006C10  D001               	goto	u1480
  2618  006C12                     u1470:
  2619  006C12  0E00               	movlw	0
  2620  006C14                     u1480:
  2621  006C14  6E10               	movwf	PID_SetMode@newAuto,c
  2622                           
  2623                           ;pid.c: 156: if(newAuto != pid->inAuto)
  2624  006C16  EE20 F02C          	lfsr	2,44
  2625  006C1A  500C               	movf	PID_SetMode@pid,w,c
  2626  006C1C  26D9               	addwf	fsr2l,f,c
  2627  006C1E  500D               	movf	PID_SetMode@pid+1,w,c
  2628  006C20  22DA               	addwfc	fsr2h,f,c
  2629  006C22  5010               	movf	PID_SetMode@newAuto,w,c
  2630  006C24  18DE               	xorwf	postinc2,w,c
  2631  006C26  B4D8               	btfsc	status,2,c
  2632  006C28  D006               	goto	l1703
  2633                           
  2634                           ;pid.c: 157: {
  2635                           ;pid.c: 158: PID_Initialize(pid);
  2636  006C2A  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  2637  006C2E  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  2638  006C32  ECC2  F038         	call	_PID_Initialize	;wreg free
  2639  006C36                     l1703:
  2640                           
  2641                           ;pid.c: 159: }
  2642                           ;pid.c: 160: pid->inAuto = newAuto;
  2643  006C36  EE20 F02C          	lfsr	2,44
  2644  006C3A  500C               	movf	PID_SetMode@pid,w,c
  2645  006C3C  26D9               	addwf	fsr2l,f,c
  2646  006C3E  500D               	movf	PID_SetMode@pid+1,w,c
  2647  006C40  22DA               	addwfc	fsr2h,f,c
  2648  006C42  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  2649  006C46  0012               	return		;funcret
  2650  006C48                     __end_of_PID_SetMode:
  2651                           	opt stack 0
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           postinc0	equ	0xFEE
  2657                           wreg	equ	0xFE8
  2658                           postinc1	equ	0xFE6
  2659                           postdec1	equ	0xFE5
  2660                           fsr1h	equ	0xFE2
  2661                           fsr1l	equ	0xFE1
  2662                           indf2	equ	0xFDF
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _PID_Initialize *****************
  2670 ;; Defined at:
  2671 ;;		line 167 in file "pid.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  pid             2    9[COMRAM] PTR struct .
  2674 ;;		 -> main@PID(45), 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2686 ;;      Params:         2       0       0       0       0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2689 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2690 ;;Total ram usage:        2 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    1
  2693 ;; This function calls:
  2694 ;;		___ftge
  2695 ;; This function is called by:
  2696 ;;		_PID_SetMode
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text11
  2701  007184                     __ptext11:
  2702                           	opt stack 0
  2703  007184                     _PID_Initialize:
  2704                           	opt stack 28
  2705                           
  2706                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  2707                           
  2708                           ;incstack = 0
  2709  007184  EE20 F016          	lfsr	2,22
  2710  007188  500A               	movf	PID_Initialize@pid,w,c
  2711  00718A  26D9               	addwf	fsr2l,f,c
  2712  00718C  500B               	movf	PID_Initialize@pid+1,w,c
  2713  00718E  22DA               	addwfc	fsr2h,f,c
  2714  007190  EE10 F01C          	lfsr	1,28
  2715  007194  500A               	movf	PID_Initialize@pid,w,c
  2716  007196  26E1               	addwf	fsr1l,f,c
  2717  007198  500B               	movf	PID_Initialize@pid+1,w,c
  2718  00719A  22E2               	addwfc	fsr1h,f,c
  2719  00719C  CFDE FFE6          	movff	postinc2,postinc1
  2720  0071A0  CFDE FFE6          	movff	postinc2,postinc1
  2721  0071A4  CFDE FFE6          	movff	postinc2,postinc1
  2722                           
  2723                           ;pid.c: 169: pid->lastInput = pid->myInput;
  2724  0071A8  EE20 F013          	lfsr	2,19
  2725  0071AC  500A               	movf	PID_Initialize@pid,w,c
  2726  0071AE  26D9               	addwf	fsr2l,f,c
  2727  0071B0  500B               	movf	PID_Initialize@pid+1,w,c
  2728  0071B2  22DA               	addwfc	fsr2h,f,c
  2729  0071B4  EE10 F01F          	lfsr	1,31
  2730  0071B8  500A               	movf	PID_Initialize@pid,w,c
  2731  0071BA  26E1               	addwf	fsr1l,f,c
  2732  0071BC  500B               	movf	PID_Initialize@pid+1,w,c
  2733  0071BE  22E2               	addwfc	fsr1h,f,c
  2734  0071C0  CFDE FFE6          	movff	postinc2,postinc1
  2735  0071C4  CFDE FFE6          	movff	postinc2,postinc1
  2736  0071C8  CFDE FFE6          	movff	postinc2,postinc1
  2737                           
  2738                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  2739  0071CC  EE20 F029          	lfsr	2,41
  2740  0071D0  500A               	movf	PID_Initialize@pid,w,c
  2741  0071D2  26D9               	addwf	fsr2l,f,c
  2742  0071D4  500B               	movf	PID_Initialize@pid+1,w,c
  2743  0071D6  22DA               	addwfc	fsr2h,f,c
  2744  0071D8  CFDE F001          	movff	postinc2,___ftge@ff1
  2745  0071DC  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2746  0071E0  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2747  0071E4  EE20 F01C          	lfsr	2,28
  2748  0071E8  500A               	movf	PID_Initialize@pid,w,c
  2749  0071EA  26D9               	addwf	fsr2l,f,c
  2750  0071EC  500B               	movf	PID_Initialize@pid+1,w,c
  2751  0071EE  22DA               	addwfc	fsr2h,f,c
  2752  0071F0  CFDE F004          	movff	postinc2,___ftge@ff2
  2753  0071F4  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2754  0071F8  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2755  0071FC  EC52  F036         	call	___ftge	;wreg free
  2756  007200  B0D8               	btfsc	status,0,c
  2757  007202  D013               	goto	l1613
  2758                           
  2759                           ;pid.c: 171: pid->ITerm = pid->outMax;
  2760  007204  EE20 F029          	lfsr	2,41
  2761  007208  500A               	movf	PID_Initialize@pid,w,c
  2762  00720A  26D9               	addwf	fsr2l,f,c
  2763  00720C  500B               	movf	PID_Initialize@pid+1,w,c
  2764  00720E  22DA               	addwfc	fsr2h,f,c
  2765  007210  EE10 F01C          	lfsr	1,28
  2766  007214  500A               	movf	PID_Initialize@pid,w,c
  2767  007216  26E1               	addwf	fsr1l,f,c
  2768  007218  500B               	movf	PID_Initialize@pid+1,w,c
  2769  00721A  22E2               	addwfc	fsr1h,f,c
  2770  00721C  CFDE FFE6          	movff	postinc2,postinc1
  2771  007220  CFDE FFE6          	movff	postinc2,postinc1
  2772  007224  CFDE FFE6          	movff	postinc2,postinc1
  2773                           
  2774                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  2775  007228  0012               	return	
  2776  00722A                     l1613:
  2777  00722A  EE20 F01C          	lfsr	2,28
  2778  00722E  500A               	movf	PID_Initialize@pid,w,c
  2779  007230  26D9               	addwf	fsr2l,f,c
  2780  007232  500B               	movf	PID_Initialize@pid+1,w,c
  2781  007234  22DA               	addwfc	fsr2h,f,c
  2782  007236  CFDE F001          	movff	postinc2,___ftge@ff1
  2783  00723A  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2784  00723E  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2785  007242  EE20 F026          	lfsr	2,38
  2786  007246  500A               	movf	PID_Initialize@pid,w,c
  2787  007248  26D9               	addwf	fsr2l,f,c
  2788  00724A  500B               	movf	PID_Initialize@pid+1,w,c
  2789  00724C  22DA               	addwfc	fsr2h,f,c
  2790  00724E  CFDE F004          	movff	postinc2,___ftge@ff2
  2791  007252  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2792  007256  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2793  00725A  EC52  F036         	call	___ftge	;wreg free
  2794  00725E  B0D8               	btfsc	status,0,c
  2795  007260  0012               	return	
  2796                           
  2797                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2798  007262  EE20 F026          	lfsr	2,38
  2799  007266  500A               	movf	PID_Initialize@pid,w,c
  2800  007268  26D9               	addwf	fsr2l,f,c
  2801  00726A  500B               	movf	PID_Initialize@pid+1,w,c
  2802  00726C  22DA               	addwfc	fsr2h,f,c
  2803  00726E  EE10 F01C          	lfsr	1,28
  2804  007272  500A               	movf	PID_Initialize@pid,w,c
  2805  007274  26E1               	addwf	fsr1l,f,c
  2806  007276  500B               	movf	PID_Initialize@pid+1,w,c
  2807  007278  22E2               	addwfc	fsr1h,f,c
  2808  00727A  CFDE FFE6          	movff	postinc2,postinc1
  2809  00727E  CFDE FFE6          	movff	postinc2,postinc1
  2810  007282  CFDE FFE6          	movff	postinc2,postinc1
  2811  007286  0012               	return	
  2812  007288                     __end_of_PID_Initialize:
  2813                           	opt stack 0
  2814                           tblptru	equ	0xFF8
  2815                           tblptrh	equ	0xFF7
  2816                           tblptrl	equ	0xFF6
  2817                           tablat	equ	0xFF5
  2818                           postinc0	equ	0xFEE
  2819                           wreg	equ	0xFE8
  2820                           postinc1	equ	0xFE6
  2821                           postdec1	equ	0xFE5
  2822                           fsr1h	equ	0xFE2
  2823                           fsr1l	equ	0xFE1
  2824                           indf2	equ	0xFDF
  2825                           postinc2	equ	0xFDE
  2826                           postdec2	equ	0xFDD
  2827                           fsr2h	equ	0xFDA
  2828                           fsr2l	equ	0xFD9
  2829                           status	equ	0xFD8
  2830                           
  2831 ;; *************** function _PID_Compute *****************
  2832 ;; Defined at:
  2833 ;;		line 43 in file "pid.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  pid             2   38[COMRAM] PTR struct .
  2836 ;;		 -> main@PID(45), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  output          3   52[COMRAM] float 
  2839 ;;  input           3   49[COMRAM] float 
  2840 ;;  error           3   46[COMRAM] float 
  2841 ;;  dInput          3   40[COMRAM] float 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      unsigned char 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         2       0       0       0       0       0       0       0       0
  2852 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2854 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2855 ;;Total ram usage:       17 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		___ftadd
  2860 ;;		___ftge
  2861 ;;		___ftmul
  2862 ;;		___ftneg
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text12
  2869  0078BE                     __ptext12:
  2870                           	opt stack 0
  2871  0078BE                     _PID_Compute:
  2872                           	opt stack 28
  2873                           
  2874                           ;pid.c: 44: if (!pid->inAuto) {
  2875                           
  2876                           ;incstack = 0
  2877  0078BE  EE20 F02C          	lfsr	2,44
  2878  0078C2  5027               	movf	PID_Compute@pid,w,c
  2879  0078C4  26D9               	addwf	fsr2l,f,c
  2880  0078C6  5028               	movf	PID_Compute@pid+1,w,c
  2881  0078C8  22DA               	addwfc	fsr2h,f,c
  2882  0078CA  50DF               	movf	indf2,w,c
  2883  0078CC  B4D8               	btfsc	status,2,c
  2884  0078CE  0012               	return	
  2885                           
  2886                           ;pid.c: 46: }
  2887                           ;pid.c: 51: FloatType input = pid->myInput;
  2888                           
  2889                           ;pid.c: 45: return 0;
  2890                           ;	Return value of _PID_Compute is never used
  2891  0078D0  EE20 F013          	lfsr	2,19
  2892  0078D4  5027               	movf	PID_Compute@pid,w,c
  2893  0078D6  26D9               	addwf	fsr2l,f,c
  2894  0078D8  5028               	movf	PID_Compute@pid+1,w,c
  2895  0078DA  22DA               	addwfc	fsr2h,f,c
  2896  0078DC  CFDE F032          	movff	postinc2,PID_Compute@input
  2897  0078E0  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2898  0078E4  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2899                           
  2900                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2901  0078E8  C032  F024         	movff	PID_Compute@input,___ftneg@f1
  2902  0078EC  C033  F025         	movff	PID_Compute@input+1,___ftneg@f1+1
  2903  0078F0  C034  F026         	movff	PID_Compute@input+2,___ftneg@f1+2
  2904  0078F4  ECA9  F035         	call	___ftneg	;wreg free
  2905  0078F8  C024  F018         	movff	?___ftneg,___ftadd@f1
  2906  0078FC  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2907  007900  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2908  007904  EE20 F019          	lfsr	2,25
  2909  007908  5027               	movf	PID_Compute@pid,w,c
  2910  00790A  26D9               	addwf	fsr2l,f,c
  2911  00790C  5028               	movf	PID_Compute@pid+1,w,c
  2912  00790E  22DA               	addwfc	fsr2h,f,c
  2913  007910  CFDE F01B          	movff	postinc2,___ftadd@f2
  2914  007914  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2915  007918  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2916  00791C  ECC9  F039         	call	___ftadd	;wreg free
  2917  007920  C018  F02F         	movff	?___ftadd,PID_Compute@error
  2918  007924  C019  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2919  007928  C01A  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2920                           
  2921                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2922  00792C  EE20 F01C          	lfsr	2,28
  2923  007930  5027               	movf	PID_Compute@pid,w,c
  2924  007932  26D9               	addwf	fsr2l,f,c
  2925  007934  5028               	movf	PID_Compute@pid+1,w,c
  2926  007936  22DA               	addwfc	fsr2h,f,c
  2927  007938  CFDE F018          	movff	postinc2,___ftadd@f1
  2928  00793C  CFDE F019          	movff	postinc2,___ftadd@f1+1
  2929  007940  CFDD F01A          	movff	postdec2,___ftadd@f1+2
  2930  007944  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2931  007948  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2932  00794C  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2933  007950  EE20 F00C          	lfsr	2,12
  2934  007954  5027               	movf	PID_Compute@pid,w,c
  2935  007956  26D9               	addwf	fsr2l,f,c
  2936  007958  5028               	movf	PID_Compute@pid+1,w,c
  2937  00795A  22DA               	addwfc	fsr2h,f,c
  2938  00795C  CFDE F009          	movff	postinc2,___ftmul@f1
  2939  007960  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2940  007964  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2941  007968  ECCE  F037         	call	___ftmul	;wreg free
  2942  00796C  C009  F01B         	movff	?___ftmul,___ftadd@f2
  2943  007970  C00A  F01C         	movff	?___ftmul+1,___ftadd@f2+1
  2944  007974  C00B  F01D         	movff	?___ftmul+2,___ftadd@f2+2
  2945  007978  ECC9  F039         	call	___ftadd	;wreg free
  2946  00797C  EE20 F01C          	lfsr	2,28
  2947  007980  5027               	movf	PID_Compute@pid,w,c
  2948  007982  26D9               	addwf	fsr2l,f,c
  2949  007984  5028               	movf	PID_Compute@pid+1,w,c
  2950  007986  22DA               	addwfc	fsr2h,f,c
  2951  007988  C018  FFDE         	movff	?___ftadd,postinc2
  2952  00798C  C019  FFDE         	movff	?___ftadd+1,postinc2
  2953  007990  C01A  FFDE         	movff	?___ftadd+2,postinc2
  2954                           
  2955                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2956  007994  EE20 F029          	lfsr	2,41
  2957  007998  5027               	movf	PID_Compute@pid,w,c
  2958  00799A  26D9               	addwf	fsr2l,f,c
  2959  00799C  5028               	movf	PID_Compute@pid+1,w,c
  2960  00799E  22DA               	addwfc	fsr2h,f,c
  2961  0079A0  CFDE F001          	movff	postinc2,___ftge@ff1
  2962  0079A4  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2963  0079A8  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2964  0079AC  EE20 F01C          	lfsr	2,28
  2965  0079B0  5027               	movf	PID_Compute@pid,w,c
  2966  0079B2  26D9               	addwf	fsr2l,f,c
  2967  0079B4  5028               	movf	PID_Compute@pid+1,w,c
  2968  0079B6  22DA               	addwfc	fsr2h,f,c
  2969  0079B8  CFDE F004          	movff	postinc2,___ftge@ff2
  2970  0079BC  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2971  0079C0  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2972  0079C4  EC52  F036         	call	___ftge	;wreg free
  2973  0079C8  B0D8               	btfsc	status,0,c
  2974  0079CA  D003               	goto	l1719
  2975                           
  2976                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2977  0079CC  EE20 F029          	lfsr	2,41
  2978  0079D0  D01E               	goto	L2
  2979  0079D2                     l1719:
  2980                           
  2981                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2982  0079D2  EE20 F01C          	lfsr	2,28
  2983  0079D6  5027               	movf	PID_Compute@pid,w,c
  2984  0079D8  26D9               	addwf	fsr2l,f,c
  2985  0079DA  5028               	movf	PID_Compute@pid+1,w,c
  2986  0079DC  22DA               	addwfc	fsr2h,f,c
  2987  0079DE  CFDE F001          	movff	postinc2,___ftge@ff1
  2988  0079E2  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2989  0079E6  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2990  0079EA  EE20 F026          	lfsr	2,38
  2991  0079EE  5027               	movf	PID_Compute@pid,w,c
  2992  0079F0  26D9               	addwf	fsr2l,f,c
  2993  0079F2  5028               	movf	PID_Compute@pid+1,w,c
  2994  0079F4  22DA               	addwfc	fsr2h,f,c
  2995  0079F6  CFDE F004          	movff	postinc2,___ftge@ff2
  2996  0079FA  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2997  0079FE  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2998  007A02  EC52  F036         	call	___ftge	;wreg free
  2999  007A06  B0D8               	btfsc	status,0,c
  3000  007A08  D012               	goto	l1723
  3001                           
  3002                           ;pid.c: 57: pid->ITerm = pid->outMin;
  3003  007A0A  EE20 F026          	lfsr	2,38
  3004  007A0E                     L2:
  3005  007A0E  5027               	movf	PID_Compute@pid,w,c
  3006  007A10  26D9               	addwf	fsr2l,f,c
  3007  007A12  5028               	movf	PID_Compute@pid+1,w,c
  3008  007A14  22DA               	addwfc	fsr2h,f,c
  3009  007A16  EE10 F01C          	lfsr	1,28
  3010  007A1A  5027               	movf	PID_Compute@pid,w,c
  3011  007A1C  26E1               	addwf	fsr1l,f,c
  3012  007A1E  5028               	movf	PID_Compute@pid+1,w,c
  3013  007A20  22E2               	addwfc	fsr1h,f,c
  3014  007A22  CFDE FFE6          	movff	postinc2,postinc1
  3015  007A26  CFDE FFE6          	movff	postinc2,postinc1
  3016  007A2A  CFDE FFE6          	movff	postinc2,postinc1
  3017  007A2E                     l1723:
  3018                           
  3019                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  3020  007A2E  EE20 F01F          	lfsr	2,31
  3021  007A32  5027               	movf	PID_Compute@pid,w,c
  3022  007A34  26D9               	addwf	fsr2l,f,c
  3023  007A36  5028               	movf	PID_Compute@pid+1,w,c
  3024  007A38  22DA               	addwfc	fsr2h,f,c
  3025  007A3A  CFDE F024          	movff	postinc2,___ftneg@f1
  3026  007A3E  CFDE F025          	movff	postinc2,___ftneg@f1+1
  3027  007A42  CFDD F026          	movff	postdec2,___ftneg@f1+2
  3028  007A46  ECA9  F035         	call	___ftneg	;wreg free
  3029  007A4A  C024  F018         	movff	?___ftneg,___ftadd@f1
  3030  007A4E  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  3031  007A52  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  3032  007A56  C032  F01B         	movff	PID_Compute@input,___ftadd@f2
  3033  007A5A  C033  F01C         	movff	PID_Compute@input+1,___ftadd@f2+1
  3034  007A5E  C034  F01D         	movff	PID_Compute@input+2,___ftadd@f2+2
  3035  007A62  ECC9  F039         	call	___ftadd	;wreg free
  3036  007A66  C018  F029         	movff	?___ftadd,PID_Compute@dInput
  3037  007A6A  C019  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  3038  007A6E  C01A  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  3039                           
  3040                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  3041  007A72  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  3042  007A76  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  3043  007A7A  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  3044  007A7E  EE20 F00F          	lfsr	2,15
  3045  007A82  5027               	movf	PID_Compute@pid,w,c
  3046  007A84  26D9               	addwf	fsr2l,f,c
  3047  007A86  5028               	movf	PID_Compute@pid+1,w,c
  3048  007A88  22DA               	addwfc	fsr2h,f,c
  3049  007A8A  CFDE F009          	movff	postinc2,___ftmul@f1
  3050  007A8E  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  3051  007A92  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  3052  007A96  ECCE  F037         	call	___ftmul	;wreg free
  3053  007A9A  C009  F024         	movff	?___ftmul,___ftneg@f1
  3054  007A9E  C00A  F025         	movff	?___ftmul+1,___ftneg@f1+1
  3055  007AA2  C00B  F026         	movff	?___ftmul+2,___ftneg@f1+2
  3056  007AA6  ECA9  F035         	call	___ftneg	;wreg free
  3057  007AAA  C024  F01B         	movff	?___ftneg,___ftadd@f2
  3058  007AAE  C025  F01C         	movff	?___ftneg+1,___ftadd@f2+1
  3059  007AB2  C026  F01D         	movff	?___ftneg+2,___ftadd@f2+2
  3060  007AB6  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  3061  007ABA  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  3062  007ABE  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  3063  007AC2  EE20 F009          	lfsr	2,9
  3064  007AC6  5027               	movf	PID_Compute@pid,w,c
  3065  007AC8  26D9               	addwf	fsr2l,f,c
  3066  007ACA  5028               	movf	PID_Compute@pid+1,w,c
  3067  007ACC  22DA               	addwfc	fsr2h,f,c
  3068  007ACE  CFDE F009          	movff	postinc2,___ftmul@f1
  3069  007AD2  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  3070  007AD6  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  3071  007ADA  ECCE  F037         	call	___ftmul	;wreg free
  3072  007ADE  C009  F018         	movff	?___ftmul,___ftadd@f1
  3073  007AE2  C00A  F019         	movff	?___ftmul+1,___ftadd@f1+1
  3074  007AE6  C00B  F01A         	movff	?___ftmul+2,___ftadd@f1+2
  3075  007AEA  ECC9  F039         	call	___ftadd	;wreg free
  3076  007AEE  C018  F02C         	movff	?___ftadd,_PID_Compute$1041
  3077  007AF2  C019  F02D         	movff	?___ftadd+1,_PID_Compute$1041+1
  3078  007AF6  C01A  F02E         	movff	?___ftadd+2,_PID_Compute$1041+2
  3079                           
  3080                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  3081  007AFA  C02C  F018         	movff	_PID_Compute$1041,___ftadd@f1
  3082  007AFE  C02D  F019         	movff	_PID_Compute$1041+1,___ftadd@f1+1
  3083  007B02  C02E  F01A         	movff	_PID_Compute$1041+2,___ftadd@f1+2
  3084  007B06  EE20 F01C          	lfsr	2,28
  3085  007B0A  5027               	movf	PID_Compute@pid,w,c
  3086  007B0C  26D9               	addwf	fsr2l,f,c
  3087  007B0E  5028               	movf	PID_Compute@pid+1,w,c
  3088  007B10  22DA               	addwfc	fsr2h,f,c
  3089  007B12  CFDE F01B          	movff	postinc2,___ftadd@f2
  3090  007B16  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  3091  007B1A  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  3092  007B1E  ECC9  F039         	call	___ftadd	;wreg free
  3093  007B22  C018  F035         	movff	?___ftadd,PID_Compute@output
  3094  007B26  C019  F036         	movff	?___ftadd+1,PID_Compute@output+1
  3095  007B2A  C01A  F037         	movff	?___ftadd+2,PID_Compute@output+2
  3096                           
  3097                           ;pid.c: 63: if (output > pid->outMax)
  3098  007B2E  EE20 F029          	lfsr	2,41
  3099  007B32  5027               	movf	PID_Compute@pid,w,c
  3100  007B34  26D9               	addwf	fsr2l,f,c
  3101  007B36  5028               	movf	PID_Compute@pid+1,w,c
  3102  007B38  22DA               	addwfc	fsr2h,f,c
  3103  007B3A  CFDE F001          	movff	postinc2,___ftge@ff1
  3104  007B3E  CFDE F002          	movff	postinc2,___ftge@ff1+1
  3105  007B42  CFDD F003          	movff	postdec2,___ftge@ff1+2
  3106  007B46  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  3107  007B4A  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  3108  007B4E  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  3109  007B52  EC52  F036         	call	___ftge	;wreg free
  3110  007B56  B0D8               	btfsc	status,0,c
  3111  007B58  D003               	goto	l1733
  3112                           
  3113                           ;pid.c: 64: output = pid->outMax;
  3114  007B5A  EE20 F029          	lfsr	2,41
  3115  007B5E  D018               	goto	L3
  3116  007B60                     l1733:
  3117                           
  3118                           ;pid.c: 65: else if (output < pid->outMin)
  3119  007B60  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  3120  007B64  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  3121  007B68  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  3122  007B6C  EE20 F026          	lfsr	2,38
  3123  007B70  5027               	movf	PID_Compute@pid,w,c
  3124  007B72  26D9               	addwf	fsr2l,f,c
  3125  007B74  5028               	movf	PID_Compute@pid+1,w,c
  3126  007B76  22DA               	addwfc	fsr2h,f,c
  3127  007B78  CFDE F004          	movff	postinc2,___ftge@ff2
  3128  007B7C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  3129  007B80  CFDD F006          	movff	postdec2,___ftge@ff2+2
  3130  007B84  EC52  F036         	call	___ftge	;wreg free
  3131  007B88  B0D8               	btfsc	status,0,c
  3132  007B8A  D00C               	goto	l105
  3133                           
  3134                           ;pid.c: 66: output = pid->outMin;
  3135  007B8C  EE20 F026          	lfsr	2,38
  3136  007B90                     L3:
  3137  007B90  5027               	movf	PID_Compute@pid,w,c
  3138  007B92  26D9               	addwf	fsr2l,f,c
  3139  007B94  5028               	movf	PID_Compute@pid+1,w,c
  3140  007B96  22DA               	addwfc	fsr2h,f,c
  3141  007B98  CFDE F035          	movff	postinc2,PID_Compute@output
  3142  007B9C  CFDE F036          	movff	postinc2,PID_Compute@output+1
  3143  007BA0  CFDD F037          	movff	postdec2,PID_Compute@output+2
  3144  007BA4                     l105:
  3145                           
  3146                           ;pid.c: 67: pid->myOutput = output;
  3147  007BA4  EE20 F016          	lfsr	2,22
  3148  007BA8  5027               	movf	PID_Compute@pid,w,c
  3149  007BAA  26D9               	addwf	fsr2l,f,c
  3150  007BAC  5028               	movf	PID_Compute@pid+1,w,c
  3151  007BAE  22DA               	addwfc	fsr2h,f,c
  3152  007BB0  C035  FFDE         	movff	PID_Compute@output,postinc2
  3153  007BB4  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  3154  007BB8  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  3155                           
  3156                           ;pid.c: 70: pid->lastInput = input;
  3157  007BBC  EE20 F01F          	lfsr	2,31
  3158  007BC0  5027               	movf	PID_Compute@pid,w,c
  3159  007BC2  26D9               	addwf	fsr2l,f,c
  3160  007BC4  5028               	movf	PID_Compute@pid+1,w,c
  3161  007BC6  22DA               	addwfc	fsr2h,f,c
  3162  007BC8  C032  FFDE         	movff	PID_Compute@input,postinc2
  3163  007BCC  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  3164  007BD0  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  3165  007BD4  0012               	return	
  3166  007BD6                     __end_of_PID_Compute:
  3167                           	opt stack 0
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           postinc1	equ	0xFE6
  3175                           postdec1	equ	0xFE5
  3176                           fsr1h	equ	0xFE2
  3177                           fsr1l	equ	0xFE1
  3178                           indf2	equ	0xFDF
  3179                           postinc2	equ	0xFDE
  3180                           postdec2	equ	0xFDD
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           
  3185 ;; *************** function ___ftneg *****************
  3186 ;; Defined at:
  3187 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  f1              3   35[COMRAM] float 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  3   35[COMRAM] float 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3201 ;;      Params:         3       0       0       0       0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3204 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_main
  3211 ;;		_PID_Compute
  3212 ;;		_PID_SetTunings
  3213 ;;		_PID_SetControllerDirection
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text13
  3218  006B52                     __ptext13:
  3219                           	opt stack 0
  3220  006B52                     ___ftneg:
  3221                           	opt stack 30
  3222                           
  3223                           ;incstack = 0
  3224  006B52  5024               	movf	___ftneg@f1,w,c
  3225  006B54  1025               	iorwf	___ftneg@f1+1,w,c
  3226  006B56  1026               	iorwf	___ftneg@f1+2,w,c
  3227  006B58  B4D8               	btfsc	status,2,c
  3228  006B5A  D006               	goto	l462
  3229  006B5C  0E00               	movlw	0
  3230  006B5E  1A24               	xorwf	___ftneg@f1,f,c
  3231  006B60  0E00               	movlw	0
  3232  006B62  1A25               	xorwf	___ftneg@f1+1,f,c
  3233  006B64  0E80               	movlw	128
  3234  006B66  1A26               	xorwf	___ftneg@f1+2,f,c
  3235  006B68                     l462:
  3236  006B68  C024  F024         	movff	___ftneg@f1,?___ftneg
  3237  006B6C  C025  F025         	movff	___ftneg@f1+1,?___ftneg+1
  3238  006B70  C026  F026         	movff	___ftneg@f1+2,?___ftneg+2
  3239  006B74  0012               	return		;funcret
  3240  006B76                     __end_of___ftneg:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           postinc1	equ	0xFE6
  3249                           postdec1	equ	0xFE5
  3250                           fsr1h	equ	0xFE2
  3251                           fsr1l	equ	0xFE1
  3252                           indf2	equ	0xFDF
  3253                           postinc2	equ	0xFDE
  3254                           postdec2	equ	0xFDD
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function ___ftmul *****************
  3260 ;; Defined at:
  3261 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  f1              3    8[COMRAM] float 
  3264 ;;  f2              3   11[COMRAM] float 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  3267 ;;  sign            1   22[COMRAM] unsigned char 
  3268 ;;  cntr            1   21[COMRAM] unsigned char 
  3269 ;;  exp             1   17[COMRAM] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  3    8[COMRAM] float 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3279 ;;      Params:         6       0       0       0       0       0       0       0       0
  3280 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3281 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3282 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3283 ;;Total ram usage:       15 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    1
  3286 ;; This function calls:
  3287 ;;		___ftpack
  3288 ;; This function is called by:
  3289 ;;		_PID_Compute
  3290 ;;		_PID_SetTunings
  3291 ;;		_PID_SetSampleTime
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text14
  3296  006F9C                     __ptext14:
  3297                           	opt stack 0
  3298  006F9C                     ___ftmul:
  3299                           	opt stack 27
  3300                           
  3301                           ;incstack = 0
  3302  006F9C  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  3303  006FA0  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3304  006FA2  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3305  006FA4  340A               	rlcf	___ftmul@f1+1,w,c
  3306  006FA6  360F               	rlcf	??___ftmul& (0+255),f,c
  3307  006FA8  E301               	bnc	u1011
  3308  006FAA  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3309  006FAC                     u1011:
  3310  006FAC  500F               	movf	??___ftmul,w,c
  3311  006FAE  6E12               	movwf	___ftmul@exp,c
  3312  006FB0  5012               	movf	___ftmul@exp,w,c
  3313  006FB2  A4D8               	btfss	status,2,c
  3314  006FB4  D007               	goto	l1479
  3315  006FB6  0E00               	movlw	0
  3316  006FB8  6E09               	movwf	?___ftmul,c
  3317  006FBA  0E00               	movlw	0
  3318  006FBC  6E0A               	movwf	?___ftmul+1,c
  3319  006FBE  0E00               	movlw	0
  3320  006FC0  6E0B               	movwf	?___ftmul+2,c
  3321  006FC2  0012               	return	
  3322  006FC4                     l1479:
  3323  006FC4  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  3324  006FC8  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3325  006FCA  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3326  006FCC  340D               	rlcf	___ftmul@f2+1,w,c
  3327  006FCE  360F               	rlcf	??___ftmul& (0+255),f,c
  3328  006FD0  E301               	bnc	u1031
  3329  006FD2  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3330  006FD4                     u1031:
  3331  006FD4  500F               	movf	??___ftmul,w,c
  3332  006FD6  6E17               	movwf	___ftmul@sign,c
  3333  006FD8  5017               	movf	___ftmul@sign,w,c
  3334  006FDA  A4D8               	btfss	status,2,c
  3335  006FDC  D007               	goto	l1485
  3336  006FDE  0E00               	movlw	0
  3337  006FE0  6E09               	movwf	?___ftmul,c
  3338  006FE2  0E00               	movlw	0
  3339  006FE4  6E0A               	movwf	?___ftmul+1,c
  3340  006FE6  0E00               	movlw	0
  3341  006FE8  6E0B               	movwf	?___ftmul+2,c
  3342  006FEA  0012               	return	
  3343  006FEC                     l1485:
  3344  006FEC  5017               	movf	___ftmul@sign,w,c
  3345  006FEE  0F7B               	addlw	123
  3346  006FF0  2612               	addwf	___ftmul@exp,f,c
  3347  006FF2  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  3348  006FF6  500E               	movf	___ftmul@f2+2,w,c
  3349  006FF8  1A17               	xorwf	___ftmul@sign,f,c
  3350  006FFA  0E80               	movlw	128
  3351  006FFC  1617               	andwf	___ftmul@sign,f,c
  3352  006FFE  8E0A               	bsf	___ftmul@f1+1,7,c
  3353  007000  8E0D               	bsf	___ftmul@f2+1,7,c
  3354  007002  0EFF               	movlw	255
  3355  007004  160C               	andwf	___ftmul@f2,f,c
  3356  007006  0EFF               	movlw	255
  3357  007008  160D               	andwf	___ftmul@f2+1,f,c
  3358  00700A  0E00               	movlw	0
  3359  00700C  160E               	andwf	___ftmul@f2+2,f,c
  3360  00700E  0E00               	movlw	0
  3361  007010  6E13               	movwf	___ftmul@f3_as_product,c
  3362  007012  0E00               	movlw	0
  3363  007014  6E14               	movwf	___ftmul@f3_as_product+1,c
  3364  007016  0E00               	movlw	0
  3365  007018  6E15               	movwf	___ftmul@f3_as_product+2,c
  3366  00701A  0E07               	movlw	7
  3367  00701C  6E16               	movwf	___ftmul@cntr,c
  3368  00701E                     l1499:
  3369  00701E  A009               	btfss	___ftmul@f1,0,c
  3370  007020  D006               	goto	l1503
  3371  007022  500C               	movf	___ftmul@f2,w,c
  3372  007024  2613               	addwf	___ftmul@f3_as_product,f,c
  3373  007026  500D               	movf	___ftmul@f2+1,w,c
  3374  007028  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3375  00702A  500E               	movf	___ftmul@f2+2,w,c
  3376  00702C  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3377  00702E                     l1503:
  3378  00702E  90D8               	bcf	status,0,c
  3379  007030  320B               	rrcf	___ftmul@f1+2,f,c
  3380  007032  320A               	rrcf	___ftmul@f1+1,f,c
  3381  007034  3209               	rrcf	___ftmul@f1,f,c
  3382  007036  90D8               	bcf	status,0,c
  3383  007038  360C               	rlcf	___ftmul@f2,f,c
  3384  00703A  360D               	rlcf	___ftmul@f2+1,f,c
  3385  00703C  360E               	rlcf	___ftmul@f2+2,f,c
  3386  00703E  2E16               	decfsz	___ftmul@cntr,f,c
  3387  007040  D7EE               	goto	l1499
  3388  007042  0E09               	movlw	9
  3389  007044  6E16               	movwf	___ftmul@cntr,c
  3390  007046                     l1509:
  3391  007046  A009               	btfss	___ftmul@f1,0,c
  3392  007048  D006               	goto	l1513
  3393  00704A  500C               	movf	___ftmul@f2,w,c
  3394  00704C  2613               	addwf	___ftmul@f3_as_product,f,c
  3395  00704E  500D               	movf	___ftmul@f2+1,w,c
  3396  007050  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3397  007052  500E               	movf	___ftmul@f2+2,w,c
  3398  007054  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3399  007056                     l1513:
  3400  007056  90D8               	bcf	status,0,c
  3401  007058  320B               	rrcf	___ftmul@f1+2,f,c
  3402  00705A  320A               	rrcf	___ftmul@f1+1,f,c
  3403  00705C  3209               	rrcf	___ftmul@f1,f,c
  3404  00705E  90D8               	bcf	status,0,c
  3405  007060  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  3406  007062  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  3407  007064  3213               	rrcf	___ftmul@f3_as_product,f,c
  3408  007066  2E16               	decfsz	___ftmul@cntr,f,c
  3409  007068  D7EE               	goto	l1509
  3410  00706A  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3411  00706E  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3412  007072  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3413  007076  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  3414  00707A  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  3415  00707E  EC9A  F036         	call	___ftpack	;wreg free
  3416  007082  C001  F009         	movff	?___ftpack,?___ftmul
  3417  007086  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  3418  00708A  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  3419  00708E  0012               	return	
  3420  007090                     __end_of___ftmul:
  3421                           	opt stack 0
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           postinc0	equ	0xFEE
  3427                           wreg	equ	0xFE8
  3428                           postinc1	equ	0xFE6
  3429                           postdec1	equ	0xFE5
  3430                           fsr1h	equ	0xFE2
  3431                           fsr1l	equ	0xFE1
  3432                           indf2	equ	0xFDF
  3433                           postinc2	equ	0xFDE
  3434                           postdec2	equ	0xFDD
  3435                           fsr2h	equ	0xFDA
  3436                           fsr2l	equ	0xFD9
  3437                           status	equ	0xFD8
  3438                           
  3439 ;; *************** function ___ftge *****************
  3440 ;; Defined at:
  3441 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  ff1             3    0[COMRAM] float 
  3444 ;;  ff2             3    3[COMRAM] float 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;		None               void
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         6       0       0       0       0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3459 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3460 ;;Total ram usage:        9 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;;		_PID_Compute
  3467 ;;		_PID_SetOutputLimits
  3468 ;;		_PID_Initialize
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text15
  3473  006CA4                     __ptext15:
  3474                           	opt stack 0
  3475  006CA4                     ___ftge:
  3476                           	opt stack 30
  3477                           
  3478                           ;incstack = 0
  3479  006CA4  AE03               	btfss	___ftge@ff1+2,7,c
  3480  006CA6  D016               	goto	l1525
  3481  006CA8  C001  F007         	movff	___ftge@ff1,??___ftge
  3482  006CAC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3483  006CB0  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3484  006CB4  1E07               	comf	??___ftge,f,c
  3485  006CB6  1E08               	comf	??___ftge+1,f,c
  3486  006CB8  1E09               	comf	??___ftge+2,f,c
  3487  006CBA  2A07               	incf	??___ftge,f,c
  3488  006CBC  0E00               	movlw	0
  3489  006CBE  2208               	addwfc	??___ftge+1,f,c
  3490  006CC0  2209               	addwfc	??___ftge+2,f,c
  3491  006CC2  0E00               	movlw	0
  3492  006CC4  2407               	addwf	??___ftge,w,c
  3493  006CC6  6E01               	movwf	___ftge@ff1,c
  3494  006CC8  0E00               	movlw	0
  3495  006CCA  2008               	addwfc	??___ftge+1,w,c
  3496  006CCC  6E02               	movwf	___ftge@ff1+1,c
  3497  006CCE  0E80               	movlw	128
  3498  006CD0  2009               	addwfc	??___ftge+2,w,c
  3499  006CD2  6E03               	movwf	___ftge@ff1+2,c
  3500  006CD4                     l1525:
  3501  006CD4  AE06               	btfss	___ftge@ff2+2,7,c
  3502  006CD6  D016               	goto	l1529
  3503  006CD8  C004  F007         	movff	___ftge@ff2,??___ftge
  3504  006CDC  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3505  006CE0  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3506  006CE4  1E07               	comf	??___ftge,f,c
  3507  006CE6  1E08               	comf	??___ftge+1,f,c
  3508  006CE8  1E09               	comf	??___ftge+2,f,c
  3509  006CEA  2A07               	incf	??___ftge,f,c
  3510  006CEC  0E00               	movlw	0
  3511  006CEE  2208               	addwfc	??___ftge+1,f,c
  3512  006CF0  2209               	addwfc	??___ftge+2,f,c
  3513  006CF2  0E00               	movlw	0
  3514  006CF4  2407               	addwf	??___ftge,w,c
  3515  006CF6  6E04               	movwf	___ftge@ff2,c
  3516  006CF8  0E00               	movlw	0
  3517  006CFA  2008               	addwfc	??___ftge+1,w,c
  3518  006CFC  6E05               	movwf	___ftge@ff2+1,c
  3519  006CFE  0E80               	movlw	128
  3520  006D00  2009               	addwfc	??___ftge+2,w,c
  3521  006D02  6E06               	movwf	___ftge@ff2+2,c
  3522  006D04                     l1529:
  3523  006D04  0E00               	movlw	0
  3524  006D06  1A01               	xorwf	___ftge@ff1,f,c
  3525  006D08  0E00               	movlw	0
  3526  006D0A  1A02               	xorwf	___ftge@ff1+1,f,c
  3527  006D0C  0E80               	movlw	128
  3528  006D0E  1A03               	xorwf	___ftge@ff1+2,f,c
  3529  006D10  0E00               	movlw	0
  3530  006D12  1A04               	xorwf	___ftge@ff2,f,c
  3531  006D14  0E00               	movlw	0
  3532  006D16  1A05               	xorwf	___ftge@ff2+1,f,c
  3533  006D18  0E80               	movlw	128
  3534  006D1A  1A06               	xorwf	___ftge@ff2+2,f,c
  3535  006D1C  5004               	movf	___ftge@ff2,w,c
  3536  006D1E  5C01               	subwf	___ftge@ff1,w,c
  3537  006D20  5005               	movf	___ftge@ff2+1,w,c
  3538  006D22  5802               	subwfb	___ftge@ff1+1,w,c
  3539  006D24  5006               	movf	___ftge@ff2+2,w,c
  3540  006D26  5803               	subwfb	___ftge@ff1+2,w,c
  3541  006D28  B0D8               	btfsc	status,0,c
  3542  006D2A  D002               	goto	l1535
  3543  006D2C  90D8               	bcf	status,0,c
  3544  006D2E  0012               	return	
  3545  006D30                     l1535:
  3546  006D30  80D8               	bsf	status,0,c
  3547  006D32  0012               	return	
  3548  006D34                     __end_of___ftge:
  3549                           	opt stack 0
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postinc1	equ	0xFE6
  3557                           postdec1	equ	0xFE5
  3558                           fsr1h	equ	0xFE2
  3559                           fsr1l	equ	0xFE1
  3560                           indf2	equ	0xFDF
  3561                           postinc2	equ	0xFDE
  3562                           postdec2	equ	0xFDD
  3563                           fsr2h	equ	0xFDA
  3564                           fsr2l	equ	0xFD9
  3565                           status	equ	0xFD8
  3566                           
  3567 ;; *************** function ___ftadd *****************
  3568 ;; Defined at:
  3569 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  f1              3   23[COMRAM] float 
  3572 ;;  f2              3   26[COMRAM] float 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  exp1            1   34[COMRAM] unsigned char 
  3575 ;;  exp2            1   33[COMRAM] unsigned char 
  3576 ;;  sign            1   32[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  3   23[COMRAM] float 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3586 ;;      Params:         6       0       0       0       0       0       0       0       0
  3587 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3588 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3589 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3590 ;;Total ram usage:       12 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    1
  3593 ;; This function calls:
  3594 ;;		___ftpack
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;;		_PID_Compute
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text16
  3602  007392                     __ptext16:
  3603                           	opt stack 0
  3604  007392                     ___ftadd:
  3605                           	opt stack 29
  3606                           
  3607                           ;incstack = 0
  3608  007392  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  3609  007396  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3610  007398  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3611  00739A  3419               	rlcf	___ftadd@f1+1,w,c
  3612  00739C  361E               	rlcf	??___ftadd& (0+255),f,c
  3613  00739E  E301               	bnc	u1261
  3614  0073A0  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3615  0073A2                     u1261:
  3616  0073A2  501E               	movf	??___ftadd,w,c
  3617  0073A4  6E23               	movwf	___ftadd@exp1,c
  3618  0073A6  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  3619  0073AA  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3620  0073AC  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3621  0073AE  341C               	rlcf	___ftadd@f2+1,w,c
  3622  0073B0  361E               	rlcf	??___ftadd& (0+255),f,c
  3623  0073B2  E301               	bnc	u1271
  3624  0073B4  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3625  0073B6                     u1271:
  3626  0073B6  501E               	movf	??___ftadd,w,c
  3627  0073B8  6E22               	movwf	___ftadd@exp2,c
  3628  0073BA  5023               	movf	___ftadd@exp1,w,c
  3629  0073BC  B4D8               	btfsc	status,2,c
  3630  0073BE  D00B               	goto	l405
  3631  0073C0  5022               	movf	___ftadd@exp2,w,c
  3632  0073C2  5C23               	subwf	___ftadd@exp1,w,c
  3633  0073C4  B0D8               	btfsc	status,0,c
  3634  0073C6  D00E               	goto	l1625
  3635  0073C8  5023               	movf	___ftadd@exp1,w,c
  3636  0073CA  0800               	sublw	0
  3637  0073CC  2422               	addwf	___ftadd@exp2,w,c
  3638  0073CE  6E1E               	movwf	??___ftadd& (0+255),c
  3639  0073D0  0E18               	movlw	24
  3640  0073D2  641E               	cpfsgt	??___ftadd,c
  3641  0073D4  D007               	goto	l1625
  3642  0073D6                     l405:
  3643  0073D6  C01B  F018         	movff	___ftadd@f2,?___ftadd
  3644  0073DA  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  3645  0073DE  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  3646  0073E2  0012               	return	
  3647  0073E4                     l1625:
  3648  0073E4  5022               	movf	___ftadd@exp2,w,c
  3649  0073E6  B4D8               	btfsc	status,2,c
  3650  0073E8  D00B               	goto	l409
  3651  0073EA  5023               	movf	___ftadd@exp1,w,c
  3652  0073EC  5C22               	subwf	___ftadd@exp2,w,c
  3653  0073EE  B0D8               	btfsc	status,0,c
  3654  0073F0  D00E               	goto	l1631
  3655  0073F2  5022               	movf	___ftadd@exp2,w,c
  3656  0073F4  0800               	sublw	0
  3657  0073F6  2423               	addwf	___ftadd@exp1,w,c
  3658  0073F8  6E1E               	movwf	??___ftadd& (0+255),c
  3659  0073FA  0E18               	movlw	24
  3660  0073FC  641E               	cpfsgt	??___ftadd,c
  3661  0073FE  D007               	goto	l1631
  3662  007400                     l409:
  3663  007400  C018  F018         	movff	___ftadd@f1,?___ftadd
  3664  007404  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  3665  007408  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  3666  00740C  0012               	return	
  3667  00740E                     l1631:
  3668  00740E  0E06               	movlw	6
  3669  007410  6E21               	movwf	___ftadd@sign,c
  3670  007412  BE1A               	btfsc	___ftadd@f1+2,7,c
  3671  007414  8E21               	bsf	___ftadd@sign,7,c
  3672  007416  BE1D               	btfsc	___ftadd@f2+2,7,c
  3673  007418  8C21               	bsf	___ftadd@sign,6,c
  3674  00741A  8E19               	bsf	___ftadd@f1+1,7,c
  3675  00741C  0EFF               	movlw	255
  3676  00741E  1618               	andwf	___ftadd@f1,f,c
  3677  007420  0EFF               	movlw	255
  3678  007422  1619               	andwf	___ftadd@f1+1,f,c
  3679  007424  0E00               	movlw	0
  3680  007426  161A               	andwf	___ftadd@f1+2,f,c
  3681  007428  8E1C               	bsf	___ftadd@f2+1,7,c
  3682  00742A  0EFF               	movlw	255
  3683  00742C  161B               	andwf	___ftadd@f2,f,c
  3684  00742E  0EFF               	movlw	255
  3685  007430  161C               	andwf	___ftadd@f2+1,f,c
  3686  007432  0E00               	movlw	0
  3687  007434  161D               	andwf	___ftadd@f2+2,f,c
  3688  007436  5022               	movf	___ftadd@exp2,w,c
  3689  007438  5C23               	subwf	___ftadd@exp1,w,c
  3690  00743A  B0D8               	btfsc	status,0,c
  3691  00743C  D01B               	goto	l1657
  3692  00743E                     l1647:
  3693  00743E  90D8               	bcf	status,0,c
  3694  007440  361B               	rlcf	___ftadd@f2,f,c
  3695  007442  361C               	rlcf	___ftadd@f2+1,f,c
  3696  007444  361D               	rlcf	___ftadd@f2+2,f,c
  3697  007446  0622               	decf	___ftadd@exp2,f,c
  3698  007448  5023               	movf	___ftadd@exp1,w,c
  3699  00744A  1822               	xorwf	___ftadd@exp2,w,c
  3700  00744C  B4D8               	btfsc	status,2,c
  3701  00744E  D00D               	goto	l1655
  3702  007450  0621               	decf	___ftadd@sign,f,c
  3703  007452  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3704  007456  0E07               	movlw	7
  3705  007458  161E               	andwf	??___ftadd,f,c
  3706  00745A  B4D8               	btfsc	status,2,c
  3707  00745C  D006               	goto	l1655
  3708  00745E  D7EF               	goto	l1647
  3709  007460                     l1653:
  3710  007460  90D8               	bcf	status,0,c
  3711  007462  321A               	rrcf	___ftadd@f1+2,f,c
  3712  007464  3219               	rrcf	___ftadd@f1+1,f,c
  3713  007466  3218               	rrcf	___ftadd@f1,f,c
  3714  007468  2A23               	incf	___ftadd@exp1,f,c
  3715  00746A                     l1655:
  3716  00746A  5022               	movf	___ftadd@exp2,w,c
  3717  00746C  1823               	xorwf	___ftadd@exp1,w,c
  3718  00746E  B4D8               	btfsc	status,2,c
  3719  007470  D01F               	goto	l420
  3720  007472  D7F6               	goto	l1653
  3721  007474                     l1657:
  3722  007474  5023               	movf	___ftadd@exp1,w,c
  3723  007476  5C22               	subwf	___ftadd@exp2,w,c
  3724  007478  B0D8               	btfsc	status,0,c
  3725  00747A  D01A               	goto	l420
  3726  00747C                     l1659:
  3727  00747C  90D8               	bcf	status,0,c
  3728  00747E  3618               	rlcf	___ftadd@f1,f,c
  3729  007480  3619               	rlcf	___ftadd@f1+1,f,c
  3730  007482  361A               	rlcf	___ftadd@f1+2,f,c
  3731  007484  0623               	decf	___ftadd@exp1,f,c
  3732  007486  5023               	movf	___ftadd@exp1,w,c
  3733  007488  1822               	xorwf	___ftadd@exp2,w,c
  3734  00748A  B4D8               	btfsc	status,2,c
  3735  00748C  D00D               	goto	l1667
  3736  00748E  0621               	decf	___ftadd@sign,f,c
  3737  007490  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3738  007494  0E07               	movlw	7
  3739  007496  161E               	andwf	??___ftadd,f,c
  3740  007498  B4D8               	btfsc	status,2,c
  3741  00749A  D006               	goto	l1667
  3742  00749C  D7EF               	goto	l1659
  3743  00749E                     l1665:
  3744  00749E  90D8               	bcf	status,0,c
  3745  0074A0  321D               	rrcf	___ftadd@f2+2,f,c
  3746  0074A2  321C               	rrcf	___ftadd@f2+1,f,c
  3747  0074A4  321B               	rrcf	___ftadd@f2,f,c
  3748  0074A6  2A22               	incf	___ftadd@exp2,f,c
  3749  0074A8                     l1667:
  3750  0074A8  5022               	movf	___ftadd@exp2,w,c
  3751  0074AA  1823               	xorwf	___ftadd@exp1,w,c
  3752  0074AC  A4D8               	btfss	status,2,c
  3753  0074AE  D7F7               	goto	l1665
  3754  0074B0                     l420:
  3755  0074B0  AE21               	btfss	___ftadd@sign,7,c
  3756  0074B2  D00C               	goto	l429
  3757  0074B4  0EFF               	movlw	255
  3758  0074B6  1A18               	xorwf	___ftadd@f1,f,c
  3759  0074B8  0EFF               	movlw	255
  3760  0074BA  1A19               	xorwf	___ftadd@f1+1,f,c
  3761  0074BC  0EFF               	movlw	255
  3762  0074BE  1A1A               	xorwf	___ftadd@f1+2,f,c
  3763  0074C0  0E01               	movlw	1
  3764  0074C2  2618               	addwf	___ftadd@f1,f,c
  3765  0074C4  0E00               	movlw	0
  3766  0074C6  2219               	addwfc	___ftadd@f1+1,f,c
  3767  0074C8  0E00               	movlw	0
  3768  0074CA  221A               	addwfc	___ftadd@f1+2,f,c
  3769  0074CC                     l429:
  3770  0074CC  AC21               	btfss	___ftadd@sign,6,c
  3771  0074CE  D00C               	goto	l1673
  3772  0074D0  0EFF               	movlw	255
  3773  0074D2  1A1B               	xorwf	___ftadd@f2,f,c
  3774  0074D4  0EFF               	movlw	255
  3775  0074D6  1A1C               	xorwf	___ftadd@f2+1,f,c
  3776  0074D8  0EFF               	movlw	255
  3777  0074DA  1A1D               	xorwf	___ftadd@f2+2,f,c
  3778  0074DC  0E01               	movlw	1
  3779  0074DE  261B               	addwf	___ftadd@f2,f,c
  3780  0074E0  0E00               	movlw	0
  3781  0074E2  221C               	addwfc	___ftadd@f2+1,f,c
  3782  0074E4  0E00               	movlw	0
  3783  0074E6  221D               	addwfc	___ftadd@f2+2,f,c
  3784  0074E8                     l1673:
  3785  0074E8  0E00               	movlw	0
  3786  0074EA  6E21               	movwf	___ftadd@sign,c
  3787  0074EC  5018               	movf	___ftadd@f1,w,c
  3788  0074EE  261B               	addwf	___ftadd@f2,f,c
  3789  0074F0  5019               	movf	___ftadd@f1+1,w,c
  3790  0074F2  221C               	addwfc	___ftadd@f2+1,f,c
  3791  0074F4  501A               	movf	___ftadd@f1+2,w,c
  3792  0074F6  221D               	addwfc	___ftadd@f2+2,f,c
  3793  0074F8  AE1D               	btfss	___ftadd@f2+2,7,c
  3794  0074FA  D00E               	goto	l1683
  3795  0074FC  0EFF               	movlw	255
  3796  0074FE  1A1B               	xorwf	___ftadd@f2,f,c
  3797  007500  0EFF               	movlw	255
  3798  007502  1A1C               	xorwf	___ftadd@f2+1,f,c
  3799  007504  0EFF               	movlw	255
  3800  007506  1A1D               	xorwf	___ftadd@f2+2,f,c
  3801  007508  0E01               	movlw	1
  3802  00750A  261B               	addwf	___ftadd@f2,f,c
  3803  00750C  0E00               	movlw	0
  3804  00750E  221C               	addwfc	___ftadd@f2+1,f,c
  3805  007510  0E00               	movlw	0
  3806  007512  221D               	addwfc	___ftadd@f2+2,f,c
  3807  007514  0E01               	movlw	1
  3808  007516  6E21               	movwf	___ftadd@sign,c
  3809  007518                     l1683:
  3810  007518  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  3811  00751C  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3812  007520  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3813  007524  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  3814  007528  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  3815  00752C  EC9A  F036         	call	___ftpack	;wreg free
  3816  007530  C001  F018         	movff	?___ftpack,?___ftadd
  3817  007534  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  3818  007538  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  3819  00753C  0012               	return	
  3820  00753E                     __end_of___ftadd:
  3821                           	opt stack 0
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           postinc0	equ	0xFEE
  3827                           wreg	equ	0xFE8
  3828                           postinc1	equ	0xFE6
  3829                           postdec1	equ	0xFE5
  3830                           fsr1h	equ	0xFE2
  3831                           fsr1l	equ	0xFE1
  3832                           indf2	equ	0xFDF
  3833                           postinc2	equ	0xFDE
  3834                           postdec2	equ	0xFDD
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function ___ftpack *****************
  3840 ;; Defined at:
  3841 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  arg             3    0[COMRAM] unsigned um
  3844 ;;  exp             1    3[COMRAM] unsigned char 
  3845 ;;  sign            1    4[COMRAM] unsigned char 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  3    0[COMRAM] float 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3857 ;;      Params:         5       0       0       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3859 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3860 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        8 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		___awtoft
  3867 ;;		___ftadd
  3868 ;;		___ftdiv
  3869 ;;		___ftmul
  3870 ;;		___lbtoft
  3871 ;;		___lltoft
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text17
  3876  006D34                     __ptext17:
  3877                           	opt stack 0
  3878  006D34                     ___ftpack:
  3879                           	opt stack 29
  3880                           
  3881                           ;incstack = 0
  3882  006D34  5004               	movf	___ftpack@exp,w,c
  3883  006D36  B4D8               	btfsc	status,2,c
  3884  006D38  D005               	goto	l1395
  3885  006D3A  5001               	movf	___ftpack@arg,w,c
  3886  006D3C  1002               	iorwf	___ftpack@arg+1,w,c
  3887  006D3E  1003               	iorwf	___ftpack@arg+2,w,c
  3888  006D40  A4D8               	btfss	status,2,c
  3889  006D42  D00C               	goto	l1401
  3890  006D44                     l1395:
  3891  006D44  0E00               	movlw	0
  3892  006D46  6E01               	movwf	?___ftpack,c
  3893  006D48  0E00               	movlw	0
  3894  006D4A  6E02               	movwf	?___ftpack+1,c
  3895  006D4C  0E00               	movlw	0
  3896  006D4E  6E03               	movwf	?___ftpack+2,c
  3897  006D50  0012               	return	
  3898  006D52                     l1399:
  3899  006D52  2A04               	incf	___ftpack@exp,f,c
  3900  006D54  90D8               	bcf	status,0,c
  3901  006D56  3203               	rrcf	___ftpack@arg+2,f,c
  3902  006D58  3202               	rrcf	___ftpack@arg+1,f,c
  3903  006D5A  3201               	rrcf	___ftpack@arg,f,c
  3904  006D5C                     l1401:
  3905  006D5C  0E00               	movlw	0
  3906  006D5E  1401               	andwf	___ftpack@arg,w,c
  3907  006D60  6E06               	movwf	??___ftpack& (0+255),c
  3908  006D62  0E00               	movlw	0
  3909  006D64  1402               	andwf	___ftpack@arg+1,w,c
  3910  006D66  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3911  006D68  0EFE               	movlw	254
  3912  006D6A  1403               	andwf	___ftpack@arg+2,w,c
  3913  006D6C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3914  006D6E  5006               	movf	??___ftpack,w,c
  3915  006D70  1007               	iorwf	??___ftpack+1,w,c
  3916  006D72  1008               	iorwf	??___ftpack+2,w,c
  3917  006D74  B4D8               	btfsc	status,2,c
  3918  006D76  D00C               	goto	l1407
  3919  006D78  D7EC               	goto	l1399
  3920  006D7A                     l1403:
  3921  006D7A  2A04               	incf	___ftpack@exp,f,c
  3922  006D7C  0E01               	movlw	1
  3923  006D7E  2601               	addwf	___ftpack@arg,f,c
  3924  006D80  0E00               	movlw	0
  3925  006D82  2202               	addwfc	___ftpack@arg+1,f,c
  3926  006D84  0E00               	movlw	0
  3927  006D86  2203               	addwfc	___ftpack@arg+2,f,c
  3928  006D88  90D8               	bcf	status,0,c
  3929  006D8A  3203               	rrcf	___ftpack@arg+2,f,c
  3930  006D8C  3202               	rrcf	___ftpack@arg+1,f,c
  3931  006D8E  3201               	rrcf	___ftpack@arg,f,c
  3932  006D90                     l1407:
  3933  006D90  0E00               	movlw	0
  3934  006D92  1401               	andwf	___ftpack@arg,w,c
  3935  006D94  6E06               	movwf	??___ftpack& (0+255),c
  3936  006D96  0E00               	movlw	0
  3937  006D98  1402               	andwf	___ftpack@arg+1,w,c
  3938  006D9A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3939  006D9C  0EFF               	movlw	255
  3940  006D9E  1403               	andwf	___ftpack@arg+2,w,c
  3941  006DA0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3942  006DA2  5006               	movf	??___ftpack,w,c
  3943  006DA4  1007               	iorwf	??___ftpack+1,w,c
  3944  006DA6  1008               	iorwf	??___ftpack+2,w,c
  3945  006DA8  B4D8               	btfsc	status,2,c
  3946  006DAA  D006               	goto	l1411
  3947  006DAC  D7E6               	goto	l1403
  3948  006DAE                     l1409:
  3949  006DAE  0604               	decf	___ftpack@exp,f,c
  3950  006DB0  90D8               	bcf	status,0,c
  3951  006DB2  3601               	rlcf	___ftpack@arg,f,c
  3952  006DB4  3602               	rlcf	___ftpack@arg+1,f,c
  3953  006DB6  3603               	rlcf	___ftpack@arg+2,f,c
  3954  006DB8                     l1411:
  3955  006DB8  BE02               	btfsc	___ftpack@arg+1,7,c
  3956  006DBA  D003               	goto	l382
  3957  006DBC  0E02               	movlw	2
  3958  006DBE  6004               	cpfslt	___ftpack@exp,c
  3959  006DC0  D7F6               	goto	l1409
  3960  006DC2                     l382:
  3961  006DC2  A004               	btfss	___ftpack@exp,0,c
  3962  006DC4  9E02               	bcf	___ftpack@arg+1,7,c
  3963  006DC6  90D8               	bcf	status,0,c
  3964  006DC8  3204               	rrcf	___ftpack@exp,f,c
  3965  006DCA  5004               	movf	___ftpack@exp,w,c
  3966  006DCC  1203               	iorwf	___ftpack@arg+2,f,c
  3967  006DCE  5005               	movf	___ftpack@sign,w,c
  3968  006DD0  A4D8               	btfss	status,2,c
  3969  006DD2  8E03               	bsf	___ftpack@arg+2,7,c
  3970  006DD4  C001  F001         	movff	___ftpack@arg,?___ftpack
  3971  006DD8  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3972  006DDC  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3973  006DE0  0012               	return	
  3974  006DE2                     __end_of___ftpack:
  3975                           	opt stack 0
  3976  0000                     tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           postinc0	equ	0xFEE
  3981                           wreg	equ	0xFE8
  3982                           postinc1	equ	0xFE6
  3983                           postdec1	equ	0xFE5
  3984                           fsr1h	equ	0xFE2
  3985                           fsr1l	equ	0xFE1
  3986                           indf2	equ	0xFDF
  3987                           postinc2	equ	0xFDE
  3988                           postdec2	equ	0xFDD
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           tblptru	equ	0xFF8
  3993                           tblptrh	equ	0xFF7
  3994                           tblptrl	equ	0xFF6
  3995                           tablat	equ	0xFF5
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           postinc1	equ	0xFE6
  3999                           postdec1	equ	0xFE5
  4000                           fsr1h	equ	0xFE2
  4001                           fsr1l	equ	0xFE1
  4002                           indf2	equ	0xFDF
  4003                           postinc2	equ	0xFDE
  4004                           postdec2	equ	0xFDD
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009                           	psect	rparam
  4010  0000                     tblptru	equ	0xFF8
  4011                           tblptrh	equ	0xFF7
  4012                           tblptrl	equ	0xFF6
  4013                           tablat	equ	0xFF5
  4014                           postinc0	equ	0xFEE
  4015                           wreg	equ	0xFE8
  4016                           postinc1	equ	0xFE6
  4017                           postdec1	equ	0xFE5
  4018                           fsr1h	equ	0xFE2
  4019                           fsr1l	equ	0xFE1
  4020                           indf2	equ	0xFDF
  4021                           postinc2	equ	0xFDE
  4022                           postdec2	equ	0xFDD
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      67
    BANK0           160     56      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftneg
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___awtoft
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftneg
    ___ftneg->___ftadd
    ___ftmul->___ftpack
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   49291
                                              0 BANK0     56    56      0
                        _PID_Compute
                        _PID_SetMode
                _PID_SetOutputLimits
                           _PID_init
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2863
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   15789
                                             53 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11584
                                             38 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3656
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2382
                                             12 COMRAM     8     0      8
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3    1135
                                             38 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    2045
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1760
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   11776
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     741
                                             35 COMRAM     3     0      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1420
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    5190
                                             23 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_SetOutputLimits
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftdiv
     ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___ftge
   ___ftneg
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      52       5       51.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      43       1       70.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      20        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 22 11:24:27 2017

                                  _A 00A1                                    _B 009E  
                                  _C 009B                                    _D 0098  
                    PID_SetMode@Mode 000E                                   l61 7C78  
                                 l55 7C1C                                   l72 7DF0  
                                 l64 7CA6                                   l82 7FE4  
                                 l58 7C4A                                   l75 7E1E  
                                 l69 7DC2                                   l78 7E4C  
             __end_of_PID_Initialize 7288                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                       ___ftadd@exp1 0023                         ___ftadd@exp2 0022  
              ??_PID_SetOutputLimits 0015                         ___ftadd@sign 0021  
                                l105 7BA4                                  l420 74B0  
                                l405 73D6                                  l440 6F6A  
                                l409 7400                                  l429 74CC  
                                l382 6DC2                                  l462 6B68  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u961 6EC6                                  u981 6EEE  
                       __CFG_BOR$OFF 000000                    PID_Compute@dInput 0029  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 001B                         ___ftdiv@sign 0020  
                       __CFG_WDT$OFF 000000                                 l1401 6D5C  
                               l1411 6DB8                                 l1403 6D7A  
                               l1407 6D90                                 l1503 702E  
                               l1409 6DAE                                 l1513 7056  
                               l1433 6EDE                                 l1525 6CD4  
                               l1509 7046                                 l1613 722A  
                               l1631 740E                                 l1535 6D30  
                               l1703 6C36                                 l1439 6F06  
                               l1625 73E4                                 l1529 6D04  
                               l1545 6C4E                                 l1395 6D44  
                               l1723 7A2E                                 l1571 7698  
                               l1563 75DE                                 l1459 6F44  
                               l1547 6C5A                                 l1653 7460  
                               l1485 6FEC                                 l1733 7B60  
                               l1581 6EA4                                 l1399 6D52  
                               l1655 746A                                 l1647 743E  
                               l1479 6FC4                                 l1719 79D2  
                               l1567 763A                                 l1673 74E8  
                               l1665 749E                                 l1657 7474  
                               l1817 7BF8                                 l1683 7518  
                               l1667 74A8                                 l1659 747C  
                               l1499 701E                                 l1747 6BE4  
                               l1757 70BC                                 l1775 7122  
                               l1793 7172                                 l1785 714A  
                               l1787 7156                                 l1779 7132  
                               l1883 7D74                                 l1789 715C  
                               l1967 7FC6                                 l1887 7DB2  
                               u1011 6FAC                                 u1031 6FD4  
                               u1261 73A2                                 u1271 73B6  
                               u1470 6C12                                 u1480 6C14  
                               u1561 70A0                                 u1580 70DA  
                               u1807 7C90                                 u1585 70D2  
                               u1817 7C9E                                 u1907 7E64  
                               u1827 7CBE                                 u1837 7DBA  
                               u1757 7C14                                 u1847 7DDA  
                               u1767 7C34                                 u1857 7DE8  
                               u1777 7C42                                 u1867 7E08  
                               u1787 7C62                                 u1877 7E16  
                               u1797 7C70                                 u1887 7E36  
                               u1897 7E44                    PID_Compute@output 0035  
                       __CFG_PWRT$ON 000000                                 _main 7BD6  
                       ___ftpack@arg 0001                         ___ftpack@exp 0004  
                               _sign 0042                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             PID_SetOutputLimits@Max 0012               PID_SetOutputLimits@Min 000F  
             PID_SetOutputLimits@pid 000D               __end_of_PID_SetTunings 78BE  
                               start 0000                        __CFG_IESO$OFF 000000  
                       ___ftmul@cntr 0016                         ___param_bank 000000  
                       ___ftmul@sign 0017                         ___fttol@exp1 000F  
                       ___fttol@lval 000B                        __CFG_PLLDIV$5 000000  
                    ?_PID_Initialize 000A                                ?_main 0001  
                    __end_of___ftadd 753E                      __end_of___ftdiv 6F9C  
                    __end_of___ftneg 6B76                      __end_of___ftmul 7090  
                    __end_of___fttol 7184                                _PORTB 000F81  
                              _PORTD 000F83                        __CFG_USBDIV$1 000000  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                         ___lltoft@exp 0011  
                   __end_of_PID_init 7392                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                                _Input 00A4  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                        ___awtoft@sign 000C  
                 PID_SetMode@newAuto 0010                        ___ftpack@sign 0005  
                              tablat 000FF5                                status 000FD8  
                     __CFG_ICPRT$OFF 000000                      ?_PID_SetTunings 0027  
                       ?_PID_Compute 0027                       __CFG_MCLRE$OFF 000000  
                    __initialization 6B9A                         __end_of_main 8000  
                       ?_PID_SetMode 000C                               ??_main 0042  
                      ___fttol@sign1 000A                        __activetblptr 000000  
                   PID_SetTunings@Kd 002F                     PID_SetTunings@Ki 002C  
                   PID_SetTunings@Kp 0029                      __CFG_CCP2MX$OFF 000000  
                   __end_of___awtoft 6C08                     __end_of___ftpack 6DE2  
                   __end_of___lbtoft 6B9A                     __end_of___lltoft 6CA4  
                             _TMR1CS 007E69                               _TMR3CS 007D89  
                     __CFG_XINST$OFF 000000                               _Output 00AA  
                             ___ftge 6CA4                            ??___ftadd 001E  
                          ??___ftdiv 0018                            ??___ftneg 0027  
                          ??___ftmul 000F                            ??___fttol 0005  
                             clear_0 6BC0                               _output 00AD  
              ___ftmul@f3_as_product 0013                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0060              __end_of__initialization 6BCA  
                    __CFG_PBADEN$OFF 000000                           ___ftadd@f1 0018  
                         ___ftadd@f2 001B                           ___ftge@ff1 0001  
                         ___ftge@ff2 0004                        ___rparam_used 000001  
                         ___ftdiv@f1 0012                           ___ftdiv@f2 0015  
                         ___ftdiv@f3 001C                           ___ftneg@f1 0024  
                         ___awtoft@c 0009                           ___lbtoft@c 000C  
                         ___ftmul@f1 0009                           ___ftmul@f2 000C  
                         ___fttol@f1 0001                       __pcstackCOMRAM 0001  
                          ?_PID_init 0036                         __pidataBANK0 6B4E  
                         ___lltoft@c 0009                           __pbssBANK0 0098  
                  PID_SetTunings@pid 0027                     ??_PID_Initialize 000C  
                            ?___ftge 0001                           ??_PID_init 0042  
        __end_of_PID_SetOutputLimits 76F6                 __size_of_PID_Compute 0318  
               __size_of_PID_SetMode 0040                            ?___awtoft 0009  
                          ?___ftpack 0001                            ?___lbtoft 0009  
                          ?___lltoft 0009                          PID_init@pid 0036  
                   ??_PID_SetTunings 0032                       PID_Compute@pid 0027  
                    __CFG_VREGEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000         ??_PID_SetControllerDirection 002A  
PID_SetControllerDirection@Direction 0029                      __size_of___ftge 0090  
                            ___ftadd 7392                              ___ftdiv 6EB6  
                            ___ftneg 6B52                              ___ftmul 6F9C  
                            ___fttol 7090                      __CFG_STVREN$OFF 000000  
                            __pcinit 6B9A                           ??___awtoft 000C  
                         ??___ftpack 0006                           ??___lbtoft 000C  
                            __ramtop 0800                           ??___lltoft 000D  
                            __ptext0 7BD6                              __ptext1 6B76  
                            __ptext2 7090                              __ptext3 6BD0  
                            __ptext4 7288                              __ptext5 76F6  
                            __ptext6 6C48                              __ptext7 6EB6  
                            __ptext8 753E                              __ptext9 6DE2  
        PID_init@ControllerDirection 0041                              main@PID 006B  
                            main@err 0060                 end_of_initialization 6BCA  
__size_of_PID_SetControllerDirection 00D4                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                          _PORTCbits 000F82                       PID_SetMode@pid 000C  
                   PID_Compute@error 002F                     PID_Compute@input 0032  
                        ___ftdiv@exp 001F                          ___ftmul@exp 0012  
                     __end_of___ftge 6D34                    __size_of_PID_init 010A  
                start_initialization 6B9A                    PID_Initialize@pid 000A  
 __end_of_PID_SetControllerDirection 6EB6           _PID_SetControllerDirection 6DE2  
                           ??___ftge 0007                          __pdataBANK0 00AE  
                   __CFG_LPT1OSC$OFF 000000                    __size_of___awtoft 0038  
                  __size_of___ftpack 00AE                    __size_of___lbtoft 0024  
                  __size_of___lltoft 005C                          __pbssCOMRAM 0042  
                      __pcstackBANK0 0060                     _PID_Compute$1041 002C  
                      ??_PID_Compute 0029                            _main$1040 0066  
                          _main$1039 0063                        ??_PID_SetMode 000F  
                           ?___ftadd 0018                             ?___ftdiv 0012  
                           ?___ftneg 0024                             ?___ftmul 0009  
                           ?___fttol 0001                           PID_init@Kd 003E  
                         PID_init@Ki 003B                           PID_init@Kp 0038  
       __size_of_PID_SetOutputLimits 01B8                     __CFG_WDTPS$32768 000000  
                           _PID_init 7288                  __end_of_PID_Compute 7BD6  
                __end_of_PID_SetMode 6C48              __size_of_PID_Initialize 0104  
                          main@count 0069                            copy_data0 6BAE  
                           __Hrparam 0000                             __Lrparam 0000  
            __size_of_PID_SetTunings 01C8                             _Setpoint 00A7  
                   __size_of___ftadd 01AC                     __size_of___ftdiv 00E6  
                   __size_of___ftneg 0024                     __size_of___ftmul 00F4  
                   __size_of___fttol 00F4                             ___awtoft 6BD0  
                           ___ftpack 6D34                             ___lbtoft 6B76  
                           ___lltoft 6C48                             __ptext10 6C08  
                           __ptext11 7184                             __ptext12 78BE  
                           __ptext13 6B52                             __ptext14 6F9C  
                           __ptext15 6CA4                             __ptext16 7392  
                           __ptext17 6D34                        __size_of_main 042A  
                        _PID_Compute 78BE          ?_PID_SetControllerDirection 0027  
                        _PID_SetMode 6C08                          _PID_Out_Max 00AE  
                        _PID_Out_Min 00B0                __CFG_CPUDIV$OSC2_PLL3 000000  
      PID_SetControllerDirection@pid 0027                  _PID_SetOutputLimits 753E  
                     _PID_Initialize 7184                 ?_PID_SetOutputLimits 000D  
                 __CFG_FOSC$HSPLL_HS 000000        PID_SetTunings@SampleTimeInSec 0033  
                     _PID_SetTunings 76F6  
