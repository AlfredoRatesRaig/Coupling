

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 08 18:20:42 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 1.42
    33                           ; Generated 13/04/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataBANK0
    68  006D8C                     __pidataBANK0:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _PID_Out_Max
    72  006D8C  000A               	dw	10
    73  0000                     _PORTD	set	3971
    74  0000                     _PORTB	set	3969
    75  0000                     _PORTCbits	set	3970
    76  0000                     _TRISC	set	3988
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISB	set	3987
    79  0000                     _TMR3CS	set	32137
    80  0000                     _TMR1CS	set	32361
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  006DD6                     __pcinit:
    86                           	opt stack 0
    87  006DD6                     start_initialization:
    88                           	opt stack 0
    89  006DD6                     __initialization:
    90                           	opt stack 0
    91                           
    92                           ; Initialize objects allocated to BANK0 (2 bytes)
    93                           ; load TBLPTR registers with __pidataBANK0
    94  006DD6  0E8C               	movlw	low __pidataBANK0
    95  006DD8  6EF6               	movwf	tblptrl,c
    96  006DDA  0E6D               	movlw	high __pidataBANK0
    97  006DDC  6EF7               	movwf	tblptrh,c
    98  006DDE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
    99  006DE0  6EF8               	movwf	tblptru,c
   100  006DE2  0009               	tblrd		*+	;fetch initializer
   101  006DE4  CFF5 F0A9          	movff	tablat,__pdataBANK0
   102  006DE8  0009               	tblrd		*+	;fetch initializer
   103  006DEA  CFF5 F0AA          	movff	tablat,__pdataBANK0+1
   104                           
   105                           ; Clear objects allocated to BANK0 (22 bytes)
   106  006DEE  EE00  F093         	lfsr	0,__pbssBANK0
   107  006DF2  0E16               	movlw	22
   108  006DF4                     clear_0:
   109  006DF4  6AEE               	clrf	postinc0,c
   110  006DF6  06E8               	decf	wreg,f,c
   111  006DF8  E1FD               	bnz	clear_0
   112  006DFA                     end_of_initialization:
   113                           	opt stack 0
   114  006DFA                     __end_of__initialization:
   115                           	opt stack 0
   116  006DFA  0100               	movlb	0
   117  006DFC  EF77  F03D         	goto	_main	;jump to C main() function
   118                           tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           tblptrl	equ	0xFF6
   121                           tablat	equ	0xFF5
   122                           postinc0	equ	0xFEE
   123                           wreg	equ	0xFE8
   124                           
   125                           	psect	bssBANK0
   126  000093                     __pbssBANK0:
   127                           	opt stack 0
   128  000093                     _D:
   129                           	opt stack 0
   130  000093                     	ds	3
   131  000096                     _C:
   132                           	opt stack 0
   133  000096                     	ds	3
   134  000099                     _B:
   135                           	opt stack 0
   136  000099                     	ds	3
   137  00009C                     _A:
   138                           	opt stack 0
   139  00009C                     	ds	3
   140  00009F                     _Input:
   141                           	opt stack 0
   142  00009F                     	ds	3
   143  0000A2                     _Output:
   144                           	opt stack 0
   145  0000A2                     	ds	3
   146  0000A5                     _Setpoint:
   147                           	opt stack 0
   148  0000A5                     	ds	2
   149  0000A7                     _PID_Out_Min:
   150                           	opt stack 0
   151  0000A7                     	ds	2
   152                           tblptru	equ	0xFF8
   153                           tblptrh	equ	0xFF7
   154                           tblptrl	equ	0xFF6
   155                           tablat	equ	0xFF5
   156                           postinc0	equ	0xFEE
   157                           wreg	equ	0xFE8
   158                           
   159                           	psect	dataBANK0
   160  0000A9                     __pdataBANK0:
   161                           	opt stack 0
   162  0000A9                     _PID_Out_Max:
   163                           	opt stack 0
   164  0000A9                     	ds	2
   165                           tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           tblptrl	equ	0xFF6
   168                           tablat	equ	0xFF5
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	cstackBANK0
   173  000060                     __pcstackBANK0:
   174                           	opt stack 0
   175  000060                     _main$1035:
   176                           	opt stack 0
   177                           
   178                           ; 3 bytes @ 0x0
   179  000060                     	ds	3
   180  000063                     _main$1036:
   181                           	opt stack 0
   182                           
   183                           ; 3 bytes @ 0x3
   184  000063                     	ds	3
   185  000066                     main@PID:
   186                           	opt stack 0
   187                           
   188                           ; 45 bytes @ 0x6
   189  000066                     	ds	45
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           
   197                           	psect	cstackCOMRAM
   198  000001                     __pcstackCOMRAM:
   199                           	opt stack 0
   200  000001                     ?___ftpack:
   201                           	opt stack 0
   202  000001                     ?___fttol:
   203                           	opt stack 0
   204  000001                     ___ftpack@arg:
   205                           	opt stack 0
   206  000001                     ___ftge@ff1:
   207                           	opt stack 0
   208  000001                     ___fttol@f1:
   209                           	opt stack 0
   210                           
   211                           ; 3 bytes @ 0x0
   212  000001                     	ds	3
   213  000004                     ___ftpack@exp:
   214                           	opt stack 0
   215  000004                     ___ftge@ff2:
   216                           	opt stack 0
   217                           
   218                           ; 3 bytes @ 0x3
   219  000004                     	ds	1
   220  000005                     ??___fttol:
   221  000005                     ___ftpack@sign:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x4
   225  000005                     	ds	1
   226  000006                     ??___ftpack:
   227                           
   228                           ; 1 bytes @ 0x5
   229  000006                     	ds	1
   230  000007                     ??___ftge:
   231                           
   232                           ; 1 bytes @ 0x6
   233  000007                     	ds	2
   234  000009                     ?___ftmul:
   235                           	opt stack 0
   236  000009                     ?___awtoft:
   237                           	opt stack 0
   238  000009                     ?___lbtoft:
   239                           	opt stack 0
   240  000009                     ?___lltoft:
   241                           	opt stack 0
   242  000009                     ___awtoft@c:
   243                           	opt stack 0
   244  000009                     ___ftmul@f1:
   245                           	opt stack 0
   246  000009                     ___lltoft@c:
   247                           	opt stack 0
   248                           
   249                           ; 4 bytes @ 0x8
   250  000009                     	ds	1
   251  00000A                     ___fttol@sign1:
   252                           	opt stack 0
   253  00000A                     PID_Initialize@pid:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x9
   257  00000A                     	ds	1
   258  00000B                     ___fttol@lval:
   259                           	opt stack 0
   260                           
   261                           ; 4 bytes @ 0xA
   262  00000B                     	ds	1
   263  00000C                     ___awtoft@sign:
   264                           	opt stack 0
   265  00000C                     ___lbtoft@c:
   266                           	opt stack 0
   267  00000C                     PID_SetMode@pid:
   268                           	opt stack 0
   269  00000C                     ___ftmul@f2:
   270                           	opt stack 0
   271                           
   272                           ; 3 bytes @ 0xB
   273  00000C                     	ds	1
   274  00000D                     ??___lltoft:
   275  00000D                     PID_SetOutputLimits@pid:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0xC
   279  00000D                     	ds	1
   280  00000E                     PID_SetMode@Mode:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0xD
   284  00000E                     	ds	1
   285  00000F                     ??___ftmul:
   286  00000F                     ___fttol@exp1:
   287                           	opt stack 0
   288  00000F                     PID_SetOutputLimits@Min:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0xE
   292  00000F                     	ds	1
   293  000010                     PID_SetMode@newAuto:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0xF
   297  000010                     	ds	1
   298  000011                     ___lltoft@exp:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x10
   302  000011                     	ds	1
   303  000012                     ?___ftdiv:
   304                           	opt stack 0
   305  000012                     ___ftmul@exp:
   306                           	opt stack 0
   307  000012                     PID_SetOutputLimits@Max:
   308                           	opt stack 0
   309  000012                     ___ftdiv@f1:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x11
   313  000012                     	ds	1
   314  000013                     ___ftmul@f3_as_product:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0x12
   318  000013                     	ds	2
   319  000015                     ___ftdiv@f2:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x14
   323  000015                     	ds	1
   324  000016                     ___ftmul@cntr:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x15
   328  000016                     	ds	1
   329  000017                     ___ftmul@sign:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x16
   333  000017                     	ds	1
   334  000018                     ??___ftdiv:
   335  000018                     ?___ftadd:
   336                           	opt stack 0
   337  000018                     ___ftadd@f1:
   338                           	opt stack 0
   339                           
   340                           ; 3 bytes @ 0x17
   341  000018                     	ds	3
   342  00001B                     ___ftdiv@cntr:
   343                           	opt stack 0
   344  00001B                     ___ftadd@f2:
   345                           	opt stack 0
   346                           
   347                           ; 3 bytes @ 0x1A
   348  00001B                     	ds	1
   349  00001C                     ___ftdiv@f3:
   350                           	opt stack 0
   351                           
   352                           ; 3 bytes @ 0x1B
   353  00001C                     	ds	2
   354  00001E                     ??___ftadd:
   355                           
   356                           ; 1 bytes @ 0x1D
   357  00001E                     	ds	1
   358  00001F                     ___ftdiv@exp:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x1E
   362  00001F                     	ds	1
   363  000020                     ___ftdiv@sign:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x1F
   367  000020                     	ds	1
   368  000021                     ___ftadd@sign:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x20
   372  000021                     	ds	1
   373  000022                     ___ftadd@exp2:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x21
   377  000022                     	ds	1
   378  000023                     ___ftadd@exp1:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x22
   382  000023                     	ds	1
   383  000024                     ?___ftneg:
   384                           	opt stack 0
   385  000024                     ___ftneg@f1:
   386                           	opt stack 0
   387                           
   388                           ; 3 bytes @ 0x23
   389  000024                     	ds	3
   390  000027                     PID_Compute@pid:
   391                           	opt stack 0
   392  000027                     PID_SetTunings@pid:
   393                           	opt stack 0
   394  000027                     PID_SetControllerDirection@pid:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x26
   398  000027                     	ds	2
   399  000029                     PID_SetControllerDirection@Direction:
   400                           	opt stack 0
   401  000029                     PID_Compute@dInput:
   402                           	opt stack 0
   403  000029                     PID_SetTunings@Kp:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0x28
   407  000029                     	ds	1
   408  00002A                     
   409                           ; 1 bytes @ 0x29
   410  00002A                     	ds	2
   411  00002C                     PID_SetTunings@Ki:
   412                           	opt stack 0
   413  00002C                     _PID_Compute$1037:
   414                           	opt stack 0
   415                           
   416                           ; 3 bytes @ 0x2B
   417  00002C                     	ds	3
   418  00002F                     PID_Compute@error:
   419                           	opt stack 0
   420  00002F                     PID_SetTunings@Kd:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x2E
   424  00002F                     	ds	3
   425  000032                     PID_Compute@input:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x31
   429  000032                     	ds	1
   430  000033                     PID_SetTunings@SampleTimeInSec:
   431                           	opt stack 0
   432                           
   433                           ; 3 bytes @ 0x32
   434  000033                     	ds	2
   435  000035                     PID_Compute@output:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x34
   439  000035                     	ds	1
   440  000036                     PID_init@pid:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x35
   444  000036                     	ds	2
   445  000038                     PID_init@Kp:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x37
   449  000038                     	ds	3
   450  00003B                     PID_init@Ki:
   451                           	opt stack 0
   452                           
   453                           ; 3 bytes @ 0x3A
   454  00003B                     	ds	3
   455  00003E                     PID_init@Kd:
   456                           	opt stack 0
   457                           
   458                           ; 3 bytes @ 0x3D
   459  00003E                     	ds	3
   460  000041                     PID_init@ControllerDirection:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x40
   464  000041                     	ds	1
   465  000042                     tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           postinc0	equ	0xFEE
   470                           wreg	equ	0xFE8
   471                           
   472                           ; 1 bytes @ 0x41
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 51 in file "newmain.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  PID            45    6[BANK0 ] struct .
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   492 ;;      Params:         0       0       0       0       0       0       0       0       0
   493 ;;      Locals:         0      51       0       0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0
   495 ;;      Totals:         0      51       0       0       0       0       0       0       0
   496 ;;Total ram usage:       51 bytes
   497 ;; Hardware stack levels required when called:    4
   498 ;; This function calls:
   499 ;;		_PID_Compute
   500 ;;		_PID_SetMode
   501 ;;		_PID_SetOutputLimits
   502 ;;		_PID_init
   503 ;;		___awtoft
   504 ;;		___ftadd
   505 ;;		___ftneg
   506 ;;		___fttol
   507 ;;		___lbtoft
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text0
   514  007AEE                     __ptext0:
   515                           	opt stack 0
   516  007AEE                     _main:
   517                           	opt stack 27
   518                           
   519                           ;newmain.c: 52: TRISB = 0xFF;
   520                           
   521                           ;incstack = 0
   522  007AEE  6893               	setf	3987,c	;volatile
   523                           
   524                           ;newmain.c: 53: TRISD = 0x00;
   525  007AF0  0E00               	movlw	0
   526  007AF2  6E95               	movwf	3989,c	;volatile
   527                           
   528                           ;newmain.c: 54: TRISC = 0b01000000;
   529  007AF4  0E40               	movlw	64
   530  007AF6  6E94               	movwf	3988,c	;volatile
   531                           
   532                           ;newmain.c: 55: TMR1CS = 0;
   533  007AF8  92CD               	bcf	4045,1,c	;volatile
   534                           
   535                           ;newmain.c: 56: TMR3CS = 0;
   536  007AFA  92B1               	bcf	4017,1,c	;volatile
   537                           
   538                           ;newmain.c: 57: PORTCbits.RC0 = 0;
   539  007AFC  9082               	bcf	3970,0,c	;volatile
   540                           
   541                           ;newmain.c: 58: PORTCbits.RC1 = 0;
   542  007AFE  9282               	bcf	3970,1,c	;volatile
   543                           
   544                           ;newmain.c: 59: PORTCbits.RC2 = 1;
   545  007B00  8482               	bsf	3970,2,c	;volatile
   546                           
   547                           ;newmain.c: 60: PORTCbits.RC7 = 0;
   548  007B02  9E82               	bcf	3970,7,c	;volatile
   549  007B04                     l1700:
   550                           
   551                           ;newmain.c: 62: PORTCbits.RC0 = 0;
   552  007B04  9082               	bcf	3970,0,c	;volatile
   553                           
   554                           ;newmain.c: 63: PORTCbits.RC1 = 0;
   555  007B06  9282               	bcf	3970,1,c	;volatile
   556                           
   557                           ;newmain.c: 65: PORTCbits.RC2 = 1;
   558  007B08  8482               	bsf	3970,2,c	;volatile
   559                           
   560                           ;newmain.c: 66: _delay((unsigned long)((25)*(32000000/4000000.0)));
   561  007B0A  0E42               	movlw	66
   562  007B0C                     u1557:
   563  007B0C  2EE8               	decfsz	wreg,f,c
   564  007B0E  D7FE               	bra	u1557
   565  007B10  D000               	nop2	
   566                           
   567                           ;newmain.c: 67: PORTCbits.RC2 = 0;
   568  007B12  9482               	bcf	3970,2,c	;volatile
   569                           
   570                           ;newmain.c: 68: A = PORTB;
   571  007B14  5081               	movf	3969,w,c	;volatile
   572  007B16  ECD9  F036         	call	___lbtoft
   573  007B1A  C009  F09C         	movff	?___lbtoft,_A
   574  007B1E  C00A  F09D         	movff	?___lbtoft+1,_A+1
   575  007B22  C00B  F09E         	movff	?___lbtoft+2,_A+2
   576                           
   577                           ;newmain.c: 72: PORTCbits.RC0 = 1;
   578  007B26  8082               	bsf	3970,0,c	;volatile
   579                           
   580                           ;newmain.c: 73: PORTCbits.RC1 = 0;
   581  007B28  9282               	bcf	3970,1,c	;volatile
   582                           
   583                           ;newmain.c: 75: PORTCbits.RC2 = 1;
   584  007B2A  8482               	bsf	3970,2,c	;volatile
   585                           
   586                           ;newmain.c: 76: _delay((unsigned long)((25)*(32000000/4000000.0)));
   587  007B2C  0E42               	movlw	66
   588  007B2E                     u1567:
   589  007B2E  2EE8               	decfsz	wreg,f,c
   590  007B30  D7FE               	bra	u1567
   591  007B32  D000               	nop2	
   592                           
   593                           ;newmain.c: 77: PORTCbits.RC2 = 0;
   594  007B34  9482               	bcf	3970,2,c	;volatile
   595                           
   596                           ;newmain.c: 78: B = PORTB;
   597  007B36  5081               	movf	3969,w,c	;volatile
   598  007B38  ECD9  F036         	call	___lbtoft
   599  007B3C  C009  F099         	movff	?___lbtoft,_B
   600  007B40  C00A  F09A         	movff	?___lbtoft+1,_B+1
   601  007B44  C00B  F09B         	movff	?___lbtoft+2,_B+2
   602                           
   603                           ;newmain.c: 82: PORTCbits.RC0 = 0;
   604  007B48  9082               	bcf	3970,0,c	;volatile
   605                           
   606                           ;newmain.c: 83: PORTCbits.RC1 = 1;
   607  007B4A  8282               	bsf	3970,1,c	;volatile
   608                           
   609                           ;newmain.c: 85: PORTCbits.RC2 = 1;
   610  007B4C  8482               	bsf	3970,2,c	;volatile
   611                           
   612                           ;newmain.c: 86: _delay((unsigned long)((25)*(32000000/4000000.0)));
   613  007B4E  0E42               	movlw	66
   614  007B50                     u1577:
   615  007B50  2EE8               	decfsz	wreg,f,c
   616  007B52  D7FE               	bra	u1577
   617  007B54  D000               	nop2	
   618                           
   619                           ;newmain.c: 87: PORTCbits.RC2 = 0;
   620  007B56  9482               	bcf	3970,2,c	;volatile
   621                           
   622                           ;newmain.c: 88: C = PORTB;
   623  007B58  5081               	movf	3969,w,c	;volatile
   624  007B5A  ECD9  F036         	call	___lbtoft
   625  007B5E  C009  F096         	movff	?___lbtoft,_C
   626  007B62  C00A  F097         	movff	?___lbtoft+1,_C+1
   627  007B66  C00B  F098         	movff	?___lbtoft+2,_C+2
   628                           
   629                           ;newmain.c: 92: PORTCbits.RC0 = 1;
   630  007B6A  8082               	bsf	3970,0,c	;volatile
   631                           
   632                           ;newmain.c: 93: PORTCbits.RC1 = 1;
   633  007B6C  8282               	bsf	3970,1,c	;volatile
   634                           
   635                           ;newmain.c: 95: PORTCbits.RC2 = 1;
   636  007B6E  8482               	bsf	3970,2,c	;volatile
   637                           
   638                           ;newmain.c: 96: _delay((unsigned long)((25)*(32000000/4000000.0)));
   639  007B70  0E42               	movlw	66
   640  007B72                     u1587:
   641  007B72  2EE8               	decfsz	wreg,f,c
   642  007B74  D7FE               	bra	u1587
   643  007B76  D000               	nop2	
   644                           
   645                           ;newmain.c: 97: PORTCbits.RC2 = 0;
   646  007B78  9482               	bcf	3970,2,c	;volatile
   647                           
   648                           ;newmain.c: 98: D = PORTB;
   649  007B7A  5081               	movf	3969,w,c	;volatile
   650  007B7C  ECD9  F036         	call	___lbtoft
   651  007B80  C009  F093         	movff	?___lbtoft,_D
   652  007B84  C00A  F094         	movff	?___lbtoft+1,_D+1
   653  007B88  C00B  F095         	movff	?___lbtoft+2,_D+2
   654                           
   655                           ;newmain.c: 101: PORTCbits.RC7 = 0;
   656  007B8C  9E82               	bcf	3970,7,c	;volatile
   657                           
   658                           ;newmain.c: 102: Input = (A+B)-(C+D);
   659  007B8E  C093  F01B         	movff	_D,___ftadd@f2
   660  007B92  C094  F01C         	movff	_D+1,___ftadd@f2+1
   661  007B96  C095  F01D         	movff	_D+2,___ftadd@f2+2
   662  007B9A  C096  F018         	movff	_C,___ftadd@f1
   663  007B9E  C097  F019         	movff	_C+1,___ftadd@f1+1
   664  007BA2  C098  F01A         	movff	_C+2,___ftadd@f1+2
   665  007BA6  ECE1  F03A         	call	___ftadd	;wreg free
   666  007BAA  C018  F024         	movff	?___ftadd,___ftneg@f1
   667  007BAE  C019  F025         	movff	?___ftadd+1,___ftneg@f1+1
   668  007BB2  C01A  F026         	movff	?___ftadd+2,___ftneg@f1+2
   669  007BB6  ECC7  F036         	call	___ftneg	;wreg free
   670  007BBA  C024  F060         	movff	?___ftneg,_main$1035
   671  007BBE  C025  F061         	movff	?___ftneg+1,_main$1035+1
   672  007BC2  C026  F062         	movff	?___ftneg+2,_main$1035+2
   673                           
   674                           ;newmain.c: 102: Input = (A+B)-(C+D);
   675  007BC6  C09C  F01B         	movff	_A,___ftadd@f2
   676  007BCA  C09D  F01C         	movff	_A+1,___ftadd@f2+1
   677  007BCE  C09E  F01D         	movff	_A+2,___ftadd@f2+2
   678  007BD2  C060  F018         	movff	_main$1035,___ftadd@f1
   679  007BD6  C061  F019         	movff	_main$1035+1,___ftadd@f1+1
   680  007BDA  C062  F01A         	movff	_main$1035+2,___ftadd@f1+2
   681  007BDE  ECE1  F03A         	call	___ftadd	;wreg free
   682  007BE2  C018  F063         	movff	?___ftadd,_main$1036
   683  007BE6  C019  F064         	movff	?___ftadd+1,_main$1036+1
   684  007BEA  C01A  F065         	movff	?___ftadd+2,_main$1036+2
   685                           
   686                           ;newmain.c: 102: Input = (A+B)-(C+D);
   687  007BEE  C063  F018         	movff	_main$1036,___ftadd@f1
   688  007BF2  C064  F019         	movff	_main$1036+1,___ftadd@f1+1
   689  007BF6  C065  F01A         	movff	_main$1036+2,___ftadd@f1+2
   690  007BFA  C099  F01B         	movff	_B,___ftadd@f2
   691  007BFE  C09A  F01C         	movff	_B+1,___ftadd@f2+1
   692  007C02  C09B  F01D         	movff	_B+2,___ftadd@f2+2
   693  007C06  ECE1  F03A         	call	___ftadd	;wreg free
   694  007C0A  C018  F09F         	movff	?___ftadd,_Input
   695  007C0E  C019  F0A0         	movff	?___ftadd+1,_Input+1
   696  007C12  C01A  F0A1         	movff	?___ftadd+2,_Input+2
   697                           
   698                           ;newmain.c: 103: PidType PID;
   699                           ;newmain.c: 104: PID_init(&PID, 0.2, 0, 0, PID_Direction_Reverse);
   700  007C16  0E66               	movlw	low main@PID
   701  007C18  6E36               	movwf	PID_init@pid,c
   702  007C1A  0E00               	movlw	high main@PID
   703  007C1C  6E37               	movwf	PID_init@pid+1,c
   704  007C1E  0ECD               	movlw	205
   705  007C20  6E38               	movwf	PID_init@Kp,c
   706  007C22  0E4C               	movlw	76
   707  007C24  6E39               	movwf	PID_init@Kp+1,c
   708  007C26  0E3E               	movlw	62
   709  007C28  6E3A               	movwf	PID_init@Kp+2,c
   710  007C2A  0E00               	movlw	0
   711  007C2C  6E3B               	movwf	PID_init@Ki,c
   712  007C2E  0E00               	movlw	0
   713  007C30  6E3C               	movwf	PID_init@Ki+1,c
   714  007C32  0E00               	movlw	0
   715  007C34  6E3D               	movwf	PID_init@Ki+2,c
   716  007C36  0E00               	movlw	0
   717  007C38  6E3E               	movwf	PID_init@Kd,c
   718  007C3A  0E00               	movlw	0
   719  007C3C  6E3F               	movwf	PID_init@Kd+1,c
   720  007C3E  0E00               	movlw	0
   721  007C40  6E40               	movwf	PID_init@Kd+2,c
   722  007C42  0E01               	movlw	1
   723  007C44  6E41               	movwf	PID_init@ControllerDirection,c
   724  007C46  EC5C  F03A         	call	_PID_init	;wreg free
   725                           
   726                           ;newmain.c: 105: PID_SetMode(&PID, PID_Mode_Automatic);
   727  007C4A  0E66               	movlw	low main@PID
   728  007C4C  6E0C               	movwf	PID_SetMode@pid,c
   729  007C4E  0E00               	movlw	high main@PID
   730  007C50  6E0D               	movwf	PID_SetMode@pid+1,c
   731  007C52  0E01               	movlw	1
   732  007C54  6E0E               	movwf	PID_SetMode@Mode,c
   733  007C56  EC1C  F037         	call	_PID_SetMode	;wreg free
   734                           
   735                           ;newmain.c: 106: PID_SetOutputLimits(&PID, PID_Out_Min, PID_Out_Max);
   736  007C5A  0E66               	movlw	low main@PID
   737  007C5C  6E0D               	movwf	PID_SetOutputLimits@pid,c
   738  007C5E  0E00               	movlw	high main@PID
   739  007C60  6E0E               	movwf	PID_SetOutputLimits@pid+1,c
   740  007C62  C0A7  F009         	movff	_PID_Out_Min,___awtoft@c
   741  007C66  C0A8  F00A         	movff	_PID_Out_Min+1,___awtoft@c+1
   742  007C6A  EC00  F037         	call	___awtoft	;wreg free
   743  007C6E  C009  F00F         	movff	?___awtoft,PID_SetOutputLimits@Min
   744  007C72  C00A  F010         	movff	?___awtoft+1,PID_SetOutputLimits@Min+1
   745  007C76  C00B  F011         	movff	?___awtoft+2,PID_SetOutputLimits@Min+2
   746  007C7A  C0A9  F009         	movff	_PID_Out_Max,___awtoft@c
   747  007C7E  C0AA  F00A         	movff	_PID_Out_Max+1,___awtoft@c+1
   748  007C82  EC00  F037         	call	___awtoft	;wreg free
   749  007C86  C009  F012         	movff	?___awtoft,PID_SetOutputLimits@Max
   750  007C8A  C00A  F013         	movff	?___awtoft+1,PID_SetOutputLimits@Max+1
   751  007C8E  C00B  F014         	movff	?___awtoft+2,PID_SetOutputLimits@Max+2
   752  007C92  ECB7  F03B         	call	_PID_SetOutputLimits	;wreg free
   753                           
   754                           ;newmain.c: 107: PID.mySetpoint = Setpoint;
   755  007C96  C0A5  F009         	movff	_Setpoint,___awtoft@c
   756  007C9A  C0A6  F00A         	movff	_Setpoint+1,___awtoft@c+1
   757  007C9E  EC00  F037         	call	___awtoft	;wreg free
   758  007CA2  C009  F07F         	movff	?___awtoft,main@PID+25
   759  007CA6  C00A  F080         	movff	?___awtoft+1,main@PID+26
   760  007CAA  C00B  F081         	movff	?___awtoft+2,main@PID+27
   761                           
   762                           ;newmain.c: 108: PID.myInput = Input;
   763  007CAE  C09F  F079         	movff	_Input,main@PID+19
   764  007CB2  C0A0  F07A         	movff	_Input+1,main@PID+20
   765  007CB6  C0A1  F07B         	movff	_Input+2,main@PID+21
   766                           
   767                           ;newmain.c: 109: PID_Compute(&PID);
   768  007CBA  0E66               	movlw	low main@PID
   769  007CBC  6E27               	movwf	PID_Compute@pid,c
   770  007CBE  0E00               	movlw	high main@PID
   771  007CC0  6E28               	movwf	PID_Compute@pid+1,c
   772  007CC2  EC74  F03E         	call	_PID_Compute	;wreg free
   773                           
   774                           ;newmain.c: 110: Output = PID.myOutput;
   775  007CC6  C07C  F0A2         	movff	main@PID+22,_Output
   776  007CCA  C07D  F0A3         	movff	main@PID+23,_Output+1
   777  007CCE  C07E  F0A4         	movff	main@PID+24,_Output+2
   778                           
   779                           ;newmain.c: 111: PORTD = Output;
   780  007CD2  C0A2  F001         	movff	_Output,___fttol@f1
   781  007CD6  C0A3  F002         	movff	_Output+1,___fttol@f1+1
   782  007CDA  C0A4  F003         	movff	_Output+2,___fttol@f1+2
   783  007CDE  EC60  F039         	call	___fttol	;wreg free
   784  007CE2  5001               	movf	?___fttol,w,c
   785  007CE4  6E83               	movwf	3971,c	;volatile
   786  007CE6  D70E               	goto	l1700
   787  007CE8                     __end_of_main:
   788                           	opt stack 0
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           
   796 ;; *************** function ___lbtoft *****************
   797 ;; Defined at:
   798 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  c               1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  c               1   11[COMRAM] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  3    8[COMRAM] float 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   812 ;;      Params:         3       0       0       0       0       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0
   815 ;;      Totals:         4       0       0       0       0       0       0       0       0
   816 ;;Total ram usage:        4 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    1
   819 ;; This function calls:
   820 ;;		___ftpack
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text1
   827  006DB2                     __ptext1:
   828                           	opt stack 0
   829  006DB2                     ___lbtoft:
   830                           	opt stack 29
   831                           
   832                           ;incstack = 0
   833                           ;___lbtoft@c stored from wreg
   834  006DB2  6E0C               	movwf	___lbtoft@c,c
   835  006DB4  500C               	movf	___lbtoft@c,w,c
   836  006DB6  6E01               	movwf	___ftpack@arg,c
   837  006DB8  6A02               	clrf	___ftpack@arg+1,c
   838  006DBA  6A03               	clrf	___ftpack@arg+2,c
   839  006DBC  0E8E               	movlw	142
   840  006DBE  6E04               	movwf	___ftpack@exp,c
   841  006DC0  0E00               	movlw	0
   842  006DC2  6E05               	movwf	___ftpack@sign,c
   843  006DC4  ECB2  F037         	call	___ftpack	;wreg free
   844  006DC8  C001  F009         	movff	?___ftpack,?___lbtoft
   845  006DCC  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   846  006DD0  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   847  006DD4  0012               	return	
   848  006DD6                     __end_of___lbtoft:
   849                           	opt stack 0
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           
   857 ;; *************** function ___fttol *****************
   858 ;; Defined at:
   859 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  f1              3    0[COMRAM] float 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  lval            4   10[COMRAM] unsigned long 
   864 ;;  exp1            1   14[COMRAM] unsigned char 
   865 ;;  sign1           1    9[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  4    0[COMRAM] long 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         4       0       0       0       0       0       0       0       0
   876 ;;      Locals:         6       0       0       0       0       0       0       0       0
   877 ;;      Temps:          5       0       0       0       0       0       0       0       0
   878 ;;      Totals:        15       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:       15 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text2
   889  0072C0                     __ptext2:
   890                           	opt stack 0
   891  0072C0                     ___fttol:
   892                           	opt stack 30
   893                           
   894                           ;incstack = 0
   895  0072C0  C003  F005         	movff	___fttol@f1+2,??___fttol
   896  0072C4  6A06               	clrf	(??___fttol+1)& (0+255),c
   897  0072C6  6A07               	clrf	(??___fttol+2)& (0+255),c
   898  0072C8  3402               	rlcf	___fttol@f1+1,w,c
   899  0072CA  3605               	rlcf	??___fttol& (0+255),f,c
   900  0072CC  E301               	bnc	u1461
   901  0072CE  8006               	bsf	(??___fttol+1)& (0+255),0,c
   902  0072D0                     u1461:
   903  0072D0  5005               	movf	??___fttol,w,c
   904  0072D2  6E0F               	movwf	___fttol@exp1,c
   905  0072D4  500F               	movf	___fttol@exp1,w,c
   906  0072D6  A4D8               	btfss	status,2,c
   907  0072D8  D009               	goto	l1640
   908  0072DA  0E00               	movlw	0
   909  0072DC  6E01               	movwf	?___fttol,c
   910  0072DE  0E00               	movlw	0
   911  0072E0  6E02               	movwf	?___fttol+1,c
   912  0072E2  0E00               	movlw	0
   913  0072E4  6E03               	movwf	?___fttol+2,c
   914  0072E6  0E00               	movlw	0
   915  0072E8  6E04               	movwf	?___fttol+3,c
   916  0072EA  0012               	return	
   917  0072EC                     l1640:
   918  0072EC  0E17               	movlw	23
   919  0072EE  6E05               	movwf	??___fttol& (0+255),c
   920  0072F0  C001  F006         	movff	___fttol@f1,??___fttol+1
   921  0072F4  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   922  0072F8  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   923  0072FC  2805               	incf	??___fttol,w,c
   924  0072FE  6E09               	movwf	(??___fttol+4)& (0+255),c
   925  007300  D004               	goto	u1480
   926  007302                     u1485:
   927  007302  90D8               	bcf	status,0,c
   928  007304  3208               	rrcf	??___fttol+3,f,c
   929  007306  3207               	rrcf	??___fttol+2,f,c
   930  007308  3206               	rrcf	??___fttol+1,f,c
   931  00730A                     u1480:
   932  00730A  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   933  00730C  D7FA               	goto	u1485
   934  00730E  5006               	movf	??___fttol+1,w,c
   935  007310  6E0A               	movwf	___fttol@sign1,c
   936  007312  8E02               	bsf	___fttol@f1+1,7,c
   937  007314  0EFF               	movlw	255
   938  007316  1601               	andwf	___fttol@f1,f,c
   939  007318  0EFF               	movlw	255
   940  00731A  1602               	andwf	___fttol@f1+1,f,c
   941  00731C  0E00               	movlw	0
   942  00731E  1603               	andwf	___fttol@f1+2,f,c
   943  007320  5001               	movf	___fttol@f1,w,c
   944  007322  6E0B               	movwf	___fttol@lval,c
   945  007324  5002               	movf	___fttol@f1+1,w,c
   946  007326  6E0C               	movwf	___fttol@lval+1,c
   947  007328  5003               	movf	___fttol@f1+2,w,c
   948  00732A  6E0D               	movwf	___fttol@lval+2,c
   949  00732C  6A0E               	clrf	___fttol@lval+3,c
   950  00732E  0E8E               	movlw	142
   951  007330  5E0F               	subwf	___fttol@exp1,f,c
   952  007332  AE0F               	btfss	___fttol@exp1,7,c
   953  007334  D016               	goto	l1662
   954  007336  500F               	movf	___fttol@exp1,w,c
   955  007338  0A80               	xorlw	128
   956  00733A  0F8F               	addlw	143
   957  00733C  B0D8               	btfsc	status,0,c
   958  00733E  D009               	goto	l1658
   959  007340  0E00               	movlw	0
   960  007342  6E01               	movwf	?___fttol,c
   961  007344  0E00               	movlw	0
   962  007346  6E02               	movwf	?___fttol+1,c
   963  007348  0E00               	movlw	0
   964  00734A  6E03               	movwf	?___fttol+2,c
   965  00734C  0E00               	movlw	0
   966  00734E  6E04               	movwf	?___fttol+3,c
   967  007350  0012               	return	
   968  007352                     l1658:
   969  007352  90D8               	bcf	status,0,c
   970  007354  320E               	rrcf	___fttol@lval+3,f,c
   971  007356  320D               	rrcf	___fttol@lval+2,f,c
   972  007358  320C               	rrcf	___fttol@lval+1,f,c
   973  00735A  320B               	rrcf	___fttol@lval,f,c
   974  00735C  3E0F               	incfsz	___fttol@exp1,f,c
   975  00735E  D7F9               	goto	l1658
   976  007360  D015               	goto	l1672
   977  007362                     l1662:
   978  007362  0E17               	movlw	23
   979  007364  640F               	cpfsgt	___fttol@exp1,c
   980  007366  D00F               	goto	l1670
   981  007368  0E00               	movlw	0
   982  00736A  6E01               	movwf	?___fttol,c
   983  00736C  0E00               	movlw	0
   984  00736E  6E02               	movwf	?___fttol+1,c
   985  007370  0E00               	movlw	0
   986  007372  6E03               	movwf	?___fttol+2,c
   987  007374  0E00               	movlw	0
   988  007376  6E04               	movwf	?___fttol+3,c
   989  007378  0012               	return	
   990  00737A                     l1668:
   991  00737A  90D8               	bcf	status,0,c
   992  00737C  360B               	rlcf	___fttol@lval,f,c
   993  00737E  360C               	rlcf	___fttol@lval+1,f,c
   994  007380  360D               	rlcf	___fttol@lval+2,f,c
   995  007382  360E               	rlcf	___fttol@lval+3,f,c
   996  007384  060F               	decf	___fttol@exp1,f,c
   997  007386                     l1670:
   998  007386  500F               	movf	___fttol@exp1,w,c
   999  007388  A4D8               	btfss	status,2,c
  1000  00738A  D7F7               	goto	l1668
  1001  00738C                     l1672:
  1002  00738C  500A               	movf	___fttol@sign1,w,c
  1003  00738E  B4D8               	btfsc	status,2,c
  1004  007390  D008               	goto	l1676
  1005  007392  1E0E               	comf	___fttol@lval+3,f,c
  1006  007394  1E0D               	comf	___fttol@lval+2,f,c
  1007  007396  1E0C               	comf	___fttol@lval+1,f,c
  1008  007398  6C0B               	negf	___fttol@lval,c
  1009  00739A  0E00               	movlw	0
  1010  00739C  220C               	addwfc	___fttol@lval+1,f,c
  1011  00739E  220D               	addwfc	___fttol@lval+2,f,c
  1012  0073A0  220E               	addwfc	___fttol@lval+3,f,c
  1013  0073A2                     l1676:
  1014  0073A2  C00B  F001         	movff	___fttol@lval,?___fttol
  1015  0073A6  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1016  0073AA  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1017  0073AE  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1018  0073B2  0012               	return	
  1019  0073B4                     __end_of___fttol:
  1020                           	opt stack 0
  1021                           tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function ___awtoft *****************
  1030 ;; Defined at:
  1031 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  c               2    8[COMRAM] int 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  sign            1   11[COMRAM] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  3    8[COMRAM] float 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1045 ;;      Params:         3       0       0       0       0       0       0       0       0
  1046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1048 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		___ftpack
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;;		_PID_SetSampleTime
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text3
  1061  006E00                     __ptext3:
  1062                           	opt stack 0
  1063  006E00                     ___awtoft:
  1064                           	opt stack 29
  1065                           
  1066                           ;incstack = 0
  1067  006E00  0E00               	movlw	0
  1068  006E02  6E0C               	movwf	___awtoft@sign,c
  1069  006E04  AE0A               	btfss	___awtoft@c+1,7,c
  1070  006E06  D006               	goto	l1630
  1071  006E08  6C09               	negf	___awtoft@c,c
  1072  006E0A  1E0A               	comf	___awtoft@c+1,f,c
  1073  006E0C  B0D8               	btfsc	status,0,c
  1074  006E0E  2A0A               	incf	___awtoft@c+1,f,c
  1075  006E10  0E01               	movlw	1
  1076  006E12  6E0C               	movwf	___awtoft@sign,c
  1077  006E14                     l1630:
  1078  006E14  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1079  006E18  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1080  006E1C  6A03               	clrf	___ftpack@arg+2,c
  1081  006E1E  0E8E               	movlw	142
  1082  006E20  6E04               	movwf	___ftpack@exp,c
  1083  006E22  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1084  006E26  ECB2  F037         	call	___ftpack	;wreg free
  1085  006E2A  C001  F009         	movff	?___ftpack,?___awtoft
  1086  006E2E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1087  006E32  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1088  006E36  0012               	return	
  1089  006E38                     __end_of___awtoft:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           status	equ	0xFD8
  1098                           
  1099 ;; *************** function _PID_init *****************
  1100 ;; Defined at:
  1101 ;;		line 16 in file "pid.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  pid             2   53[COMRAM] PTR struct .
  1104 ;;		 -> main@PID(45), 
  1105 ;;  Kp              3   55[COMRAM] float 
  1106 ;;  Ki              3   58[COMRAM] float 
  1107 ;;  Kd              3   61[COMRAM] float 
  1108 ;;  ControllerDi    1   64[COMRAM] enum E7
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:        12       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:       12 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    3
  1127 ;; This function calls:
  1128 ;;		_PID_SetControllerDirection
  1129 ;;		_PID_SetOutputLimits
  1130 ;;		_PID_SetTunings
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text4
  1137  0074B8                     __ptext4:
  1138                           	opt stack 0
  1139  0074B8                     _PID_init:
  1140                           	opt stack 27
  1141                           
  1142                           ;pid.c: 18: pid->myInput = 0;
  1143                           
  1144                           ;incstack = 0
  1145  0074B8  EE20 F013          	lfsr	2,19
  1146  0074BC  5036               	movf	PID_init@pid,w,c
  1147  0074BE  26D9               	addwf	fsr2l,f,c
  1148  0074C0  5037               	movf	PID_init@pid+1,w,c
  1149  0074C2  22DA               	addwfc	fsr2h,f,c
  1150  0074C4  0E00               	movlw	0
  1151  0074C6  6EDE               	movwf	postinc2,c
  1152  0074C8  0E00               	movlw	0
  1153  0074CA  6EDE               	movwf	postinc2,c
  1154  0074CC  0E00               	movlw	0
  1155  0074CE  6EDE               	movwf	postinc2,c
  1156                           
  1157                           ;pid.c: 19: pid->myOutput = 0;
  1158  0074D0  EE20 F016          	lfsr	2,22
  1159  0074D4  5036               	movf	PID_init@pid,w,c
  1160  0074D6  26D9               	addwf	fsr2l,f,c
  1161  0074D8  5037               	movf	PID_init@pid+1,w,c
  1162  0074DA  22DA               	addwfc	fsr2h,f,c
  1163  0074DC  0E00               	movlw	0
  1164  0074DE  6EDE               	movwf	postinc2,c
  1165  0074E0  0E00               	movlw	0
  1166  0074E2  6EDE               	movwf	postinc2,c
  1167  0074E4  0E00               	movlw	0
  1168  0074E6  6EDE               	movwf	postinc2,c
  1169                           
  1170                           ;pid.c: 20: pid->mySetpoint = 0;
  1171  0074E8  EE20 F019          	lfsr	2,25
  1172  0074EC  5036               	movf	PID_init@pid,w,c
  1173  0074EE  26D9               	addwf	fsr2l,f,c
  1174  0074F0  5037               	movf	PID_init@pid+1,w,c
  1175  0074F2  22DA               	addwfc	fsr2h,f,c
  1176  0074F4  0E00               	movlw	0
  1177  0074F6  6EDE               	movwf	postinc2,c
  1178  0074F8  0E00               	movlw	0
  1179  0074FA  6EDE               	movwf	postinc2,c
  1180  0074FC  0E00               	movlw	0
  1181  0074FE  6EDE               	movwf	postinc2,c
  1182                           
  1183                           ;pid.c: 21: pid->ITerm = 0;
  1184  007500  EE20 F01C          	lfsr	2,28
  1185  007504  5036               	movf	PID_init@pid,w,c
  1186  007506  26D9               	addwf	fsr2l,f,c
  1187  007508  5037               	movf	PID_init@pid+1,w,c
  1188  00750A  22DA               	addwfc	fsr2h,f,c
  1189  00750C  0E00               	movlw	0
  1190  00750E  6EDE               	movwf	postinc2,c
  1191  007510  0E00               	movlw	0
  1192  007512  6EDE               	movwf	postinc2,c
  1193  007514  0E00               	movlw	0
  1194  007516  6EDE               	movwf	postinc2,c
  1195                           
  1196                           ;pid.c: 22: pid->lastInput = 0;
  1197  007518  EE20 F01F          	lfsr	2,31
  1198  00751C  5036               	movf	PID_init@pid,w,c
  1199  00751E  26D9               	addwf	fsr2l,f,c
  1200  007520  5037               	movf	PID_init@pid+1,w,c
  1201  007522  22DA               	addwfc	fsr2h,f,c
  1202  007524  0E00               	movlw	0
  1203  007526  6EDE               	movwf	postinc2,c
  1204  007528  0E00               	movlw	0
  1205  00752A  6EDE               	movwf	postinc2,c
  1206  00752C  0E00               	movlw	0
  1207  00752E  6EDE               	movwf	postinc2,c
  1208                           
  1209                           ;pid.c: 23: pid->inAuto = 0;
  1210  007530  EE20 F02C          	lfsr	2,44
  1211  007534  5036               	movf	PID_init@pid,w,c
  1212  007536  26D9               	addwf	fsr2l,f,c
  1213  007538  5037               	movf	PID_init@pid+1,w,c
  1214  00753A  22DA               	addwfc	fsr2h,f,c
  1215  00753C  0E00               	movlw	0
  1216  00753E  6EDF               	movwf	indf2,c
  1217                           
  1218                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
  1219  007540  C036  F00D         	movff	PID_init@pid,PID_SetOutputLimits@pid
  1220  007544  C037  F00E         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
  1221  007548  0E00               	movlw	0
  1222  00754A  6E0F               	movwf	PID_SetOutputLimits@Min,c
  1223  00754C  0E00               	movlw	0
  1224  00754E  6E10               	movwf	PID_SetOutputLimits@Min+1,c
  1225  007550  0E00               	movlw	0
  1226  007552  6E11               	movwf	PID_SetOutputLimits@Min+2,c
  1227  007554  0EFF               	movlw	255
  1228  007556  6E12               	movwf	PID_SetOutputLimits@Max,c
  1229  007558  0E7F               	movlw	127
  1230  00755A  6E13               	movwf	PID_SetOutputLimits@Max+1,c
  1231  00755C  0E47               	movlw	71
  1232  00755E  6E14               	movwf	PID_SetOutputLimits@Max+2,c
  1233  007560  ECB7  F03B         	call	_PID_SetOutputLimits	;wreg free
  1234                           
  1235                           ;pid.c: 28: pid->SampleTime = 1000;
  1236  007564  EE20 F022          	lfsr	2,34
  1237  007568  5036               	movf	PID_init@pid,w,c
  1238  00756A  26D9               	addwf	fsr2l,f,c
  1239  00756C  5037               	movf	PID_init@pid+1,w,c
  1240  00756E  22DA               	addwfc	fsr2h,f,c
  1241  007570  0EE8               	movlw	232
  1242  007572  6EDE               	movwf	postinc2,c
  1243  007574  0E03               	movlw	3
  1244  007576  6EDE               	movwf	postinc2,c
  1245  007578  0E00               	movlw	0
  1246  00757A  6EDE               	movwf	postinc2,c
  1247  00757C  0E00               	movlw	0
  1248  00757E  6EDD               	movwf	postdec2,c
  1249                           
  1250                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
  1251  007580  C036  F027         	movff	PID_init@pid,PID_SetControllerDirection@pid
  1252  007584  C037  F028         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
  1253  007588  C041  F029         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
  1254  00758C  EC09  F038         	call	_PID_SetControllerDirection	;wreg free
  1255                           
  1256                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
  1257  007590  C036  F027         	movff	PID_init@pid,PID_SetTunings@pid
  1258  007594  C037  F028         	movff	PID_init@pid+1,PID_SetTunings@pid+1
  1259  007598  C038  F029         	movff	PID_init@Kp,PID_SetTunings@Kp
  1260  00759C  C039  F02A         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
  1261  0075A0  C03A  F02B         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
  1262  0075A4  C03B  F02C         	movff	PID_init@Ki,PID_SetTunings@Ki
  1263  0075A8  C03C  F02D         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
  1264  0075AC  C03D  F02E         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
  1265  0075B0  C03E  F02F         	movff	PID_init@Kd,PID_SetTunings@Kd
  1266  0075B4  C03F  F030         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
  1267  0075B8  C040  F031         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
  1268  0075BC  EC93  F03C         	call	_PID_SetTunings	;wreg free
  1269  0075C0  0012               	return		;funcret
  1270  0075C2                     __end_of_PID_init:
  1271                           	opt stack 0
  1272                           tblptru	equ	0xFF8
  1273                           tblptrh	equ	0xFF7
  1274                           tblptrl	equ	0xFF6
  1275                           tablat	equ	0xFF5
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           indf2	equ	0xFDF
  1279                           postinc2	equ	0xFDE
  1280                           postdec2	equ	0xFDD
  1281                           fsr2h	equ	0xFDA
  1282                           fsr2l	equ	0xFD9
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _PID_SetTunings *****************
  1286 ;; Defined at:
  1287 ;;		line 85 in file "pid.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  pid             2   38[COMRAM] PTR struct .
  1290 ;;		 -> main@PID(45), 
  1291 ;;  Kp              3   40[COMRAM] float 
  1292 ;;  Ki              3   43[COMRAM] float 
  1293 ;;  Kd              3   46[COMRAM] float 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  SampleTimeIn    3   50[COMRAM] float 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1305 ;;      Params:        11       0       0       0       0       0       0       0       0
  1306 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1307 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1308 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1309 ;;Total ram usage:       15 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    2
  1312 ;; This function calls:
  1313 ;;		___ftdiv
  1314 ;;		___ftmul
  1315 ;;		___ftneg
  1316 ;;		___lltoft
  1317 ;; This function is called by:
  1318 ;;		_PID_init
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text5
  1323  007926                     __ptext5:
  1324                           	opt stack 0
  1325  007926                     _PID_SetTunings:
  1326                           	opt stack 27
  1327                           
  1328                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
  1329                           
  1330                           ;incstack = 0
  1331  007926  BE2B               	btfsc	PID_SetTunings@Kp+2,7,c
  1332  007928  0012               	return	
  1333  00792A  BE2E               	btfsc	PID_SetTunings@Ki+2,7,c
  1334  00792C  0012               	return	
  1335  00792E  BE31               	btfsc	PID_SetTunings@Kd+2,7,c
  1336  007930  0012               	return	
  1337                           
  1338                           ;pid.c: 88: }
  1339                           ;pid.c: 90: pid->dispKp = Kp;
  1340                           
  1341                           ;pid.c: 87: return;
  1342  007932  C027  FFD9         	movff	PID_SetTunings@pid,fsr2l
  1343  007936  C028  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
  1344  00793A  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1345  00793E  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1346  007942  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1347                           
  1348                           ;pid.c: 91: pid->dispKi = Ki;
  1349  007946  EE20 F003          	lfsr	2,3
  1350  00794A  5027               	movf	PID_SetTunings@pid,w,c
  1351  00794C  26D9               	addwf	fsr2l,f,c
  1352  00794E  5028               	movf	PID_SetTunings@pid+1,w,c
  1353  007950  22DA               	addwfc	fsr2h,f,c
  1354  007952  C02C  FFDE         	movff	PID_SetTunings@Ki,postinc2
  1355  007956  C02D  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
  1356  00795A  C02E  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
  1357                           
  1358                           ;pid.c: 92: pid->dispKd = Kd;
  1359  00795E  EE20 F006          	lfsr	2,6
  1360  007962  5027               	movf	PID_SetTunings@pid,w,c
  1361  007964  26D9               	addwf	fsr2l,f,c
  1362  007966  5028               	movf	PID_SetTunings@pid+1,w,c
  1363  007968  22DA               	addwfc	fsr2h,f,c
  1364  00796A  C02F  FFDE         	movff	PID_SetTunings@Kd,postinc2
  1365  00796E  C030  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
  1366  007972  C031  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
  1367                           
  1368                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
  1369  007976  EE20 F022          	lfsr	2,34
  1370  00797A  5027               	movf	PID_SetTunings@pid,w,c
  1371  00797C  26D9               	addwf	fsr2l,f,c
  1372  00797E  5028               	movf	PID_SetTunings@pid+1,w,c
  1373  007980  22DA               	addwfc	fsr2h,f,c
  1374  007982  CFDE F009          	movff	postinc2,___lltoft@c
  1375  007986  CFDE F00A          	movff	postinc2,___lltoft@c+1
  1376  00798A  CFDE F00B          	movff	postinc2,___lltoft@c+2
  1377  00798E  CFDE F00C          	movff	postinc2,___lltoft@c+3
  1378  007992  EC3C  F037         	call	___lltoft	;wreg free
  1379  007996  C009  F012         	movff	?___lltoft,___ftdiv@f1
  1380  00799A  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
  1381  00799E  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
  1382  0079A2  0E00               	movlw	0
  1383  0079A4  6E15               	movwf	___ftdiv@f2,c
  1384  0079A6  0E7A               	movlw	122
  1385  0079A8  6E16               	movwf	___ftdiv@f2+1,c
  1386  0079AA  0E44               	movlw	68
  1387  0079AC  6E17               	movwf	___ftdiv@f2+2,c
  1388  0079AE  EC73  F038         	call	___ftdiv	;wreg free
  1389  0079B2  C012  F033         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1390  0079B6  C013  F034         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1391  0079BA  C014  F035         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1392                           
  1393                           ;pid.c: 95: pid->kp = Kp;
  1394  0079BE  EE20 F009          	lfsr	2,9
  1395  0079C2  5027               	movf	PID_SetTunings@pid,w,c
  1396  0079C4  26D9               	addwf	fsr2l,f,c
  1397  0079C6  5028               	movf	PID_SetTunings@pid+1,w,c
  1398  0079C8  22DA               	addwfc	fsr2h,f,c
  1399  0079CA  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1400  0079CE  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1401  0079D2  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1402                           
  1403                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1404  0079D6  C02C  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1405  0079DA  C02D  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1406  0079DE  C02E  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1407  0079E2  C033  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1408  0079E6  C034  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1409  0079EA  C035  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1410  0079EE  ECE6  F038         	call	___ftmul	;wreg free
  1411  0079F2  EE20 F00C          	lfsr	2,12
  1412  0079F6  5027               	movf	PID_SetTunings@pid,w,c
  1413  0079F8  26D9               	addwf	fsr2l,f,c
  1414  0079FA  5028               	movf	PID_SetTunings@pid+1,w,c
  1415  0079FC  22DA               	addwfc	fsr2h,f,c
  1416  0079FE  C009  FFDE         	movff	?___ftmul,postinc2
  1417  007A02  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1418  007A06  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1419                           
  1420                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1421  007A0A  C02F  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1422  007A0E  C030  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1423  007A12  C031  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1424  007A16  C033  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1425  007A1A  C034  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1426  007A1E  C035  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1427  007A22  EC73  F038         	call	___ftdiv	;wreg free
  1428  007A26  EE20 F00F          	lfsr	2,15
  1429  007A2A  5027               	movf	PID_SetTunings@pid,w,c
  1430  007A2C  26D9               	addwf	fsr2l,f,c
  1431  007A2E  5028               	movf	PID_SetTunings@pid+1,w,c
  1432  007A30  22DA               	addwfc	fsr2h,f,c
  1433  007A32  C012  FFDE         	movff	?___ftdiv,postinc2
  1434  007A36  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1435  007A3A  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1436                           
  1437                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1438  007A3E  EE20 F012          	lfsr	2,18
  1439  007A42  5027               	movf	PID_SetTunings@pid,w,c
  1440  007A44  26D9               	addwf	fsr2l,f,c
  1441  007A46  5028               	movf	PID_SetTunings@pid+1,w,c
  1442  007A48  22DA               	addwfc	fsr2h,f,c
  1443  007A4A  04DE               	decf	postinc2,w,c
  1444  007A4C  A4D8               	btfss	status,2,c
  1445  007A4E  0012               	return	
  1446                           
  1447                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1448  007A50  EE20 F009          	lfsr	2,9
  1449  007A54  5027               	movf	PID_SetTunings@pid,w,c
  1450  007A56  26D9               	addwf	fsr2l,f,c
  1451  007A58  5028               	movf	PID_SetTunings@pid+1,w,c
  1452  007A5A  22DA               	addwfc	fsr2h,f,c
  1453  007A5C  CFDE F024          	movff	postinc2,___ftneg@f1
  1454  007A60  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1455  007A64  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1456  007A68  ECC7  F036         	call	___ftneg	;wreg free
  1457  007A6C  EE20 F009          	lfsr	2,9
  1458  007A70  5027               	movf	PID_SetTunings@pid,w,c
  1459  007A72  26D9               	addwf	fsr2l,f,c
  1460  007A74  5028               	movf	PID_SetTunings@pid+1,w,c
  1461  007A76  22DA               	addwfc	fsr2h,f,c
  1462  007A78  C024  FFDE         	movff	?___ftneg,postinc2
  1463  007A7C  C025  FFDE         	movff	?___ftneg+1,postinc2
  1464  007A80  C026  FFDE         	movff	?___ftneg+2,postinc2
  1465                           
  1466                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1467  007A84  EE20 F00C          	lfsr	2,12
  1468  007A88  5027               	movf	PID_SetTunings@pid,w,c
  1469  007A8A  26D9               	addwf	fsr2l,f,c
  1470  007A8C  5028               	movf	PID_SetTunings@pid+1,w,c
  1471  007A8E  22DA               	addwfc	fsr2h,f,c
  1472  007A90  CFDE F024          	movff	postinc2,___ftneg@f1
  1473  007A94  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1474  007A98  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1475  007A9C  ECC7  F036         	call	___ftneg	;wreg free
  1476  007AA0  EE20 F00C          	lfsr	2,12
  1477  007AA4  5027               	movf	PID_SetTunings@pid,w,c
  1478  007AA6  26D9               	addwf	fsr2l,f,c
  1479  007AA8  5028               	movf	PID_SetTunings@pid+1,w,c
  1480  007AAA  22DA               	addwfc	fsr2h,f,c
  1481  007AAC  C024  FFDE         	movff	?___ftneg,postinc2
  1482  007AB0  C025  FFDE         	movff	?___ftneg+1,postinc2
  1483  007AB4  C026  FFDE         	movff	?___ftneg+2,postinc2
  1484                           
  1485                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1486  007AB8  EE20 F00F          	lfsr	2,15
  1487  007ABC  5027               	movf	PID_SetTunings@pid,w,c
  1488  007ABE  26D9               	addwf	fsr2l,f,c
  1489  007AC0  5028               	movf	PID_SetTunings@pid+1,w,c
  1490  007AC2  22DA               	addwfc	fsr2h,f,c
  1491  007AC4  CFDE F024          	movff	postinc2,___ftneg@f1
  1492  007AC8  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1493  007ACC  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1494  007AD0  ECC7  F036         	call	___ftneg	;wreg free
  1495  007AD4  EE20 F00F          	lfsr	2,15
  1496  007AD8  5027               	movf	PID_SetTunings@pid,w,c
  1497  007ADA  26D9               	addwf	fsr2l,f,c
  1498  007ADC  5028               	movf	PID_SetTunings@pid+1,w,c
  1499  007ADE  22DA               	addwfc	fsr2h,f,c
  1500  007AE0  C024  FFDE         	movff	?___ftneg,postinc2
  1501  007AE4  C025  FFDE         	movff	?___ftneg+1,postinc2
  1502  007AE8  C026  FFDE         	movff	?___ftneg+2,postinc2
  1503  007AEC  0012               	return	
  1504  007AEE                     __end_of_PID_SetTunings:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           indf2	equ	0xFDF
  1513                           postinc2	equ	0xFDE
  1514                           postdec2	equ	0xFDD
  1515                           fsr2h	equ	0xFDA
  1516                           fsr2l	equ	0xFD9
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function ___lltoft *****************
  1520 ;; Defined at:
  1521 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  c               4    8[COMRAM] unsigned long 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  exp             1   16[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  3    8[COMRAM] float 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1535 ;;      Params:         4       0       0       0       0       0       0       0       0
  1536 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1537 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1538 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1539 ;;Total ram usage:        9 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    1
  1542 ;; This function calls:
  1543 ;;		___ftpack
  1544 ;; This function is called by:
  1545 ;;		_PID_SetTunings
  1546 ;;		_PID_SetSampleTime
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text6
  1551  006E78                     __ptext6:
  1552                           	opt stack 0
  1553  006E78                     ___lltoft:
  1554                           	opt stack 27
  1555                           
  1556                           ;incstack = 0
  1557  006E78  0E8E               	movlw	142
  1558  006E7A  6E11               	movwf	___lltoft@exp,c
  1559  006E7C  D006               	goto	l1430
  1560  006E7E                     l1428:
  1561  006E7E  90D8               	bcf	status,0,c
  1562  006E80  320C               	rrcf	___lltoft@c+3,f,c
  1563  006E82  320B               	rrcf	___lltoft@c+2,f,c
  1564  006E84  320A               	rrcf	___lltoft@c+1,f,c
  1565  006E86  3209               	rrcf	___lltoft@c,f,c
  1566  006E88  2A11               	incf	___lltoft@exp,f,c
  1567  006E8A                     l1430:
  1568  006E8A  0E00               	movlw	0
  1569  006E8C  1409               	andwf	___lltoft@c,w,c
  1570  006E8E  6E0D               	movwf	??___lltoft& (0+255),c
  1571  006E90  0E00               	movlw	0
  1572  006E92  140A               	andwf	___lltoft@c+1,w,c
  1573  006E94  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1574  006E96  0E00               	movlw	0
  1575  006E98  140B               	andwf	___lltoft@c+2,w,c
  1576  006E9A  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1577  006E9C  0EFF               	movlw	255
  1578  006E9E  140C               	andwf	___lltoft@c+3,w,c
  1579  006EA0  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1580  006EA2  500D               	movf	??___lltoft,w,c
  1581  006EA4  100E               	iorwf	??___lltoft+1,w,c
  1582  006EA6  100F               	iorwf	??___lltoft+2,w,c
  1583  006EA8  1010               	iorwf	??___lltoft+3,w,c
  1584  006EAA  A4D8               	btfss	status,2,c
  1585  006EAC  D7E8               	goto	l1428
  1586  006EAE  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1587  006EB2  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1588  006EB6  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1589  006EBA  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1590  006EBE  0E00               	movlw	0
  1591  006EC0  6E05               	movwf	___ftpack@sign,c
  1592  006EC2  ECB2  F037         	call	___ftpack	;wreg free
  1593  006EC6  C001  F009         	movff	?___ftpack,?___lltoft
  1594  006ECA  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1595  006ECE  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1596  006ED2  0012               	return	
  1597  006ED4                     __end_of___lltoft:
  1598                           	opt stack 0
  1599                           tblptru	equ	0xFF8
  1600                           tblptrh	equ	0xFF7
  1601                           tblptrl	equ	0xFF6
  1602                           tablat	equ	0xFF5
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           indf2	equ	0xFDF
  1606                           postinc2	equ	0xFDE
  1607                           postdec2	equ	0xFDD
  1608                           fsr2h	equ	0xFDA
  1609                           fsr2l	equ	0xFD9
  1610                           status	equ	0xFD8
  1611                           
  1612 ;; *************** function ___ftdiv *****************
  1613 ;; Defined at:
  1614 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  f1              3   17[COMRAM] float 
  1617 ;;  f2              3   20[COMRAM] float 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  f3              3   27[COMRAM] float 
  1620 ;;  sign            1   31[COMRAM] unsigned char 
  1621 ;;  exp             1   30[COMRAM] unsigned char 
  1622 ;;  cntr            1   26[COMRAM] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  3   17[COMRAM] float 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1632 ;;      Params:         6       0       0       0       0       0       0       0       0
  1633 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1634 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1635 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1636 ;;Total ram usage:       15 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    1
  1639 ;; This function calls:
  1640 ;;		___ftpack
  1641 ;; This function is called by:
  1642 ;;		_PID_SetTunings
  1643 ;;		_PID_SetSampleTime
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text7
  1648  0070E6                     __ptext7:
  1649                           	opt stack 0
  1650  0070E6                     ___ftdiv:
  1651                           	opt stack 27
  1652                           
  1653                           ;incstack = 0
  1654  0070E6  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  1655  0070EA  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1656  0070EC  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1657  0070EE  3413               	rlcf	___ftdiv@f1+1,w,c
  1658  0070F0  3618               	rlcf	??___ftdiv& (0+255),f,c
  1659  0070F2  E301               	bnc	u861
  1660  0070F4  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1661  0070F6                     u861:
  1662  0070F6  5018               	movf	??___ftdiv,w,c
  1663  0070F8  6E1F               	movwf	___ftdiv@exp,c
  1664  0070FA  501F               	movf	___ftdiv@exp,w,c
  1665  0070FC  A4D8               	btfss	status,2,c
  1666  0070FE  D007               	goto	l1316
  1667  007100  0E00               	movlw	0
  1668  007102  6E12               	movwf	?___ftdiv,c
  1669  007104  0E00               	movlw	0
  1670  007106  6E13               	movwf	?___ftdiv+1,c
  1671  007108  0E00               	movlw	0
  1672  00710A  6E14               	movwf	?___ftdiv+2,c
  1673  00710C  0012               	return	
  1674  00710E                     l1316:
  1675  00710E  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  1676  007112  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1677  007114  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1678  007116  3416               	rlcf	___ftdiv@f2+1,w,c
  1679  007118  3618               	rlcf	??___ftdiv& (0+255),f,c
  1680  00711A  E301               	bnc	u881
  1681  00711C  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1682  00711E                     u881:
  1683  00711E  5018               	movf	??___ftdiv,w,c
  1684  007120  6E20               	movwf	___ftdiv@sign,c
  1685  007122  5020               	movf	___ftdiv@sign,w,c
  1686  007124  A4D8               	btfss	status,2,c
  1687  007126  D007               	goto	l1322
  1688  007128  0E00               	movlw	0
  1689  00712A  6E12               	movwf	?___ftdiv,c
  1690  00712C  0E00               	movlw	0
  1691  00712E  6E13               	movwf	?___ftdiv+1,c
  1692  007130  0E00               	movlw	0
  1693  007132  6E14               	movwf	?___ftdiv+2,c
  1694  007134  0012               	return	
  1695  007136                     l1322:
  1696  007136  0E00               	movlw	0
  1697  007138  6E1C               	movwf	___ftdiv@f3,c
  1698  00713A  0E00               	movlw	0
  1699  00713C  6E1D               	movwf	___ftdiv@f3+1,c
  1700  00713E  0E00               	movlw	0
  1701  007140  6E1E               	movwf	___ftdiv@f3+2,c
  1702  007142  5020               	movf	___ftdiv@sign,w,c
  1703  007144  0F89               	addlw	137
  1704  007146  5E1F               	subwf	___ftdiv@exp,f,c
  1705  007148  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  1706  00714C  5017               	movf	___ftdiv@f2+2,w,c
  1707  00714E  1A20               	xorwf	___ftdiv@sign,f,c
  1708  007150  0E80               	movlw	128
  1709  007152  1620               	andwf	___ftdiv@sign,f,c
  1710  007154  8E13               	bsf	___ftdiv@f1+1,7,c
  1711  007156  0EFF               	movlw	255
  1712  007158  1612               	andwf	___ftdiv@f1,f,c
  1713  00715A  0EFF               	movlw	255
  1714  00715C  1613               	andwf	___ftdiv@f1+1,f,c
  1715  00715E  0E00               	movlw	0
  1716  007160  1614               	andwf	___ftdiv@f1+2,f,c
  1717  007162  8E16               	bsf	___ftdiv@f2+1,7,c
  1718  007164  0EFF               	movlw	255
  1719  007166  1615               	andwf	___ftdiv@f2,f,c
  1720  007168  0EFF               	movlw	255
  1721  00716A  1616               	andwf	___ftdiv@f2+1,f,c
  1722  00716C  0E00               	movlw	0
  1723  00716E  1617               	andwf	___ftdiv@f2+2,f,c
  1724  007170  0E18               	movlw	24
  1725  007172  6E1B               	movwf	___ftdiv@cntr,c
  1726  007174                     l1342:
  1727  007174  90D8               	bcf	status,0,c
  1728  007176  361C               	rlcf	___ftdiv@f3,f,c
  1729  007178  361D               	rlcf	___ftdiv@f3+1,f,c
  1730  00717A  361E               	rlcf	___ftdiv@f3+2,f,c
  1731  00717C  5015               	movf	___ftdiv@f2,w,c
  1732  00717E  5C12               	subwf	___ftdiv@f1,w,c
  1733  007180  5016               	movf	___ftdiv@f2+1,w,c
  1734  007182  5813               	subwfb	___ftdiv@f1+1,w,c
  1735  007184  5017               	movf	___ftdiv@f2+2,w,c
  1736  007186  5814               	subwfb	___ftdiv@f1+2,w,c
  1737  007188  A0D8               	btfss	status,0,c
  1738  00718A  D007               	goto	l407
  1739  00718C  5015               	movf	___ftdiv@f2,w,c
  1740  00718E  5E12               	subwf	___ftdiv@f1,f,c
  1741  007190  5016               	movf	___ftdiv@f2+1,w,c
  1742  007192  5A13               	subwfb	___ftdiv@f1+1,f,c
  1743  007194  5017               	movf	___ftdiv@f2+2,w,c
  1744  007196  5A14               	subwfb	___ftdiv@f1+2,f,c
  1745  007198  801C               	bsf	___ftdiv@f3,0,c
  1746  00719A                     l407:
  1747  00719A  90D8               	bcf	status,0,c
  1748  00719C  3612               	rlcf	___ftdiv@f1,f,c
  1749  00719E  3613               	rlcf	___ftdiv@f1+1,f,c
  1750  0071A0  3614               	rlcf	___ftdiv@f1+2,f,c
  1751  0071A2  2E1B               	decfsz	___ftdiv@cntr,f,c
  1752  0071A4  D7E7               	goto	l1342
  1753  0071A6  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  1754  0071AA  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1755  0071AE  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1756  0071B2  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  1757  0071B6  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  1758  0071BA  ECB2  F037         	call	___ftpack	;wreg free
  1759  0071BE  C001  F012         	movff	?___ftpack,?___ftdiv
  1760  0071C2  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  1761  0071C6  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  1762  0071CA  0012               	return	
  1763  0071CC                     __end_of___ftdiv:
  1764                           	opt stack 0
  1765                           tblptru	equ	0xFF8
  1766                           tblptrh	equ	0xFF7
  1767                           tblptrl	equ	0xFF6
  1768                           tablat	equ	0xFF5
  1769                           postinc0	equ	0xFEE
  1770                           wreg	equ	0xFE8
  1771                           indf2	equ	0xFDF
  1772                           postinc2	equ	0xFDE
  1773                           postdec2	equ	0xFDD
  1774                           fsr2h	equ	0xFDA
  1775                           fsr2l	equ	0xFD9
  1776                           status	equ	0xFD8
  1777                           
  1778 ;; *************** function _PID_SetOutputLimits *****************
  1779 ;; Defined at:
  1780 ;;		line 126 in file "pid.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  pid             2   12[COMRAM] PTR struct .
  1783 ;;		 -> main@PID(45), 
  1784 ;;  Min             3   14[COMRAM] float 
  1785 ;;  Max             3   17[COMRAM] float 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1797 ;;      Params:         8       0       0       0       0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1800 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1801 ;;Total ram usage:        8 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    1
  1804 ;; This function calls:
  1805 ;;		___ftge
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;;		_PID_init
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text8
  1813  00776E                     __ptext8:
  1814                           	opt stack 0
  1815  00776E                     _PID_SetOutputLimits:
  1816                           	opt stack 28
  1817                           
  1818                           ;pid.c: 127: if (Min >= Max) {
  1819                           
  1820                           ;incstack = 0
  1821  00776E  C00F  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  1822  007772  C010  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  1823  007776  C011  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  1824  00777A  C012  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  1825  00777E  C013  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  1826  007782  C014  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  1827  007786  EC6A  F037         	call	___ftge	;wreg free
  1828  00778A  B0D8               	btfsc	status,0,c
  1829  00778C  0012               	return	
  1830                           
  1831                           ;pid.c: 129: }
  1832                           ;pid.c: 130: pid->outMin = Min;
  1833                           
  1834                           ;pid.c: 128: return;
  1835  00778E  EE20 F026          	lfsr	2,38
  1836  007792  500D               	movf	PID_SetOutputLimits@pid,w,c
  1837  007794  26D9               	addwf	fsr2l,f,c
  1838  007796  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1839  007798  22DA               	addwfc	fsr2h,f,c
  1840  00779A  C00F  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  1841  00779E  C010  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  1842  0077A2  C011  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  1843                           
  1844                           ;pid.c: 131: pid->outMax = Max;
  1845  0077A6  EE20 F029          	lfsr	2,41
  1846  0077AA  500D               	movf	PID_SetOutputLimits@pid,w,c
  1847  0077AC  26D9               	addwf	fsr2l,f,c
  1848  0077AE  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1849  0077B0  22DA               	addwfc	fsr2h,f,c
  1850  0077B2  C012  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  1851  0077B6  C013  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  1852  0077BA  C014  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  1853                           
  1854                           ;pid.c: 133: if (pid->inAuto) {
  1855  0077BE  EE20 F02C          	lfsr	2,44
  1856  0077C2  500D               	movf	PID_SetOutputLimits@pid,w,c
  1857  0077C4  26D9               	addwf	fsr2l,f,c
  1858  0077C6  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1859  0077C8  22DA               	addwfc	fsr2h,f,c
  1860  0077CA  50DF               	movf	indf2,w,c
  1861  0077CC  B4D8               	btfsc	status,2,c
  1862  0077CE  0012               	return	
  1863                           
  1864                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  1865  0077D0  EE20 F029          	lfsr	2,41
  1866  0077D4  500D               	movf	PID_SetOutputLimits@pid,w,c
  1867  0077D6  26D9               	addwf	fsr2l,f,c
  1868  0077D8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1869  0077DA  22DA               	addwfc	fsr2h,f,c
  1870  0077DC  CFDE F001          	movff	postinc2,___ftge@ff1
  1871  0077E0  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1872  0077E4  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1873  0077E8  EE20 F016          	lfsr	2,22
  1874  0077EC  500D               	movf	PID_SetOutputLimits@pid,w,c
  1875  0077EE  26D9               	addwf	fsr2l,f,c
  1876  0077F0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1877  0077F2  22DA               	addwfc	fsr2h,f,c
  1878  0077F4  CFDE F004          	movff	postinc2,___ftge@ff2
  1879  0077F8  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1880  0077FC  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1881  007800  EC6A  F037         	call	___ftge	;wreg free
  1882  007804  B0D8               	btfsc	status,0,c
  1883  007806  D003               	goto	l1446
  1884                           
  1885                           ;pid.c: 135: pid->myOutput = pid->outMax;
  1886  007808  EE20 F029          	lfsr	2,41
  1887  00780C  D01E               	goto	L1
  1888  00780E                     l1446:
  1889  00780E  EE20 F016          	lfsr	2,22
  1890  007812  500D               	movf	PID_SetOutputLimits@pid,w,c
  1891  007814  26D9               	addwf	fsr2l,f,c
  1892  007816  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1893  007818  22DA               	addwfc	fsr2h,f,c
  1894  00781A  CFDE F001          	movff	postinc2,___ftge@ff1
  1895  00781E  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1896  007822  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1897  007826  EE20 F026          	lfsr	2,38
  1898  00782A  500D               	movf	PID_SetOutputLimits@pid,w,c
  1899  00782C  26D9               	addwf	fsr2l,f,c
  1900  00782E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1901  007830  22DA               	addwfc	fsr2h,f,c
  1902  007832  CFDE F004          	movff	postinc2,___ftge@ff2
  1903  007836  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1904  00783A  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1905  00783E  EC6A  F037         	call	___ftge	;wreg free
  1906  007842  B0D8               	btfsc	status,0,c
  1907  007844  D012               	goto	l1450
  1908                           
  1909                           ;pid.c: 137: pid->myOutput = pid->outMin;
  1910  007846  EE20 F026          	lfsr	2,38
  1911  00784A                     L1:
  1912  00784A  500D               	movf	PID_SetOutputLimits@pid,w,c
  1913  00784C  26D9               	addwf	fsr2l,f,c
  1914  00784E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1915  007850  22DA               	addwfc	fsr2h,f,c
  1916  007852  EE10 F016          	lfsr	1,22
  1917  007856  500D               	movf	PID_SetOutputLimits@pid,w,c
  1918  007858  26E1               	addwf	fsr1l,f,c
  1919  00785A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1920  00785C  22E2               	addwfc	fsr1h,f,c
  1921  00785E  CFDE FFE6          	movff	postinc2,postinc1
  1922  007862  CFDE FFE6          	movff	postinc2,postinc1
  1923  007866  CFDE FFE6          	movff	postinc2,postinc1
  1924  00786A                     l1450:
  1925                           
  1926                           ;pid.c: 138: }
  1927                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  1928  00786A  EE20 F029          	lfsr	2,41
  1929  00786E  500D               	movf	PID_SetOutputLimits@pid,w,c
  1930  007870  26D9               	addwf	fsr2l,f,c
  1931  007872  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1932  007874  22DA               	addwfc	fsr2h,f,c
  1933  007876  CFDE F001          	movff	postinc2,___ftge@ff1
  1934  00787A  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1935  00787E  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1936  007882  EE20 F01C          	lfsr	2,28
  1937  007886  500D               	movf	PID_SetOutputLimits@pid,w,c
  1938  007888  26D9               	addwf	fsr2l,f,c
  1939  00788A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1940  00788C  22DA               	addwfc	fsr2h,f,c
  1941  00788E  CFDE F004          	movff	postinc2,___ftge@ff2
  1942  007892  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1943  007896  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1944  00789A  EC6A  F037         	call	___ftge	;wreg free
  1945  00789E  B0D8               	btfsc	status,0,c
  1946  0078A0  D013               	goto	l1454
  1947                           
  1948                           ;pid.c: 141: pid->ITerm = pid->outMax;
  1949  0078A2  EE20 F029          	lfsr	2,41
  1950  0078A6  500D               	movf	PID_SetOutputLimits@pid,w,c
  1951  0078A8  26D9               	addwf	fsr2l,f,c
  1952  0078AA  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1953  0078AC  22DA               	addwfc	fsr2h,f,c
  1954  0078AE  EE10 F01C          	lfsr	1,28
  1955  0078B2  500D               	movf	PID_SetOutputLimits@pid,w,c
  1956  0078B4  26E1               	addwf	fsr1l,f,c
  1957  0078B6  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1958  0078B8  22E2               	addwfc	fsr1h,f,c
  1959  0078BA  CFDE FFE6          	movff	postinc2,postinc1
  1960  0078BE  CFDE FFE6          	movff	postinc2,postinc1
  1961  0078C2  CFDE FFE6          	movff	postinc2,postinc1
  1962                           
  1963                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  1964  0078C6  0012               	return	
  1965  0078C8                     l1454:
  1966  0078C8  EE20 F01C          	lfsr	2,28
  1967  0078CC  500D               	movf	PID_SetOutputLimits@pid,w,c
  1968  0078CE  26D9               	addwf	fsr2l,f,c
  1969  0078D0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1970  0078D2  22DA               	addwfc	fsr2h,f,c
  1971  0078D4  CFDE F001          	movff	postinc2,___ftge@ff1
  1972  0078D8  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1973  0078DC  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1974  0078E0  EE20 F026          	lfsr	2,38
  1975  0078E4  500D               	movf	PID_SetOutputLimits@pid,w,c
  1976  0078E6  26D9               	addwf	fsr2l,f,c
  1977  0078E8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1978  0078EA  22DA               	addwfc	fsr2h,f,c
  1979  0078EC  CFDE F004          	movff	postinc2,___ftge@ff2
  1980  0078F0  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1981  0078F4  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1982  0078F8  EC6A  F037         	call	___ftge	;wreg free
  1983  0078FC  B0D8               	btfsc	status,0,c
  1984  0078FE  0012               	return	
  1985                           
  1986                           ;pid.c: 143: pid->ITerm = pid->outMin;
  1987  007900  EE20 F026          	lfsr	2,38
  1988  007904  500D               	movf	PID_SetOutputLimits@pid,w,c
  1989  007906  26D9               	addwf	fsr2l,f,c
  1990  007908  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1991  00790A  22DA               	addwfc	fsr2h,f,c
  1992  00790C  EE10 F01C          	lfsr	1,28
  1993  007910  500D               	movf	PID_SetOutputLimits@pid,w,c
  1994  007912  26E1               	addwf	fsr1l,f,c
  1995  007914  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1996  007916  22E2               	addwfc	fsr1h,f,c
  1997  007918  CFDE FFE6          	movff	postinc2,postinc1
  1998  00791C  CFDE FFE6          	movff	postinc2,postinc1
  1999  007920  CFDE FFE6          	movff	postinc2,postinc1
  2000  007924  0012               	return	
  2001  007926                     __end_of_PID_SetOutputLimits:
  2002                           	opt stack 0
  2003                           tblptru	equ	0xFF8
  2004                           tblptrh	equ	0xFF7
  2005                           tblptrl	equ	0xFF6
  2006                           tablat	equ	0xFF5
  2007                           postinc0	equ	0xFEE
  2008                           wreg	equ	0xFE8
  2009                           postinc1	equ	0xFE6
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           indf2	equ	0xFDF
  2013                           postinc2	equ	0xFDE
  2014                           postdec2	equ	0xFDD
  2015                           fsr2h	equ	0xFDA
  2016                           fsr2l	equ	0xFD9
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _PID_SetControllerDirection *****************
  2020 ;; Defined at:
  2021 ;;		line 183 in file "pid.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  pid             2   38[COMRAM] PTR struct .
  2024 ;;		 -> main@PID(45), 
  2025 ;;  Direction       1   40[COMRAM] enum E7
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         3       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2040 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        4 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    1
  2044 ;; This function calls:
  2045 ;;		___ftneg
  2046 ;; This function is called by:
  2047 ;;		_PID_init
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text9
  2052  007012                     __ptext9:
  2053                           	opt stack 0
  2054  007012                     _PID_SetControllerDirection:
  2055                           	opt stack 28
  2056                           
  2057                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  2058                           
  2059                           ;incstack = 0
  2060  007012  EE20 F02C          	lfsr	2,44
  2061  007016  5027               	movf	PID_SetControllerDirection@pid,w,c
  2062  007018  26D9               	addwf	fsr2l,f,c
  2063  00701A  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2064  00701C  22DA               	addwfc	fsr2h,f,c
  2065  00701E  50DF               	movf	indf2,w,c
  2066  007020  B4D8               	btfsc	status,2,c
  2067  007022  D058               	goto	l1464
  2068  007024  EE20 F012          	lfsr	2,18
  2069  007028  5027               	movf	PID_SetControllerDirection@pid,w,c
  2070  00702A  26D9               	addwf	fsr2l,f,c
  2071  00702C  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2072  00702E  22DA               	addwfc	fsr2h,f,c
  2073  007030  5029               	movf	PID_SetControllerDirection@Direction,w,c
  2074  007032  18DE               	xorwf	postinc2,w,c
  2075  007034  B4D8               	btfsc	status,2,c
  2076  007036  D04E               	goto	l1464
  2077                           
  2078                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  2079  007038  EE20 F009          	lfsr	2,9
  2080  00703C  5027               	movf	PID_SetControllerDirection@pid,w,c
  2081  00703E  26D9               	addwf	fsr2l,f,c
  2082  007040  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2083  007042  22DA               	addwfc	fsr2h,f,c
  2084  007044  CFDE F024          	movff	postinc2,___ftneg@f1
  2085  007048  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2086  00704C  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2087  007050  ECC7  F036         	call	___ftneg	;wreg free
  2088  007054  EE20 F009          	lfsr	2,9
  2089  007058  5027               	movf	PID_SetControllerDirection@pid,w,c
  2090  00705A  26D9               	addwf	fsr2l,f,c
  2091  00705C  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2092  00705E  22DA               	addwfc	fsr2h,f,c
  2093  007060  C024  FFDE         	movff	?___ftneg,postinc2
  2094  007064  C025  FFDE         	movff	?___ftneg+1,postinc2
  2095  007068  C026  FFDE         	movff	?___ftneg+2,postinc2
  2096                           
  2097                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  2098  00706C  EE20 F00C          	lfsr	2,12
  2099  007070  5027               	movf	PID_SetControllerDirection@pid,w,c
  2100  007072  26D9               	addwf	fsr2l,f,c
  2101  007074  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2102  007076  22DA               	addwfc	fsr2h,f,c
  2103  007078  CFDE F024          	movff	postinc2,___ftneg@f1
  2104  00707C  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2105  007080  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2106  007084  ECC7  F036         	call	___ftneg	;wreg free
  2107  007088  EE20 F00C          	lfsr	2,12
  2108  00708C  5027               	movf	PID_SetControllerDirection@pid,w,c
  2109  00708E  26D9               	addwf	fsr2l,f,c
  2110  007090  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2111  007092  22DA               	addwfc	fsr2h,f,c
  2112  007094  C024  FFDE         	movff	?___ftneg,postinc2
  2113  007098  C025  FFDE         	movff	?___ftneg+1,postinc2
  2114  00709C  C026  FFDE         	movff	?___ftneg+2,postinc2
  2115                           
  2116                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  2117  0070A0  EE20 F00F          	lfsr	2,15
  2118  0070A4  5027               	movf	PID_SetControllerDirection@pid,w,c
  2119  0070A6  26D9               	addwf	fsr2l,f,c
  2120  0070A8  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2121  0070AA  22DA               	addwfc	fsr2h,f,c
  2122  0070AC  CFDE F024          	movff	postinc2,___ftneg@f1
  2123  0070B0  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2124  0070B4  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2125  0070B8  ECC7  F036         	call	___ftneg	;wreg free
  2126  0070BC  EE20 F00F          	lfsr	2,15
  2127  0070C0  5027               	movf	PID_SetControllerDirection@pid,w,c
  2128  0070C2  26D9               	addwf	fsr2l,f,c
  2129  0070C4  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2130  0070C6  22DA               	addwfc	fsr2h,f,c
  2131  0070C8  C024  FFDE         	movff	?___ftneg,postinc2
  2132  0070CC  C025  FFDE         	movff	?___ftneg+1,postinc2
  2133  0070D0  C026  FFDE         	movff	?___ftneg+2,postinc2
  2134  0070D4                     l1464:
  2135                           
  2136                           ;pid.c: 188: }
  2137                           ;pid.c: 189: pid->controllerDirection = Direction;
  2138  0070D4  EE20 F012          	lfsr	2,18
  2139  0070D8  5027               	movf	PID_SetControllerDirection@pid,w,c
  2140  0070DA  26D9               	addwf	fsr2l,f,c
  2141  0070DC  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2142  0070DE  22DA               	addwfc	fsr2h,f,c
  2143  0070E0  C029  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  2144  0070E4  0012               	return		;funcret
  2145  0070E6                     __end_of_PID_SetControllerDirection:
  2146                           	opt stack 0
  2147                           tblptru	equ	0xFF8
  2148                           tblptrh	equ	0xFF7
  2149                           tblptrl	equ	0xFF6
  2150                           tablat	equ	0xFF5
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           postinc1	equ	0xFE6
  2154                           fsr1h	equ	0xFE2
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           postinc2	equ	0xFDE
  2158                           postdec2	equ	0xFDD
  2159                           fsr2h	equ	0xFDA
  2160                           fsr2l	equ	0xFD9
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function _PID_SetMode *****************
  2164 ;; Defined at:
  2165 ;;		line 153 in file "pid.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  pid             2   11[COMRAM] PTR struct .
  2168 ;;		 -> main@PID(45), 
  2169 ;;  Mode            1   13[COMRAM] enum E3
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  newAuto         1   15[COMRAM] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2181 ;;      Params:         3       0       0       0       0       0       0       0       0
  2182 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2183 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2184 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2185 ;;Total ram usage:        5 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    2
  2188 ;; This function calls:
  2189 ;;		_PID_Initialize
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text10
  2196  006E38                     __ptext10:
  2197                           	opt stack 0
  2198  006E38                     _PID_SetMode:
  2199                           	opt stack 28
  2200                           
  2201                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  2202                           
  2203                           ;incstack = 0
  2204  006E38  040E               	decf	PID_SetMode@Mode,w,c
  2205  006E3A  A4D8               	btfss	status,2,c
  2206  006E3C  D002               	goto	u1370
  2207  006E3E  0E01               	movlw	1
  2208  006E40  D001               	goto	u1380
  2209  006E42                     u1370:
  2210  006E42  0E00               	movlw	0
  2211  006E44                     u1380:
  2212  006E44  6E10               	movwf	PID_SetMode@newAuto,c
  2213                           
  2214                           ;pid.c: 156: if(newAuto != pid->inAuto)
  2215  006E46  EE20 F02C          	lfsr	2,44
  2216  006E4A  500C               	movf	PID_SetMode@pid,w,c
  2217  006E4C  26D9               	addwf	fsr2l,f,c
  2218  006E4E  500D               	movf	PID_SetMode@pid+1,w,c
  2219  006E50  22DA               	addwfc	fsr2h,f,c
  2220  006E52  5010               	movf	PID_SetMode@newAuto,w,c
  2221  006E54  18DE               	xorwf	postinc2,w,c
  2222  006E56  B4D8               	btfsc	status,2,c
  2223  006E58  D006               	goto	l1586
  2224                           
  2225                           ;pid.c: 157: {
  2226                           ;pid.c: 158: PID_Initialize(pid);
  2227  006E5A  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  2228  006E5E  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  2229  006E62  ECDA  F039         	call	_PID_Initialize	;wreg free
  2230  006E66                     l1586:
  2231                           
  2232                           ;pid.c: 159: }
  2233                           ;pid.c: 160: pid->inAuto = newAuto;
  2234  006E66  EE20 F02C          	lfsr	2,44
  2235  006E6A  500C               	movf	PID_SetMode@pid,w,c
  2236  006E6C  26D9               	addwf	fsr2l,f,c
  2237  006E6E  500D               	movf	PID_SetMode@pid+1,w,c
  2238  006E70  22DA               	addwfc	fsr2h,f,c
  2239  006E72  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  2240  006E76  0012               	return		;funcret
  2241  006E78                     __end_of_PID_SetMode:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           postinc1	equ	0xFE6
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           indf2	equ	0xFDF
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _PID_Initialize *****************
  2260 ;; Defined at:
  2261 ;;		line 167 in file "pid.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  pid             2    9[COMRAM] PTR struct .
  2264 ;;		 -> main@PID(45), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2276 ;;      Params:         2       0       0       0       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2279 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2280 ;;Total ram usage:        2 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    1
  2283 ;; This function calls:
  2284 ;;		___ftge
  2285 ;; This function is called by:
  2286 ;;		_PID_SetMode
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text11
  2291  0073B4                     __ptext11:
  2292                           	opt stack 0
  2293  0073B4                     _PID_Initialize:
  2294                           	opt stack 28
  2295                           
  2296                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  2297                           
  2298                           ;incstack = 0
  2299  0073B4  EE20 F016          	lfsr	2,22
  2300  0073B8  500A               	movf	PID_Initialize@pid,w,c
  2301  0073BA  26D9               	addwf	fsr2l,f,c
  2302  0073BC  500B               	movf	PID_Initialize@pid+1,w,c
  2303  0073BE  22DA               	addwfc	fsr2h,f,c
  2304  0073C0  EE10 F01C          	lfsr	1,28
  2305  0073C4  500A               	movf	PID_Initialize@pid,w,c
  2306  0073C6  26E1               	addwf	fsr1l,f,c
  2307  0073C8  500B               	movf	PID_Initialize@pid+1,w,c
  2308  0073CA  22E2               	addwfc	fsr1h,f,c
  2309  0073CC  CFDE FFE6          	movff	postinc2,postinc1
  2310  0073D0  CFDE FFE6          	movff	postinc2,postinc1
  2311  0073D4  CFDE FFE6          	movff	postinc2,postinc1
  2312                           
  2313                           ;pid.c: 169: pid->lastInput = pid->myInput;
  2314  0073D8  EE20 F013          	lfsr	2,19
  2315  0073DC  500A               	movf	PID_Initialize@pid,w,c
  2316  0073DE  26D9               	addwf	fsr2l,f,c
  2317  0073E0  500B               	movf	PID_Initialize@pid+1,w,c
  2318  0073E2  22DA               	addwfc	fsr2h,f,c
  2319  0073E4  EE10 F01F          	lfsr	1,31
  2320  0073E8  500A               	movf	PID_Initialize@pid,w,c
  2321  0073EA  26E1               	addwf	fsr1l,f,c
  2322  0073EC  500B               	movf	PID_Initialize@pid+1,w,c
  2323  0073EE  22E2               	addwfc	fsr1h,f,c
  2324  0073F0  CFDE FFE6          	movff	postinc2,postinc1
  2325  0073F4  CFDE FFE6          	movff	postinc2,postinc1
  2326  0073F8  CFDE FFE6          	movff	postinc2,postinc1
  2327                           
  2328                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  2329  0073FC  EE20 F029          	lfsr	2,41
  2330  007400  500A               	movf	PID_Initialize@pid,w,c
  2331  007402  26D9               	addwf	fsr2l,f,c
  2332  007404  500B               	movf	PID_Initialize@pid+1,w,c
  2333  007406  22DA               	addwfc	fsr2h,f,c
  2334  007408  CFDE F001          	movff	postinc2,___ftge@ff1
  2335  00740C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2336  007410  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2337  007414  EE20 F01C          	lfsr	2,28
  2338  007418  500A               	movf	PID_Initialize@pid,w,c
  2339  00741A  26D9               	addwf	fsr2l,f,c
  2340  00741C  500B               	movf	PID_Initialize@pid+1,w,c
  2341  00741E  22DA               	addwfc	fsr2h,f,c
  2342  007420  CFDE F004          	movff	postinc2,___ftge@ff2
  2343  007424  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2344  007428  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2345  00742C  EC6A  F037         	call	___ftge	;wreg free
  2346  007430  B0D8               	btfsc	status,0,c
  2347  007432  D013               	goto	l1496
  2348                           
  2349                           ;pid.c: 171: pid->ITerm = pid->outMax;
  2350  007434  EE20 F029          	lfsr	2,41
  2351  007438  500A               	movf	PID_Initialize@pid,w,c
  2352  00743A  26D9               	addwf	fsr2l,f,c
  2353  00743C  500B               	movf	PID_Initialize@pid+1,w,c
  2354  00743E  22DA               	addwfc	fsr2h,f,c
  2355  007440  EE10 F01C          	lfsr	1,28
  2356  007444  500A               	movf	PID_Initialize@pid,w,c
  2357  007446  26E1               	addwf	fsr1l,f,c
  2358  007448  500B               	movf	PID_Initialize@pid+1,w,c
  2359  00744A  22E2               	addwfc	fsr1h,f,c
  2360  00744C  CFDE FFE6          	movff	postinc2,postinc1
  2361  007450  CFDE FFE6          	movff	postinc2,postinc1
  2362  007454  CFDE FFE6          	movff	postinc2,postinc1
  2363                           
  2364                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  2365  007458  0012               	return	
  2366  00745A                     l1496:
  2367  00745A  EE20 F01C          	lfsr	2,28
  2368  00745E  500A               	movf	PID_Initialize@pid,w,c
  2369  007460  26D9               	addwf	fsr2l,f,c
  2370  007462  500B               	movf	PID_Initialize@pid+1,w,c
  2371  007464  22DA               	addwfc	fsr2h,f,c
  2372  007466  CFDE F001          	movff	postinc2,___ftge@ff1
  2373  00746A  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2374  00746E  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2375  007472  EE20 F026          	lfsr	2,38
  2376  007476  500A               	movf	PID_Initialize@pid,w,c
  2377  007478  26D9               	addwf	fsr2l,f,c
  2378  00747A  500B               	movf	PID_Initialize@pid+1,w,c
  2379  00747C  22DA               	addwfc	fsr2h,f,c
  2380  00747E  CFDE F004          	movff	postinc2,___ftge@ff2
  2381  007482  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2382  007486  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2383  00748A  EC6A  F037         	call	___ftge	;wreg free
  2384  00748E  B0D8               	btfsc	status,0,c
  2385  007490  0012               	return	
  2386                           
  2387                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2388  007492  EE20 F026          	lfsr	2,38
  2389  007496  500A               	movf	PID_Initialize@pid,w,c
  2390  007498  26D9               	addwf	fsr2l,f,c
  2391  00749A  500B               	movf	PID_Initialize@pid+1,w,c
  2392  00749C  22DA               	addwfc	fsr2h,f,c
  2393  00749E  EE10 F01C          	lfsr	1,28
  2394  0074A2  500A               	movf	PID_Initialize@pid,w,c
  2395  0074A4  26E1               	addwf	fsr1l,f,c
  2396  0074A6  500B               	movf	PID_Initialize@pid+1,w,c
  2397  0074A8  22E2               	addwfc	fsr1h,f,c
  2398  0074AA  CFDE FFE6          	movff	postinc2,postinc1
  2399  0074AE  CFDE FFE6          	movff	postinc2,postinc1
  2400  0074B2  CFDE FFE6          	movff	postinc2,postinc1
  2401  0074B6  0012               	return	
  2402  0074B8                     __end_of_PID_Initialize:
  2403                           	opt stack 0
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           postinc1	equ	0xFE6
  2411                           fsr1h	equ	0xFE2
  2412                           fsr1l	equ	0xFE1
  2413                           indf2	equ	0xFDF
  2414                           postinc2	equ	0xFDE
  2415                           postdec2	equ	0xFDD
  2416                           fsr2h	equ	0xFDA
  2417                           fsr2l	equ	0xFD9
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _PID_Compute *****************
  2421 ;; Defined at:
  2422 ;;		line 43 in file "pid.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  pid             2   38[COMRAM] PTR struct .
  2425 ;;		 -> main@PID(45), 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  output          3   52[COMRAM] float 
  2428 ;;  input           3   49[COMRAM] float 
  2429 ;;  error           3   46[COMRAM] float 
  2430 ;;  dInput          3   40[COMRAM] float 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      unsigned char 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2440 ;;      Params:         2       0       0       0       0       0       0       0       0
  2441 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2443 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2444 ;;Total ram usage:       17 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		___ftadd
  2449 ;;		___ftge
  2450 ;;		___ftmul
  2451 ;;		___ftneg
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text12
  2458  007CE8                     __ptext12:
  2459                           	opt stack 0
  2460  007CE8                     _PID_Compute:
  2461                           	opt stack 28
  2462                           
  2463                           ;pid.c: 44: if (!pid->inAuto) {
  2464                           
  2465                           ;incstack = 0
  2466  007CE8  EE20 F02C          	lfsr	2,44
  2467  007CEC  5027               	movf	PID_Compute@pid,w,c
  2468  007CEE  26D9               	addwf	fsr2l,f,c
  2469  007CF0  5028               	movf	PID_Compute@pid+1,w,c
  2470  007CF2  22DA               	addwfc	fsr2h,f,c
  2471  007CF4  50DF               	movf	indf2,w,c
  2472  007CF6  B4D8               	btfsc	status,2,c
  2473  007CF8  0012               	return	
  2474                           
  2475                           ;pid.c: 46: }
  2476                           ;pid.c: 51: FloatType input = pid->myInput;
  2477                           
  2478                           ;pid.c: 45: return 0;
  2479                           ;	Return value of _PID_Compute is never used
  2480  007CFA  EE20 F013          	lfsr	2,19
  2481  007CFE  5027               	movf	PID_Compute@pid,w,c
  2482  007D00  26D9               	addwf	fsr2l,f,c
  2483  007D02  5028               	movf	PID_Compute@pid+1,w,c
  2484  007D04  22DA               	addwfc	fsr2h,f,c
  2485  007D06  CFDE F032          	movff	postinc2,PID_Compute@input
  2486  007D0A  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2487  007D0E  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2488                           
  2489                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2490  007D12  C032  F024         	movff	PID_Compute@input,___ftneg@f1
  2491  007D16  C033  F025         	movff	PID_Compute@input+1,___ftneg@f1+1
  2492  007D1A  C034  F026         	movff	PID_Compute@input+2,___ftneg@f1+2
  2493  007D1E  ECC7  F036         	call	___ftneg	;wreg free
  2494  007D22  C024  F018         	movff	?___ftneg,___ftadd@f1
  2495  007D26  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2496  007D2A  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2497  007D2E  EE20 F019          	lfsr	2,25
  2498  007D32  5027               	movf	PID_Compute@pid,w,c
  2499  007D34  26D9               	addwf	fsr2l,f,c
  2500  007D36  5028               	movf	PID_Compute@pid+1,w,c
  2501  007D38  22DA               	addwfc	fsr2h,f,c
  2502  007D3A  CFDE F01B          	movff	postinc2,___ftadd@f2
  2503  007D3E  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2504  007D42  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2505  007D46  ECE1  F03A         	call	___ftadd	;wreg free
  2506  007D4A  C018  F02F         	movff	?___ftadd,PID_Compute@error
  2507  007D4E  C019  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2508  007D52  C01A  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2509                           
  2510                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2511  007D56  EE20 F01C          	lfsr	2,28
  2512  007D5A  5027               	movf	PID_Compute@pid,w,c
  2513  007D5C  26D9               	addwf	fsr2l,f,c
  2514  007D5E  5028               	movf	PID_Compute@pid+1,w,c
  2515  007D60  22DA               	addwfc	fsr2h,f,c
  2516  007D62  CFDE F018          	movff	postinc2,___ftadd@f1
  2517  007D66  CFDE F019          	movff	postinc2,___ftadd@f1+1
  2518  007D6A  CFDD F01A          	movff	postdec2,___ftadd@f1+2
  2519  007D6E  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2520  007D72  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2521  007D76  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2522  007D7A  EE20 F00C          	lfsr	2,12
  2523  007D7E  5027               	movf	PID_Compute@pid,w,c
  2524  007D80  26D9               	addwf	fsr2l,f,c
  2525  007D82  5028               	movf	PID_Compute@pid+1,w,c
  2526  007D84  22DA               	addwfc	fsr2h,f,c
  2527  007D86  CFDE F009          	movff	postinc2,___ftmul@f1
  2528  007D8A  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2529  007D8E  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2530  007D92  ECE6  F038         	call	___ftmul	;wreg free
  2531  007D96  C009  F01B         	movff	?___ftmul,___ftadd@f2
  2532  007D9A  C00A  F01C         	movff	?___ftmul+1,___ftadd@f2+1
  2533  007D9E  C00B  F01D         	movff	?___ftmul+2,___ftadd@f2+2
  2534  007DA2  ECE1  F03A         	call	___ftadd	;wreg free
  2535  007DA6  EE20 F01C          	lfsr	2,28
  2536  007DAA  5027               	movf	PID_Compute@pid,w,c
  2537  007DAC  26D9               	addwf	fsr2l,f,c
  2538  007DAE  5028               	movf	PID_Compute@pid+1,w,c
  2539  007DB0  22DA               	addwfc	fsr2h,f,c
  2540  007DB2  C018  FFDE         	movff	?___ftadd,postinc2
  2541  007DB6  C019  FFDE         	movff	?___ftadd+1,postinc2
  2542  007DBA  C01A  FFDE         	movff	?___ftadd+2,postinc2
  2543                           
  2544                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2545  007DBE  EE20 F029          	lfsr	2,41
  2546  007DC2  5027               	movf	PID_Compute@pid,w,c
  2547  007DC4  26D9               	addwf	fsr2l,f,c
  2548  007DC6  5028               	movf	PID_Compute@pid+1,w,c
  2549  007DC8  22DA               	addwfc	fsr2h,f,c
  2550  007DCA  CFDE F001          	movff	postinc2,___ftge@ff1
  2551  007DCE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2552  007DD2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2553  007DD6  EE20 F01C          	lfsr	2,28
  2554  007DDA  5027               	movf	PID_Compute@pid,w,c
  2555  007DDC  26D9               	addwf	fsr2l,f,c
  2556  007DDE  5028               	movf	PID_Compute@pid+1,w,c
  2557  007DE0  22DA               	addwfc	fsr2h,f,c
  2558  007DE2  CFDE F004          	movff	postinc2,___ftge@ff2
  2559  007DE6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2560  007DEA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2561  007DEE  EC6A  F037         	call	___ftge	;wreg free
  2562  007DF2  B0D8               	btfsc	status,0,c
  2563  007DF4  D003               	goto	l1602
  2564                           
  2565                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2566  007DF6  EE20 F029          	lfsr	2,41
  2567  007DFA  D01E               	goto	L2
  2568  007DFC                     l1602:
  2569                           
  2570                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2571  007DFC  EE20 F01C          	lfsr	2,28
  2572  007E00  5027               	movf	PID_Compute@pid,w,c
  2573  007E02  26D9               	addwf	fsr2l,f,c
  2574  007E04  5028               	movf	PID_Compute@pid+1,w,c
  2575  007E06  22DA               	addwfc	fsr2h,f,c
  2576  007E08  CFDE F001          	movff	postinc2,___ftge@ff1
  2577  007E0C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2578  007E10  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2579  007E14  EE20 F026          	lfsr	2,38
  2580  007E18  5027               	movf	PID_Compute@pid,w,c
  2581  007E1A  26D9               	addwf	fsr2l,f,c
  2582  007E1C  5028               	movf	PID_Compute@pid+1,w,c
  2583  007E1E  22DA               	addwfc	fsr2h,f,c
  2584  007E20  CFDE F004          	movff	postinc2,___ftge@ff2
  2585  007E24  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2586  007E28  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2587  007E2C  EC6A  F037         	call	___ftge	;wreg free
  2588  007E30  B0D8               	btfsc	status,0,c
  2589  007E32  D012               	goto	l1606
  2590                           
  2591                           ;pid.c: 57: pid->ITerm = pid->outMin;
  2592  007E34  EE20 F026          	lfsr	2,38
  2593  007E38                     L2:
  2594  007E38  5027               	movf	PID_Compute@pid,w,c
  2595  007E3A  26D9               	addwf	fsr2l,f,c
  2596  007E3C  5028               	movf	PID_Compute@pid+1,w,c
  2597  007E3E  22DA               	addwfc	fsr2h,f,c
  2598  007E40  EE10 F01C          	lfsr	1,28
  2599  007E44  5027               	movf	PID_Compute@pid,w,c
  2600  007E46  26E1               	addwf	fsr1l,f,c
  2601  007E48  5028               	movf	PID_Compute@pid+1,w,c
  2602  007E4A  22E2               	addwfc	fsr1h,f,c
  2603  007E4C  CFDE FFE6          	movff	postinc2,postinc1
  2604  007E50  CFDE FFE6          	movff	postinc2,postinc1
  2605  007E54  CFDE FFE6          	movff	postinc2,postinc1
  2606  007E58                     l1606:
  2607                           
  2608                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  2609  007E58  EE20 F01F          	lfsr	2,31
  2610  007E5C  5027               	movf	PID_Compute@pid,w,c
  2611  007E5E  26D9               	addwf	fsr2l,f,c
  2612  007E60  5028               	movf	PID_Compute@pid+1,w,c
  2613  007E62  22DA               	addwfc	fsr2h,f,c
  2614  007E64  CFDE F024          	movff	postinc2,___ftneg@f1
  2615  007E68  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2616  007E6C  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2617  007E70  ECC7  F036         	call	___ftneg	;wreg free
  2618  007E74  C024  F018         	movff	?___ftneg,___ftadd@f1
  2619  007E78  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2620  007E7C  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2621  007E80  C032  F01B         	movff	PID_Compute@input,___ftadd@f2
  2622  007E84  C033  F01C         	movff	PID_Compute@input+1,___ftadd@f2+1
  2623  007E88  C034  F01D         	movff	PID_Compute@input+2,___ftadd@f2+2
  2624  007E8C  ECE1  F03A         	call	___ftadd	;wreg free
  2625  007E90  C018  F029         	movff	?___ftadd,PID_Compute@dInput
  2626  007E94  C019  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  2627  007E98  C01A  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  2628                           
  2629                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2630  007E9C  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  2631  007EA0  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  2632  007EA4  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  2633  007EA8  EE20 F00F          	lfsr	2,15
  2634  007EAC  5027               	movf	PID_Compute@pid,w,c
  2635  007EAE  26D9               	addwf	fsr2l,f,c
  2636  007EB0  5028               	movf	PID_Compute@pid+1,w,c
  2637  007EB2  22DA               	addwfc	fsr2h,f,c
  2638  007EB4  CFDE F009          	movff	postinc2,___ftmul@f1
  2639  007EB8  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2640  007EBC  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2641  007EC0  ECE6  F038         	call	___ftmul	;wreg free
  2642  007EC4  C009  F024         	movff	?___ftmul,___ftneg@f1
  2643  007EC8  C00A  F025         	movff	?___ftmul+1,___ftneg@f1+1
  2644  007ECC  C00B  F026         	movff	?___ftmul+2,___ftneg@f1+2
  2645  007ED0  ECC7  F036         	call	___ftneg	;wreg free
  2646  007ED4  C024  F01B         	movff	?___ftneg,___ftadd@f2
  2647  007ED8  C025  F01C         	movff	?___ftneg+1,___ftadd@f2+1
  2648  007EDC  C026  F01D         	movff	?___ftneg+2,___ftadd@f2+2
  2649  007EE0  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2650  007EE4  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2651  007EE8  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2652  007EEC  EE20 F009          	lfsr	2,9
  2653  007EF0  5027               	movf	PID_Compute@pid,w,c
  2654  007EF2  26D9               	addwf	fsr2l,f,c
  2655  007EF4  5028               	movf	PID_Compute@pid+1,w,c
  2656  007EF6  22DA               	addwfc	fsr2h,f,c
  2657  007EF8  CFDE F009          	movff	postinc2,___ftmul@f1
  2658  007EFC  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2659  007F00  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2660  007F04  ECE6  F038         	call	___ftmul	;wreg free
  2661  007F08  C009  F018         	movff	?___ftmul,___ftadd@f1
  2662  007F0C  C00A  F019         	movff	?___ftmul+1,___ftadd@f1+1
  2663  007F10  C00B  F01A         	movff	?___ftmul+2,___ftadd@f1+2
  2664  007F14  ECE1  F03A         	call	___ftadd	;wreg free
  2665  007F18  C018  F02C         	movff	?___ftadd,_PID_Compute$1037
  2666  007F1C  C019  F02D         	movff	?___ftadd+1,_PID_Compute$1037+1
  2667  007F20  C01A  F02E         	movff	?___ftadd+2,_PID_Compute$1037+2
  2668                           
  2669                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2670  007F24  C02C  F018         	movff	_PID_Compute$1037,___ftadd@f1
  2671  007F28  C02D  F019         	movff	_PID_Compute$1037+1,___ftadd@f1+1
  2672  007F2C  C02E  F01A         	movff	_PID_Compute$1037+2,___ftadd@f1+2
  2673  007F30  EE20 F01C          	lfsr	2,28
  2674  007F34  5027               	movf	PID_Compute@pid,w,c
  2675  007F36  26D9               	addwf	fsr2l,f,c
  2676  007F38  5028               	movf	PID_Compute@pid+1,w,c
  2677  007F3A  22DA               	addwfc	fsr2h,f,c
  2678  007F3C  CFDE F01B          	movff	postinc2,___ftadd@f2
  2679  007F40  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2680  007F44  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2681  007F48  ECE1  F03A         	call	___ftadd	;wreg free
  2682  007F4C  C018  F035         	movff	?___ftadd,PID_Compute@output
  2683  007F50  C019  F036         	movff	?___ftadd+1,PID_Compute@output+1
  2684  007F54  C01A  F037         	movff	?___ftadd+2,PID_Compute@output+2
  2685                           
  2686                           ;pid.c: 63: if (output > pid->outMax)
  2687  007F58  EE20 F029          	lfsr	2,41
  2688  007F5C  5027               	movf	PID_Compute@pid,w,c
  2689  007F5E  26D9               	addwf	fsr2l,f,c
  2690  007F60  5028               	movf	PID_Compute@pid+1,w,c
  2691  007F62  22DA               	addwfc	fsr2h,f,c
  2692  007F64  CFDE F001          	movff	postinc2,___ftge@ff1
  2693  007F68  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2694  007F6C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2695  007F70  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  2696  007F74  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  2697  007F78  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  2698  007F7C  EC6A  F037         	call	___ftge	;wreg free
  2699  007F80  B0D8               	btfsc	status,0,c
  2700  007F82  D003               	goto	l1616
  2701                           
  2702                           ;pid.c: 64: output = pid->outMax;
  2703  007F84  EE20 F029          	lfsr	2,41
  2704  007F88  D018               	goto	L3
  2705  007F8A                     l1616:
  2706                           
  2707                           ;pid.c: 65: else if (output < pid->outMin)
  2708  007F8A  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  2709  007F8E  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  2710  007F92  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  2711  007F96  EE20 F026          	lfsr	2,38
  2712  007F9A  5027               	movf	PID_Compute@pid,w,c
  2713  007F9C  26D9               	addwf	fsr2l,f,c
  2714  007F9E  5028               	movf	PID_Compute@pid+1,w,c
  2715  007FA0  22DA               	addwfc	fsr2h,f,c
  2716  007FA2  CFDE F004          	movff	postinc2,___ftge@ff2
  2717  007FA6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2718  007FAA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2719  007FAE  EC6A  F037         	call	___ftge	;wreg free
  2720  007FB2  B0D8               	btfsc	status,0,c
  2721  007FB4  D00C               	goto	l72
  2722                           
  2723                           ;pid.c: 66: output = pid->outMin;
  2724  007FB6  EE20 F026          	lfsr	2,38
  2725  007FBA                     L3:
  2726  007FBA  5027               	movf	PID_Compute@pid,w,c
  2727  007FBC  26D9               	addwf	fsr2l,f,c
  2728  007FBE  5028               	movf	PID_Compute@pid+1,w,c
  2729  007FC0  22DA               	addwfc	fsr2h,f,c
  2730  007FC2  CFDE F035          	movff	postinc2,PID_Compute@output
  2731  007FC6  CFDE F036          	movff	postinc2,PID_Compute@output+1
  2732  007FCA  CFDD F037          	movff	postdec2,PID_Compute@output+2
  2733  007FCE                     l72:
  2734                           
  2735                           ;pid.c: 67: pid->myOutput = output;
  2736  007FCE  EE20 F016          	lfsr	2,22
  2737  007FD2  5027               	movf	PID_Compute@pid,w,c
  2738  007FD4  26D9               	addwf	fsr2l,f,c
  2739  007FD6  5028               	movf	PID_Compute@pid+1,w,c
  2740  007FD8  22DA               	addwfc	fsr2h,f,c
  2741  007FDA  C035  FFDE         	movff	PID_Compute@output,postinc2
  2742  007FDE  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  2743  007FE2  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  2744                           
  2745                           ;pid.c: 70: pid->lastInput = input;
  2746  007FE6  EE20 F01F          	lfsr	2,31
  2747  007FEA  5027               	movf	PID_Compute@pid,w,c
  2748  007FEC  26D9               	addwf	fsr2l,f,c
  2749  007FEE  5028               	movf	PID_Compute@pid+1,w,c
  2750  007FF0  22DA               	addwfc	fsr2h,f,c
  2751  007FF2  C032  FFDE         	movff	PID_Compute@input,postinc2
  2752  007FF6  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  2753  007FFA  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  2754  007FFE  0012               	return	
  2755  008000                     __end_of_PID_Compute:
  2756                           	opt stack 0
  2757                           tblptru	equ	0xFF8
  2758                           tblptrh	equ	0xFF7
  2759                           tblptrl	equ	0xFF6
  2760                           tablat	equ	0xFF5
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           postinc1	equ	0xFE6
  2764                           fsr1h	equ	0xFE2
  2765                           fsr1l	equ	0xFE1
  2766                           indf2	equ	0xFDF
  2767                           postinc2	equ	0xFDE
  2768                           postdec2	equ	0xFDD
  2769                           fsr2h	equ	0xFDA
  2770                           fsr2l	equ	0xFD9
  2771                           status	equ	0xFD8
  2772                           
  2773 ;; *************** function ___ftneg *****************
  2774 ;; Defined at:
  2775 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  f1              3   35[COMRAM] float 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  3   35[COMRAM] float 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2789 ;;      Params:         3       0       0       0       0       0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2792 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2793 ;;Total ram usage:        3 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;;		_PID_Compute
  2800 ;;		_PID_SetTunings
  2801 ;;		_PID_SetControllerDirection
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text13
  2806  006D8E                     __ptext13:
  2807                           	opt stack 0
  2808  006D8E                     ___ftneg:
  2809                           	opt stack 30
  2810                           
  2811                           ;incstack = 0
  2812  006D8E  5024               	movf	___ftneg@f1,w,c
  2813  006D90  1025               	iorwf	___ftneg@f1+1,w,c
  2814  006D92  1026               	iorwf	___ftneg@f1+2,w,c
  2815  006D94  B4D8               	btfsc	status,2,c
  2816  006D96  D006               	goto	l429
  2817  006D98  0E00               	movlw	0
  2818  006D9A  1A24               	xorwf	___ftneg@f1,f,c
  2819  006D9C  0E00               	movlw	0
  2820  006D9E  1A25               	xorwf	___ftneg@f1+1,f,c
  2821  006DA0  0E80               	movlw	128
  2822  006DA2  1A26               	xorwf	___ftneg@f1+2,f,c
  2823  006DA4                     l429:
  2824  006DA4  C024  F024         	movff	___ftneg@f1,?___ftneg
  2825  006DA8  C025  F025         	movff	___ftneg@f1+1,?___ftneg+1
  2826  006DAC  C026  F026         	movff	___ftneg@f1+2,?___ftneg+2
  2827  006DB0  0012               	return		;funcret
  2828  006DB2                     __end_of___ftneg:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           postinc0	equ	0xFEE
  2835                           wreg	equ	0xFE8
  2836                           postinc1	equ	0xFE6
  2837                           fsr1h	equ	0xFE2
  2838                           fsr1l	equ	0xFE1
  2839                           indf2	equ	0xFDF
  2840                           postinc2	equ	0xFDE
  2841                           postdec2	equ	0xFDD
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function ___ftmul *****************
  2847 ;; Defined at:
  2848 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  f1              3    8[COMRAM] float 
  2851 ;;  f2              3   11[COMRAM] float 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2854 ;;  sign            1   22[COMRAM] unsigned char 
  2855 ;;  cntr            1   21[COMRAM] unsigned char 
  2856 ;;  exp             1   17[COMRAM] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  3    8[COMRAM] float 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2866 ;;      Params:         6       0       0       0       0       0       0       0       0
  2867 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2868 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2869 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2870 ;;Total ram usage:       15 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    1
  2873 ;; This function calls:
  2874 ;;		___ftpack
  2875 ;; This function is called by:
  2876 ;;		_PID_Compute
  2877 ;;		_PID_SetTunings
  2878 ;;		_PID_SetSampleTime
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text14
  2883  0071CC                     __ptext14:
  2884                           	opt stack 0
  2885  0071CC                     ___ftmul:
  2886                           	opt stack 27
  2887                           
  2888                           ;incstack = 0
  2889  0071CC  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2890  0071D0  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2891  0071D2  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2892  0071D4  340A               	rlcf	___ftmul@f1+1,w,c
  2893  0071D6  360F               	rlcf	??___ftmul& (0+255),f,c
  2894  0071D8  E301               	bnc	u911
  2895  0071DA  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2896  0071DC                     u911:
  2897  0071DC  500F               	movf	??___ftmul,w,c
  2898  0071DE  6E12               	movwf	___ftmul@exp,c
  2899  0071E0  5012               	movf	___ftmul@exp,w,c
  2900  0071E2  A4D8               	btfss	status,2,c
  2901  0071E4  D007               	goto	l1362
  2902  0071E6  0E00               	movlw	0
  2903  0071E8  6E09               	movwf	?___ftmul,c
  2904  0071EA  0E00               	movlw	0
  2905  0071EC  6E0A               	movwf	?___ftmul+1,c
  2906  0071EE  0E00               	movlw	0
  2907  0071F0  6E0B               	movwf	?___ftmul+2,c
  2908  0071F2  0012               	return	
  2909  0071F4                     l1362:
  2910  0071F4  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2911  0071F8  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2912  0071FA  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2913  0071FC  340D               	rlcf	___ftmul@f2+1,w,c
  2914  0071FE  360F               	rlcf	??___ftmul& (0+255),f,c
  2915  007200  E301               	bnc	u931
  2916  007202  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2917  007204                     u931:
  2918  007204  500F               	movf	??___ftmul,w,c
  2919  007206  6E17               	movwf	___ftmul@sign,c
  2920  007208  5017               	movf	___ftmul@sign,w,c
  2921  00720A  A4D8               	btfss	status,2,c
  2922  00720C  D007               	goto	l1368
  2923  00720E  0E00               	movlw	0
  2924  007210  6E09               	movwf	?___ftmul,c
  2925  007212  0E00               	movlw	0
  2926  007214  6E0A               	movwf	?___ftmul+1,c
  2927  007216  0E00               	movlw	0
  2928  007218  6E0B               	movwf	?___ftmul+2,c
  2929  00721A  0012               	return	
  2930  00721C                     l1368:
  2931  00721C  5017               	movf	___ftmul@sign,w,c
  2932  00721E  0F7B               	addlw	123
  2933  007220  2612               	addwf	___ftmul@exp,f,c
  2934  007222  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2935  007226  500E               	movf	___ftmul@f2+2,w,c
  2936  007228  1A17               	xorwf	___ftmul@sign,f,c
  2937  00722A  0E80               	movlw	128
  2938  00722C  1617               	andwf	___ftmul@sign,f,c
  2939  00722E  8E0A               	bsf	___ftmul@f1+1,7,c
  2940  007230  8E0D               	bsf	___ftmul@f2+1,7,c
  2941  007232  0EFF               	movlw	255
  2942  007234  160C               	andwf	___ftmul@f2,f,c
  2943  007236  0EFF               	movlw	255
  2944  007238  160D               	andwf	___ftmul@f2+1,f,c
  2945  00723A  0E00               	movlw	0
  2946  00723C  160E               	andwf	___ftmul@f2+2,f,c
  2947  00723E  0E00               	movlw	0
  2948  007240  6E13               	movwf	___ftmul@f3_as_product,c
  2949  007242  0E00               	movlw	0
  2950  007244  6E14               	movwf	___ftmul@f3_as_product+1,c
  2951  007246  0E00               	movlw	0
  2952  007248  6E15               	movwf	___ftmul@f3_as_product+2,c
  2953  00724A  0E07               	movlw	7
  2954  00724C  6E16               	movwf	___ftmul@cntr,c
  2955  00724E                     l1382:
  2956  00724E  A009               	btfss	___ftmul@f1,0,c
  2957  007250  D006               	goto	l1386
  2958  007252  500C               	movf	___ftmul@f2,w,c
  2959  007254  2613               	addwf	___ftmul@f3_as_product,f,c
  2960  007256  500D               	movf	___ftmul@f2+1,w,c
  2961  007258  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2962  00725A  500E               	movf	___ftmul@f2+2,w,c
  2963  00725C  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2964  00725E                     l1386:
  2965  00725E  90D8               	bcf	status,0,c
  2966  007260  320B               	rrcf	___ftmul@f1+2,f,c
  2967  007262  320A               	rrcf	___ftmul@f1+1,f,c
  2968  007264  3209               	rrcf	___ftmul@f1,f,c
  2969  007266  90D8               	bcf	status,0,c
  2970  007268  360C               	rlcf	___ftmul@f2,f,c
  2971  00726A  360D               	rlcf	___ftmul@f2+1,f,c
  2972  00726C  360E               	rlcf	___ftmul@f2+2,f,c
  2973  00726E  2E16               	decfsz	___ftmul@cntr,f,c
  2974  007270  D7EE               	goto	l1382
  2975  007272  0E09               	movlw	9
  2976  007274  6E16               	movwf	___ftmul@cntr,c
  2977  007276                     l1392:
  2978  007276  A009               	btfss	___ftmul@f1,0,c
  2979  007278  D006               	goto	l1396
  2980  00727A  500C               	movf	___ftmul@f2,w,c
  2981  00727C  2613               	addwf	___ftmul@f3_as_product,f,c
  2982  00727E  500D               	movf	___ftmul@f2+1,w,c
  2983  007280  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2984  007282  500E               	movf	___ftmul@f2+2,w,c
  2985  007284  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2986  007286                     l1396:
  2987  007286  90D8               	bcf	status,0,c
  2988  007288  320B               	rrcf	___ftmul@f1+2,f,c
  2989  00728A  320A               	rrcf	___ftmul@f1+1,f,c
  2990  00728C  3209               	rrcf	___ftmul@f1,f,c
  2991  00728E  90D8               	bcf	status,0,c
  2992  007290  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2993  007292  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2994  007294  3213               	rrcf	___ftmul@f3_as_product,f,c
  2995  007296  2E16               	decfsz	___ftmul@cntr,f,c
  2996  007298  D7EE               	goto	l1392
  2997  00729A  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2998  00729E  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2999  0072A2  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3000  0072A6  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  3001  0072AA  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  3002  0072AE  ECB2  F037         	call	___ftpack	;wreg free
  3003  0072B2  C001  F009         	movff	?___ftpack,?___ftmul
  3004  0072B6  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  3005  0072BA  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  3006  0072BE  0012               	return	
  3007  0072C0                     __end_of___ftmul:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           postinc1	equ	0xFE6
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           indf2	equ	0xFDF
  3019                           postinc2	equ	0xFDE
  3020                           postdec2	equ	0xFDD
  3021                           fsr2h	equ	0xFDA
  3022                           fsr2l	equ	0xFD9
  3023                           status	equ	0xFD8
  3024                           
  3025 ;; *************** function ___ftge *****************
  3026 ;; Defined at:
  3027 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  ff1             3    0[COMRAM] float 
  3030 ;;  ff2             3    3[COMRAM] float 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;		None               void
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3042 ;;      Params:         6       0       0       0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3044 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3045 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3046 ;;Total ram usage:        9 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_PID_Compute
  3052 ;;		_PID_SetOutputLimits
  3053 ;;		_PID_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text15
  3058  006ED4                     __ptext15:
  3059                           	opt stack 0
  3060  006ED4                     ___ftge:
  3061                           	opt stack 28
  3062                           
  3063                           ;incstack = 0
  3064  006ED4  AE03               	btfss	___ftge@ff1+2,7,c
  3065  006ED6  D016               	goto	l1408
  3066  006ED8  C001  F007         	movff	___ftge@ff1,??___ftge
  3067  006EDC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3068  006EE0  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3069  006EE4  1E07               	comf	??___ftge,f,c
  3070  006EE6  1E08               	comf	??___ftge+1,f,c
  3071  006EE8  1E09               	comf	??___ftge+2,f,c
  3072  006EEA  2A07               	incf	??___ftge,f,c
  3073  006EEC  0E00               	movlw	0
  3074  006EEE  2208               	addwfc	??___ftge+1,f,c
  3075  006EF0  2209               	addwfc	??___ftge+2,f,c
  3076  006EF2  0E00               	movlw	0
  3077  006EF4  2407               	addwf	??___ftge,w,c
  3078  006EF6  6E01               	movwf	___ftge@ff1,c
  3079  006EF8  0E00               	movlw	0
  3080  006EFA  2008               	addwfc	??___ftge+1,w,c
  3081  006EFC  6E02               	movwf	___ftge@ff1+1,c
  3082  006EFE  0E80               	movlw	128
  3083  006F00  2009               	addwfc	??___ftge+2,w,c
  3084  006F02  6E03               	movwf	___ftge@ff1+2,c
  3085  006F04                     l1408:
  3086  006F04  AE06               	btfss	___ftge@ff2+2,7,c
  3087  006F06  D016               	goto	l1412
  3088  006F08  C004  F007         	movff	___ftge@ff2,??___ftge
  3089  006F0C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3090  006F10  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3091  006F14  1E07               	comf	??___ftge,f,c
  3092  006F16  1E08               	comf	??___ftge+1,f,c
  3093  006F18  1E09               	comf	??___ftge+2,f,c
  3094  006F1A  2A07               	incf	??___ftge,f,c
  3095  006F1C  0E00               	movlw	0
  3096  006F1E  2208               	addwfc	??___ftge+1,f,c
  3097  006F20  2209               	addwfc	??___ftge+2,f,c
  3098  006F22  0E00               	movlw	0
  3099  006F24  2407               	addwf	??___ftge,w,c
  3100  006F26  6E04               	movwf	___ftge@ff2,c
  3101  006F28  0E00               	movlw	0
  3102  006F2A  2008               	addwfc	??___ftge+1,w,c
  3103  006F2C  6E05               	movwf	___ftge@ff2+1,c
  3104  006F2E  0E80               	movlw	128
  3105  006F30  2009               	addwfc	??___ftge+2,w,c
  3106  006F32  6E06               	movwf	___ftge@ff2+2,c
  3107  006F34                     l1412:
  3108  006F34  0E00               	movlw	0
  3109  006F36  1A01               	xorwf	___ftge@ff1,f,c
  3110  006F38  0E00               	movlw	0
  3111  006F3A  1A02               	xorwf	___ftge@ff1+1,f,c
  3112  006F3C  0E80               	movlw	128
  3113  006F3E  1A03               	xorwf	___ftge@ff1+2,f,c
  3114  006F40  0E00               	movlw	0
  3115  006F42  1A04               	xorwf	___ftge@ff2,f,c
  3116  006F44  0E00               	movlw	0
  3117  006F46  1A05               	xorwf	___ftge@ff2+1,f,c
  3118  006F48  0E80               	movlw	128
  3119  006F4A  1A06               	xorwf	___ftge@ff2+2,f,c
  3120  006F4C  5004               	movf	___ftge@ff2,w,c
  3121  006F4E  5C01               	subwf	___ftge@ff1,w,c
  3122  006F50  5005               	movf	___ftge@ff2+1,w,c
  3123  006F52  5802               	subwfb	___ftge@ff1+1,w,c
  3124  006F54  5006               	movf	___ftge@ff2+2,w,c
  3125  006F56  5803               	subwfb	___ftge@ff1+2,w,c
  3126  006F58  B0D8               	btfsc	status,0,c
  3127  006F5A  D002               	goto	l1418
  3128  006F5C  90D8               	bcf	status,0,c
  3129  006F5E  0012               	return	
  3130  006F60                     l1418:
  3131  006F60  80D8               	bsf	status,0,c
  3132  006F62  0012               	return	
  3133  006F64                     __end_of___ftge:
  3134                           	opt stack 0
  3135                           tblptru	equ	0xFF8
  3136                           tblptrh	equ	0xFF7
  3137                           tblptrl	equ	0xFF6
  3138                           tablat	equ	0xFF5
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postinc1	equ	0xFE6
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           postinc2	equ	0xFDE
  3146                           postdec2	equ	0xFDD
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151 ;; *************** function ___ftadd *****************
  3152 ;; Defined at:
  3153 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  f1              3   23[COMRAM] float 
  3156 ;;  f2              3   26[COMRAM] float 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  exp1            1   34[COMRAM] unsigned char 
  3159 ;;  exp2            1   33[COMRAM] unsigned char 
  3160 ;;  sign            1   32[COMRAM] unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  3   23[COMRAM] float 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3170 ;;      Params:         6       0       0       0       0       0       0       0       0
  3171 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3172 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3173 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3174 ;;Total ram usage:       12 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    1
  3177 ;; This function calls:
  3178 ;;		___ftpack
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;;		_PID_Compute
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text16
  3186  0075C2                     __ptext16:
  3187                           	opt stack 0
  3188  0075C2                     ___ftadd:
  3189                           	opt stack 29
  3190                           
  3191                           ;incstack = 0
  3192  0075C2  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  3193  0075C6  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3194  0075C8  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3195  0075CA  3419               	rlcf	___ftadd@f1+1,w,c
  3196  0075CC  361E               	rlcf	??___ftadd& (0+255),f,c
  3197  0075CE  E301               	bnc	u1161
  3198  0075D0  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3199  0075D2                     u1161:
  3200  0075D2  501E               	movf	??___ftadd,w,c
  3201  0075D4  6E23               	movwf	___ftadd@exp1,c
  3202  0075D6  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  3203  0075DA  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3204  0075DC  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3205  0075DE  341C               	rlcf	___ftadd@f2+1,w,c
  3206  0075E0  361E               	rlcf	??___ftadd& (0+255),f,c
  3207  0075E2  E301               	bnc	u1171
  3208  0075E4  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3209  0075E6                     u1171:
  3210  0075E6  501E               	movf	??___ftadd,w,c
  3211  0075E8  6E22               	movwf	___ftadd@exp2,c
  3212  0075EA  5023               	movf	___ftadd@exp1,w,c
  3213  0075EC  B4D8               	btfsc	status,2,c
  3214  0075EE  D00B               	goto	l372
  3215  0075F0  5022               	movf	___ftadd@exp2,w,c
  3216  0075F2  5C23               	subwf	___ftadd@exp1,w,c
  3217  0075F4  B0D8               	btfsc	status,0,c
  3218  0075F6  D00E               	goto	l1508
  3219  0075F8  5023               	movf	___ftadd@exp1,w,c
  3220  0075FA  0800               	sublw	0
  3221  0075FC  2422               	addwf	___ftadd@exp2,w,c
  3222  0075FE  6E1E               	movwf	??___ftadd& (0+255),c
  3223  007600  0E18               	movlw	24
  3224  007602  641E               	cpfsgt	??___ftadd,c
  3225  007604  D007               	goto	l1508
  3226  007606                     l372:
  3227  007606  C01B  F018         	movff	___ftadd@f2,?___ftadd
  3228  00760A  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  3229  00760E  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  3230  007612  0012               	return	
  3231  007614                     l1508:
  3232  007614  5022               	movf	___ftadd@exp2,w,c
  3233  007616  B4D8               	btfsc	status,2,c
  3234  007618  D00B               	goto	l376
  3235  00761A  5023               	movf	___ftadd@exp1,w,c
  3236  00761C  5C22               	subwf	___ftadd@exp2,w,c
  3237  00761E  B0D8               	btfsc	status,0,c
  3238  007620  D00E               	goto	l1514
  3239  007622  5022               	movf	___ftadd@exp2,w,c
  3240  007624  0800               	sublw	0
  3241  007626  2423               	addwf	___ftadd@exp1,w,c
  3242  007628  6E1E               	movwf	??___ftadd& (0+255),c
  3243  00762A  0E18               	movlw	24
  3244  00762C  641E               	cpfsgt	??___ftadd,c
  3245  00762E  D007               	goto	l1514
  3246  007630                     l376:
  3247  007630  C018  F018         	movff	___ftadd@f1,?___ftadd
  3248  007634  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  3249  007638  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  3250  00763C  0012               	return	
  3251  00763E                     l1514:
  3252  00763E  0E06               	movlw	6
  3253  007640  6E21               	movwf	___ftadd@sign,c
  3254  007642  BE1A               	btfsc	___ftadd@f1+2,7,c
  3255  007644  8E21               	bsf	___ftadd@sign,7,c
  3256  007646  BE1D               	btfsc	___ftadd@f2+2,7,c
  3257  007648  8C21               	bsf	___ftadd@sign,6,c
  3258  00764A  8E19               	bsf	___ftadd@f1+1,7,c
  3259  00764C  0EFF               	movlw	255
  3260  00764E  1618               	andwf	___ftadd@f1,f,c
  3261  007650  0EFF               	movlw	255
  3262  007652  1619               	andwf	___ftadd@f1+1,f,c
  3263  007654  0E00               	movlw	0
  3264  007656  161A               	andwf	___ftadd@f1+2,f,c
  3265  007658  8E1C               	bsf	___ftadd@f2+1,7,c
  3266  00765A  0EFF               	movlw	255
  3267  00765C  161B               	andwf	___ftadd@f2,f,c
  3268  00765E  0EFF               	movlw	255
  3269  007660  161C               	andwf	___ftadd@f2+1,f,c
  3270  007662  0E00               	movlw	0
  3271  007664  161D               	andwf	___ftadd@f2+2,f,c
  3272  007666  5022               	movf	___ftadd@exp2,w,c
  3273  007668  5C23               	subwf	___ftadd@exp1,w,c
  3274  00766A  B0D8               	btfsc	status,0,c
  3275  00766C  D01B               	goto	l1540
  3276  00766E                     l1530:
  3277  00766E  90D8               	bcf	status,0,c
  3278  007670  361B               	rlcf	___ftadd@f2,f,c
  3279  007672  361C               	rlcf	___ftadd@f2+1,f,c
  3280  007674  361D               	rlcf	___ftadd@f2+2,f,c
  3281  007676  0622               	decf	___ftadd@exp2,f,c
  3282  007678  5023               	movf	___ftadd@exp1,w,c
  3283  00767A  1822               	xorwf	___ftadd@exp2,w,c
  3284  00767C  B4D8               	btfsc	status,2,c
  3285  00767E  D00D               	goto	l1538
  3286  007680  0621               	decf	___ftadd@sign,f,c
  3287  007682  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3288  007686  0E07               	movlw	7
  3289  007688  161E               	andwf	??___ftadd,f,c
  3290  00768A  B4D8               	btfsc	status,2,c
  3291  00768C  D006               	goto	l1538
  3292  00768E  D7EF               	goto	l1530
  3293  007690                     l1536:
  3294  007690  90D8               	bcf	status,0,c
  3295  007692  321A               	rrcf	___ftadd@f1+2,f,c
  3296  007694  3219               	rrcf	___ftadd@f1+1,f,c
  3297  007696  3218               	rrcf	___ftadd@f1,f,c
  3298  007698  2A23               	incf	___ftadd@exp1,f,c
  3299  00769A                     l1538:
  3300  00769A  5022               	movf	___ftadd@exp2,w,c
  3301  00769C  1823               	xorwf	___ftadd@exp1,w,c
  3302  00769E  B4D8               	btfsc	status,2,c
  3303  0076A0  D01F               	goto	l387
  3304  0076A2  D7F6               	goto	l1536
  3305  0076A4                     l1540:
  3306  0076A4  5023               	movf	___ftadd@exp1,w,c
  3307  0076A6  5C22               	subwf	___ftadd@exp2,w,c
  3308  0076A8  B0D8               	btfsc	status,0,c
  3309  0076AA  D01A               	goto	l387
  3310  0076AC                     l1542:
  3311  0076AC  90D8               	bcf	status,0,c
  3312  0076AE  3618               	rlcf	___ftadd@f1,f,c
  3313  0076B0  3619               	rlcf	___ftadd@f1+1,f,c
  3314  0076B2  361A               	rlcf	___ftadd@f1+2,f,c
  3315  0076B4  0623               	decf	___ftadd@exp1,f,c
  3316  0076B6  5023               	movf	___ftadd@exp1,w,c
  3317  0076B8  1822               	xorwf	___ftadd@exp2,w,c
  3318  0076BA  B4D8               	btfsc	status,2,c
  3319  0076BC  D00D               	goto	l1550
  3320  0076BE  0621               	decf	___ftadd@sign,f,c
  3321  0076C0  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3322  0076C4  0E07               	movlw	7
  3323  0076C6  161E               	andwf	??___ftadd,f,c
  3324  0076C8  B4D8               	btfsc	status,2,c
  3325  0076CA  D006               	goto	l1550
  3326  0076CC  D7EF               	goto	l1542
  3327  0076CE                     l1548:
  3328  0076CE  90D8               	bcf	status,0,c
  3329  0076D0  321D               	rrcf	___ftadd@f2+2,f,c
  3330  0076D2  321C               	rrcf	___ftadd@f2+1,f,c
  3331  0076D4  321B               	rrcf	___ftadd@f2,f,c
  3332  0076D6  2A22               	incf	___ftadd@exp2,f,c
  3333  0076D8                     l1550:
  3334  0076D8  5022               	movf	___ftadd@exp2,w,c
  3335  0076DA  1823               	xorwf	___ftadd@exp1,w,c
  3336  0076DC  A4D8               	btfss	status,2,c
  3337  0076DE  D7F7               	goto	l1548
  3338  0076E0                     l387:
  3339  0076E0  AE21               	btfss	___ftadd@sign,7,c
  3340  0076E2  D00C               	goto	l396
  3341  0076E4  0EFF               	movlw	255
  3342  0076E6  1A18               	xorwf	___ftadd@f1,f,c
  3343  0076E8  0EFF               	movlw	255
  3344  0076EA  1A19               	xorwf	___ftadd@f1+1,f,c
  3345  0076EC  0EFF               	movlw	255
  3346  0076EE  1A1A               	xorwf	___ftadd@f1+2,f,c
  3347  0076F0  0E01               	movlw	1
  3348  0076F2  2618               	addwf	___ftadd@f1,f,c
  3349  0076F4  0E00               	movlw	0
  3350  0076F6  2219               	addwfc	___ftadd@f1+1,f,c
  3351  0076F8  0E00               	movlw	0
  3352  0076FA  221A               	addwfc	___ftadd@f1+2,f,c
  3353  0076FC                     l396:
  3354  0076FC  AC21               	btfss	___ftadd@sign,6,c
  3355  0076FE  D00C               	goto	l1556
  3356  007700  0EFF               	movlw	255
  3357  007702  1A1B               	xorwf	___ftadd@f2,f,c
  3358  007704  0EFF               	movlw	255
  3359  007706  1A1C               	xorwf	___ftadd@f2+1,f,c
  3360  007708  0EFF               	movlw	255
  3361  00770A  1A1D               	xorwf	___ftadd@f2+2,f,c
  3362  00770C  0E01               	movlw	1
  3363  00770E  261B               	addwf	___ftadd@f2,f,c
  3364  007710  0E00               	movlw	0
  3365  007712  221C               	addwfc	___ftadd@f2+1,f,c
  3366  007714  0E00               	movlw	0
  3367  007716  221D               	addwfc	___ftadd@f2+2,f,c
  3368  007718                     l1556:
  3369  007718  0E00               	movlw	0
  3370  00771A  6E21               	movwf	___ftadd@sign,c
  3371  00771C  5018               	movf	___ftadd@f1,w,c
  3372  00771E  261B               	addwf	___ftadd@f2,f,c
  3373  007720  5019               	movf	___ftadd@f1+1,w,c
  3374  007722  221C               	addwfc	___ftadd@f2+1,f,c
  3375  007724  501A               	movf	___ftadd@f1+2,w,c
  3376  007726  221D               	addwfc	___ftadd@f2+2,f,c
  3377  007728  AE1D               	btfss	___ftadd@f2+2,7,c
  3378  00772A  D00E               	goto	l1566
  3379  00772C  0EFF               	movlw	255
  3380  00772E  1A1B               	xorwf	___ftadd@f2,f,c
  3381  007730  0EFF               	movlw	255
  3382  007732  1A1C               	xorwf	___ftadd@f2+1,f,c
  3383  007734  0EFF               	movlw	255
  3384  007736  1A1D               	xorwf	___ftadd@f2+2,f,c
  3385  007738  0E01               	movlw	1
  3386  00773A  261B               	addwf	___ftadd@f2,f,c
  3387  00773C  0E00               	movlw	0
  3388  00773E  221C               	addwfc	___ftadd@f2+1,f,c
  3389  007740  0E00               	movlw	0
  3390  007742  221D               	addwfc	___ftadd@f2+2,f,c
  3391  007744  0E01               	movlw	1
  3392  007746  6E21               	movwf	___ftadd@sign,c
  3393  007748                     l1566:
  3394  007748  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  3395  00774C  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3396  007750  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3397  007754  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  3398  007758  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  3399  00775C  ECB2  F037         	call	___ftpack	;wreg free
  3400  007760  C001  F018         	movff	?___ftpack,?___ftadd
  3401  007764  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  3402  007768  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  3403  00776C  0012               	return	
  3404  00776E                     __end_of___ftadd:
  3405                           	opt stack 0
  3406                           tblptru	equ	0xFF8
  3407                           tblptrh	equ	0xFF7
  3408                           tblptrl	equ	0xFF6
  3409                           tablat	equ	0xFF5
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           postinc1	equ	0xFE6
  3413                           fsr1h	equ	0xFE2
  3414                           fsr1l	equ	0xFE1
  3415                           indf2	equ	0xFDF
  3416                           postinc2	equ	0xFDE
  3417                           postdec2	equ	0xFDD
  3418                           fsr2h	equ	0xFDA
  3419                           fsr2l	equ	0xFD9
  3420                           status	equ	0xFD8
  3421                           
  3422 ;; *************** function ___ftpack *****************
  3423 ;; Defined at:
  3424 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  arg             3    0[COMRAM] unsigned um
  3427 ;;  exp             1    3[COMRAM] unsigned char 
  3428 ;;  sign            1    4[COMRAM] unsigned char 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  3    0[COMRAM] float 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3440 ;;      Params:         5       0       0       0       0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3442 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3443 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3444 ;;Total ram usage:        8 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		___awtoft
  3450 ;;		___ftadd
  3451 ;;		___ftdiv
  3452 ;;		___ftmul
  3453 ;;		___lbtoft
  3454 ;;		___lltoft
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text17
  3459  006F64                     __ptext17:
  3460                           	opt stack 0
  3461  006F64                     ___ftpack:
  3462                           	opt stack 29
  3463                           
  3464                           ;incstack = 0
  3465  006F64  5004               	movf	___ftpack@exp,w,c
  3466  006F66  B4D8               	btfsc	status,2,c
  3467  006F68  D005               	goto	l1278
  3468  006F6A  5001               	movf	___ftpack@arg,w,c
  3469  006F6C  1002               	iorwf	___ftpack@arg+1,w,c
  3470  006F6E  1003               	iorwf	___ftpack@arg+2,w,c
  3471  006F70  A4D8               	btfss	status,2,c
  3472  006F72  D00C               	goto	l1284
  3473  006F74                     l1278:
  3474  006F74  0E00               	movlw	0
  3475  006F76  6E01               	movwf	?___ftpack,c
  3476  006F78  0E00               	movlw	0
  3477  006F7A  6E02               	movwf	?___ftpack+1,c
  3478  006F7C  0E00               	movlw	0
  3479  006F7E  6E03               	movwf	?___ftpack+2,c
  3480  006F80  0012               	return	
  3481  006F82                     l1282:
  3482  006F82  2A04               	incf	___ftpack@exp,f,c
  3483  006F84  90D8               	bcf	status,0,c
  3484  006F86  3203               	rrcf	___ftpack@arg+2,f,c
  3485  006F88  3202               	rrcf	___ftpack@arg+1,f,c
  3486  006F8A  3201               	rrcf	___ftpack@arg,f,c
  3487  006F8C                     l1284:
  3488  006F8C  0E00               	movlw	0
  3489  006F8E  1401               	andwf	___ftpack@arg,w,c
  3490  006F90  6E06               	movwf	??___ftpack& (0+255),c
  3491  006F92  0E00               	movlw	0
  3492  006F94  1402               	andwf	___ftpack@arg+1,w,c
  3493  006F96  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3494  006F98  0EFE               	movlw	254
  3495  006F9A  1403               	andwf	___ftpack@arg+2,w,c
  3496  006F9C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3497  006F9E  5006               	movf	??___ftpack,w,c
  3498  006FA0  1007               	iorwf	??___ftpack+1,w,c
  3499  006FA2  1008               	iorwf	??___ftpack+2,w,c
  3500  006FA4  B4D8               	btfsc	status,2,c
  3501  006FA6  D00C               	goto	l1290
  3502  006FA8  D7EC               	goto	l1282
  3503  006FAA                     l1286:
  3504  006FAA  2A04               	incf	___ftpack@exp,f,c
  3505  006FAC  0E01               	movlw	1
  3506  006FAE  2601               	addwf	___ftpack@arg,f,c
  3507  006FB0  0E00               	movlw	0
  3508  006FB2  2202               	addwfc	___ftpack@arg+1,f,c
  3509  006FB4  0E00               	movlw	0
  3510  006FB6  2203               	addwfc	___ftpack@arg+2,f,c
  3511  006FB8  90D8               	bcf	status,0,c
  3512  006FBA  3203               	rrcf	___ftpack@arg+2,f,c
  3513  006FBC  3202               	rrcf	___ftpack@arg+1,f,c
  3514  006FBE  3201               	rrcf	___ftpack@arg,f,c
  3515  006FC0                     l1290:
  3516  006FC0  0E00               	movlw	0
  3517  006FC2  1401               	andwf	___ftpack@arg,w,c
  3518  006FC4  6E06               	movwf	??___ftpack& (0+255),c
  3519  006FC6  0E00               	movlw	0
  3520  006FC8  1402               	andwf	___ftpack@arg+1,w,c
  3521  006FCA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3522  006FCC  0EFF               	movlw	255
  3523  006FCE  1403               	andwf	___ftpack@arg+2,w,c
  3524  006FD0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3525  006FD2  5006               	movf	??___ftpack,w,c
  3526  006FD4  1007               	iorwf	??___ftpack+1,w,c
  3527  006FD6  1008               	iorwf	??___ftpack+2,w,c
  3528  006FD8  B4D8               	btfsc	status,2,c
  3529  006FDA  D006               	goto	l1294
  3530  006FDC  D7E6               	goto	l1286
  3531  006FDE                     l1292:
  3532  006FDE  0604               	decf	___ftpack@exp,f,c
  3533  006FE0  90D8               	bcf	status,0,c
  3534  006FE2  3601               	rlcf	___ftpack@arg,f,c
  3535  006FE4  3602               	rlcf	___ftpack@arg+1,f,c
  3536  006FE6  3603               	rlcf	___ftpack@arg+2,f,c
  3537  006FE8                     l1294:
  3538  006FE8  BE02               	btfsc	___ftpack@arg+1,7,c
  3539  006FEA  D003               	goto	l349
  3540  006FEC  0E02               	movlw	2
  3541  006FEE  6004               	cpfslt	___ftpack@exp,c
  3542  006FF0  D7F6               	goto	l1292
  3543  006FF2                     l349:
  3544  006FF2  A004               	btfss	___ftpack@exp,0,c
  3545  006FF4  9E02               	bcf	___ftpack@arg+1,7,c
  3546  006FF6  90D8               	bcf	status,0,c
  3547  006FF8  3204               	rrcf	___ftpack@exp,f,c
  3548  006FFA  5004               	movf	___ftpack@exp,w,c
  3549  006FFC  1203               	iorwf	___ftpack@arg+2,f,c
  3550  006FFE  5005               	movf	___ftpack@sign,w,c
  3551  007000  A4D8               	btfss	status,2,c
  3552  007002  8E03               	bsf	___ftpack@arg+2,7,c
  3553  007004  C001  F001         	movff	___ftpack@arg,?___ftpack
  3554  007008  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3555  00700C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3556  007010  0012               	return	
  3557  007012                     __end_of___ftpack:
  3558                           	opt stack 0
  3559  0000                     tblptru	equ	0xFF8
  3560                           tblptrh	equ	0xFF7
  3561                           tblptrl	equ	0xFF6
  3562                           tablat	equ	0xFF5
  3563                           postinc0	equ	0xFEE
  3564                           wreg	equ	0xFE8
  3565                           postinc1	equ	0xFE6
  3566                           fsr1h	equ	0xFE2
  3567                           fsr1l	equ	0xFE1
  3568                           indf2	equ	0xFDF
  3569                           postinc2	equ	0xFDE
  3570                           postdec2	equ	0xFDD
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           postinc0	equ	0xFEE
  3579                           wreg	equ	0xFE8
  3580                           postinc1	equ	0xFE6
  3581                           fsr1h	equ	0xFE2
  3582                           fsr1l	equ	0xFE1
  3583                           indf2	equ	0xFDF
  3584                           postinc2	equ	0xFDE
  3585                           postdec2	equ	0xFDD
  3586                           fsr2h	equ	0xFDA
  3587                           fsr2l	equ	0xFD9
  3588                           status	equ	0xFD8
  3589                           
  3590                           	psect	rparam
  3591  0000                     tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           postinc1	equ	0xFE6
  3598                           fsr1h	equ	0xFE2
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           postinc2	equ	0xFDE
  3602                           postdec2	equ	0xFDD
  3603                           fsr2h	equ	0xFDA
  3604                           fsr2l	equ	0xFD9
  3605                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      65
    BANK0           160     51      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftneg
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___awtoft
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftneg
    ___ftneg->___ftadd
    ___ftmul->___ftpack
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   41500
                                              0 BANK0     51    51      0
                        _PID_Compute
                        _PID_SetMode
                _PID_SetOutputLimits
                           _PID_init
                           ___awtoft
                            ___ftadd
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2939
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   15181
                                             53 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11280
                                             38 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3504
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2230
                                             12 COMRAM     8     0      8
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3     983
                                             38 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    1893
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1608
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   10864
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     589
                                             35 COMRAM     3     0      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1268
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4582
                                             23 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_SetOutputLimits
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      4B       5       46.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      41       1       68.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8C      20        0.0%
DATA                 0      0      8C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 08 18:20:42 2017

                                  _A 009C                                    _B 0099  
                                  _C 0096                                    _D 0093  
                    PID_SetMode@Mode 000E                                   l72 7FCE  
             __end_of_PID_Initialize 74B8                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                       ___ftadd@exp1 0023                         ___ftadd@exp2 0022  
              ??_PID_SetOutputLimits 0015                         ___ftadd@sign 0021  
                                l407 719A                                  l372 7606  
                                l349 6FF2                                  l429 6DA4  
                                l376 7630                                  l387 76E0  
                                l396 76FC                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  u911 71DC  
                                u931 7204                                  u861 70F6  
                                u881 711E                         __CFG_BOR$OFF 000000  
                  PID_Compute@dInput 0029                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                         ___ftdiv@cntr 001B  
                       ___ftdiv@sign 0020                         __CFG_WDT$OFF 000000  
                               l1322 7136                                 l1412 6F34  
                               l1316 710E                                 l1342 7174  
                               l1430 6E8A                                 l1408 6F04  
                               l1290 6FC0                                 l1282 6F82  
                               l1530 766E                                 l1514 763E  
                               l1418 6F60                                 l1362 71F4  
                               l1602 7DFC                                 l1450 786A  
                               l1292 6FDE                                 l1284 6F8C  
                               l1540 76A4                                 l1508 7614  
                               l1428 6E7E                                 l1700 7B04  
                               l1294 6FE8                                 l1286 6FAA  
                               l1278 6F74                                 l1550 76D8  
                               l1542 76AC                                 l1382 724E  
                               l1606 7E58                                 l1454 78C8  
                               l1446 780E                                 l1630 6E14  
                               l1536 7690                                 l1392 7276  
                               l1368 721C                                 l1616 7F8A  
                               l1464 70D4                                 l1640 72EC  
                               l1538 769A                                 l1386 725E  
                               l1556 7718                                 l1548 76CE  
                               l1396 7286                                 l1566 7748  
                               l1670 7386                                 l1662 7362  
                               l1496 745A                                 l1672 738C  
                               l1586 6E66                                 l1658 7352  
                               l1676 73A2                                 l1668 737A  
                               u1161 75D2                                 u1171 75E6  
                               u1370 6E42                                 u1380 6E44  
                               u1461 72D0                                 u1480 730A  
                               u1485 7302                                 u1557 7B0C  
                               u1567 7B2E                                 u1577 7B50  
                               u1587 7B72                    PID_Compute@output 0035  
                               _main 7AEE                         ___ftpack@arg 0001  
                       ___ftpack@exp 0004                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             PID_SetOutputLimits@Max 0012               PID_SetOutputLimits@Min 000F  
             PID_SetOutputLimits@pid 000D               __end_of_PID_SetTunings 7AEE  
                               start 0000                        __CFG_IESO$OFF 000000  
                       ___ftmul@cntr 0016                         ___param_bank 000000  
                       ___ftmul@sign 0017                         ___fttol@exp1 000F  
                       ___fttol@lval 000B                        __CFG_PLLDIV$5 000000  
                    ?_PID_Initialize 000A                                ?_main 0001  
                    __end_of___ftadd 776E                      __end_of___ftdiv 71CC  
                    __end_of___ftneg 6DB2                      __end_of___ftmul 72C0  
                    __end_of___fttol 73B4                                _PORTB 000F81  
                              _PORTD 000F83                        __CFG_USBDIV$1 000000  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                       ___lltoft@exp 0011                     __end_of_PID_init 75C2  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                              _Input 009F                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                      ___awtoft@sign 000C                   PID_SetMode@newAuto 0010  
                      ___ftpack@sign 0005                                tablat 000FF5  
                              status 000FD8                       __CFG_ICPRT$OFF 000000  
                    ?_PID_SetTunings 0027                         ?_PID_Compute 0027  
                     __CFG_MCLRE$OFF 000000                      __initialization 6DD6  
                       __end_of_main 7CE8                         ?_PID_SetMode 000C  
                             ??_main 0042                        ___fttol@sign1 000A  
                      __activetblptr 000000                     PID_SetTunings@Kd 002F  
                   PID_SetTunings@Ki 002C                     PID_SetTunings@Kp 0029  
                    __CFG_CCP2MX$OFF 000000                     __end_of___awtoft 6E38  
                   __end_of___ftpack 7012                     __end_of___lbtoft 6DD6  
                   __end_of___lltoft 6ED4                               _TMR1CS 007E69  
                             _TMR3CS 007D89                       __CFG_XINST$OFF 000000  
                             _Output 00A2                               ___ftge 6ED4  
                          ??___ftadd 001E                            ??___ftdiv 0018  
                          ??___ftneg 0027                            ??___ftmul 000F  
                          ??___fttol 0005                               clear_0 6DF4  
              ___ftmul@f3_as_product 0013                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0060              __end_of__initialization 6DFA  
                    __CFG_PBADEN$OFF 000000                           ___ftadd@f1 0018  
                         ___ftadd@f2 001B                           ___ftge@ff1 0001  
                         ___ftge@ff2 0004                        ___rparam_used 000001  
                         ___ftdiv@f1 0012                           ___ftdiv@f2 0015  
                         ___ftdiv@f3 001C                           ___ftneg@f1 0024  
                         ___awtoft@c 0009                           ___lbtoft@c 000C  
                         ___ftmul@f1 0009                           ___ftmul@f2 000C  
                         ___fttol@f1 0001                       __pcstackCOMRAM 0001  
                          ?_PID_init 0036                         __pidataBANK0 6D8C  
                         ___lltoft@c 0009                           __pbssBANK0 0093  
                  PID_SetTunings@pid 0027                     ??_PID_Initialize 000C  
                            ?___ftge 0001                           ??_PID_init 0042  
        __end_of_PID_SetOutputLimits 7926                 __size_of_PID_Compute 0318  
               __size_of_PID_SetMode 0040                            ?___awtoft 0009  
                          ?___ftpack 0001                            ?___lbtoft 0009  
                          ?___lltoft 0009                          PID_init@pid 0036  
                   ??_PID_SetTunings 0032                       PID_Compute@pid 0027  
                    __CFG_VREGEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000         ??_PID_SetControllerDirection 002A  
PID_SetControllerDirection@Direction 0029                      __size_of___ftge 0090  
                            ___ftadd 75C2                              ___ftdiv 70E6  
                            ___ftneg 6D8E                              ___ftmul 71CC  
                            ___fttol 72C0                      __CFG_STVREN$OFF 000000  
                            __pcinit 6DD6                           ??___awtoft 000C  
                         ??___ftpack 0006                           ??___lbtoft 000C  
                            __ramtop 0800                           ??___lltoft 000D  
                            __ptext0 7AEE                              __ptext1 6DB2  
                            __ptext2 72C0                              __ptext3 6E00  
                            __ptext4 74B8                              __ptext5 7926  
                            __ptext6 6E78                              __ptext7 70E6  
                            __ptext8 776E                              __ptext9 7012  
        PID_init@ControllerDirection 0041                              main@PID 0066  
               end_of_initialization 6DFA  __size_of_PID_SetControllerDirection 00D4  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                          _PORTCbits 000F82                       PID_SetMode@pid 000C  
                   PID_Compute@error 002F                     PID_Compute@input 0032  
                        ___ftdiv@exp 001F                          ___ftmul@exp 0012  
                     __end_of___ftge 6F64                    __size_of_PID_init 010A  
                start_initialization 6DD6                    PID_Initialize@pid 000A  
 __end_of_PID_SetControllerDirection 70E6           _PID_SetControllerDirection 7012  
                           ??___ftge 0007                          __pdataBANK0 00A9  
                   __CFG_LPT1OSC$OFF 000000                    __size_of___awtoft 0038  
                  __size_of___ftpack 00AE                    __size_of___lbtoft 0024  
                  __size_of___lltoft 005C                        __pcstackBANK0 0060  
                   _PID_Compute$1037 002C                        ??_PID_Compute 0029  
                          _main$1035 0060                            _main$1036 0063  
                      ??_PID_SetMode 000F                             ?___ftadd 0018  
                           ?___ftdiv 0012                             ?___ftneg 0024  
                           ?___ftmul 0009                             ?___fttol 0001  
                         PID_init@Kd 003E                           PID_init@Ki 003B  
                         PID_init@Kp 0038         __size_of_PID_SetOutputLimits 01B8  
                   __CFG_WDTPS$32768 000000                             _PID_init 74B8  
                __end_of_PID_Compute 8000                  __end_of_PID_SetMode 6E78  
            __size_of_PID_Initialize 0104                             __Hrparam 0000  
                           __Lrparam 0000              __size_of_PID_SetTunings 01C8  
                           _Setpoint 00A5                     __size_of___ftadd 01AC  
                   __size_of___ftdiv 00E6                     __size_of___ftneg 0024  
                   __size_of___ftmul 00F4                     __size_of___fttol 00F4  
                           ___awtoft 6E00                             ___ftpack 6F64  
                           ___lbtoft 6DB2                             ___lltoft 6E78  
                           __ptext10 6E38                             __ptext11 73B4  
                           __ptext12 7CE8                             __ptext13 6D8E  
                           __ptext14 71CC                             __ptext15 6ED4  
                           __ptext16 75C2                             __ptext17 6F64  
                      __size_of_main 01FA                          _PID_Compute 7CE8  
        ?_PID_SetControllerDirection 0027                          _PID_SetMode 6E38  
                        _PID_Out_Max 00A9                          _PID_Out_Min 00A7  
              __CFG_CPUDIV$OSC2_PLL3 000000        PID_SetControllerDirection@pid 0027  
                _PID_SetOutputLimits 776E                       _PID_Initialize 73B4  
               ?_PID_SetOutputLimits 000D                   __CFG_FOSC$HSPLL_HS 000000  
      PID_SetTunings@SampleTimeInSec 0033                       _PID_SetTunings 7926  
