

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 15 13:00:34 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataBANK0
    69  006CB8                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _PID_Out_Max
    73  006CB8  2710               	dw	10000
    74                           
    75                           ;initializer for _PID_Out_Min
    76  006CBA  D8F0               	dw	55536
    77  0000                     _PORTD	set	3971
    78  0000                     _PORTB	set	3969
    79  0000                     _PORTCbits	set	3970
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISD	set	3989
    82  0000                     _TRISB	set	3987
    83  0000                     _TMR3CS	set	32137
    84  0000                     _TMR1CS	set	32361
    85                           
    86                           ; #config settings
    87  0000                     
    88                           	psect	cinit
    89  006D04                     __pcinit:
    90                           	opt stack 0
    91  006D04                     start_initialization:
    92                           	opt stack 0
    93  006D04                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Initialize objects allocated to BANK0 (4 bytes)
    97                           ; load TBLPTR registers with __pidataBANK0
    98  006D04  0EB8               	movlw	low __pidataBANK0
    99  006D06  6EF6               	movwf	tblptrl,c
   100  006D08  0E6C               	movlw	high __pidataBANK0
   101  006D0A  6EF7               	movwf	tblptrh,c
   102  006D0C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   103  006D0E  6EF8               	movwf	tblptru,c
   104  006D10  EE00  F0A8         	lfsr	0,__pdataBANK0
   105  006D14  EE10 F004          	lfsr	1,4
   106  006D18                     copy_data0:
   107  006D18  0009               	tblrd		*+
   108  006D1A  CFF5 FFEE          	movff	tablat,postinc0
   109  006D1E  50E5               	movf	postdec1,w,c
   110  006D20  50E1               	movf	fsr1l,w,c
   111  006D22  E1FA               	bnz	copy_data0
   112                           
   113                           ; Clear objects allocated to BANK0 (21 bytes)
   114  006D24  EE00  F093         	lfsr	0,__pbssBANK0
   115  006D28  0E15               	movlw	21
   116  006D2A                     clear_0:
   117  006D2A  6AEE               	clrf	postinc0,c
   118  006D2C  06E8               	decf	wreg,f,c
   119  006D2E  E1FD               	bnz	clear_0
   120                           
   121                           ; Clear objects allocated to COMRAM (2 bytes)
   122  006D30  6A45               	clrf	(__pbssCOMRAM+1)& (0+255),c
   123  006D32  6A44               	clrf	__pbssCOMRAM& (0+255),c
   124  006D34                     end_of_initialization:
   125                           	opt stack 0
   126  006D34                     __end_of__initialization:
   127                           	opt stack 0
   128  006D34  0100               	movlb	0
   129  006D36  EF14  F03D         	goto	_main	;jump to C main() function
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           wreg	equ	0xFE8
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	bssCOMRAM
   140  000044                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000044                     _sign:
   143                           	opt stack 0
   144  000044                     	ds	2
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	bssBANK0
   155  000093                     __pbssBANK0:
   156                           	opt stack 0
   157  000093                     _D:
   158                           	opt stack 0
   159  000093                     	ds	3
   160  000096                     _C:
   161                           	opt stack 0
   162  000096                     	ds	3
   163  000099                     _B:
   164                           	opt stack 0
   165  000099                     	ds	3
   166  00009C                     _A:
   167                           	opt stack 0
   168  00009C                     	ds	3
   169  00009F                     _Input:
   170                           	opt stack 0
   171  00009F                     	ds	3
   172  0000A2                     _Output:
   173                           	opt stack 0
   174  0000A2                     	ds	3
   175  0000A5                     _Setpoint:
   176                           	opt stack 0
   177  0000A5                     	ds	2
   178  0000A7                     _output:
   179                           	opt stack 0
   180  0000A7                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           postdec1	equ	0xFE5
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	dataBANK0
   191  0000A8                     __pdataBANK0:
   192                           	opt stack 0
   193  0000A8                     _PID_Out_Max:
   194                           	opt stack 0
   195  0000A8                     	ds	2
   196  0000AA                     _PID_Out_Min:
   197                           	opt stack 0
   198  0000AA                     	ds	2
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	cstackBANK0
   209  000060                     __pcstackBANK0:
   210                           	opt stack 0
   211  000060                     _main$1037:
   212                           	opt stack 0
   213                           
   214                           ; 3 bytes @ 0x0
   215  000060                     	ds	3
   216  000063                     _main$1038:
   217                           	opt stack 0
   218                           
   219                           ; 3 bytes @ 0x3
   220  000063                     	ds	3
   221  000066                     main@PID:
   222                           	opt stack 0
   223                           
   224                           ; 45 bytes @ 0x6
   225  000066                     	ds	45
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	cstackCOMRAM
   236  000001                     __pcstackCOMRAM:
   237                           	opt stack 0
   238  000001                     ?___ftpack:
   239                           	opt stack 0
   240  000001                     ?___fttol:
   241                           	opt stack 0
   242  000001                     ___ftpack@arg:
   243                           	opt stack 0
   244  000001                     ___ftge@ff1:
   245                           	opt stack 0
   246  000001                     ___fttol@f1:
   247                           	opt stack 0
   248                           
   249                           ; 3 bytes @ 0x0
   250  000001                     	ds	3
   251  000004                     ___ftpack@exp:
   252                           	opt stack 0
   253  000004                     ___ftge@ff2:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x3
   257  000004                     	ds	1
   258  000005                     ??___fttol:
   259  000005                     ___ftpack@sign:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x4
   263  000005                     	ds	1
   264  000006                     ??___ftpack:
   265                           
   266                           ; 1 bytes @ 0x5
   267  000006                     	ds	1
   268  000007                     ??___ftge:
   269                           
   270                           ; 1 bytes @ 0x6
   271  000007                     	ds	2
   272  000009                     ?___ftmul:
   273                           	opt stack 0
   274  000009                     ?___awtoft:
   275                           	opt stack 0
   276  000009                     ?___lbtoft:
   277                           	opt stack 0
   278  000009                     ?___lltoft:
   279                           	opt stack 0
   280  000009                     ___awtoft@c:
   281                           	opt stack 0
   282  000009                     ___ftmul@f1:
   283                           	opt stack 0
   284  000009                     ___lltoft@c:
   285                           	opt stack 0
   286                           
   287                           ; 4 bytes @ 0x8
   288  000009                     	ds	1
   289  00000A                     ___fttol@sign1:
   290                           	opt stack 0
   291  00000A                     PID_Initialize@pid:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x9
   295  00000A                     	ds	1
   296  00000B                     ___fttol@lval:
   297                           	opt stack 0
   298                           
   299                           ; 4 bytes @ 0xA
   300  00000B                     	ds	1
   301  00000C                     ___awtoft@sign:
   302                           	opt stack 0
   303  00000C                     ___lbtoft@c:
   304                           	opt stack 0
   305  00000C                     PID_SetMode@pid:
   306                           	opt stack 0
   307  00000C                     ___ftmul@f2:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0xB
   311  00000C                     	ds	1
   312  00000D                     ??___lltoft:
   313  00000D                     PID_SetOutputLimits@pid:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0xC
   317  00000D                     	ds	1
   318  00000E                     PID_SetMode@Mode:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0xD
   322  00000E                     	ds	1
   323  00000F                     ??___ftmul:
   324  00000F                     ___fttol@exp1:
   325                           	opt stack 0
   326  00000F                     PID_SetOutputLimits@Min:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0xE
   330  00000F                     	ds	1
   331  000010                     PID_SetMode@newAuto:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0xF
   335  000010                     	ds	1
   336  000011                     ___lltoft@exp:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x10
   340  000011                     	ds	1
   341  000012                     ?___ftdiv:
   342                           	opt stack 0
   343  000012                     ___ftmul@exp:
   344                           	opt stack 0
   345  000012                     PID_SetOutputLimits@Max:
   346                           	opt stack 0
   347  000012                     ___ftdiv@f1:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x11
   351  000012                     	ds	1
   352  000013                     ___ftmul@f3_as_product:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x12
   356  000013                     	ds	2
   357  000015                     ___ftdiv@f2:
   358                           	opt stack 0
   359                           
   360                           ; 3 bytes @ 0x14
   361  000015                     	ds	1
   362  000016                     ___ftmul@cntr:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x15
   366  000016                     	ds	1
   367  000017                     ___ftmul@sign:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x16
   371  000017                     	ds	1
   372  000018                     ??___ftdiv:
   373  000018                     ?___ftadd:
   374                           	opt stack 0
   375  000018                     ___ftadd@f1:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0x17
   379  000018                     	ds	3
   380  00001B                     ___ftdiv@cntr:
   381                           	opt stack 0
   382  00001B                     ___ftadd@f2:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x1A
   386  00001B                     	ds	1
   387  00001C                     ___ftdiv@f3:
   388                           	opt stack 0
   389                           
   390                           ; 3 bytes @ 0x1B
   391  00001C                     	ds	2
   392  00001E                     ??___ftadd:
   393                           
   394                           ; 1 bytes @ 0x1D
   395  00001E                     	ds	1
   396  00001F                     ___ftdiv@exp:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x1E
   400  00001F                     	ds	1
   401  000020                     ___ftdiv@sign:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x1F
   405  000020                     	ds	1
   406  000021                     ___ftadd@sign:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x20
   410  000021                     	ds	1
   411  000022                     ___ftadd@exp2:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x21
   415  000022                     	ds	1
   416  000023                     ___ftadd@exp1:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x22
   420  000023                     	ds	1
   421  000024                     ?___ftneg:
   422                           	opt stack 0
   423  000024                     ___ftneg@f1:
   424                           	opt stack 0
   425                           
   426                           ; 3 bytes @ 0x23
   427  000024                     	ds	3
   428  000027                     PID_Compute@pid:
   429                           	opt stack 0
   430  000027                     PID_SetTunings@pid:
   431                           	opt stack 0
   432  000027                     PID_SetControllerDirection@pid:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x26
   436  000027                     	ds	2
   437  000029                     PID_SetControllerDirection@Direction:
   438                           	opt stack 0
   439  000029                     PID_Compute@dInput:
   440                           	opt stack 0
   441  000029                     PID_SetTunings@Kp:
   442                           	opt stack 0
   443                           
   444                           ; 3 bytes @ 0x28
   445  000029                     	ds	1
   446  00002A                     
   447                           ; 1 bytes @ 0x29
   448  00002A                     	ds	2
   449  00002C                     PID_SetTunings@Ki:
   450                           	opt stack 0
   451  00002C                     _PID_Compute$1039:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x2B
   455  00002C                     	ds	3
   456  00002F                     PID_Compute@error:
   457                           	opt stack 0
   458  00002F                     PID_SetTunings@Kd:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x2E
   462  00002F                     	ds	3
   463  000032                     PID_Compute@input:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x31
   467  000032                     	ds	1
   468  000033                     PID_SetTunings@SampleTimeInSec:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x32
   472  000033                     	ds	2
   473  000035                     PID_Compute@output:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0x34
   477  000035                     	ds	1
   478  000036                     PID_init@pid:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x35
   482  000036                     	ds	2
   483  000038                     PID_init@Kp:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x37
   487  000038                     	ds	3
   488  00003B                     PID_init@Ki:
   489                           	opt stack 0
   490                           
   491                           ; 3 bytes @ 0x3A
   492  00003B                     	ds	3
   493  00003E                     PID_init@Kd:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x3D
   497  00003E                     	ds	3
   498  000041                     PID_init@ControllerDirection:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x40
   502  000041                     	ds	1
   503  000042                     ??_main:
   504                           
   505                           ; 1 bytes @ 0x41
   506  000042                     	ds	2
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postdec1	equ	0xFE5
   514                           fsr1l	equ	0xFE1
   515                           
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 52 in file "newmain.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  PID            45    6[BANK0 ] struct .
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   535 ;;      Params:         0       0       0       0       0       0       0       0       0
   536 ;;      Locals:         0      51       0       0       0       0       0       0       0
   537 ;;      Temps:          2       0       0       0       0       0       0       0       0
   538 ;;      Totals:         2      51       0       0       0       0       0       0       0
   539 ;;Total ram usage:       53 bytes
   540 ;; Hardware stack levels required when called:    4
   541 ;; This function calls:
   542 ;;		_PID_Compute
   543 ;;		_PID_SetMode
   544 ;;		_PID_SetOutputLimits
   545 ;;		_PID_init
   546 ;;		___awtoft
   547 ;;		___ftadd
   548 ;;		___ftge
   549 ;;		___ftneg
   550 ;;		___fttol
   551 ;;		___lbtoft
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text0
   558  007A28                     __ptext0:
   559                           	opt stack 0
   560  007A28                     _main:
   561                           	opt stack 27
   562                           
   563                           ;newmain.c: 53: TRISB = 0xFF;
   564                           
   565                           ;incstack = 0
   566  007A28  6893               	setf	3987,c	;volatile
   567                           
   568                           ;newmain.c: 54: TRISD = 0x00;
   569  007A2A  0E00               	movlw	0
   570  007A2C  6E95               	movwf	3989,c	;volatile
   571                           
   572                           ;newmain.c: 55: TRISC = 0b01000000;
   573  007A2E  0E40               	movlw	64
   574  007A30  6E94               	movwf	3988,c	;volatile
   575                           
   576                           ;newmain.c: 56: TMR1CS = 0;
   577  007A32  92CD               	bcf	4045,1,c	;volatile
   578                           
   579                           ;newmain.c: 57: TMR3CS = 0;
   580  007A34  92B1               	bcf	4017,1,c	;volatile
   581                           
   582                           ;newmain.c: 58: PORTCbits.RC0 = 0;
   583  007A36  9082               	bcf	3970,0,c	;volatile
   584                           
   585                           ;newmain.c: 59: PORTCbits.RC1 = 0;
   586  007A38  9282               	bcf	3970,1,c	;volatile
   587                           
   588                           ;newmain.c: 60: PORTCbits.RC2 = 1;
   589  007A3A  8482               	bsf	3970,2,c	;volatile
   590                           
   591                           ;newmain.c: 61: PORTCbits.RC7 = 0;
   592  007A3C  9E82               	bcf	3970,7,c	;volatile
   593  007A3E                     l1728:
   594                           
   595                           ;newmain.c: 63: PORTCbits.RC0 = 0;
   596  007A3E  9082               	bcf	3970,0,c	;volatile
   597                           
   598                           ;newmain.c: 64: PORTCbits.RC1 = 0;
   599  007A40  9282               	bcf	3970,1,c	;volatile
   600                           
   601                           ;newmain.c: 66: PORTCbits.RC2 = 1;
   602  007A42  8482               	bsf	3970,2,c	;volatile
   603                           
   604                           ;newmain.c: 67: _delay((unsigned long)((25)*(32000000/4000000.0)));
   605  007A44  0E42               	movlw	66
   606  007A46                     u1577:
   607  007A46  2EE8               	decfsz	wreg,f,c
   608  007A48  D7FE               	bra	u1577
   609  007A4A  D000               	nop2	
   610                           
   611                           ;newmain.c: 68: PORTCbits.RC2 = 0;
   612  007A4C  9482               	bcf	3970,2,c	;volatile
   613                           
   614                           ;newmain.c: 69: _delay((unsigned long)((50)*(32000000/4000000.0)));
   615  007A4E  0E85               	movlw	133
   616  007A50                     u1587:
   617  007A50  2EE8               	decfsz	wreg,f,c
   618  007A52  D7FE               	bra	u1587
   619  007A54  F000               	nop	
   620                           
   621                           ;newmain.c: 70: A = PORTB;
   622  007A56  5081               	movf	3969,w,c	;volatile
   623  007A58  EC70  F036         	call	___lbtoft
   624  007A5C  C009  F09C         	movff	?___lbtoft,_A
   625  007A60  C00A  F09D         	movff	?___lbtoft+1,_A+1
   626  007A64  C00B  F09E         	movff	?___lbtoft+2,_A+2
   627                           
   628                           ;newmain.c: 72: _delay((unsigned long)((40)*(32000000/4000.0)));
   629  007A68  0E02               	movlw	2
   630  007A6A  6E43               	movwf	(??_main+1)& (0+255),c
   631  007A6C  0EA0               	movlw	160
   632  007A6E  6E42               	movwf	??_main& (0+255),c
   633  007A70  0E92               	movlw	146
   634  007A72                     u1597:
   635  007A72  2EE8               	decfsz	wreg,f,c
   636  007A74  D7FE               	bra	u1597
   637  007A76  2E42               	decfsz	??_main& (0+255),f,c
   638  007A78  D7FC               	bra	u1597
   639  007A7A  2E43               	decfsz	(??_main+1)& (0+255),f,c
   640  007A7C  D7FA               	bra	u1597
   641  007A7E  D000               	nop2	
   642                           
   643                           ;newmain.c: 74: PORTCbits.RC0 = 1;
   644  007A80  8082               	bsf	3970,0,c	;volatile
   645                           
   646                           ;newmain.c: 75: PORTCbits.RC1 = 0;
   647  007A82  9282               	bcf	3970,1,c	;volatile
   648                           
   649                           ;newmain.c: 77: PORTCbits.RC2 = 1;
   650  007A84  8482               	bsf	3970,2,c	;volatile
   651                           
   652                           ;newmain.c: 78: _delay((unsigned long)((25)*(32000000/4000000.0)));
   653  007A86  0E42               	movlw	66
   654  007A88                     u1607:
   655  007A88  2EE8               	decfsz	wreg,f,c
   656  007A8A  D7FE               	bra	u1607
   657  007A8C  D000               	nop2	
   658                           
   659                           ;newmain.c: 79: PORTCbits.RC2 = 0;
   660  007A8E  9482               	bcf	3970,2,c	;volatile
   661                           
   662                           ;newmain.c: 80: _delay((unsigned long)((50)*(32000000/4000000.0)));
   663  007A90  0E85               	movlw	133
   664  007A92                     u1617:
   665  007A92  2EE8               	decfsz	wreg,f,c
   666  007A94  D7FE               	bra	u1617
   667  007A96  F000               	nop	
   668                           
   669                           ;newmain.c: 81: B = PORTB;
   670  007A98  5081               	movf	3969,w,c	;volatile
   671  007A9A  EC70  F036         	call	___lbtoft
   672  007A9E  C009  F099         	movff	?___lbtoft,_B
   673  007AA2  C00A  F09A         	movff	?___lbtoft+1,_B+1
   674  007AA6  C00B  F09B         	movff	?___lbtoft+2,_B+2
   675                           
   676                           ;newmain.c: 83: _delay((unsigned long)((40)*(32000000/4000.0)));
   677  007AAA  0E02               	movlw	2
   678  007AAC  6E43               	movwf	(??_main+1)& (0+255),c
   679  007AAE  0EA0               	movlw	160
   680  007AB0  6E42               	movwf	??_main& (0+255),c
   681  007AB2  0E92               	movlw	146
   682  007AB4                     u1627:
   683  007AB4  2EE8               	decfsz	wreg,f,c
   684  007AB6  D7FE               	bra	u1627
   685  007AB8  2E42               	decfsz	??_main& (0+255),f,c
   686  007ABA  D7FC               	bra	u1627
   687  007ABC  2E43               	decfsz	(??_main+1)& (0+255),f,c
   688  007ABE  D7FA               	bra	u1627
   689  007AC0  D000               	nop2	
   690                           
   691                           ;newmain.c: 85: PORTCbits.RC0 = 0;
   692  007AC2  9082               	bcf	3970,0,c	;volatile
   693                           
   694                           ;newmain.c: 86: PORTCbits.RC1 = 1;
   695  007AC4  8282               	bsf	3970,1,c	;volatile
   696                           
   697                           ;newmain.c: 88: PORTCbits.RC2 = 1;
   698  007AC6  8482               	bsf	3970,2,c	;volatile
   699                           
   700                           ;newmain.c: 89: _delay((unsigned long)((25)*(32000000/4000000.0)));
   701  007AC8  0E42               	movlw	66
   702  007ACA                     u1637:
   703  007ACA  2EE8               	decfsz	wreg,f,c
   704  007ACC  D7FE               	bra	u1637
   705  007ACE  D000               	nop2	
   706                           
   707                           ;newmain.c: 90: PORTCbits.RC2 = 0;
   708  007AD0  9482               	bcf	3970,2,c	;volatile
   709                           
   710                           ;newmain.c: 91: _delay((unsigned long)((50)*(32000000/4000000.0)));
   711  007AD2  0E85               	movlw	133
   712  007AD4                     u1647:
   713  007AD4  2EE8               	decfsz	wreg,f,c
   714  007AD6  D7FE               	bra	u1647
   715  007AD8  F000               	nop	
   716                           
   717                           ;newmain.c: 92: C = PORTB;
   718  007ADA  5081               	movf	3969,w,c	;volatile
   719  007ADC  EC70  F036         	call	___lbtoft
   720  007AE0  C009  F096         	movff	?___lbtoft,_C
   721  007AE4  C00A  F097         	movff	?___lbtoft+1,_C+1
   722  007AE8  C00B  F098         	movff	?___lbtoft+2,_C+2
   723                           
   724                           ;newmain.c: 94: _delay((unsigned long)((40)*(32000000/4000.0)));
   725  007AEC  0E02               	movlw	2
   726  007AEE  6E43               	movwf	(??_main+1)& (0+255),c
   727  007AF0  0EA0               	movlw	160
   728  007AF2  6E42               	movwf	??_main& (0+255),c
   729  007AF4  0E92               	movlw	146
   730  007AF6                     u1657:
   731  007AF6  2EE8               	decfsz	wreg,f,c
   732  007AF8  D7FE               	bra	u1657
   733  007AFA  2E42               	decfsz	??_main& (0+255),f,c
   734  007AFC  D7FC               	bra	u1657
   735  007AFE  2E43               	decfsz	(??_main+1)& (0+255),f,c
   736  007B00  D7FA               	bra	u1657
   737  007B02  D000               	nop2	
   738                           
   739                           ;newmain.c: 96: PORTCbits.RC0 = 1;
   740  007B04  8082               	bsf	3970,0,c	;volatile
   741                           
   742                           ;newmain.c: 97: PORTCbits.RC1 = 1;
   743  007B06  8282               	bsf	3970,1,c	;volatile
   744                           
   745                           ;newmain.c: 99: PORTCbits.RC2 = 1;
   746  007B08  8482               	bsf	3970,2,c	;volatile
   747                           
   748                           ;newmain.c: 100: _delay((unsigned long)((25)*(32000000/4000000.0)));
   749  007B0A  0E42               	movlw	66
   750  007B0C                     u1667:
   751  007B0C  2EE8               	decfsz	wreg,f,c
   752  007B0E  D7FE               	bra	u1667
   753  007B10  D000               	nop2	
   754                           
   755                           ;newmain.c: 101: PORTCbits.RC2 = 0;
   756  007B12  9482               	bcf	3970,2,c	;volatile
   757                           
   758                           ;newmain.c: 102: _delay((unsigned long)((50)*(32000000/4000000.0)));
   759  007B14  0E85               	movlw	133
   760  007B16                     u1677:
   761  007B16  2EE8               	decfsz	wreg,f,c
   762  007B18  D7FE               	bra	u1677
   763  007B1A  F000               	nop	
   764                           
   765                           ;newmain.c: 103: D = PORTB;
   766  007B1C  5081               	movf	3969,w,c	;volatile
   767  007B1E  EC70  F036         	call	___lbtoft
   768  007B22  C009  F093         	movff	?___lbtoft,_D
   769  007B26  C00A  F094         	movff	?___lbtoft+1,_D+1
   770  007B2A  C00B  F095         	movff	?___lbtoft+2,_D+2
   771                           
   772                           ;newmain.c: 105: _delay((unsigned long)((40)*(32000000/4000.0)));
   773  007B2E  0E02               	movlw	2
   774  007B30  6E43               	movwf	(??_main+1)& (0+255),c
   775  007B32  0EA0               	movlw	160
   776  007B34  6E42               	movwf	??_main& (0+255),c
   777  007B36  0E92               	movlw	146
   778  007B38                     u1687:
   779  007B38  2EE8               	decfsz	wreg,f,c
   780  007B3A  D7FE               	bra	u1687
   781  007B3C  2E42               	decfsz	??_main& (0+255),f,c
   782  007B3E  D7FC               	bra	u1687
   783  007B40  2E43               	decfsz	(??_main+1)& (0+255),f,c
   784  007B42  D7FA               	bra	u1687
   785  007B44  D000               	nop2	
   786                           
   787                           ;newmain.c: 106: Input = (A+B)-(C+D);
   788  007B46  C093  F01B         	movff	_D,___ftadd@f2
   789  007B4A  C094  F01C         	movff	_D+1,___ftadd@f2+1
   790  007B4E  C095  F01D         	movff	_D+2,___ftadd@f2+2
   791  007B52  C096  F018         	movff	_C,___ftadd@f1
   792  007B56  C097  F019         	movff	_C+1,___ftadd@f1+1
   793  007B5A  C098  F01A         	movff	_C+2,___ftadd@f1+2
   794  007B5E  EC7E  F03A         	call	___ftadd	;wreg free
   795  007B62  C018  F024         	movff	?___ftadd,___ftneg@f1
   796  007B66  C019  F025         	movff	?___ftadd+1,___ftneg@f1+1
   797  007B6A  C01A  F026         	movff	?___ftadd+2,___ftneg@f1+2
   798  007B6E  EC5E  F036         	call	___ftneg	;wreg free
   799  007B72  C024  F060         	movff	?___ftneg,_main$1037
   800  007B76  C025  F061         	movff	?___ftneg+1,_main$1037+1
   801  007B7A  C026  F062         	movff	?___ftneg+2,_main$1037+2
   802                           
   803                           ;newmain.c: 106: Input = (A+B)-(C+D);
   804  007B7E  C09C  F01B         	movff	_A,___ftadd@f2
   805  007B82  C09D  F01C         	movff	_A+1,___ftadd@f2+1
   806  007B86  C09E  F01D         	movff	_A+2,___ftadd@f2+2
   807  007B8A  C060  F018         	movff	_main$1037,___ftadd@f1
   808  007B8E  C061  F019         	movff	_main$1037+1,___ftadd@f1+1
   809  007B92  C062  F01A         	movff	_main$1037+2,___ftadd@f1+2
   810  007B96  EC7E  F03A         	call	___ftadd	;wreg free
   811  007B9A  C018  F063         	movff	?___ftadd,_main$1038
   812  007B9E  C019  F064         	movff	?___ftadd+1,_main$1038+1
   813  007BA2  C01A  F065         	movff	?___ftadd+2,_main$1038+2
   814                           
   815                           ;newmain.c: 106: Input = (A+B)-(C+D);
   816  007BA6  C063  F018         	movff	_main$1038,___ftadd@f1
   817  007BAA  C064  F019         	movff	_main$1038+1,___ftadd@f1+1
   818  007BAE  C065  F01A         	movff	_main$1038+2,___ftadd@f1+2
   819  007BB2  C099  F01B         	movff	_B,___ftadd@f2
   820  007BB6  C09A  F01C         	movff	_B+1,___ftadd@f2+1
   821  007BBA  C09B  F01D         	movff	_B+2,___ftadd@f2+2
   822  007BBE  EC7E  F03A         	call	___ftadd	;wreg free
   823  007BC2  C018  F09F         	movff	?___ftadd,_Input
   824  007BC6  C019  F0A0         	movff	?___ftadd+1,_Input+1
   825  007BCA  C01A  F0A1         	movff	?___ftadd+2,_Input+2
   826                           
   827                           ;newmain.c: 107: PidType PID;
   828                           ;newmain.c: 108: PID_init(&PID, 1, 0, 0, PID_Direction_Reverse);
   829  007BCE  0E66               	movlw	low main@PID
   830  007BD0  6E36               	movwf	PID_init@pid,c
   831  007BD2  0E00               	movlw	high main@PID
   832  007BD4  6E37               	movwf	PID_init@pid+1,c
   833  007BD6  0E00               	movlw	0
   834  007BD8  6E38               	movwf	PID_init@Kp,c
   835  007BDA  0E80               	movlw	128
   836  007BDC  6E39               	movwf	PID_init@Kp+1,c
   837  007BDE  0E3F               	movlw	63
   838  007BE0  6E3A               	movwf	PID_init@Kp+2,c
   839  007BE2  0E00               	movlw	0
   840  007BE4  6E3B               	movwf	PID_init@Ki,c
   841  007BE6  0E00               	movlw	0
   842  007BE8  6E3C               	movwf	PID_init@Ki+1,c
   843  007BEA  0E00               	movlw	0
   844  007BEC  6E3D               	movwf	PID_init@Ki+2,c
   845  007BEE  0E00               	movlw	0
   846  007BF0  6E3E               	movwf	PID_init@Kd,c
   847  007BF2  0E00               	movlw	0
   848  007BF4  6E3F               	movwf	PID_init@Kd+1,c
   849  007BF6  0E00               	movlw	0
   850  007BF8  6E40               	movwf	PID_init@Kd+2,c
   851  007BFA  0E01               	movlw	1
   852  007BFC  6E41               	movwf	PID_init@ControllerDirection,c
   853  007BFE  ECF9  F039         	call	_PID_init	;wreg free
   854                           
   855                           ;newmain.c: 109: PID_SetMode(&PID, PID_Mode_Automatic);
   856  007C02  0E66               	movlw	low main@PID
   857  007C04  6E0C               	movwf	PID_SetMode@pid,c
   858  007C06  0E00               	movlw	high main@PID
   859  007C08  6E0D               	movwf	PID_SetMode@pid+1,c
   860  007C0A  0E01               	movlw	1
   861  007C0C  6E0E               	movwf	PID_SetMode@Mode,c
   862  007C0E  ECB9  F036         	call	_PID_SetMode	;wreg free
   863                           
   864                           ;newmain.c: 110: PID_SetOutputLimits(&PID, PID_Out_Min, PID_Out_Max);
   865  007C12  0E66               	movlw	low main@PID
   866  007C14  6E0D               	movwf	PID_SetOutputLimits@pid,c
   867  007C16  0E00               	movlw	high main@PID
   868  007C18  6E0E               	movwf	PID_SetOutputLimits@pid+1,c
   869  007C1A  C0AA  F009         	movff	_PID_Out_Min,___awtoft@c
   870  007C1E  C0AB  F00A         	movff	_PID_Out_Min+1,___awtoft@c+1
   871  007C22  EC9D  F036         	call	___awtoft	;wreg free
   872  007C26  C009  F00F         	movff	?___awtoft,PID_SetOutputLimits@Min
   873  007C2A  C00A  F010         	movff	?___awtoft+1,PID_SetOutputLimits@Min+1
   874  007C2E  C00B  F011         	movff	?___awtoft+2,PID_SetOutputLimits@Min+2
   875  007C32  C0A8  F009         	movff	_PID_Out_Max,___awtoft@c
   876  007C36  C0A9  F00A         	movff	_PID_Out_Max+1,___awtoft@c+1
   877  007C3A  EC9D  F036         	call	___awtoft	;wreg free
   878  007C3E  C009  F012         	movff	?___awtoft,PID_SetOutputLimits@Max
   879  007C42  C00A  F013         	movff	?___awtoft+1,PID_SetOutputLimits@Max+1
   880  007C46  C00B  F014         	movff	?___awtoft+2,PID_SetOutputLimits@Max+2
   881  007C4A  EC54  F03B         	call	_PID_SetOutputLimits	;wreg free
   882                           
   883                           ;newmain.c: 111: PID.mySetpoint = Setpoint;
   884  007C4E  C0A5  F009         	movff	_Setpoint,___awtoft@c
   885  007C52  C0A6  F00A         	movff	_Setpoint+1,___awtoft@c+1
   886  007C56  EC9D  F036         	call	___awtoft	;wreg free
   887  007C5A  C009  F07F         	movff	?___awtoft,main@PID+25
   888  007C5E  C00A  F080         	movff	?___awtoft+1,main@PID+26
   889  007C62  C00B  F081         	movff	?___awtoft+2,main@PID+27
   890                           
   891                           ;newmain.c: 112: PID.myInput = Input;
   892  007C66  C09F  F079         	movff	_Input,main@PID+19
   893  007C6A  C0A0  F07A         	movff	_Input+1,main@PID+20
   894  007C6E  C0A1  F07B         	movff	_Input+2,main@PID+21
   895                           
   896                           ;newmain.c: 113: PID_Compute(&PID);
   897  007C72  0E66               	movlw	low main@PID
   898  007C74  6E27               	movwf	PID_Compute@pid,c
   899  007C76  0E00               	movlw	high main@PID
   900  007C78  6E28               	movwf	PID_Compute@pid+1,c
   901  007C7A  EC74  F03E         	call	_PID_Compute	;wreg free
   902                           
   903                           ;newmain.c: 114: Output = PID.myOutput;
   904  007C7E  C07C  F0A2         	movff	main@PID+22,_Output
   905  007C82  C07D  F0A3         	movff	main@PID+23,_Output+1
   906  007C86  C07E  F0A4         	movff	main@PID+24,_Output+2
   907                           
   908                           ;newmain.c: 116: if(Output>0){
   909  007C8A  0E00               	movlw	0
   910  007C8C  6E01               	movwf	___ftge@ff1,c
   911  007C8E  0E00               	movlw	0
   912  007C90  6E02               	movwf	___ftge@ff1+1,c
   913  007C92  0E00               	movlw	0
   914  007C94  6E03               	movwf	___ftge@ff1+2,c
   915  007C96  C0A2  F004         	movff	_Output,___ftge@ff2
   916  007C9A  C0A3  F005         	movff	_Output+1,___ftge@ff2+1
   917  007C9E  C0A4  F006         	movff	_Output+2,___ftge@ff2+2
   918  007CA2  EC07  F037         	call	___ftge	;wreg free
   919  007CA6  B0D8               	btfsc	status,0,c
   920  007CA8  D002               	goto	l1816
   921                           
   922                           ;newmain.c: 118: PORTCbits.RC7 = 0;
   923  007CAA  9E82               	bcf	3970,7,c	;volatile
   924                           
   925                           ;newmain.c: 119: }
   926  007CAC  D00F               	goto	l55
   927  007CAE                     l1816:
   928                           
   929                           ;newmain.c: 120: else{
   930                           ;newmain.c: 121: Output = -Output;
   931  007CAE  C0A2  F024         	movff	_Output,___ftneg@f1
   932  007CB2  C0A3  F025         	movff	_Output+1,___ftneg@f1+1
   933  007CB6  C0A4  F026         	movff	_Output+2,___ftneg@f1+2
   934  007CBA  EC5E  F036         	call	___ftneg	;wreg free
   935  007CBE  C024  F0A2         	movff	?___ftneg,_Output
   936  007CC2  C025  F0A3         	movff	?___ftneg+1,_Output+1
   937  007CC6  C026  F0A4         	movff	?___ftneg+2,_Output+2
   938                           
   939                           ;newmain.c: 122: PORTCbits.RC7 = 1;
   940  007CCA  8E82               	bsf	3970,7,c	;volatile
   941  007CCC                     l55:
   942                           
   943                           ;newmain.c: 123: }
   944                           ;newmain.c: 124: output = Output;
   945  007CCC  C0A2  F001         	movff	_Output,___fttol@f1
   946  007CD0  C0A3  F002         	movff	_Output+1,___fttol@f1+1
   947  007CD4  C0A4  F003         	movff	_Output+2,___fttol@f1+2
   948  007CD8  ECFD  F038         	call	___fttol	;wreg free
   949  007CDC  5001               	movf	?___fttol,w,c
   950  007CDE  0100               	movlb	0	; () banked
   951  007CE0  6FA7               	movwf	_output& (0+255),b
   952                           
   953                           ; BSR set to: 0
   954                           ;newmain.c: 125: PORTD = output;
   955  007CE2  C0A7  FF83         	movff	_output,3971	;volatile
   956                           
   957                           ; BSR set to: 0
   958  007CE6  D6AB               	goto	l1728
   959  007CE8                     __end_of_main:
   960                           	opt stack 0
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           postdec1	equ	0xFE5
   968                           fsr1l	equ	0xFE1
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function ___lbtoft *****************
   972 ;; Defined at:
   973 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  c               1    wreg     unsigned char 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  c               1   11[COMRAM] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  3    8[COMRAM] float 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         3       0       0       0       0       0       0       0       0
   988 ;;      Locals:         1       0       0       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0
   990 ;;      Totals:         4       0       0       0       0       0       0       0       0
   991 ;;Total ram usage:        4 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    1
   994 ;; This function calls:
   995 ;;		___ftpack
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text1
  1002  006CE0                     __ptext1:
  1003                           	opt stack 0
  1004  006CE0                     ___lbtoft:
  1005                           	opt stack 29
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;incstack = 0
  1009                           ;___lbtoft@c stored from wreg
  1010  006CE0  6E0C               	movwf	___lbtoft@c,c
  1011  006CE2  500C               	movf	___lbtoft@c,w,c
  1012  006CE4  6E01               	movwf	___ftpack@arg,c
  1013  006CE6  6A02               	clrf	___ftpack@arg+1,c
  1014  006CE8  6A03               	clrf	___ftpack@arg+2,c
  1015  006CEA  0E8E               	movlw	142
  1016  006CEC  6E04               	movwf	___ftpack@exp,c
  1017  006CEE  0E00               	movlw	0
  1018  006CF0  6E05               	movwf	___ftpack@sign,c
  1019  006CF2  EC4F  F037         	call	___ftpack	;wreg free
  1020  006CF6  C001  F009         	movff	?___ftpack,?___lbtoft
  1021  006CFA  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1022  006CFE  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1023  006D02  0012               	return	
  1024  006D04                     __end_of___lbtoft:
  1025                           	opt stack 0
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           postdec1	equ	0xFE5
  1033                           fsr1l	equ	0xFE1
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function ___fttol *****************
  1037 ;; Defined at:
  1038 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  f1              3    0[COMRAM] float 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  lval            4   10[COMRAM] unsigned long 
  1043 ;;  exp1            1   14[COMRAM] unsigned char 
  1044 ;;  sign1           1    9[COMRAM] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  4    0[COMRAM] long 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1054 ;;      Params:         4       0       0       0       0       0       0       0       0
  1055 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1056 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1057 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1058 ;;Total ram usage:       15 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text2
  1068  0071FA                     __ptext2:
  1069                           	opt stack 0
  1070  0071FA                     ___fttol:
  1071                           	opt stack 30
  1072                           
  1073                           ;incstack = 0
  1074  0071FA  C003  F005         	movff	___fttol@f1+2,??___fttol
  1075  0071FE  6A06               	clrf	(??___fttol+1)& (0+255),c
  1076  007200  6A07               	clrf	(??___fttol+2)& (0+255),c
  1077  007202  3402               	rlcf	___fttol@f1+1,w,c
  1078  007204  3605               	rlcf	??___fttol& (0+255),f,c
  1079  007206  E301               	bnc	u1471
  1080  007208  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1081  00720A                     u1471:
  1082  00720A  5005               	movf	??___fttol,w,c
  1083  00720C  6E0F               	movwf	___fttol@exp1,c
  1084  00720E  500F               	movf	___fttol@exp1,w,c
  1085  007210  A4D8               	btfss	status,2,c
  1086  007212  D009               	goto	l1668
  1087  007214  0E00               	movlw	0
  1088  007216  6E01               	movwf	?___fttol,c
  1089  007218  0E00               	movlw	0
  1090  00721A  6E02               	movwf	?___fttol+1,c
  1091  00721C  0E00               	movlw	0
  1092  00721E  6E03               	movwf	?___fttol+2,c
  1093  007220  0E00               	movlw	0
  1094  007222  6E04               	movwf	?___fttol+3,c
  1095  007224  0012               	return	
  1096  007226                     l1668:
  1097  007226  0E17               	movlw	23
  1098  007228  6E05               	movwf	??___fttol& (0+255),c
  1099  00722A  C001  F006         	movff	___fttol@f1,??___fttol+1
  1100  00722E  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1101  007232  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1102  007236  2805               	incf	??___fttol,w,c
  1103  007238  6E09               	movwf	(??___fttol+4)& (0+255),c
  1104  00723A  D004               	goto	u1490
  1105  00723C                     u1495:
  1106  00723C  90D8               	bcf	status,0,c
  1107  00723E  3208               	rrcf	??___fttol+3,f,c
  1108  007240  3207               	rrcf	??___fttol+2,f,c
  1109  007242  3206               	rrcf	??___fttol+1,f,c
  1110  007244                     u1490:
  1111  007244  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1112  007246  D7FA               	goto	u1495
  1113  007248  5006               	movf	??___fttol+1,w,c
  1114  00724A  6E0A               	movwf	___fttol@sign1,c
  1115  00724C  8E02               	bsf	___fttol@f1+1,7,c
  1116  00724E  0EFF               	movlw	255
  1117  007250  1601               	andwf	___fttol@f1,f,c
  1118  007252  0EFF               	movlw	255
  1119  007254  1602               	andwf	___fttol@f1+1,f,c
  1120  007256  0E00               	movlw	0
  1121  007258  1603               	andwf	___fttol@f1+2,f,c
  1122  00725A  5001               	movf	___fttol@f1,w,c
  1123  00725C  6E0B               	movwf	___fttol@lval,c
  1124  00725E  5002               	movf	___fttol@f1+1,w,c
  1125  007260  6E0C               	movwf	___fttol@lval+1,c
  1126  007262  5003               	movf	___fttol@f1+2,w,c
  1127  007264  6E0D               	movwf	___fttol@lval+2,c
  1128  007266  6A0E               	clrf	___fttol@lval+3,c
  1129  007268  0E8E               	movlw	142
  1130  00726A  5E0F               	subwf	___fttol@exp1,f,c
  1131  00726C  AE0F               	btfss	___fttol@exp1,7,c
  1132  00726E  D016               	goto	l1690
  1133  007270  500F               	movf	___fttol@exp1,w,c
  1134  007272  0A80               	xorlw	128
  1135  007274  0F8F               	addlw	143
  1136  007276  B0D8               	btfsc	status,0,c
  1137  007278  D009               	goto	l1686
  1138  00727A  0E00               	movlw	0
  1139  00727C  6E01               	movwf	?___fttol,c
  1140  00727E  0E00               	movlw	0
  1141  007280  6E02               	movwf	?___fttol+1,c
  1142  007282  0E00               	movlw	0
  1143  007284  6E03               	movwf	?___fttol+2,c
  1144  007286  0E00               	movlw	0
  1145  007288  6E04               	movwf	?___fttol+3,c
  1146  00728A  0012               	return	
  1147  00728C                     l1686:
  1148  00728C  90D8               	bcf	status,0,c
  1149  00728E  320E               	rrcf	___fttol@lval+3,f,c
  1150  007290  320D               	rrcf	___fttol@lval+2,f,c
  1151  007292  320C               	rrcf	___fttol@lval+1,f,c
  1152  007294  320B               	rrcf	___fttol@lval,f,c
  1153  007296  3E0F               	incfsz	___fttol@exp1,f,c
  1154  007298  D7F9               	goto	l1686
  1155  00729A  D015               	goto	l1700
  1156  00729C                     l1690:
  1157  00729C  0E17               	movlw	23
  1158  00729E  640F               	cpfsgt	___fttol@exp1,c
  1159  0072A0  D00F               	goto	l1698
  1160  0072A2  0E00               	movlw	0
  1161  0072A4  6E01               	movwf	?___fttol,c
  1162  0072A6  0E00               	movlw	0
  1163  0072A8  6E02               	movwf	?___fttol+1,c
  1164  0072AA  0E00               	movlw	0
  1165  0072AC  6E03               	movwf	?___fttol+2,c
  1166  0072AE  0E00               	movlw	0
  1167  0072B0  6E04               	movwf	?___fttol+3,c
  1168  0072B2  0012               	return	
  1169  0072B4                     l1696:
  1170  0072B4  90D8               	bcf	status,0,c
  1171  0072B6  360B               	rlcf	___fttol@lval,f,c
  1172  0072B8  360C               	rlcf	___fttol@lval+1,f,c
  1173  0072BA  360D               	rlcf	___fttol@lval+2,f,c
  1174  0072BC  360E               	rlcf	___fttol@lval+3,f,c
  1175  0072BE  060F               	decf	___fttol@exp1,f,c
  1176  0072C0                     l1698:
  1177  0072C0  500F               	movf	___fttol@exp1,w,c
  1178  0072C2  A4D8               	btfss	status,2,c
  1179  0072C4  D7F7               	goto	l1696
  1180  0072C6                     l1700:
  1181  0072C6  500A               	movf	___fttol@sign1,w,c
  1182  0072C8  B4D8               	btfsc	status,2,c
  1183  0072CA  D008               	goto	l1704
  1184  0072CC  1E0E               	comf	___fttol@lval+3,f,c
  1185  0072CE  1E0D               	comf	___fttol@lval+2,f,c
  1186  0072D0  1E0C               	comf	___fttol@lval+1,f,c
  1187  0072D2  6C0B               	negf	___fttol@lval,c
  1188  0072D4  0E00               	movlw	0
  1189  0072D6  220C               	addwfc	___fttol@lval+1,f,c
  1190  0072D8  220D               	addwfc	___fttol@lval+2,f,c
  1191  0072DA  220E               	addwfc	___fttol@lval+3,f,c
  1192  0072DC                     l1704:
  1193  0072DC  C00B  F001         	movff	___fttol@lval,?___fttol
  1194  0072E0  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1195  0072E4  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1196  0072E8  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1197  0072EC  0012               	return	
  1198  0072EE                     __end_of___fttol:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function ___awtoft *****************
  1211 ;; Defined at:
  1212 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  c               2    8[COMRAM] int 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  sign            1   11[COMRAM] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  3    8[COMRAM] float 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1226 ;;      Params:         3       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1229 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:        4 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		___ftpack
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;;		_PID_SetSampleTime
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text3
  1242  006D3A                     __ptext3:
  1243                           	opt stack 0
  1244  006D3A                     ___awtoft:
  1245                           	opt stack 29
  1246                           
  1247                           ;incstack = 0
  1248  006D3A  0E00               	movlw	0
  1249  006D3C  6E0C               	movwf	___awtoft@sign,c
  1250  006D3E  AE0A               	btfss	___awtoft@c+1,7,c
  1251  006D40  D006               	goto	l1658
  1252  006D42  6C09               	negf	___awtoft@c,c
  1253  006D44  1E0A               	comf	___awtoft@c+1,f,c
  1254  006D46  B0D8               	btfsc	status,0,c
  1255  006D48  2A0A               	incf	___awtoft@c+1,f,c
  1256  006D4A  0E01               	movlw	1
  1257  006D4C  6E0C               	movwf	___awtoft@sign,c
  1258  006D4E                     l1658:
  1259  006D4E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1260  006D52  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1261  006D56  6A03               	clrf	___ftpack@arg+2,c
  1262  006D58  0E8E               	movlw	142
  1263  006D5A  6E04               	movwf	___ftpack@exp,c
  1264  006D5C  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1265  006D60  EC4F  F037         	call	___ftpack	;wreg free
  1266  006D64  C001  F009         	movff	?___ftpack,?___awtoft
  1267  006D68  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1268  006D6C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1269  006D70  0012               	return	
  1270  006D72                     __end_of___awtoft:
  1271                           	opt stack 0
  1272                           tblptru	equ	0xFF8
  1273                           tblptrh	equ	0xFF7
  1274                           tblptrl	equ	0xFF6
  1275                           tablat	equ	0xFF5
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1l	equ	0xFE1
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _PID_init *****************
  1283 ;; Defined at:
  1284 ;;		line 16 in file "pid.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  pid             2   53[COMRAM] PTR struct .
  1287 ;;		 -> main@PID(45), 
  1288 ;;  Kp              3   55[COMRAM] float 
  1289 ;;  Ki              3   58[COMRAM] float 
  1290 ;;  Kd              3   61[COMRAM] float 
  1291 ;;  ControllerDi    1   64[COMRAM] enum E7
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:        12       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1306 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:       12 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    3
  1310 ;; This function calls:
  1311 ;;		_PID_SetControllerDirection
  1312 ;;		_PID_SetOutputLimits
  1313 ;;		_PID_SetTunings
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text4
  1320  0073F2                     __ptext4:
  1321                           	opt stack 0
  1322  0073F2                     _PID_init:
  1323                           	opt stack 27
  1324                           
  1325                           ;pid.c: 18: pid->myInput = 0;
  1326                           
  1327                           ;incstack = 0
  1328  0073F2  EE20 F013          	lfsr	2,19
  1329  0073F6  5036               	movf	PID_init@pid,w,c
  1330  0073F8  26D9               	addwf	fsr2l,f,c
  1331  0073FA  5037               	movf	PID_init@pid+1,w,c
  1332  0073FC  22DA               	addwfc	fsr2h,f,c
  1333  0073FE  0E00               	movlw	0
  1334  007400  6EDE               	movwf	postinc2,c
  1335  007402  0E00               	movlw	0
  1336  007404  6EDE               	movwf	postinc2,c
  1337  007406  0E00               	movlw	0
  1338  007408  6EDE               	movwf	postinc2,c
  1339                           
  1340                           ;pid.c: 19: pid->myOutput = 0;
  1341  00740A  EE20 F016          	lfsr	2,22
  1342  00740E  5036               	movf	PID_init@pid,w,c
  1343  007410  26D9               	addwf	fsr2l,f,c
  1344  007412  5037               	movf	PID_init@pid+1,w,c
  1345  007414  22DA               	addwfc	fsr2h,f,c
  1346  007416  0E00               	movlw	0
  1347  007418  6EDE               	movwf	postinc2,c
  1348  00741A  0E00               	movlw	0
  1349  00741C  6EDE               	movwf	postinc2,c
  1350  00741E  0E00               	movlw	0
  1351  007420  6EDE               	movwf	postinc2,c
  1352                           
  1353                           ;pid.c: 20: pid->mySetpoint = 0;
  1354  007422  EE20 F019          	lfsr	2,25
  1355  007426  5036               	movf	PID_init@pid,w,c
  1356  007428  26D9               	addwf	fsr2l,f,c
  1357  00742A  5037               	movf	PID_init@pid+1,w,c
  1358  00742C  22DA               	addwfc	fsr2h,f,c
  1359  00742E  0E00               	movlw	0
  1360  007430  6EDE               	movwf	postinc2,c
  1361  007432  0E00               	movlw	0
  1362  007434  6EDE               	movwf	postinc2,c
  1363  007436  0E00               	movlw	0
  1364  007438  6EDE               	movwf	postinc2,c
  1365                           
  1366                           ;pid.c: 21: pid->ITerm = 0;
  1367  00743A  EE20 F01C          	lfsr	2,28
  1368  00743E  5036               	movf	PID_init@pid,w,c
  1369  007440  26D9               	addwf	fsr2l,f,c
  1370  007442  5037               	movf	PID_init@pid+1,w,c
  1371  007444  22DA               	addwfc	fsr2h,f,c
  1372  007446  0E00               	movlw	0
  1373  007448  6EDE               	movwf	postinc2,c
  1374  00744A  0E00               	movlw	0
  1375  00744C  6EDE               	movwf	postinc2,c
  1376  00744E  0E00               	movlw	0
  1377  007450  6EDE               	movwf	postinc2,c
  1378                           
  1379                           ;pid.c: 22: pid->lastInput = 0;
  1380  007452  EE20 F01F          	lfsr	2,31
  1381  007456  5036               	movf	PID_init@pid,w,c
  1382  007458  26D9               	addwf	fsr2l,f,c
  1383  00745A  5037               	movf	PID_init@pid+1,w,c
  1384  00745C  22DA               	addwfc	fsr2h,f,c
  1385  00745E  0E00               	movlw	0
  1386  007460  6EDE               	movwf	postinc2,c
  1387  007462  0E00               	movlw	0
  1388  007464  6EDE               	movwf	postinc2,c
  1389  007466  0E00               	movlw	0
  1390  007468  6EDE               	movwf	postinc2,c
  1391                           
  1392                           ;pid.c: 23: pid->inAuto = 0;
  1393  00746A  EE20 F02C          	lfsr	2,44
  1394  00746E  5036               	movf	PID_init@pid,w,c
  1395  007470  26D9               	addwf	fsr2l,f,c
  1396  007472  5037               	movf	PID_init@pid+1,w,c
  1397  007474  22DA               	addwfc	fsr2h,f,c
  1398  007476  0E00               	movlw	0
  1399  007478  6EDF               	movwf	indf2,c
  1400                           
  1401                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
  1402  00747A  C036  F00D         	movff	PID_init@pid,PID_SetOutputLimits@pid
  1403  00747E  C037  F00E         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
  1404  007482  0E00               	movlw	0
  1405  007484  6E0F               	movwf	PID_SetOutputLimits@Min,c
  1406  007486  0E00               	movlw	0
  1407  007488  6E10               	movwf	PID_SetOutputLimits@Min+1,c
  1408  00748A  0E00               	movlw	0
  1409  00748C  6E11               	movwf	PID_SetOutputLimits@Min+2,c
  1410  00748E  0EFF               	movlw	255
  1411  007490  6E12               	movwf	PID_SetOutputLimits@Max,c
  1412  007492  0E7F               	movlw	127
  1413  007494  6E13               	movwf	PID_SetOutputLimits@Max+1,c
  1414  007496  0E47               	movlw	71
  1415  007498  6E14               	movwf	PID_SetOutputLimits@Max+2,c
  1416  00749A  EC54  F03B         	call	_PID_SetOutputLimits	;wreg free
  1417                           
  1418                           ;pid.c: 28: pid->SampleTime = 1000;
  1419  00749E  EE20 F022          	lfsr	2,34
  1420  0074A2  5036               	movf	PID_init@pid,w,c
  1421  0074A4  26D9               	addwf	fsr2l,f,c
  1422  0074A6  5037               	movf	PID_init@pid+1,w,c
  1423  0074A8  22DA               	addwfc	fsr2h,f,c
  1424  0074AA  0EE8               	movlw	232
  1425  0074AC  6EDE               	movwf	postinc2,c
  1426  0074AE  0E03               	movlw	3
  1427  0074B0  6EDE               	movwf	postinc2,c
  1428  0074B2  0E00               	movlw	0
  1429  0074B4  6EDE               	movwf	postinc2,c
  1430  0074B6  0E00               	movlw	0
  1431  0074B8  6EDD               	movwf	postdec2,c
  1432                           
  1433                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
  1434  0074BA  C036  F027         	movff	PID_init@pid,PID_SetControllerDirection@pid
  1435  0074BE  C037  F028         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
  1436  0074C2  C041  F029         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
  1437  0074C6  ECA6  F037         	call	_PID_SetControllerDirection	;wreg free
  1438                           
  1439                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
  1440  0074CA  C036  F027         	movff	PID_init@pid,PID_SetTunings@pid
  1441  0074CE  C037  F028         	movff	PID_init@pid+1,PID_SetTunings@pid+1
  1442  0074D2  C038  F029         	movff	PID_init@Kp,PID_SetTunings@Kp
  1443  0074D6  C039  F02A         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
  1444  0074DA  C03A  F02B         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
  1445  0074DE  C03B  F02C         	movff	PID_init@Ki,PID_SetTunings@Ki
  1446  0074E2  C03C  F02D         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
  1447  0074E6  C03D  F02E         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
  1448  0074EA  C03E  F02F         	movff	PID_init@Kd,PID_SetTunings@Kd
  1449  0074EE  C03F  F030         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
  1450  0074F2  C040  F031         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
  1451  0074F6  EC30  F03C         	call	_PID_SetTunings	;wreg free
  1452  0074FA  0012               	return		;funcret
  1453  0074FC                     __end_of_PID_init:
  1454                           	opt stack 0
  1455                           tblptru	equ	0xFF8
  1456                           tblptrh	equ	0xFF7
  1457                           tblptrl	equ	0xFF6
  1458                           tablat	equ	0xFF5
  1459                           postinc0	equ	0xFEE
  1460                           wreg	equ	0xFE8
  1461                           postdec1	equ	0xFE5
  1462                           fsr1l	equ	0xFE1
  1463                           indf2	equ	0xFDF
  1464                           postinc2	equ	0xFDE
  1465                           postdec2	equ	0xFDD
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _PID_SetTunings *****************
  1471 ;; Defined at:
  1472 ;;		line 85 in file "pid.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  pid             2   38[COMRAM] PTR struct .
  1475 ;;		 -> main@PID(45), 
  1476 ;;  Kp              3   40[COMRAM] float 
  1477 ;;  Ki              3   43[COMRAM] float 
  1478 ;;  Kd              3   46[COMRAM] float 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  SampleTimeIn    3   50[COMRAM] float 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:        11       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1493 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:       15 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    2
  1497 ;; This function calls:
  1498 ;;		___ftdiv
  1499 ;;		___ftmul
  1500 ;;		___ftneg
  1501 ;;		___lltoft
  1502 ;; This function is called by:
  1503 ;;		_PID_init
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text5
  1508  007860                     __ptext5:
  1509                           	opt stack 0
  1510  007860                     _PID_SetTunings:
  1511                           	opt stack 27
  1512                           
  1513                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
  1514                           
  1515                           ;incstack = 0
  1516  007860  BE2B               	btfsc	PID_SetTunings@Kp+2,7,c
  1517  007862  0012               	return	
  1518  007864  BE2E               	btfsc	PID_SetTunings@Ki+2,7,c
  1519  007866  0012               	return	
  1520  007868  BE31               	btfsc	PID_SetTunings@Kd+2,7,c
  1521  00786A  0012               	return	
  1522                           
  1523                           ;pid.c: 88: }
  1524                           ;pid.c: 90: pid->dispKp = Kp;
  1525                           
  1526                           ;pid.c: 87: return;
  1527  00786C  C027  FFD9         	movff	PID_SetTunings@pid,fsr2l
  1528  007870  C028  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
  1529  007874  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1530  007878  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1531  00787C  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1532                           
  1533                           ;pid.c: 91: pid->dispKi = Ki;
  1534  007880  EE20 F003          	lfsr	2,3
  1535  007884  5027               	movf	PID_SetTunings@pid,w,c
  1536  007886  26D9               	addwf	fsr2l,f,c
  1537  007888  5028               	movf	PID_SetTunings@pid+1,w,c
  1538  00788A  22DA               	addwfc	fsr2h,f,c
  1539  00788C  C02C  FFDE         	movff	PID_SetTunings@Ki,postinc2
  1540  007890  C02D  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
  1541  007894  C02E  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
  1542                           
  1543                           ;pid.c: 92: pid->dispKd = Kd;
  1544  007898  EE20 F006          	lfsr	2,6
  1545  00789C  5027               	movf	PID_SetTunings@pid,w,c
  1546  00789E  26D9               	addwf	fsr2l,f,c
  1547  0078A0  5028               	movf	PID_SetTunings@pid+1,w,c
  1548  0078A2  22DA               	addwfc	fsr2h,f,c
  1549  0078A4  C02F  FFDE         	movff	PID_SetTunings@Kd,postinc2
  1550  0078A8  C030  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
  1551  0078AC  C031  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
  1552                           
  1553                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
  1554  0078B0  EE20 F022          	lfsr	2,34
  1555  0078B4  5027               	movf	PID_SetTunings@pid,w,c
  1556  0078B6  26D9               	addwf	fsr2l,f,c
  1557  0078B8  5028               	movf	PID_SetTunings@pid+1,w,c
  1558  0078BA  22DA               	addwfc	fsr2h,f,c
  1559  0078BC  CFDE F009          	movff	postinc2,___lltoft@c
  1560  0078C0  CFDE F00A          	movff	postinc2,___lltoft@c+1
  1561  0078C4  CFDE F00B          	movff	postinc2,___lltoft@c+2
  1562  0078C8  CFDE F00C          	movff	postinc2,___lltoft@c+3
  1563  0078CC  ECD9  F036         	call	___lltoft	;wreg free
  1564  0078D0  C009  F012         	movff	?___lltoft,___ftdiv@f1
  1565  0078D4  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
  1566  0078D8  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
  1567  0078DC  0E00               	movlw	0
  1568  0078DE  6E15               	movwf	___ftdiv@f2,c
  1569  0078E0  0E7A               	movlw	122
  1570  0078E2  6E16               	movwf	___ftdiv@f2+1,c
  1571  0078E4  0E44               	movlw	68
  1572  0078E6  6E17               	movwf	___ftdiv@f2+2,c
  1573  0078E8  EC10  F038         	call	___ftdiv	;wreg free
  1574  0078EC  C012  F033         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1575  0078F0  C013  F034         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1576  0078F4  C014  F035         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1577                           
  1578                           ;pid.c: 95: pid->kp = Kp;
  1579  0078F8  EE20 F009          	lfsr	2,9
  1580  0078FC  5027               	movf	PID_SetTunings@pid,w,c
  1581  0078FE  26D9               	addwf	fsr2l,f,c
  1582  007900  5028               	movf	PID_SetTunings@pid+1,w,c
  1583  007902  22DA               	addwfc	fsr2h,f,c
  1584  007904  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1585  007908  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1586  00790C  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1587                           
  1588                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1589  007910  C02C  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1590  007914  C02D  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1591  007918  C02E  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1592  00791C  C033  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1593  007920  C034  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1594  007924  C035  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1595  007928  EC83  F038         	call	___ftmul	;wreg free
  1596  00792C  EE20 F00C          	lfsr	2,12
  1597  007930  5027               	movf	PID_SetTunings@pid,w,c
  1598  007932  26D9               	addwf	fsr2l,f,c
  1599  007934  5028               	movf	PID_SetTunings@pid+1,w,c
  1600  007936  22DA               	addwfc	fsr2h,f,c
  1601  007938  C009  FFDE         	movff	?___ftmul,postinc2
  1602  00793C  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1603  007940  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1604                           
  1605                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1606  007944  C02F  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1607  007948  C030  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1608  00794C  C031  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1609  007950  C033  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1610  007954  C034  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1611  007958  C035  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1612  00795C  EC10  F038         	call	___ftdiv	;wreg free
  1613  007960  EE20 F00F          	lfsr	2,15
  1614  007964  5027               	movf	PID_SetTunings@pid,w,c
  1615  007966  26D9               	addwf	fsr2l,f,c
  1616  007968  5028               	movf	PID_SetTunings@pid+1,w,c
  1617  00796A  22DA               	addwfc	fsr2h,f,c
  1618  00796C  C012  FFDE         	movff	?___ftdiv,postinc2
  1619  007970  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1620  007974  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1621                           
  1622                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1623  007978  EE20 F012          	lfsr	2,18
  1624  00797C  5027               	movf	PID_SetTunings@pid,w,c
  1625  00797E  26D9               	addwf	fsr2l,f,c
  1626  007980  5028               	movf	PID_SetTunings@pid+1,w,c
  1627  007982  22DA               	addwfc	fsr2h,f,c
  1628  007984  04DE               	decf	postinc2,w,c
  1629  007986  A4D8               	btfss	status,2,c
  1630  007988  0012               	return	
  1631                           
  1632                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1633  00798A  EE20 F009          	lfsr	2,9
  1634  00798E  5027               	movf	PID_SetTunings@pid,w,c
  1635  007990  26D9               	addwf	fsr2l,f,c
  1636  007992  5028               	movf	PID_SetTunings@pid+1,w,c
  1637  007994  22DA               	addwfc	fsr2h,f,c
  1638  007996  CFDE F024          	movff	postinc2,___ftneg@f1
  1639  00799A  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1640  00799E  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1641  0079A2  EC5E  F036         	call	___ftneg	;wreg free
  1642  0079A6  EE20 F009          	lfsr	2,9
  1643  0079AA  5027               	movf	PID_SetTunings@pid,w,c
  1644  0079AC  26D9               	addwf	fsr2l,f,c
  1645  0079AE  5028               	movf	PID_SetTunings@pid+1,w,c
  1646  0079B0  22DA               	addwfc	fsr2h,f,c
  1647  0079B2  C024  FFDE         	movff	?___ftneg,postinc2
  1648  0079B6  C025  FFDE         	movff	?___ftneg+1,postinc2
  1649  0079BA  C026  FFDE         	movff	?___ftneg+2,postinc2
  1650                           
  1651                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1652  0079BE  EE20 F00C          	lfsr	2,12
  1653  0079C2  5027               	movf	PID_SetTunings@pid,w,c
  1654  0079C4  26D9               	addwf	fsr2l,f,c
  1655  0079C6  5028               	movf	PID_SetTunings@pid+1,w,c
  1656  0079C8  22DA               	addwfc	fsr2h,f,c
  1657  0079CA  CFDE F024          	movff	postinc2,___ftneg@f1
  1658  0079CE  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1659  0079D2  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1660  0079D6  EC5E  F036         	call	___ftneg	;wreg free
  1661  0079DA  EE20 F00C          	lfsr	2,12
  1662  0079DE  5027               	movf	PID_SetTunings@pid,w,c
  1663  0079E0  26D9               	addwf	fsr2l,f,c
  1664  0079E2  5028               	movf	PID_SetTunings@pid+1,w,c
  1665  0079E4  22DA               	addwfc	fsr2h,f,c
  1666  0079E6  C024  FFDE         	movff	?___ftneg,postinc2
  1667  0079EA  C025  FFDE         	movff	?___ftneg+1,postinc2
  1668  0079EE  C026  FFDE         	movff	?___ftneg+2,postinc2
  1669                           
  1670                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1671  0079F2  EE20 F00F          	lfsr	2,15
  1672  0079F6  5027               	movf	PID_SetTunings@pid,w,c
  1673  0079F8  26D9               	addwf	fsr2l,f,c
  1674  0079FA  5028               	movf	PID_SetTunings@pid+1,w,c
  1675  0079FC  22DA               	addwfc	fsr2h,f,c
  1676  0079FE  CFDE F024          	movff	postinc2,___ftneg@f1
  1677  007A02  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1678  007A06  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1679  007A0A  EC5E  F036         	call	___ftneg	;wreg free
  1680  007A0E  EE20 F00F          	lfsr	2,15
  1681  007A12  5027               	movf	PID_SetTunings@pid,w,c
  1682  007A14  26D9               	addwf	fsr2l,f,c
  1683  007A16  5028               	movf	PID_SetTunings@pid+1,w,c
  1684  007A18  22DA               	addwfc	fsr2h,f,c
  1685  007A1A  C024  FFDE         	movff	?___ftneg,postinc2
  1686  007A1E  C025  FFDE         	movff	?___ftneg+1,postinc2
  1687  007A22  C026  FFDE         	movff	?___ftneg+2,postinc2
  1688  007A26  0012               	return	
  1689  007A28                     __end_of_PID_SetTunings:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           tblptrh	equ	0xFF7
  1693                           tblptrl	equ	0xFF6
  1694                           tablat	equ	0xFF5
  1695                           postinc0	equ	0xFEE
  1696                           wreg	equ	0xFE8
  1697                           postdec1	equ	0xFE5
  1698                           fsr1l	equ	0xFE1
  1699                           indf2	equ	0xFDF
  1700                           postinc2	equ	0xFDE
  1701                           postdec2	equ	0xFDD
  1702                           fsr2h	equ	0xFDA
  1703                           fsr2l	equ	0xFD9
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function ___lltoft *****************
  1707 ;; Defined at:
  1708 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  c               4    8[COMRAM] unsigned long 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  exp             1   16[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  3    8[COMRAM] float 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         4       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1724 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1726 ;;Total ram usage:        9 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    1
  1729 ;; This function calls:
  1730 ;;		___ftpack
  1731 ;; This function is called by:
  1732 ;;		_PID_SetTunings
  1733 ;;		_PID_SetSampleTime
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text6
  1738  006DB2                     __ptext6:
  1739                           	opt stack 0
  1740  006DB2                     ___lltoft:
  1741                           	opt stack 27
  1742                           
  1743                           ;incstack = 0
  1744  006DB2  0E8E               	movlw	142
  1745  006DB4  6E11               	movwf	___lltoft@exp,c
  1746  006DB6  D006               	goto	l1458
  1747  006DB8                     l1456:
  1748  006DB8  90D8               	bcf	status,0,c
  1749  006DBA  320C               	rrcf	___lltoft@c+3,f,c
  1750  006DBC  320B               	rrcf	___lltoft@c+2,f,c
  1751  006DBE  320A               	rrcf	___lltoft@c+1,f,c
  1752  006DC0  3209               	rrcf	___lltoft@c,f,c
  1753  006DC2  2A11               	incf	___lltoft@exp,f,c
  1754  006DC4                     l1458:
  1755  006DC4  0E00               	movlw	0
  1756  006DC6  1409               	andwf	___lltoft@c,w,c
  1757  006DC8  6E0D               	movwf	??___lltoft& (0+255),c
  1758  006DCA  0E00               	movlw	0
  1759  006DCC  140A               	andwf	___lltoft@c+1,w,c
  1760  006DCE  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1761  006DD0  0E00               	movlw	0
  1762  006DD2  140B               	andwf	___lltoft@c+2,w,c
  1763  006DD4  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1764  006DD6  0EFF               	movlw	255
  1765  006DD8  140C               	andwf	___lltoft@c+3,w,c
  1766  006DDA  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1767  006DDC  500D               	movf	??___lltoft,w,c
  1768  006DDE  100E               	iorwf	??___lltoft+1,w,c
  1769  006DE0  100F               	iorwf	??___lltoft+2,w,c
  1770  006DE2  1010               	iorwf	??___lltoft+3,w,c
  1771  006DE4  A4D8               	btfss	status,2,c
  1772  006DE6  D7E8               	goto	l1456
  1773  006DE8  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1774  006DEC  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1775  006DF0  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1776  006DF4  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1777  006DF8  0E00               	movlw	0
  1778  006DFA  6E05               	movwf	___ftpack@sign,c
  1779  006DFC  EC4F  F037         	call	___ftpack	;wreg free
  1780  006E00  C001  F009         	movff	?___ftpack,?___lltoft
  1781  006E04  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1782  006E08  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1783  006E0C  0012               	return	
  1784  006E0E                     __end_of___lltoft:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           postdec1	equ	0xFE5
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           postinc2	equ	0xFDE
  1796                           postdec2	equ	0xFDD
  1797                           fsr2h	equ	0xFDA
  1798                           fsr2l	equ	0xFD9
  1799                           status	equ	0xFD8
  1800                           
  1801 ;; *************** function ___ftdiv *****************
  1802 ;; Defined at:
  1803 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  f1              3   17[COMRAM] float 
  1806 ;;  f2              3   20[COMRAM] float 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  f3              3   27[COMRAM] float 
  1809 ;;  sign            1   31[COMRAM] unsigned char 
  1810 ;;  exp             1   30[COMRAM] unsigned char 
  1811 ;;  cntr            1   26[COMRAM] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  3   17[COMRAM] float 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1821 ;;      Params:         6       0       0       0       0       0       0       0       0
  1822 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1823 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1824 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1825 ;;Total ram usage:       15 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    1
  1828 ;; This function calls:
  1829 ;;		___ftpack
  1830 ;; This function is called by:
  1831 ;;		_PID_SetTunings
  1832 ;;		_PID_SetSampleTime
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text7
  1837  007020                     __ptext7:
  1838                           	opt stack 0
  1839  007020                     ___ftdiv:
  1840                           	opt stack 27
  1841                           
  1842                           ;incstack = 0
  1843  007020  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  1844  007024  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1845  007026  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1846  007028  3413               	rlcf	___ftdiv@f1+1,w,c
  1847  00702A  3618               	rlcf	??___ftdiv& (0+255),f,c
  1848  00702C  E301               	bnc	u871
  1849  00702E  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1850  007030                     u871:
  1851  007030  5018               	movf	??___ftdiv,w,c
  1852  007032  6E1F               	movwf	___ftdiv@exp,c
  1853  007034  501F               	movf	___ftdiv@exp,w,c
  1854  007036  A4D8               	btfss	status,2,c
  1855  007038  D007               	goto	l1344
  1856  00703A  0E00               	movlw	0
  1857  00703C  6E12               	movwf	?___ftdiv,c
  1858  00703E  0E00               	movlw	0
  1859  007040  6E13               	movwf	?___ftdiv+1,c
  1860  007042  0E00               	movlw	0
  1861  007044  6E14               	movwf	?___ftdiv+2,c
  1862  007046  0012               	return	
  1863  007048                     l1344:
  1864  007048  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  1865  00704C  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1866  00704E  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1867  007050  3416               	rlcf	___ftdiv@f2+1,w,c
  1868  007052  3618               	rlcf	??___ftdiv& (0+255),f,c
  1869  007054  E301               	bnc	u891
  1870  007056  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1871  007058                     u891:
  1872  007058  5018               	movf	??___ftdiv,w,c
  1873  00705A  6E20               	movwf	___ftdiv@sign,c
  1874  00705C  5020               	movf	___ftdiv@sign,w,c
  1875  00705E  A4D8               	btfss	status,2,c
  1876  007060  D007               	goto	l1350
  1877  007062  0E00               	movlw	0
  1878  007064  6E12               	movwf	?___ftdiv,c
  1879  007066  0E00               	movlw	0
  1880  007068  6E13               	movwf	?___ftdiv+1,c
  1881  00706A  0E00               	movlw	0
  1882  00706C  6E14               	movwf	?___ftdiv+2,c
  1883  00706E  0012               	return	
  1884  007070                     l1350:
  1885  007070  0E00               	movlw	0
  1886  007072  6E1C               	movwf	___ftdiv@f3,c
  1887  007074  0E00               	movlw	0
  1888  007076  6E1D               	movwf	___ftdiv@f3+1,c
  1889  007078  0E00               	movlw	0
  1890  00707A  6E1E               	movwf	___ftdiv@f3+2,c
  1891  00707C  5020               	movf	___ftdiv@sign,w,c
  1892  00707E  0F89               	addlw	137
  1893  007080  5E1F               	subwf	___ftdiv@exp,f,c
  1894  007082  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  1895  007086  5017               	movf	___ftdiv@f2+2,w,c
  1896  007088  1A20               	xorwf	___ftdiv@sign,f,c
  1897  00708A  0E80               	movlw	128
  1898  00708C  1620               	andwf	___ftdiv@sign,f,c
  1899  00708E  8E13               	bsf	___ftdiv@f1+1,7,c
  1900  007090  0EFF               	movlw	255
  1901  007092  1612               	andwf	___ftdiv@f1,f,c
  1902  007094  0EFF               	movlw	255
  1903  007096  1613               	andwf	___ftdiv@f1+1,f,c
  1904  007098  0E00               	movlw	0
  1905  00709A  1614               	andwf	___ftdiv@f1+2,f,c
  1906  00709C  8E16               	bsf	___ftdiv@f2+1,7,c
  1907  00709E  0EFF               	movlw	255
  1908  0070A0  1615               	andwf	___ftdiv@f2,f,c
  1909  0070A2  0EFF               	movlw	255
  1910  0070A4  1616               	andwf	___ftdiv@f2+1,f,c
  1911  0070A6  0E00               	movlw	0
  1912  0070A8  1617               	andwf	___ftdiv@f2+2,f,c
  1913  0070AA  0E18               	movlw	24
  1914  0070AC  6E1B               	movwf	___ftdiv@cntr,c
  1915  0070AE                     l1370:
  1916  0070AE  90D8               	bcf	status,0,c
  1917  0070B0  361C               	rlcf	___ftdiv@f3,f,c
  1918  0070B2  361D               	rlcf	___ftdiv@f3+1,f,c
  1919  0070B4  361E               	rlcf	___ftdiv@f3+2,f,c
  1920  0070B6  5015               	movf	___ftdiv@f2,w,c
  1921  0070B8  5C12               	subwf	___ftdiv@f1,w,c
  1922  0070BA  5016               	movf	___ftdiv@f2+1,w,c
  1923  0070BC  5813               	subwfb	___ftdiv@f1+1,w,c
  1924  0070BE  5017               	movf	___ftdiv@f2+2,w,c
  1925  0070C0  5814               	subwfb	___ftdiv@f1+2,w,c
  1926  0070C2  A0D8               	btfss	status,0,c
  1927  0070C4  D007               	goto	l413
  1928  0070C6  5015               	movf	___ftdiv@f2,w,c
  1929  0070C8  5E12               	subwf	___ftdiv@f1,f,c
  1930  0070CA  5016               	movf	___ftdiv@f2+1,w,c
  1931  0070CC  5A13               	subwfb	___ftdiv@f1+1,f,c
  1932  0070CE  5017               	movf	___ftdiv@f2+2,w,c
  1933  0070D0  5A14               	subwfb	___ftdiv@f1+2,f,c
  1934  0070D2  801C               	bsf	___ftdiv@f3,0,c
  1935  0070D4                     l413:
  1936  0070D4  90D8               	bcf	status,0,c
  1937  0070D6  3612               	rlcf	___ftdiv@f1,f,c
  1938  0070D8  3613               	rlcf	___ftdiv@f1+1,f,c
  1939  0070DA  3614               	rlcf	___ftdiv@f1+2,f,c
  1940  0070DC  2E1B               	decfsz	___ftdiv@cntr,f,c
  1941  0070DE  D7E7               	goto	l1370
  1942  0070E0  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  1943  0070E4  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1944  0070E8  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1945  0070EC  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  1946  0070F0  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  1947  0070F4  EC4F  F037         	call	___ftpack	;wreg free
  1948  0070F8  C001  F012         	movff	?___ftpack,?___ftdiv
  1949  0070FC  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  1950  007100  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  1951  007104  0012               	return	
  1952  007106                     __end_of___ftdiv:
  1953                           	opt stack 0
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1l	equ	0xFE1
  1962                           indf2	equ	0xFDF
  1963                           postinc2	equ	0xFDE
  1964                           postdec2	equ	0xFDD
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _PID_SetOutputLimits *****************
  1970 ;; Defined at:
  1971 ;;		line 126 in file "pid.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  pid             2   12[COMRAM] PTR struct .
  1974 ;;		 -> main@PID(45), 
  1975 ;;  Min             3   14[COMRAM] float 
  1976 ;;  Max             3   17[COMRAM] float 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         8       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        8 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    1
  1995 ;; This function calls:
  1996 ;;		___ftge
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;;		_PID_init
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text8
  2004  0076A8                     __ptext8:
  2005                           	opt stack 0
  2006  0076A8                     _PID_SetOutputLimits:
  2007                           	opt stack 28
  2008                           
  2009                           ;pid.c: 127: if (Min >= Max) {
  2010                           
  2011                           ;incstack = 0
  2012  0076A8  C00F  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  2013  0076AC  C010  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  2014  0076B0  C011  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  2015  0076B4  C012  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  2016  0076B8  C013  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  2017  0076BC  C014  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  2018  0076C0  EC07  F037         	call	___ftge	;wreg free
  2019  0076C4  B0D8               	btfsc	status,0,c
  2020  0076C6  0012               	return	
  2021                           
  2022                           ;pid.c: 129: }
  2023                           ;pid.c: 130: pid->outMin = Min;
  2024                           
  2025                           ;pid.c: 128: return;
  2026  0076C8  EE20 F026          	lfsr	2,38
  2027  0076CC  500D               	movf	PID_SetOutputLimits@pid,w,c
  2028  0076CE  26D9               	addwf	fsr2l,f,c
  2029  0076D0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2030  0076D2  22DA               	addwfc	fsr2h,f,c
  2031  0076D4  C00F  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  2032  0076D8  C010  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  2033  0076DC  C011  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  2034                           
  2035                           ;pid.c: 131: pid->outMax = Max;
  2036  0076E0  EE20 F029          	lfsr	2,41
  2037  0076E4  500D               	movf	PID_SetOutputLimits@pid,w,c
  2038  0076E6  26D9               	addwf	fsr2l,f,c
  2039  0076E8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2040  0076EA  22DA               	addwfc	fsr2h,f,c
  2041  0076EC  C012  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  2042  0076F0  C013  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  2043  0076F4  C014  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  2044                           
  2045                           ;pid.c: 133: if (pid->inAuto) {
  2046  0076F8  EE20 F02C          	lfsr	2,44
  2047  0076FC  500D               	movf	PID_SetOutputLimits@pid,w,c
  2048  0076FE  26D9               	addwf	fsr2l,f,c
  2049  007700  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2050  007702  22DA               	addwfc	fsr2h,f,c
  2051  007704  50DF               	movf	indf2,w,c
  2052  007706  B4D8               	btfsc	status,2,c
  2053  007708  0012               	return	
  2054                           
  2055                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  2056  00770A  EE20 F029          	lfsr	2,41
  2057  00770E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2058  007710  26D9               	addwf	fsr2l,f,c
  2059  007712  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2060  007714  22DA               	addwfc	fsr2h,f,c
  2061  007716  CFDE F001          	movff	postinc2,___ftge@ff1
  2062  00771A  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2063  00771E  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2064  007722  EE20 F016          	lfsr	2,22
  2065  007726  500D               	movf	PID_SetOutputLimits@pid,w,c
  2066  007728  26D9               	addwf	fsr2l,f,c
  2067  00772A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2068  00772C  22DA               	addwfc	fsr2h,f,c
  2069  00772E  CFDE F004          	movff	postinc2,___ftge@ff2
  2070  007732  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2071  007736  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2072  00773A  EC07  F037         	call	___ftge	;wreg free
  2073  00773E  B0D8               	btfsc	status,0,c
  2074  007740  D003               	goto	l1474
  2075                           
  2076                           ;pid.c: 135: pid->myOutput = pid->outMax;
  2077  007742  EE20 F029          	lfsr	2,41
  2078  007746  D01E               	goto	L1
  2079  007748                     l1474:
  2080  007748  EE20 F016          	lfsr	2,22
  2081  00774C  500D               	movf	PID_SetOutputLimits@pid,w,c
  2082  00774E  26D9               	addwf	fsr2l,f,c
  2083  007750  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2084  007752  22DA               	addwfc	fsr2h,f,c
  2085  007754  CFDE F001          	movff	postinc2,___ftge@ff1
  2086  007758  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2087  00775C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2088  007760  EE20 F026          	lfsr	2,38
  2089  007764  500D               	movf	PID_SetOutputLimits@pid,w,c
  2090  007766  26D9               	addwf	fsr2l,f,c
  2091  007768  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2092  00776A  22DA               	addwfc	fsr2h,f,c
  2093  00776C  CFDE F004          	movff	postinc2,___ftge@ff2
  2094  007770  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2095  007774  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2096  007778  EC07  F037         	call	___ftge	;wreg free
  2097  00777C  B0D8               	btfsc	status,0,c
  2098  00777E  D012               	goto	l1478
  2099                           
  2100                           ;pid.c: 137: pid->myOutput = pid->outMin;
  2101  007780  EE20 F026          	lfsr	2,38
  2102  007784                     L1:
  2103  007784  500D               	movf	PID_SetOutputLimits@pid,w,c
  2104  007786  26D9               	addwf	fsr2l,f,c
  2105  007788  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2106  00778A  22DA               	addwfc	fsr2h,f,c
  2107  00778C  EE10 F016          	lfsr	1,22
  2108  007790  500D               	movf	PID_SetOutputLimits@pid,w,c
  2109  007792  26E1               	addwf	fsr1l,f,c
  2110  007794  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2111  007796  22E2               	addwfc	fsr1h,f,c
  2112  007798  CFDE FFE6          	movff	postinc2,postinc1
  2113  00779C  CFDE FFE6          	movff	postinc2,postinc1
  2114  0077A0  CFDE FFE6          	movff	postinc2,postinc1
  2115  0077A4                     l1478:
  2116                           
  2117                           ;pid.c: 138: }
  2118                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  2119  0077A4  EE20 F029          	lfsr	2,41
  2120  0077A8  500D               	movf	PID_SetOutputLimits@pid,w,c
  2121  0077AA  26D9               	addwf	fsr2l,f,c
  2122  0077AC  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2123  0077AE  22DA               	addwfc	fsr2h,f,c
  2124  0077B0  CFDE F001          	movff	postinc2,___ftge@ff1
  2125  0077B4  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2126  0077B8  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2127  0077BC  EE20 F01C          	lfsr	2,28
  2128  0077C0  500D               	movf	PID_SetOutputLimits@pid,w,c
  2129  0077C2  26D9               	addwf	fsr2l,f,c
  2130  0077C4  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2131  0077C6  22DA               	addwfc	fsr2h,f,c
  2132  0077C8  CFDE F004          	movff	postinc2,___ftge@ff2
  2133  0077CC  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2134  0077D0  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2135  0077D4  EC07  F037         	call	___ftge	;wreg free
  2136  0077D8  B0D8               	btfsc	status,0,c
  2137  0077DA  D013               	goto	l1482
  2138                           
  2139                           ;pid.c: 141: pid->ITerm = pid->outMax;
  2140  0077DC  EE20 F029          	lfsr	2,41
  2141  0077E0  500D               	movf	PID_SetOutputLimits@pid,w,c
  2142  0077E2  26D9               	addwf	fsr2l,f,c
  2143  0077E4  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2144  0077E6  22DA               	addwfc	fsr2h,f,c
  2145  0077E8  EE10 F01C          	lfsr	1,28
  2146  0077EC  500D               	movf	PID_SetOutputLimits@pid,w,c
  2147  0077EE  26E1               	addwf	fsr1l,f,c
  2148  0077F0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2149  0077F2  22E2               	addwfc	fsr1h,f,c
  2150  0077F4  CFDE FFE6          	movff	postinc2,postinc1
  2151  0077F8  CFDE FFE6          	movff	postinc2,postinc1
  2152  0077FC  CFDE FFE6          	movff	postinc2,postinc1
  2153                           
  2154                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  2155  007800  0012               	return	
  2156  007802                     l1482:
  2157  007802  EE20 F01C          	lfsr	2,28
  2158  007806  500D               	movf	PID_SetOutputLimits@pid,w,c
  2159  007808  26D9               	addwf	fsr2l,f,c
  2160  00780A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2161  00780C  22DA               	addwfc	fsr2h,f,c
  2162  00780E  CFDE F001          	movff	postinc2,___ftge@ff1
  2163  007812  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2164  007816  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2165  00781A  EE20 F026          	lfsr	2,38
  2166  00781E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2167  007820  26D9               	addwf	fsr2l,f,c
  2168  007822  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2169  007824  22DA               	addwfc	fsr2h,f,c
  2170  007826  CFDE F004          	movff	postinc2,___ftge@ff2
  2171  00782A  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2172  00782E  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2173  007832  EC07  F037         	call	___ftge	;wreg free
  2174  007836  B0D8               	btfsc	status,0,c
  2175  007838  0012               	return	
  2176                           
  2177                           ;pid.c: 143: pid->ITerm = pid->outMin;
  2178  00783A  EE20 F026          	lfsr	2,38
  2179  00783E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2180  007840  26D9               	addwf	fsr2l,f,c
  2181  007842  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2182  007844  22DA               	addwfc	fsr2h,f,c
  2183  007846  EE10 F01C          	lfsr	1,28
  2184  00784A  500D               	movf	PID_SetOutputLimits@pid,w,c
  2185  00784C  26E1               	addwf	fsr1l,f,c
  2186  00784E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2187  007850  22E2               	addwfc	fsr1h,f,c
  2188  007852  CFDE FFE6          	movff	postinc2,postinc1
  2189  007856  CFDE FFE6          	movff	postinc2,postinc1
  2190  00785A  CFDE FFE6          	movff	postinc2,postinc1
  2191  00785E  0012               	return	
  2192  007860                     __end_of_PID_SetOutputLimits:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           postinc1	equ	0xFE6
  2201                           postdec1	equ	0xFE5
  2202                           fsr1h	equ	0xFE2
  2203                           fsr1l	equ	0xFE1
  2204                           indf2	equ	0xFDF
  2205                           postinc2	equ	0xFDE
  2206                           postdec2	equ	0xFDD
  2207                           fsr2h	equ	0xFDA
  2208                           fsr2l	equ	0xFD9
  2209                           status	equ	0xFD8
  2210                           
  2211 ;; *************** function _PID_SetControllerDirection *****************
  2212 ;; Defined at:
  2213 ;;		line 183 in file "pid.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  pid             2   38[COMRAM] PTR struct .
  2216 ;;		 -> main@PID(45), 
  2217 ;;  Direction       1   40[COMRAM] enum E7
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2229 ;;      Params:         3       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        4 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    1
  2236 ;; This function calls:
  2237 ;;		___ftneg
  2238 ;; This function is called by:
  2239 ;;		_PID_init
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text9
  2244  006F4C                     __ptext9:
  2245                           	opt stack 0
  2246  006F4C                     _PID_SetControllerDirection:
  2247                           	opt stack 28
  2248                           
  2249                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  2250                           
  2251                           ;incstack = 0
  2252  006F4C  EE20 F02C          	lfsr	2,44
  2253  006F50  5027               	movf	PID_SetControllerDirection@pid,w,c
  2254  006F52  26D9               	addwf	fsr2l,f,c
  2255  006F54  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2256  006F56  22DA               	addwfc	fsr2h,f,c
  2257  006F58  50DF               	movf	indf2,w,c
  2258  006F5A  B4D8               	btfsc	status,2,c
  2259  006F5C  D058               	goto	l1492
  2260  006F5E  EE20 F012          	lfsr	2,18
  2261  006F62  5027               	movf	PID_SetControllerDirection@pid,w,c
  2262  006F64  26D9               	addwf	fsr2l,f,c
  2263  006F66  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2264  006F68  22DA               	addwfc	fsr2h,f,c
  2265  006F6A  5029               	movf	PID_SetControllerDirection@Direction,w,c
  2266  006F6C  18DE               	xorwf	postinc2,w,c
  2267  006F6E  B4D8               	btfsc	status,2,c
  2268  006F70  D04E               	goto	l1492
  2269                           
  2270                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  2271  006F72  EE20 F009          	lfsr	2,9
  2272  006F76  5027               	movf	PID_SetControllerDirection@pid,w,c
  2273  006F78  26D9               	addwf	fsr2l,f,c
  2274  006F7A  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2275  006F7C  22DA               	addwfc	fsr2h,f,c
  2276  006F7E  CFDE F024          	movff	postinc2,___ftneg@f1
  2277  006F82  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2278  006F86  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2279  006F8A  EC5E  F036         	call	___ftneg	;wreg free
  2280  006F8E  EE20 F009          	lfsr	2,9
  2281  006F92  5027               	movf	PID_SetControllerDirection@pid,w,c
  2282  006F94  26D9               	addwf	fsr2l,f,c
  2283  006F96  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2284  006F98  22DA               	addwfc	fsr2h,f,c
  2285  006F9A  C024  FFDE         	movff	?___ftneg,postinc2
  2286  006F9E  C025  FFDE         	movff	?___ftneg+1,postinc2
  2287  006FA2  C026  FFDE         	movff	?___ftneg+2,postinc2
  2288                           
  2289                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  2290  006FA6  EE20 F00C          	lfsr	2,12
  2291  006FAA  5027               	movf	PID_SetControllerDirection@pid,w,c
  2292  006FAC  26D9               	addwf	fsr2l,f,c
  2293  006FAE  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2294  006FB0  22DA               	addwfc	fsr2h,f,c
  2295  006FB2  CFDE F024          	movff	postinc2,___ftneg@f1
  2296  006FB6  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2297  006FBA  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2298  006FBE  EC5E  F036         	call	___ftneg	;wreg free
  2299  006FC2  EE20 F00C          	lfsr	2,12
  2300  006FC6  5027               	movf	PID_SetControllerDirection@pid,w,c
  2301  006FC8  26D9               	addwf	fsr2l,f,c
  2302  006FCA  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2303  006FCC  22DA               	addwfc	fsr2h,f,c
  2304  006FCE  C024  FFDE         	movff	?___ftneg,postinc2
  2305  006FD2  C025  FFDE         	movff	?___ftneg+1,postinc2
  2306  006FD6  C026  FFDE         	movff	?___ftneg+2,postinc2
  2307                           
  2308                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  2309  006FDA  EE20 F00F          	lfsr	2,15
  2310  006FDE  5027               	movf	PID_SetControllerDirection@pid,w,c
  2311  006FE0  26D9               	addwf	fsr2l,f,c
  2312  006FE2  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2313  006FE4  22DA               	addwfc	fsr2h,f,c
  2314  006FE6  CFDE F024          	movff	postinc2,___ftneg@f1
  2315  006FEA  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2316  006FEE  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2317  006FF2  EC5E  F036         	call	___ftneg	;wreg free
  2318  006FF6  EE20 F00F          	lfsr	2,15
  2319  006FFA  5027               	movf	PID_SetControllerDirection@pid,w,c
  2320  006FFC  26D9               	addwf	fsr2l,f,c
  2321  006FFE  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2322  007000  22DA               	addwfc	fsr2h,f,c
  2323  007002  C024  FFDE         	movff	?___ftneg,postinc2
  2324  007006  C025  FFDE         	movff	?___ftneg+1,postinc2
  2325  00700A  C026  FFDE         	movff	?___ftneg+2,postinc2
  2326  00700E                     l1492:
  2327                           
  2328                           ;pid.c: 188: }
  2329                           ;pid.c: 189: pid->controllerDirection = Direction;
  2330  00700E  EE20 F012          	lfsr	2,18
  2331  007012  5027               	movf	PID_SetControllerDirection@pid,w,c
  2332  007014  26D9               	addwf	fsr2l,f,c
  2333  007016  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2334  007018  22DA               	addwfc	fsr2h,f,c
  2335  00701A  C029  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  2336  00701E  0012               	return		;funcret
  2337  007020                     __end_of_PID_SetControllerDirection:
  2338                           	opt stack 0
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           postinc1	equ	0xFE6
  2346                           postdec1	equ	0xFE5
  2347                           fsr1h	equ	0xFE2
  2348                           fsr1l	equ	0xFE1
  2349                           indf2	equ	0xFDF
  2350                           postinc2	equ	0xFDE
  2351                           postdec2	equ	0xFDD
  2352                           fsr2h	equ	0xFDA
  2353                           fsr2l	equ	0xFD9
  2354                           status	equ	0xFD8
  2355                           
  2356 ;; *************** function _PID_SetMode *****************
  2357 ;; Defined at:
  2358 ;;		line 153 in file "pid.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  pid             2   11[COMRAM] PTR struct .
  2361 ;;		 -> main@PID(45), 
  2362 ;;  Mode            1   13[COMRAM] enum E3
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  newAuto         1   15[COMRAM] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2374 ;;      Params:         3       0       0       0       0       0       0       0       0
  2375 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2376 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2377 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2378 ;;Total ram usage:        5 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    2
  2381 ;; This function calls:
  2382 ;;		_PID_Initialize
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text10
  2389  006D72                     __ptext10:
  2390                           	opt stack 0
  2391  006D72                     _PID_SetMode:
  2392                           	opt stack 28
  2393                           
  2394                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  2395                           
  2396                           ;incstack = 0
  2397  006D72  040E               	decf	PID_SetMode@Mode,w,c
  2398  006D74  A4D8               	btfss	status,2,c
  2399  006D76  D002               	goto	u1380
  2400  006D78  0E01               	movlw	1
  2401  006D7A  D001               	goto	u1390
  2402  006D7C                     u1380:
  2403  006D7C  0E00               	movlw	0
  2404  006D7E                     u1390:
  2405  006D7E  6E10               	movwf	PID_SetMode@newAuto,c
  2406                           
  2407                           ;pid.c: 156: if(newAuto != pid->inAuto)
  2408  006D80  EE20 F02C          	lfsr	2,44
  2409  006D84  500C               	movf	PID_SetMode@pid,w,c
  2410  006D86  26D9               	addwf	fsr2l,f,c
  2411  006D88  500D               	movf	PID_SetMode@pid+1,w,c
  2412  006D8A  22DA               	addwfc	fsr2h,f,c
  2413  006D8C  5010               	movf	PID_SetMode@newAuto,w,c
  2414  006D8E  18DE               	xorwf	postinc2,w,c
  2415  006D90  B4D8               	btfsc	status,2,c
  2416  006D92  D006               	goto	l1614
  2417                           
  2418                           ;pid.c: 157: {
  2419                           ;pid.c: 158: PID_Initialize(pid);
  2420  006D94  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  2421  006D98  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  2422  006D9C  EC77  F039         	call	_PID_Initialize	;wreg free
  2423  006DA0                     l1614:
  2424                           
  2425                           ;pid.c: 159: }
  2426                           ;pid.c: 160: pid->inAuto = newAuto;
  2427  006DA0  EE20 F02C          	lfsr	2,44
  2428  006DA4  500C               	movf	PID_SetMode@pid,w,c
  2429  006DA6  26D9               	addwf	fsr2l,f,c
  2430  006DA8  500D               	movf	PID_SetMode@pid+1,w,c
  2431  006DAA  22DA               	addwfc	fsr2h,f,c
  2432  006DAC  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  2433  006DB0  0012               	return		;funcret
  2434  006DB2                     __end_of_PID_SetMode:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           postinc1	equ	0xFE6
  2443                           postdec1	equ	0xFE5
  2444                           fsr1h	equ	0xFE2
  2445                           fsr1l	equ	0xFE1
  2446                           indf2	equ	0xFDF
  2447                           postinc2	equ	0xFDE
  2448                           postdec2	equ	0xFDD
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _PID_Initialize *****************
  2454 ;; Defined at:
  2455 ;;		line 167 in file "pid.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  pid             2    9[COMRAM] PTR struct .
  2458 ;;		 -> main@PID(45), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2470 ;;      Params:         2       0       0       0       0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2473 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    1
  2477 ;; This function calls:
  2478 ;;		___ftge
  2479 ;; This function is called by:
  2480 ;;		_PID_SetMode
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text11
  2485  0072EE                     __ptext11:
  2486                           	opt stack 0
  2487  0072EE                     _PID_Initialize:
  2488                           	opt stack 28
  2489                           
  2490                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  2491                           
  2492                           ;incstack = 0
  2493  0072EE  EE20 F016          	lfsr	2,22
  2494  0072F2  500A               	movf	PID_Initialize@pid,w,c
  2495  0072F4  26D9               	addwf	fsr2l,f,c
  2496  0072F6  500B               	movf	PID_Initialize@pid+1,w,c
  2497  0072F8  22DA               	addwfc	fsr2h,f,c
  2498  0072FA  EE10 F01C          	lfsr	1,28
  2499  0072FE  500A               	movf	PID_Initialize@pid,w,c
  2500  007300  26E1               	addwf	fsr1l,f,c
  2501  007302  500B               	movf	PID_Initialize@pid+1,w,c
  2502  007304  22E2               	addwfc	fsr1h,f,c
  2503  007306  CFDE FFE6          	movff	postinc2,postinc1
  2504  00730A  CFDE FFE6          	movff	postinc2,postinc1
  2505  00730E  CFDE FFE6          	movff	postinc2,postinc1
  2506                           
  2507                           ;pid.c: 169: pid->lastInput = pid->myInput;
  2508  007312  EE20 F013          	lfsr	2,19
  2509  007316  500A               	movf	PID_Initialize@pid,w,c
  2510  007318  26D9               	addwf	fsr2l,f,c
  2511  00731A  500B               	movf	PID_Initialize@pid+1,w,c
  2512  00731C  22DA               	addwfc	fsr2h,f,c
  2513  00731E  EE10 F01F          	lfsr	1,31
  2514  007322  500A               	movf	PID_Initialize@pid,w,c
  2515  007324  26E1               	addwf	fsr1l,f,c
  2516  007326  500B               	movf	PID_Initialize@pid+1,w,c
  2517  007328  22E2               	addwfc	fsr1h,f,c
  2518  00732A  CFDE FFE6          	movff	postinc2,postinc1
  2519  00732E  CFDE FFE6          	movff	postinc2,postinc1
  2520  007332  CFDE FFE6          	movff	postinc2,postinc1
  2521                           
  2522                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  2523  007336  EE20 F029          	lfsr	2,41
  2524  00733A  500A               	movf	PID_Initialize@pid,w,c
  2525  00733C  26D9               	addwf	fsr2l,f,c
  2526  00733E  500B               	movf	PID_Initialize@pid+1,w,c
  2527  007340  22DA               	addwfc	fsr2h,f,c
  2528  007342  CFDE F001          	movff	postinc2,___ftge@ff1
  2529  007346  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2530  00734A  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2531  00734E  EE20 F01C          	lfsr	2,28
  2532  007352  500A               	movf	PID_Initialize@pid,w,c
  2533  007354  26D9               	addwf	fsr2l,f,c
  2534  007356  500B               	movf	PID_Initialize@pid+1,w,c
  2535  007358  22DA               	addwfc	fsr2h,f,c
  2536  00735A  CFDE F004          	movff	postinc2,___ftge@ff2
  2537  00735E  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2538  007362  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2539  007366  EC07  F037         	call	___ftge	;wreg free
  2540  00736A  B0D8               	btfsc	status,0,c
  2541  00736C  D013               	goto	l1524
  2542                           
  2543                           ;pid.c: 171: pid->ITerm = pid->outMax;
  2544  00736E  EE20 F029          	lfsr	2,41
  2545  007372  500A               	movf	PID_Initialize@pid,w,c
  2546  007374  26D9               	addwf	fsr2l,f,c
  2547  007376  500B               	movf	PID_Initialize@pid+1,w,c
  2548  007378  22DA               	addwfc	fsr2h,f,c
  2549  00737A  EE10 F01C          	lfsr	1,28
  2550  00737E  500A               	movf	PID_Initialize@pid,w,c
  2551  007380  26E1               	addwf	fsr1l,f,c
  2552  007382  500B               	movf	PID_Initialize@pid+1,w,c
  2553  007384  22E2               	addwfc	fsr1h,f,c
  2554  007386  CFDE FFE6          	movff	postinc2,postinc1
  2555  00738A  CFDE FFE6          	movff	postinc2,postinc1
  2556  00738E  CFDE FFE6          	movff	postinc2,postinc1
  2557                           
  2558                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  2559  007392  0012               	return	
  2560  007394                     l1524:
  2561  007394  EE20 F01C          	lfsr	2,28
  2562  007398  500A               	movf	PID_Initialize@pid,w,c
  2563  00739A  26D9               	addwf	fsr2l,f,c
  2564  00739C  500B               	movf	PID_Initialize@pid+1,w,c
  2565  00739E  22DA               	addwfc	fsr2h,f,c
  2566  0073A0  CFDE F001          	movff	postinc2,___ftge@ff1
  2567  0073A4  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2568  0073A8  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2569  0073AC  EE20 F026          	lfsr	2,38
  2570  0073B0  500A               	movf	PID_Initialize@pid,w,c
  2571  0073B2  26D9               	addwf	fsr2l,f,c
  2572  0073B4  500B               	movf	PID_Initialize@pid+1,w,c
  2573  0073B6  22DA               	addwfc	fsr2h,f,c
  2574  0073B8  CFDE F004          	movff	postinc2,___ftge@ff2
  2575  0073BC  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2576  0073C0  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2577  0073C4  EC07  F037         	call	___ftge	;wreg free
  2578  0073C8  B0D8               	btfsc	status,0,c
  2579  0073CA  0012               	return	
  2580                           
  2581                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2582  0073CC  EE20 F026          	lfsr	2,38
  2583  0073D0  500A               	movf	PID_Initialize@pid,w,c
  2584  0073D2  26D9               	addwf	fsr2l,f,c
  2585  0073D4  500B               	movf	PID_Initialize@pid+1,w,c
  2586  0073D6  22DA               	addwfc	fsr2h,f,c
  2587  0073D8  EE10 F01C          	lfsr	1,28
  2588  0073DC  500A               	movf	PID_Initialize@pid,w,c
  2589  0073DE  26E1               	addwf	fsr1l,f,c
  2590  0073E0  500B               	movf	PID_Initialize@pid+1,w,c
  2591  0073E2  22E2               	addwfc	fsr1h,f,c
  2592  0073E4  CFDE FFE6          	movff	postinc2,postinc1
  2593  0073E8  CFDE FFE6          	movff	postinc2,postinc1
  2594  0073EC  CFDE FFE6          	movff	postinc2,postinc1
  2595  0073F0  0012               	return	
  2596  0073F2                     __end_of_PID_Initialize:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           postinc1	equ	0xFE6
  2605                           postdec1	equ	0xFE5
  2606                           fsr1h	equ	0xFE2
  2607                           fsr1l	equ	0xFE1
  2608                           indf2	equ	0xFDF
  2609                           postinc2	equ	0xFDE
  2610                           postdec2	equ	0xFDD
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _PID_Compute *****************
  2616 ;; Defined at:
  2617 ;;		line 43 in file "pid.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  pid             2   38[COMRAM] PTR struct .
  2620 ;;		 -> main@PID(45), 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  output          3   52[COMRAM] float 
  2623 ;;  input           3   49[COMRAM] float 
  2624 ;;  error           3   46[COMRAM] float 
  2625 ;;  dInput          3   40[COMRAM] float 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2635 ;;      Params:         2       0       0       0       0       0       0       0       0
  2636 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2638 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2639 ;;Total ram usage:       17 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    2
  2642 ;; This function calls:
  2643 ;;		___ftadd
  2644 ;;		___ftge
  2645 ;;		___ftmul
  2646 ;;		___ftneg
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text12
  2653  007CE8                     __ptext12:
  2654                           	opt stack 0
  2655  007CE8                     _PID_Compute:
  2656                           	opt stack 28
  2657                           
  2658                           ;pid.c: 44: if (!pid->inAuto) {
  2659                           
  2660                           ;incstack = 0
  2661  007CE8  EE20 F02C          	lfsr	2,44
  2662  007CEC  5027               	movf	PID_Compute@pid,w,c
  2663  007CEE  26D9               	addwf	fsr2l,f,c
  2664  007CF0  5028               	movf	PID_Compute@pid+1,w,c
  2665  007CF2  22DA               	addwfc	fsr2h,f,c
  2666  007CF4  50DF               	movf	indf2,w,c
  2667  007CF6  B4D8               	btfsc	status,2,c
  2668  007CF8  0012               	return	
  2669                           
  2670                           ;pid.c: 46: }
  2671                           ;pid.c: 51: FloatType input = pid->myInput;
  2672                           
  2673                           ;pid.c: 45: return 0;
  2674                           ;	Return value of _PID_Compute is never used
  2675  007CFA  EE20 F013          	lfsr	2,19
  2676  007CFE  5027               	movf	PID_Compute@pid,w,c
  2677  007D00  26D9               	addwf	fsr2l,f,c
  2678  007D02  5028               	movf	PID_Compute@pid+1,w,c
  2679  007D04  22DA               	addwfc	fsr2h,f,c
  2680  007D06  CFDE F032          	movff	postinc2,PID_Compute@input
  2681  007D0A  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2682  007D0E  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2683                           
  2684                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2685  007D12  C032  F024         	movff	PID_Compute@input,___ftneg@f1
  2686  007D16  C033  F025         	movff	PID_Compute@input+1,___ftneg@f1+1
  2687  007D1A  C034  F026         	movff	PID_Compute@input+2,___ftneg@f1+2
  2688  007D1E  EC5E  F036         	call	___ftneg	;wreg free
  2689  007D22  C024  F018         	movff	?___ftneg,___ftadd@f1
  2690  007D26  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2691  007D2A  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2692  007D2E  EE20 F019          	lfsr	2,25
  2693  007D32  5027               	movf	PID_Compute@pid,w,c
  2694  007D34  26D9               	addwf	fsr2l,f,c
  2695  007D36  5028               	movf	PID_Compute@pid+1,w,c
  2696  007D38  22DA               	addwfc	fsr2h,f,c
  2697  007D3A  CFDE F01B          	movff	postinc2,___ftadd@f2
  2698  007D3E  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2699  007D42  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2700  007D46  EC7E  F03A         	call	___ftadd	;wreg free
  2701  007D4A  C018  F02F         	movff	?___ftadd,PID_Compute@error
  2702  007D4E  C019  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2703  007D52  C01A  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2704                           
  2705                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2706  007D56  EE20 F01C          	lfsr	2,28
  2707  007D5A  5027               	movf	PID_Compute@pid,w,c
  2708  007D5C  26D9               	addwf	fsr2l,f,c
  2709  007D5E  5028               	movf	PID_Compute@pid+1,w,c
  2710  007D60  22DA               	addwfc	fsr2h,f,c
  2711  007D62  CFDE F018          	movff	postinc2,___ftadd@f1
  2712  007D66  CFDE F019          	movff	postinc2,___ftadd@f1+1
  2713  007D6A  CFDD F01A          	movff	postdec2,___ftadd@f1+2
  2714  007D6E  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2715  007D72  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2716  007D76  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2717  007D7A  EE20 F00C          	lfsr	2,12
  2718  007D7E  5027               	movf	PID_Compute@pid,w,c
  2719  007D80  26D9               	addwf	fsr2l,f,c
  2720  007D82  5028               	movf	PID_Compute@pid+1,w,c
  2721  007D84  22DA               	addwfc	fsr2h,f,c
  2722  007D86  CFDE F009          	movff	postinc2,___ftmul@f1
  2723  007D8A  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2724  007D8E  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2725  007D92  EC83  F038         	call	___ftmul	;wreg free
  2726  007D96  C009  F01B         	movff	?___ftmul,___ftadd@f2
  2727  007D9A  C00A  F01C         	movff	?___ftmul+1,___ftadd@f2+1
  2728  007D9E  C00B  F01D         	movff	?___ftmul+2,___ftadd@f2+2
  2729  007DA2  EC7E  F03A         	call	___ftadd	;wreg free
  2730  007DA6  EE20 F01C          	lfsr	2,28
  2731  007DAA  5027               	movf	PID_Compute@pid,w,c
  2732  007DAC  26D9               	addwf	fsr2l,f,c
  2733  007DAE  5028               	movf	PID_Compute@pid+1,w,c
  2734  007DB0  22DA               	addwfc	fsr2h,f,c
  2735  007DB2  C018  FFDE         	movff	?___ftadd,postinc2
  2736  007DB6  C019  FFDE         	movff	?___ftadd+1,postinc2
  2737  007DBA  C01A  FFDE         	movff	?___ftadd+2,postinc2
  2738                           
  2739                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2740  007DBE  EE20 F029          	lfsr	2,41
  2741  007DC2  5027               	movf	PID_Compute@pid,w,c
  2742  007DC4  26D9               	addwf	fsr2l,f,c
  2743  007DC6  5028               	movf	PID_Compute@pid+1,w,c
  2744  007DC8  22DA               	addwfc	fsr2h,f,c
  2745  007DCA  CFDE F001          	movff	postinc2,___ftge@ff1
  2746  007DCE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2747  007DD2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2748  007DD6  EE20 F01C          	lfsr	2,28
  2749  007DDA  5027               	movf	PID_Compute@pid,w,c
  2750  007DDC  26D9               	addwf	fsr2l,f,c
  2751  007DDE  5028               	movf	PID_Compute@pid+1,w,c
  2752  007DE0  22DA               	addwfc	fsr2h,f,c
  2753  007DE2  CFDE F004          	movff	postinc2,___ftge@ff2
  2754  007DE6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2755  007DEA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2756  007DEE  EC07  F037         	call	___ftge	;wreg free
  2757  007DF2  B0D8               	btfsc	status,0,c
  2758  007DF4  D003               	goto	l1630
  2759                           
  2760                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2761  007DF6  EE20 F029          	lfsr	2,41
  2762  007DFA  D01E               	goto	L2
  2763  007DFC                     l1630:
  2764                           
  2765                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2766  007DFC  EE20 F01C          	lfsr	2,28
  2767  007E00  5027               	movf	PID_Compute@pid,w,c
  2768  007E02  26D9               	addwf	fsr2l,f,c
  2769  007E04  5028               	movf	PID_Compute@pid+1,w,c
  2770  007E06  22DA               	addwfc	fsr2h,f,c
  2771  007E08  CFDE F001          	movff	postinc2,___ftge@ff1
  2772  007E0C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2773  007E10  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2774  007E14  EE20 F026          	lfsr	2,38
  2775  007E18  5027               	movf	PID_Compute@pid,w,c
  2776  007E1A  26D9               	addwf	fsr2l,f,c
  2777  007E1C  5028               	movf	PID_Compute@pid+1,w,c
  2778  007E1E  22DA               	addwfc	fsr2h,f,c
  2779  007E20  CFDE F004          	movff	postinc2,___ftge@ff2
  2780  007E24  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2781  007E28  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2782  007E2C  EC07  F037         	call	___ftge	;wreg free
  2783  007E30  B0D8               	btfsc	status,0,c
  2784  007E32  D012               	goto	l1634
  2785                           
  2786                           ;pid.c: 57: pid->ITerm = pid->outMin;
  2787  007E34  EE20 F026          	lfsr	2,38
  2788  007E38                     L2:
  2789  007E38  5027               	movf	PID_Compute@pid,w,c
  2790  007E3A  26D9               	addwf	fsr2l,f,c
  2791  007E3C  5028               	movf	PID_Compute@pid+1,w,c
  2792  007E3E  22DA               	addwfc	fsr2h,f,c
  2793  007E40  EE10 F01C          	lfsr	1,28
  2794  007E44  5027               	movf	PID_Compute@pid,w,c
  2795  007E46  26E1               	addwf	fsr1l,f,c
  2796  007E48  5028               	movf	PID_Compute@pid+1,w,c
  2797  007E4A  22E2               	addwfc	fsr1h,f,c
  2798  007E4C  CFDE FFE6          	movff	postinc2,postinc1
  2799  007E50  CFDE FFE6          	movff	postinc2,postinc1
  2800  007E54  CFDE FFE6          	movff	postinc2,postinc1
  2801  007E58                     l1634:
  2802                           
  2803                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  2804  007E58  EE20 F01F          	lfsr	2,31
  2805  007E5C  5027               	movf	PID_Compute@pid,w,c
  2806  007E5E  26D9               	addwf	fsr2l,f,c
  2807  007E60  5028               	movf	PID_Compute@pid+1,w,c
  2808  007E62  22DA               	addwfc	fsr2h,f,c
  2809  007E64  CFDE F024          	movff	postinc2,___ftneg@f1
  2810  007E68  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2811  007E6C  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2812  007E70  EC5E  F036         	call	___ftneg	;wreg free
  2813  007E74  C024  F018         	movff	?___ftneg,___ftadd@f1
  2814  007E78  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2815  007E7C  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2816  007E80  C032  F01B         	movff	PID_Compute@input,___ftadd@f2
  2817  007E84  C033  F01C         	movff	PID_Compute@input+1,___ftadd@f2+1
  2818  007E88  C034  F01D         	movff	PID_Compute@input+2,___ftadd@f2+2
  2819  007E8C  EC7E  F03A         	call	___ftadd	;wreg free
  2820  007E90  C018  F029         	movff	?___ftadd,PID_Compute@dInput
  2821  007E94  C019  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  2822  007E98  C01A  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  2823                           
  2824                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2825  007E9C  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  2826  007EA0  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  2827  007EA4  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  2828  007EA8  EE20 F00F          	lfsr	2,15
  2829  007EAC  5027               	movf	PID_Compute@pid,w,c
  2830  007EAE  26D9               	addwf	fsr2l,f,c
  2831  007EB0  5028               	movf	PID_Compute@pid+1,w,c
  2832  007EB2  22DA               	addwfc	fsr2h,f,c
  2833  007EB4  CFDE F009          	movff	postinc2,___ftmul@f1
  2834  007EB8  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2835  007EBC  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2836  007EC0  EC83  F038         	call	___ftmul	;wreg free
  2837  007EC4  C009  F024         	movff	?___ftmul,___ftneg@f1
  2838  007EC8  C00A  F025         	movff	?___ftmul+1,___ftneg@f1+1
  2839  007ECC  C00B  F026         	movff	?___ftmul+2,___ftneg@f1+2
  2840  007ED0  EC5E  F036         	call	___ftneg	;wreg free
  2841  007ED4  C024  F01B         	movff	?___ftneg,___ftadd@f2
  2842  007ED8  C025  F01C         	movff	?___ftneg+1,___ftadd@f2+1
  2843  007EDC  C026  F01D         	movff	?___ftneg+2,___ftadd@f2+2
  2844  007EE0  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2845  007EE4  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2846  007EE8  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2847  007EEC  EE20 F009          	lfsr	2,9
  2848  007EF0  5027               	movf	PID_Compute@pid,w,c
  2849  007EF2  26D9               	addwf	fsr2l,f,c
  2850  007EF4  5028               	movf	PID_Compute@pid+1,w,c
  2851  007EF6  22DA               	addwfc	fsr2h,f,c
  2852  007EF8  CFDE F009          	movff	postinc2,___ftmul@f1
  2853  007EFC  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2854  007F00  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2855  007F04  EC83  F038         	call	___ftmul	;wreg free
  2856  007F08  C009  F018         	movff	?___ftmul,___ftadd@f1
  2857  007F0C  C00A  F019         	movff	?___ftmul+1,___ftadd@f1+1
  2858  007F10  C00B  F01A         	movff	?___ftmul+2,___ftadd@f1+2
  2859  007F14  EC7E  F03A         	call	___ftadd	;wreg free
  2860  007F18  C018  F02C         	movff	?___ftadd,_PID_Compute$1039
  2861  007F1C  C019  F02D         	movff	?___ftadd+1,_PID_Compute$1039+1
  2862  007F20  C01A  F02E         	movff	?___ftadd+2,_PID_Compute$1039+2
  2863                           
  2864                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2865  007F24  C02C  F018         	movff	_PID_Compute$1039,___ftadd@f1
  2866  007F28  C02D  F019         	movff	_PID_Compute$1039+1,___ftadd@f1+1
  2867  007F2C  C02E  F01A         	movff	_PID_Compute$1039+2,___ftadd@f1+2
  2868  007F30  EE20 F01C          	lfsr	2,28
  2869  007F34  5027               	movf	PID_Compute@pid,w,c
  2870  007F36  26D9               	addwf	fsr2l,f,c
  2871  007F38  5028               	movf	PID_Compute@pid+1,w,c
  2872  007F3A  22DA               	addwfc	fsr2h,f,c
  2873  007F3C  CFDE F01B          	movff	postinc2,___ftadd@f2
  2874  007F40  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2875  007F44  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2876  007F48  EC7E  F03A         	call	___ftadd	;wreg free
  2877  007F4C  C018  F035         	movff	?___ftadd,PID_Compute@output
  2878  007F50  C019  F036         	movff	?___ftadd+1,PID_Compute@output+1
  2879  007F54  C01A  F037         	movff	?___ftadd+2,PID_Compute@output+2
  2880                           
  2881                           ;pid.c: 63: if (output > pid->outMax)
  2882  007F58  EE20 F029          	lfsr	2,41
  2883  007F5C  5027               	movf	PID_Compute@pid,w,c
  2884  007F5E  26D9               	addwf	fsr2l,f,c
  2885  007F60  5028               	movf	PID_Compute@pid+1,w,c
  2886  007F62  22DA               	addwfc	fsr2h,f,c
  2887  007F64  CFDE F001          	movff	postinc2,___ftge@ff1
  2888  007F68  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2889  007F6C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2890  007F70  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  2891  007F74  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  2892  007F78  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  2893  007F7C  EC07  F037         	call	___ftge	;wreg free
  2894  007F80  B0D8               	btfsc	status,0,c
  2895  007F82  D003               	goto	l1644
  2896                           
  2897                           ;pid.c: 64: output = pid->outMax;
  2898  007F84  EE20 F029          	lfsr	2,41
  2899  007F88  D018               	goto	L3
  2900  007F8A                     l1644:
  2901                           
  2902                           ;pid.c: 65: else if (output < pid->outMin)
  2903  007F8A  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  2904  007F8E  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  2905  007F92  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  2906  007F96  EE20 F026          	lfsr	2,38
  2907  007F9A  5027               	movf	PID_Compute@pid,w,c
  2908  007F9C  26D9               	addwf	fsr2l,f,c
  2909  007F9E  5028               	movf	PID_Compute@pid+1,w,c
  2910  007FA0  22DA               	addwfc	fsr2h,f,c
  2911  007FA2  CFDE F004          	movff	postinc2,___ftge@ff2
  2912  007FA6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2913  007FAA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2914  007FAE  EC07  F037         	call	___ftge	;wreg free
  2915  007FB2  B0D8               	btfsc	status,0,c
  2916  007FB4  D00C               	goto	l78
  2917                           
  2918                           ;pid.c: 66: output = pid->outMin;
  2919  007FB6  EE20 F026          	lfsr	2,38
  2920  007FBA                     L3:
  2921  007FBA  5027               	movf	PID_Compute@pid,w,c
  2922  007FBC  26D9               	addwf	fsr2l,f,c
  2923  007FBE  5028               	movf	PID_Compute@pid+1,w,c
  2924  007FC0  22DA               	addwfc	fsr2h,f,c
  2925  007FC2  CFDE F035          	movff	postinc2,PID_Compute@output
  2926  007FC6  CFDE F036          	movff	postinc2,PID_Compute@output+1
  2927  007FCA  CFDD F037          	movff	postdec2,PID_Compute@output+2
  2928  007FCE                     l78:
  2929                           
  2930                           ;pid.c: 67: pid->myOutput = output;
  2931  007FCE  EE20 F016          	lfsr	2,22
  2932  007FD2  5027               	movf	PID_Compute@pid,w,c
  2933  007FD4  26D9               	addwf	fsr2l,f,c
  2934  007FD6  5028               	movf	PID_Compute@pid+1,w,c
  2935  007FD8  22DA               	addwfc	fsr2h,f,c
  2936  007FDA  C035  FFDE         	movff	PID_Compute@output,postinc2
  2937  007FDE  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  2938  007FE2  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  2939                           
  2940                           ;pid.c: 70: pid->lastInput = input;
  2941  007FE6  EE20 F01F          	lfsr	2,31
  2942  007FEA  5027               	movf	PID_Compute@pid,w,c
  2943  007FEC  26D9               	addwf	fsr2l,f,c
  2944  007FEE  5028               	movf	PID_Compute@pid+1,w,c
  2945  007FF0  22DA               	addwfc	fsr2h,f,c
  2946  007FF2  C032  FFDE         	movff	PID_Compute@input,postinc2
  2947  007FF6  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  2948  007FFA  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  2949  007FFE  0012               	return	
  2950  008000                     __end_of_PID_Compute:
  2951                           	opt stack 0
  2952                           tblptru	equ	0xFF8
  2953                           tblptrh	equ	0xFF7
  2954                           tblptrl	equ	0xFF6
  2955                           tablat	equ	0xFF5
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           postinc1	equ	0xFE6
  2959                           postdec1	equ	0xFE5
  2960                           fsr1h	equ	0xFE2
  2961                           fsr1l	equ	0xFE1
  2962                           indf2	equ	0xFDF
  2963                           postinc2	equ	0xFDE
  2964                           postdec2	equ	0xFDD
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function ___ftneg *****************
  2970 ;; Defined at:
  2971 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  f1              3   35[COMRAM] float 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  3   35[COMRAM] float 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2985 ;;      Params:         3       0       0       0       0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2988 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2989 ;;Total ram usage:        3 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;;		_PID_Compute
  2996 ;;		_PID_SetTunings
  2997 ;;		_PID_SetControllerDirection
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text13
  3002  006CBC                     __ptext13:
  3003                           	opt stack 0
  3004  006CBC                     ___ftneg:
  3005                           	opt stack 30
  3006                           
  3007                           ;incstack = 0
  3008  006CBC  5024               	movf	___ftneg@f1,w,c
  3009  006CBE  1025               	iorwf	___ftneg@f1+1,w,c
  3010  006CC0  1026               	iorwf	___ftneg@f1+2,w,c
  3011  006CC2  B4D8               	btfsc	status,2,c
  3012  006CC4  D006               	goto	l435
  3013  006CC6  0E00               	movlw	0
  3014  006CC8  1A24               	xorwf	___ftneg@f1,f,c
  3015  006CCA  0E00               	movlw	0
  3016  006CCC  1A25               	xorwf	___ftneg@f1+1,f,c
  3017  006CCE  0E80               	movlw	128
  3018  006CD0  1A26               	xorwf	___ftneg@f1+2,f,c
  3019  006CD2                     l435:
  3020  006CD2  C024  F024         	movff	___ftneg@f1,?___ftneg
  3021  006CD6  C025  F025         	movff	___ftneg@f1+1,?___ftneg+1
  3022  006CDA  C026  F026         	movff	___ftneg@f1+2,?___ftneg+2
  3023  006CDE  0012               	return		;funcret
  3024  006CE0                     __end_of___ftneg:
  3025                           	opt stack 0
  3026                           tblptru	equ	0xFF8
  3027                           tblptrh	equ	0xFF7
  3028                           tblptrl	equ	0xFF6
  3029                           tablat	equ	0xFF5
  3030                           postinc0	equ	0xFEE
  3031                           wreg	equ	0xFE8
  3032                           postinc1	equ	0xFE6
  3033                           postdec1	equ	0xFE5
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           indf2	equ	0xFDF
  3037                           postinc2	equ	0xFDE
  3038                           postdec2	equ	0xFDD
  3039                           fsr2h	equ	0xFDA
  3040                           fsr2l	equ	0xFD9
  3041                           status	equ	0xFD8
  3042                           
  3043 ;; *************** function ___ftmul *****************
  3044 ;; Defined at:
  3045 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  f1              3    8[COMRAM] float 
  3048 ;;  f2              3   11[COMRAM] float 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  3051 ;;  sign            1   22[COMRAM] unsigned char 
  3052 ;;  cntr            1   21[COMRAM] unsigned char 
  3053 ;;  exp             1   17[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  3    8[COMRAM] float 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3063 ;;      Params:         6       0       0       0       0       0       0       0       0
  3064 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3065 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3066 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3067 ;;Total ram usage:       15 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    1
  3070 ;; This function calls:
  3071 ;;		___ftpack
  3072 ;; This function is called by:
  3073 ;;		_PID_Compute
  3074 ;;		_PID_SetTunings
  3075 ;;		_PID_SetSampleTime
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text14
  3080  007106                     __ptext14:
  3081                           	opt stack 0
  3082  007106                     ___ftmul:
  3083                           	opt stack 27
  3084                           
  3085                           ;incstack = 0
  3086  007106  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  3087  00710A  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3088  00710C  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3089  00710E  340A               	rlcf	___ftmul@f1+1,w,c
  3090  007110  360F               	rlcf	??___ftmul& (0+255),f,c
  3091  007112  E301               	bnc	u921
  3092  007114  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3093  007116                     u921:
  3094  007116  500F               	movf	??___ftmul,w,c
  3095  007118  6E12               	movwf	___ftmul@exp,c
  3096  00711A  5012               	movf	___ftmul@exp,w,c
  3097  00711C  A4D8               	btfss	status,2,c
  3098  00711E  D007               	goto	l1390
  3099  007120  0E00               	movlw	0
  3100  007122  6E09               	movwf	?___ftmul,c
  3101  007124  0E00               	movlw	0
  3102  007126  6E0A               	movwf	?___ftmul+1,c
  3103  007128  0E00               	movlw	0
  3104  00712A  6E0B               	movwf	?___ftmul+2,c
  3105  00712C  0012               	return	
  3106  00712E                     l1390:
  3107  00712E  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  3108  007132  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3109  007134  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3110  007136  340D               	rlcf	___ftmul@f2+1,w,c
  3111  007138  360F               	rlcf	??___ftmul& (0+255),f,c
  3112  00713A  E301               	bnc	u941
  3113  00713C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3114  00713E                     u941:
  3115  00713E  500F               	movf	??___ftmul,w,c
  3116  007140  6E17               	movwf	___ftmul@sign,c
  3117  007142  5017               	movf	___ftmul@sign,w,c
  3118  007144  A4D8               	btfss	status,2,c
  3119  007146  D007               	goto	l1396
  3120  007148  0E00               	movlw	0
  3121  00714A  6E09               	movwf	?___ftmul,c
  3122  00714C  0E00               	movlw	0
  3123  00714E  6E0A               	movwf	?___ftmul+1,c
  3124  007150  0E00               	movlw	0
  3125  007152  6E0B               	movwf	?___ftmul+2,c
  3126  007154  0012               	return	
  3127  007156                     l1396:
  3128  007156  5017               	movf	___ftmul@sign,w,c
  3129  007158  0F7B               	addlw	123
  3130  00715A  2612               	addwf	___ftmul@exp,f,c
  3131  00715C  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  3132  007160  500E               	movf	___ftmul@f2+2,w,c
  3133  007162  1A17               	xorwf	___ftmul@sign,f,c
  3134  007164  0E80               	movlw	128
  3135  007166  1617               	andwf	___ftmul@sign,f,c
  3136  007168  8E0A               	bsf	___ftmul@f1+1,7,c
  3137  00716A  8E0D               	bsf	___ftmul@f2+1,7,c
  3138  00716C  0EFF               	movlw	255
  3139  00716E  160C               	andwf	___ftmul@f2,f,c
  3140  007170  0EFF               	movlw	255
  3141  007172  160D               	andwf	___ftmul@f2+1,f,c
  3142  007174  0E00               	movlw	0
  3143  007176  160E               	andwf	___ftmul@f2+2,f,c
  3144  007178  0E00               	movlw	0
  3145  00717A  6E13               	movwf	___ftmul@f3_as_product,c
  3146  00717C  0E00               	movlw	0
  3147  00717E  6E14               	movwf	___ftmul@f3_as_product+1,c
  3148  007180  0E00               	movlw	0
  3149  007182  6E15               	movwf	___ftmul@f3_as_product+2,c
  3150  007184  0E07               	movlw	7
  3151  007186  6E16               	movwf	___ftmul@cntr,c
  3152  007188                     l1410:
  3153  007188  A009               	btfss	___ftmul@f1,0,c
  3154  00718A  D006               	goto	l1414
  3155  00718C  500C               	movf	___ftmul@f2,w,c
  3156  00718E  2613               	addwf	___ftmul@f3_as_product,f,c
  3157  007190  500D               	movf	___ftmul@f2+1,w,c
  3158  007192  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3159  007194  500E               	movf	___ftmul@f2+2,w,c
  3160  007196  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3161  007198                     l1414:
  3162  007198  90D8               	bcf	status,0,c
  3163  00719A  320B               	rrcf	___ftmul@f1+2,f,c
  3164  00719C  320A               	rrcf	___ftmul@f1+1,f,c
  3165  00719E  3209               	rrcf	___ftmul@f1,f,c
  3166  0071A0  90D8               	bcf	status,0,c
  3167  0071A2  360C               	rlcf	___ftmul@f2,f,c
  3168  0071A4  360D               	rlcf	___ftmul@f2+1,f,c
  3169  0071A6  360E               	rlcf	___ftmul@f2+2,f,c
  3170  0071A8  2E16               	decfsz	___ftmul@cntr,f,c
  3171  0071AA  D7EE               	goto	l1410
  3172  0071AC  0E09               	movlw	9
  3173  0071AE  6E16               	movwf	___ftmul@cntr,c
  3174  0071B0                     l1420:
  3175  0071B0  A009               	btfss	___ftmul@f1,0,c
  3176  0071B2  D006               	goto	l1424
  3177  0071B4  500C               	movf	___ftmul@f2,w,c
  3178  0071B6  2613               	addwf	___ftmul@f3_as_product,f,c
  3179  0071B8  500D               	movf	___ftmul@f2+1,w,c
  3180  0071BA  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3181  0071BC  500E               	movf	___ftmul@f2+2,w,c
  3182  0071BE  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3183  0071C0                     l1424:
  3184  0071C0  90D8               	bcf	status,0,c
  3185  0071C2  320B               	rrcf	___ftmul@f1+2,f,c
  3186  0071C4  320A               	rrcf	___ftmul@f1+1,f,c
  3187  0071C6  3209               	rrcf	___ftmul@f1,f,c
  3188  0071C8  90D8               	bcf	status,0,c
  3189  0071CA  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  3190  0071CC  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  3191  0071CE  3213               	rrcf	___ftmul@f3_as_product,f,c
  3192  0071D0  2E16               	decfsz	___ftmul@cntr,f,c
  3193  0071D2  D7EE               	goto	l1420
  3194  0071D4  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3195  0071D8  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3196  0071DC  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3197  0071E0  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  3198  0071E4  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  3199  0071E8  EC4F  F037         	call	___ftpack	;wreg free
  3200  0071EC  C001  F009         	movff	?___ftpack,?___ftmul
  3201  0071F0  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  3202  0071F4  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  3203  0071F8  0012               	return	
  3204  0071FA                     __end_of___ftmul:
  3205                           	opt stack 0
  3206                           tblptru	equ	0xFF8
  3207                           tblptrh	equ	0xFF7
  3208                           tblptrl	equ	0xFF6
  3209                           tablat	equ	0xFF5
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           postinc1	equ	0xFE6
  3213                           postdec1	equ	0xFE5
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function ___ftge *****************
  3224 ;; Defined at:
  3225 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  ff1             3    0[COMRAM] float 
  3228 ;;  ff2             3    3[COMRAM] float 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3240 ;;      Params:         6       0       0       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3242 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3243 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3244 ;;Total ram usage:        9 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;;		_PID_Compute
  3251 ;;		_PID_SetOutputLimits
  3252 ;;		_PID_Initialize
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text15
  3257  006E0E                     __ptext15:
  3258                           	opt stack 0
  3259  006E0E                     ___ftge:
  3260                           	opt stack 30
  3261                           
  3262                           ;incstack = 0
  3263  006E0E  AE03               	btfss	___ftge@ff1+2,7,c
  3264  006E10  D016               	goto	l1436
  3265  006E12  C001  F007         	movff	___ftge@ff1,??___ftge
  3266  006E16  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3267  006E1A  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3268  006E1E  1E07               	comf	??___ftge,f,c
  3269  006E20  1E08               	comf	??___ftge+1,f,c
  3270  006E22  1E09               	comf	??___ftge+2,f,c
  3271  006E24  2A07               	incf	??___ftge,f,c
  3272  006E26  0E00               	movlw	0
  3273  006E28  2208               	addwfc	??___ftge+1,f,c
  3274  006E2A  2209               	addwfc	??___ftge+2,f,c
  3275  006E2C  0E00               	movlw	0
  3276  006E2E  2407               	addwf	??___ftge,w,c
  3277  006E30  6E01               	movwf	___ftge@ff1,c
  3278  006E32  0E00               	movlw	0
  3279  006E34  2008               	addwfc	??___ftge+1,w,c
  3280  006E36  6E02               	movwf	___ftge@ff1+1,c
  3281  006E38  0E80               	movlw	128
  3282  006E3A  2009               	addwfc	??___ftge+2,w,c
  3283  006E3C  6E03               	movwf	___ftge@ff1+2,c
  3284  006E3E                     l1436:
  3285  006E3E  AE06               	btfss	___ftge@ff2+2,7,c
  3286  006E40  D016               	goto	l1440
  3287  006E42  C004  F007         	movff	___ftge@ff2,??___ftge
  3288  006E46  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3289  006E4A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3290  006E4E  1E07               	comf	??___ftge,f,c
  3291  006E50  1E08               	comf	??___ftge+1,f,c
  3292  006E52  1E09               	comf	??___ftge+2,f,c
  3293  006E54  2A07               	incf	??___ftge,f,c
  3294  006E56  0E00               	movlw	0
  3295  006E58  2208               	addwfc	??___ftge+1,f,c
  3296  006E5A  2209               	addwfc	??___ftge+2,f,c
  3297  006E5C  0E00               	movlw	0
  3298  006E5E  2407               	addwf	??___ftge,w,c
  3299  006E60  6E04               	movwf	___ftge@ff2,c
  3300  006E62  0E00               	movlw	0
  3301  006E64  2008               	addwfc	??___ftge+1,w,c
  3302  006E66  6E05               	movwf	___ftge@ff2+1,c
  3303  006E68  0E80               	movlw	128
  3304  006E6A  2009               	addwfc	??___ftge+2,w,c
  3305  006E6C  6E06               	movwf	___ftge@ff2+2,c
  3306  006E6E                     l1440:
  3307  006E6E  0E00               	movlw	0
  3308  006E70  1A01               	xorwf	___ftge@ff1,f,c
  3309  006E72  0E00               	movlw	0
  3310  006E74  1A02               	xorwf	___ftge@ff1+1,f,c
  3311  006E76  0E80               	movlw	128
  3312  006E78  1A03               	xorwf	___ftge@ff1+2,f,c
  3313  006E7A  0E00               	movlw	0
  3314  006E7C  1A04               	xorwf	___ftge@ff2,f,c
  3315  006E7E  0E00               	movlw	0
  3316  006E80  1A05               	xorwf	___ftge@ff2+1,f,c
  3317  006E82  0E80               	movlw	128
  3318  006E84  1A06               	xorwf	___ftge@ff2+2,f,c
  3319  006E86  5004               	movf	___ftge@ff2,w,c
  3320  006E88  5C01               	subwf	___ftge@ff1,w,c
  3321  006E8A  5005               	movf	___ftge@ff2+1,w,c
  3322  006E8C  5802               	subwfb	___ftge@ff1+1,w,c
  3323  006E8E  5006               	movf	___ftge@ff2+2,w,c
  3324  006E90  5803               	subwfb	___ftge@ff1+2,w,c
  3325  006E92  B0D8               	btfsc	status,0,c
  3326  006E94  D002               	goto	l1446
  3327  006E96  90D8               	bcf	status,0,c
  3328  006E98  0012               	return	
  3329  006E9A                     l1446:
  3330  006E9A  80D8               	bsf	status,0,c
  3331  006E9C  0012               	return	
  3332  006E9E                     __end_of___ftge:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           postinc0	equ	0xFEE
  3339                           wreg	equ	0xFE8
  3340                           postinc1	equ	0xFE6
  3341                           postdec1	equ	0xFE5
  3342                           fsr1h	equ	0xFE2
  3343                           fsr1l	equ	0xFE1
  3344                           indf2	equ	0xFDF
  3345                           postinc2	equ	0xFDE
  3346                           postdec2	equ	0xFDD
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function ___ftadd *****************
  3352 ;; Defined at:
  3353 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  f1              3   23[COMRAM] float 
  3356 ;;  f2              3   26[COMRAM] float 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  exp1            1   34[COMRAM] unsigned char 
  3359 ;;  exp2            1   33[COMRAM] unsigned char 
  3360 ;;  sign            1   32[COMRAM] unsigned char 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  3   23[COMRAM] float 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3370 ;;      Params:         6       0       0       0       0       0       0       0       0
  3371 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3372 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3373 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3374 ;;Total ram usage:       12 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    1
  3377 ;; This function calls:
  3378 ;;		___ftpack
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;;		_PID_Compute
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text16
  3386  0074FC                     __ptext16:
  3387                           	opt stack 0
  3388  0074FC                     ___ftadd:
  3389                           	opt stack 29
  3390                           
  3391                           ;incstack = 0
  3392  0074FC  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  3393  007500  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3394  007502  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3395  007504  3419               	rlcf	___ftadd@f1+1,w,c
  3396  007506  361E               	rlcf	??___ftadd& (0+255),f,c
  3397  007508  E301               	bnc	u1171
  3398  00750A  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3399  00750C                     u1171:
  3400  00750C  501E               	movf	??___ftadd,w,c
  3401  00750E  6E23               	movwf	___ftadd@exp1,c
  3402  007510  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  3403  007514  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3404  007516  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3405  007518  341C               	rlcf	___ftadd@f2+1,w,c
  3406  00751A  361E               	rlcf	??___ftadd& (0+255),f,c
  3407  00751C  E301               	bnc	u1181
  3408  00751E  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3409  007520                     u1181:
  3410  007520  501E               	movf	??___ftadd,w,c
  3411  007522  6E22               	movwf	___ftadd@exp2,c
  3412  007524  5023               	movf	___ftadd@exp1,w,c
  3413  007526  B4D8               	btfsc	status,2,c
  3414  007528  D00B               	goto	l378
  3415  00752A  5022               	movf	___ftadd@exp2,w,c
  3416  00752C  5C23               	subwf	___ftadd@exp1,w,c
  3417  00752E  B0D8               	btfsc	status,0,c
  3418  007530  D00E               	goto	l1536
  3419  007532  5023               	movf	___ftadd@exp1,w,c
  3420  007534  0800               	sublw	0
  3421  007536  2422               	addwf	___ftadd@exp2,w,c
  3422  007538  6E1E               	movwf	??___ftadd& (0+255),c
  3423  00753A  0E18               	movlw	24
  3424  00753C  641E               	cpfsgt	??___ftadd,c
  3425  00753E  D007               	goto	l1536
  3426  007540                     l378:
  3427  007540  C01B  F018         	movff	___ftadd@f2,?___ftadd
  3428  007544  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  3429  007548  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  3430  00754C  0012               	return	
  3431  00754E                     l1536:
  3432  00754E  5022               	movf	___ftadd@exp2,w,c
  3433  007550  B4D8               	btfsc	status,2,c
  3434  007552  D00B               	goto	l382
  3435  007554  5023               	movf	___ftadd@exp1,w,c
  3436  007556  5C22               	subwf	___ftadd@exp2,w,c
  3437  007558  B0D8               	btfsc	status,0,c
  3438  00755A  D00E               	goto	l1542
  3439  00755C  5022               	movf	___ftadd@exp2,w,c
  3440  00755E  0800               	sublw	0
  3441  007560  2423               	addwf	___ftadd@exp1,w,c
  3442  007562  6E1E               	movwf	??___ftadd& (0+255),c
  3443  007564  0E18               	movlw	24
  3444  007566  641E               	cpfsgt	??___ftadd,c
  3445  007568  D007               	goto	l1542
  3446  00756A                     l382:
  3447  00756A  C018  F018         	movff	___ftadd@f1,?___ftadd
  3448  00756E  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  3449  007572  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  3450  007576  0012               	return	
  3451  007578                     l1542:
  3452  007578  0E06               	movlw	6
  3453  00757A  6E21               	movwf	___ftadd@sign,c
  3454  00757C  BE1A               	btfsc	___ftadd@f1+2,7,c
  3455  00757E  8E21               	bsf	___ftadd@sign,7,c
  3456  007580  BE1D               	btfsc	___ftadd@f2+2,7,c
  3457  007582  8C21               	bsf	___ftadd@sign,6,c
  3458  007584  8E19               	bsf	___ftadd@f1+1,7,c
  3459  007586  0EFF               	movlw	255
  3460  007588  1618               	andwf	___ftadd@f1,f,c
  3461  00758A  0EFF               	movlw	255
  3462  00758C  1619               	andwf	___ftadd@f1+1,f,c
  3463  00758E  0E00               	movlw	0
  3464  007590  161A               	andwf	___ftadd@f1+2,f,c
  3465  007592  8E1C               	bsf	___ftadd@f2+1,7,c
  3466  007594  0EFF               	movlw	255
  3467  007596  161B               	andwf	___ftadd@f2,f,c
  3468  007598  0EFF               	movlw	255
  3469  00759A  161C               	andwf	___ftadd@f2+1,f,c
  3470  00759C  0E00               	movlw	0
  3471  00759E  161D               	andwf	___ftadd@f2+2,f,c
  3472  0075A0  5022               	movf	___ftadd@exp2,w,c
  3473  0075A2  5C23               	subwf	___ftadd@exp1,w,c
  3474  0075A4  B0D8               	btfsc	status,0,c
  3475  0075A6  D01B               	goto	l1568
  3476  0075A8                     l1558:
  3477  0075A8  90D8               	bcf	status,0,c
  3478  0075AA  361B               	rlcf	___ftadd@f2,f,c
  3479  0075AC  361C               	rlcf	___ftadd@f2+1,f,c
  3480  0075AE  361D               	rlcf	___ftadd@f2+2,f,c
  3481  0075B0  0622               	decf	___ftadd@exp2,f,c
  3482  0075B2  5023               	movf	___ftadd@exp1,w,c
  3483  0075B4  1822               	xorwf	___ftadd@exp2,w,c
  3484  0075B6  B4D8               	btfsc	status,2,c
  3485  0075B8  D00D               	goto	l1566
  3486  0075BA  0621               	decf	___ftadd@sign,f,c
  3487  0075BC  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3488  0075C0  0E07               	movlw	7
  3489  0075C2  161E               	andwf	??___ftadd,f,c
  3490  0075C4  B4D8               	btfsc	status,2,c
  3491  0075C6  D006               	goto	l1566
  3492  0075C8  D7EF               	goto	l1558
  3493  0075CA                     l1564:
  3494  0075CA  90D8               	bcf	status,0,c
  3495  0075CC  321A               	rrcf	___ftadd@f1+2,f,c
  3496  0075CE  3219               	rrcf	___ftadd@f1+1,f,c
  3497  0075D0  3218               	rrcf	___ftadd@f1,f,c
  3498  0075D2  2A23               	incf	___ftadd@exp1,f,c
  3499  0075D4                     l1566:
  3500  0075D4  5022               	movf	___ftadd@exp2,w,c
  3501  0075D6  1823               	xorwf	___ftadd@exp1,w,c
  3502  0075D8  B4D8               	btfsc	status,2,c
  3503  0075DA  D01F               	goto	l393
  3504  0075DC  D7F6               	goto	l1564
  3505  0075DE                     l1568:
  3506  0075DE  5023               	movf	___ftadd@exp1,w,c
  3507  0075E0  5C22               	subwf	___ftadd@exp2,w,c
  3508  0075E2  B0D8               	btfsc	status,0,c
  3509  0075E4  D01A               	goto	l393
  3510  0075E6                     l1570:
  3511  0075E6  90D8               	bcf	status,0,c
  3512  0075E8  3618               	rlcf	___ftadd@f1,f,c
  3513  0075EA  3619               	rlcf	___ftadd@f1+1,f,c
  3514  0075EC  361A               	rlcf	___ftadd@f1+2,f,c
  3515  0075EE  0623               	decf	___ftadd@exp1,f,c
  3516  0075F0  5023               	movf	___ftadd@exp1,w,c
  3517  0075F2  1822               	xorwf	___ftadd@exp2,w,c
  3518  0075F4  B4D8               	btfsc	status,2,c
  3519  0075F6  D00D               	goto	l1578
  3520  0075F8  0621               	decf	___ftadd@sign,f,c
  3521  0075FA  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3522  0075FE  0E07               	movlw	7
  3523  007600  161E               	andwf	??___ftadd,f,c
  3524  007602  B4D8               	btfsc	status,2,c
  3525  007604  D006               	goto	l1578
  3526  007606  D7EF               	goto	l1570
  3527  007608                     l1576:
  3528  007608  90D8               	bcf	status,0,c
  3529  00760A  321D               	rrcf	___ftadd@f2+2,f,c
  3530  00760C  321C               	rrcf	___ftadd@f2+1,f,c
  3531  00760E  321B               	rrcf	___ftadd@f2,f,c
  3532  007610  2A22               	incf	___ftadd@exp2,f,c
  3533  007612                     l1578:
  3534  007612  5022               	movf	___ftadd@exp2,w,c
  3535  007614  1823               	xorwf	___ftadd@exp1,w,c
  3536  007616  A4D8               	btfss	status,2,c
  3537  007618  D7F7               	goto	l1576
  3538  00761A                     l393:
  3539  00761A  AE21               	btfss	___ftadd@sign,7,c
  3540  00761C  D00C               	goto	l402
  3541  00761E  0EFF               	movlw	255
  3542  007620  1A18               	xorwf	___ftadd@f1,f,c
  3543  007622  0EFF               	movlw	255
  3544  007624  1A19               	xorwf	___ftadd@f1+1,f,c
  3545  007626  0EFF               	movlw	255
  3546  007628  1A1A               	xorwf	___ftadd@f1+2,f,c
  3547  00762A  0E01               	movlw	1
  3548  00762C  2618               	addwf	___ftadd@f1,f,c
  3549  00762E  0E00               	movlw	0
  3550  007630  2219               	addwfc	___ftadd@f1+1,f,c
  3551  007632  0E00               	movlw	0
  3552  007634  221A               	addwfc	___ftadd@f1+2,f,c
  3553  007636                     l402:
  3554  007636  AC21               	btfss	___ftadd@sign,6,c
  3555  007638  D00C               	goto	l1584
  3556  00763A  0EFF               	movlw	255
  3557  00763C  1A1B               	xorwf	___ftadd@f2,f,c
  3558  00763E  0EFF               	movlw	255
  3559  007640  1A1C               	xorwf	___ftadd@f2+1,f,c
  3560  007642  0EFF               	movlw	255
  3561  007644  1A1D               	xorwf	___ftadd@f2+2,f,c
  3562  007646  0E01               	movlw	1
  3563  007648  261B               	addwf	___ftadd@f2,f,c
  3564  00764A  0E00               	movlw	0
  3565  00764C  221C               	addwfc	___ftadd@f2+1,f,c
  3566  00764E  0E00               	movlw	0
  3567  007650  221D               	addwfc	___ftadd@f2+2,f,c
  3568  007652                     l1584:
  3569  007652  0E00               	movlw	0
  3570  007654  6E21               	movwf	___ftadd@sign,c
  3571  007656  5018               	movf	___ftadd@f1,w,c
  3572  007658  261B               	addwf	___ftadd@f2,f,c
  3573  00765A  5019               	movf	___ftadd@f1+1,w,c
  3574  00765C  221C               	addwfc	___ftadd@f2+1,f,c
  3575  00765E  501A               	movf	___ftadd@f1+2,w,c
  3576  007660  221D               	addwfc	___ftadd@f2+2,f,c
  3577  007662  AE1D               	btfss	___ftadd@f2+2,7,c
  3578  007664  D00E               	goto	l1594
  3579  007666  0EFF               	movlw	255
  3580  007668  1A1B               	xorwf	___ftadd@f2,f,c
  3581  00766A  0EFF               	movlw	255
  3582  00766C  1A1C               	xorwf	___ftadd@f2+1,f,c
  3583  00766E  0EFF               	movlw	255
  3584  007670  1A1D               	xorwf	___ftadd@f2+2,f,c
  3585  007672  0E01               	movlw	1
  3586  007674  261B               	addwf	___ftadd@f2,f,c
  3587  007676  0E00               	movlw	0
  3588  007678  221C               	addwfc	___ftadd@f2+1,f,c
  3589  00767A  0E00               	movlw	0
  3590  00767C  221D               	addwfc	___ftadd@f2+2,f,c
  3591  00767E  0E01               	movlw	1
  3592  007680  6E21               	movwf	___ftadd@sign,c
  3593  007682                     l1594:
  3594  007682  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  3595  007686  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3596  00768A  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3597  00768E  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  3598  007692  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  3599  007696  EC4F  F037         	call	___ftpack	;wreg free
  3600  00769A  C001  F018         	movff	?___ftpack,?___ftadd
  3601  00769E  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  3602  0076A2  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  3603  0076A6  0012               	return	
  3604  0076A8                     __end_of___ftadd:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postinc1	equ	0xFE6
  3613                           postdec1	equ	0xFE5
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           postinc2	equ	0xFDE
  3618                           postdec2	equ	0xFDD
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function ___ftpack *****************
  3624 ;; Defined at:
  3625 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  arg             3    0[COMRAM] unsigned um
  3628 ;;  exp             1    3[COMRAM] unsigned char 
  3629 ;;  sign            1    4[COMRAM] unsigned char 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  3    0[COMRAM] float 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:         5       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        8 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		___awtoft
  3651 ;;		___ftadd
  3652 ;;		___ftdiv
  3653 ;;		___ftmul
  3654 ;;		___lbtoft
  3655 ;;		___lltoft
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text17
  3660  006E9E                     __ptext17:
  3661                           	opt stack 0
  3662  006E9E                     ___ftpack:
  3663                           	opt stack 29
  3664                           
  3665                           ;incstack = 0
  3666  006E9E  5004               	movf	___ftpack@exp,w,c
  3667  006EA0  B4D8               	btfsc	status,2,c
  3668  006EA2  D005               	goto	l1306
  3669  006EA4  5001               	movf	___ftpack@arg,w,c
  3670  006EA6  1002               	iorwf	___ftpack@arg+1,w,c
  3671  006EA8  1003               	iorwf	___ftpack@arg+2,w,c
  3672  006EAA  A4D8               	btfss	status,2,c
  3673  006EAC  D00C               	goto	l1312
  3674  006EAE                     l1306:
  3675  006EAE  0E00               	movlw	0
  3676  006EB0  6E01               	movwf	?___ftpack,c
  3677  006EB2  0E00               	movlw	0
  3678  006EB4  6E02               	movwf	?___ftpack+1,c
  3679  006EB6  0E00               	movlw	0
  3680  006EB8  6E03               	movwf	?___ftpack+2,c
  3681  006EBA  0012               	return	
  3682  006EBC                     l1310:
  3683  006EBC  2A04               	incf	___ftpack@exp,f,c
  3684  006EBE  90D8               	bcf	status,0,c
  3685  006EC0  3203               	rrcf	___ftpack@arg+2,f,c
  3686  006EC2  3202               	rrcf	___ftpack@arg+1,f,c
  3687  006EC4  3201               	rrcf	___ftpack@arg,f,c
  3688  006EC6                     l1312:
  3689  006EC6  0E00               	movlw	0
  3690  006EC8  1401               	andwf	___ftpack@arg,w,c
  3691  006ECA  6E06               	movwf	??___ftpack& (0+255),c
  3692  006ECC  0E00               	movlw	0
  3693  006ECE  1402               	andwf	___ftpack@arg+1,w,c
  3694  006ED0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3695  006ED2  0EFE               	movlw	254
  3696  006ED4  1403               	andwf	___ftpack@arg+2,w,c
  3697  006ED6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3698  006ED8  5006               	movf	??___ftpack,w,c
  3699  006EDA  1007               	iorwf	??___ftpack+1,w,c
  3700  006EDC  1008               	iorwf	??___ftpack+2,w,c
  3701  006EDE  B4D8               	btfsc	status,2,c
  3702  006EE0  D00C               	goto	l1318
  3703  006EE2  D7EC               	goto	l1310
  3704  006EE4                     l1314:
  3705  006EE4  2A04               	incf	___ftpack@exp,f,c
  3706  006EE6  0E01               	movlw	1
  3707  006EE8  2601               	addwf	___ftpack@arg,f,c
  3708  006EEA  0E00               	movlw	0
  3709  006EEC  2202               	addwfc	___ftpack@arg+1,f,c
  3710  006EEE  0E00               	movlw	0
  3711  006EF0  2203               	addwfc	___ftpack@arg+2,f,c
  3712  006EF2  90D8               	bcf	status,0,c
  3713  006EF4  3203               	rrcf	___ftpack@arg+2,f,c
  3714  006EF6  3202               	rrcf	___ftpack@arg+1,f,c
  3715  006EF8  3201               	rrcf	___ftpack@arg,f,c
  3716  006EFA                     l1318:
  3717  006EFA  0E00               	movlw	0
  3718  006EFC  1401               	andwf	___ftpack@arg,w,c
  3719  006EFE  6E06               	movwf	??___ftpack& (0+255),c
  3720  006F00  0E00               	movlw	0
  3721  006F02  1402               	andwf	___ftpack@arg+1,w,c
  3722  006F04  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3723  006F06  0EFF               	movlw	255
  3724  006F08  1403               	andwf	___ftpack@arg+2,w,c
  3725  006F0A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3726  006F0C  5006               	movf	??___ftpack,w,c
  3727  006F0E  1007               	iorwf	??___ftpack+1,w,c
  3728  006F10  1008               	iorwf	??___ftpack+2,w,c
  3729  006F12  B4D8               	btfsc	status,2,c
  3730  006F14  D006               	goto	l1322
  3731  006F16  D7E6               	goto	l1314
  3732  006F18                     l1320:
  3733  006F18  0604               	decf	___ftpack@exp,f,c
  3734  006F1A  90D8               	bcf	status,0,c
  3735  006F1C  3601               	rlcf	___ftpack@arg,f,c
  3736  006F1E  3602               	rlcf	___ftpack@arg+1,f,c
  3737  006F20  3603               	rlcf	___ftpack@arg+2,f,c
  3738  006F22                     l1322:
  3739  006F22  BE02               	btfsc	___ftpack@arg+1,7,c
  3740  006F24  D003               	goto	l355
  3741  006F26  0E02               	movlw	2
  3742  006F28  6004               	cpfslt	___ftpack@exp,c
  3743  006F2A  D7F6               	goto	l1320
  3744  006F2C                     l355:
  3745  006F2C  A004               	btfss	___ftpack@exp,0,c
  3746  006F2E  9E02               	bcf	___ftpack@arg+1,7,c
  3747  006F30  90D8               	bcf	status,0,c
  3748  006F32  3204               	rrcf	___ftpack@exp,f,c
  3749  006F34  5004               	movf	___ftpack@exp,w,c
  3750  006F36  1203               	iorwf	___ftpack@arg+2,f,c
  3751  006F38  5005               	movf	___ftpack@sign,w,c
  3752  006F3A  A4D8               	btfss	status,2,c
  3753  006F3C  8E03               	bsf	___ftpack@arg+2,7,c
  3754  006F3E  C001  F001         	movff	___ftpack@arg,?___ftpack
  3755  006F42  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3756  006F46  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3757  006F4A  0012               	return	
  3758  006F4C                     __end_of___ftpack:
  3759                           	opt stack 0
  3760  0000                     tblptru	equ	0xFF8
  3761                           tblptrh	equ	0xFF7
  3762                           tblptrl	equ	0xFF6
  3763                           tablat	equ	0xFF5
  3764                           postinc0	equ	0xFEE
  3765                           wreg	equ	0xFE8
  3766                           postinc1	equ	0xFE6
  3767                           postdec1	equ	0xFE5
  3768                           fsr1h	equ	0xFE2
  3769                           fsr1l	equ	0xFE1
  3770                           indf2	equ	0xFDF
  3771                           postinc2	equ	0xFDE
  3772                           postdec2	equ	0xFDD
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           status	equ	0xFD8
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           postinc0	equ	0xFEE
  3781                           wreg	equ	0xFE8
  3782                           postinc1	equ	0xFE6
  3783                           postdec1	equ	0xFE5
  3784                           fsr1h	equ	0xFE2
  3785                           fsr1l	equ	0xFE1
  3786                           indf2	equ	0xFDF
  3787                           postinc2	equ	0xFDE
  3788                           postdec2	equ	0xFDD
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793                           	psect	rparam
  3794  0000                     tblptru	equ	0xFF8
  3795                           tblptrh	equ	0xFF7
  3796                           tblptrl	equ	0xFF6
  3797                           tablat	equ	0xFF5
  3798                           postinc0	equ	0xFEE
  3799                           wreg	equ	0xFE8
  3800                           postinc1	equ	0xFE6
  3801                           postdec1	equ	0xFE5
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           indf2	equ	0xFDF
  3805                           postinc2	equ	0xFDE
  3806                           postdec2	equ	0xFDD
  3807                           fsr2h	equ	0xFDA
  3808                           fsr2l	equ	0xFD9
  3809                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     67      69
    BANK0           160     51      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftneg
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___awtoft
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftneg
    ___ftneg->___ftadd
    ___ftmul->___ftpack
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   43832
                                             65 COMRAM     2     2      0
                                              0 BANK0     51    51      0
                        _PID_Compute
                        _PID_SetMode
                _PID_SetOutputLimits
                           _PID_init
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2939
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   15485
                                             53 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11356
                                             38 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3504
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2382
                                             12 COMRAM     8     0      8
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3    1059
                                             38 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    2045
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1760
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   11092
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     665
                                             35 COMRAM     3     0      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1420
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4582
                                             23 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_SetOutputLimits
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftneg
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      4C       5       47.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     43      45       1       72.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      91      20        0.0%
DATA                 0      0      91       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 15 13:00:34 2017

                                  _A 009C                                    _B 0099  
                                  _C 0096                                    _D 0093  
                    PID_SetMode@Mode 000E                                   l55 7CCC  
                                 l78 7FCE               __end_of_PID_Initialize 73F2  
                        __CFG_BORV$3 000000                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0023  
                       ___ftadd@exp2 0022                ??_PID_SetOutputLimits 0015  
                       ___ftadd@sign 0021                                  l402 7636  
                                l413 70D4                                  l355 6F2C  
                                l435 6CD2                                  l382 756A  
                                l393 761A                                  l378 7540  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u921 7116                                  u941 713E  
                                u871 7030                                  u891 7058  
                       __CFG_BOR$OFF 000000                    PID_Compute@dInput 0029  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 001B                         ___ftdiv@sign 0020  
                       __CFG_WDT$OFF 000000                                 l1310 6EBC  
                               l1320 6F18                                 l1312 6EC6  
                               l1322 6F22                                 l1314 6EE4  
                               l1306 6EAE                                 l1410 7188  
                               l1420 71B0                                 l1318 6EFA  
                               l1414 7198                                 l1350 7070  
                               l1440 6E6E                                 l1424 71C0  
                               l1344 7048                                 l1370 70AE  
                               l1436 6E3E                                 l1524 7394  
                               l1700 72C6                                 l1542 7578  
                               l1446 6E9A                                 l1390 712E  
                               l1630 7DFC                                 l1614 6DA0  
                               l1536 754E                                 l1456 6DB8  
                               l1704 72DC                                 l1570 75E6  
                               l1634 7E58                                 l1482 7802  
                               l1474 7748                                 l1458 6DC4  
                               l1564 75CA                                 l1396 7156  
                               l1644 7F8A                                 l1492 700E  
                               l1566 75D4                                 l1558 75A8  
                               l1478 77A4                                 l1584 7652  
                               l1576 7608                                 l1568 75DE  
                               l1816 7CAE                                 l1728 7A3E  
                               l1594 7682                                 l1578 7612  
                               l1658 6D4E                                 l1690 729C  
                               l1668 7226                                 l1686 728C  
                               l1696 72B4                                 l1698 72C0  
                               u1171 750C                                 u1181 7520  
                               u1380 6D7C                                 u1390 6D7E  
                               u1471 720A                                 u1607 7A88  
                               u1617 7A92                                 u1490 7244  
                               u1627 7AB4                                 u1637 7ACA  
                               u1495 723C                                 u1647 7AD4  
                               u1657 7AF6                                 u1577 7A46  
                               u1667 7B0C                                 u1587 7A50  
                               u1677 7B16                                 u1597 7A72  
                               u1687 7B38                    PID_Compute@output 0035  
                       __CFG_PWRT$ON 000000                                 _main 7A28  
                       ___ftpack@arg 0001                         ___ftpack@exp 0004  
                               _sign 0044                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             PID_SetOutputLimits@Max 0012               PID_SetOutputLimits@Min 000F  
             PID_SetOutputLimits@pid 000D               __end_of_PID_SetTunings 7A28  
                               start 0000                        __CFG_IESO$OFF 000000  
                       ___ftmul@cntr 0016                         ___param_bank 000000  
                       ___ftmul@sign 0017                         ___fttol@exp1 000F  
                       ___fttol@lval 000B                        __CFG_PLLDIV$5 000000  
                    ?_PID_Initialize 000A                                ?_main 0001  
                    __end_of___ftadd 76A8                      __end_of___ftdiv 7106  
                    __end_of___ftneg 6CE0                      __end_of___ftmul 71FA  
                    __end_of___fttol 72EE                                _PORTB 000F81  
                              _PORTD 000F83                        __CFG_USBDIV$1 000000  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                         ___lltoft@exp 0011  
                   __end_of_PID_init 74FC                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                                _Input 009F  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                        ___awtoft@sign 000C  
                 PID_SetMode@newAuto 0010                        ___ftpack@sign 0005  
                              tablat 000FF5                                status 000FD8  
                     __CFG_ICPRT$OFF 000000                      ?_PID_SetTunings 0027  
                       ?_PID_Compute 0027                       __CFG_MCLRE$OFF 000000  
                    __initialization 6D04                         __end_of_main 7CE8  
                       ?_PID_SetMode 000C                               ??_main 0042  
                      ___fttol@sign1 000A                        __activetblptr 000000  
                   PID_SetTunings@Kd 002F                     PID_SetTunings@Ki 002C  
                   PID_SetTunings@Kp 0029                      __CFG_CCP2MX$OFF 000000  
                   __end_of___awtoft 6D72                     __end_of___ftpack 6F4C  
                   __end_of___lbtoft 6D04                     __end_of___lltoft 6E0E  
                             _TMR1CS 007E69                               _TMR3CS 007D89  
                     __CFG_XINST$OFF 000000                               _Output 00A2  
                             ___ftge 6E0E                            ??___ftadd 001E  
                          ??___ftdiv 0018                            ??___ftneg 0027  
                          ??___ftmul 000F                            ??___fttol 0005  
                             clear_0 6D2A                               _output 00A7  
              ___ftmul@f3_as_product 0013                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0060              __end_of__initialization 6D34  
                    __CFG_PBADEN$OFF 000000                           ___ftadd@f1 0018  
                         ___ftadd@f2 001B                           ___ftge@ff1 0001  
                         ___ftge@ff2 0004                        ___rparam_used 000001  
                         ___ftdiv@f1 0012                           ___ftdiv@f2 0015  
                         ___ftdiv@f3 001C                           ___ftneg@f1 0024  
                         ___awtoft@c 0009                           ___lbtoft@c 000C  
                         ___ftmul@f1 0009                           ___ftmul@f2 000C  
                         ___fttol@f1 0001                       __pcstackCOMRAM 0001  
                          ?_PID_init 0036                         __pidataBANK0 6CB8  
                         ___lltoft@c 0009                           __pbssBANK0 0093  
                  PID_SetTunings@pid 0027                     ??_PID_Initialize 000C  
                            ?___ftge 0001                           ??_PID_init 0042  
        __end_of_PID_SetOutputLimits 7860                 __size_of_PID_Compute 0318  
               __size_of_PID_SetMode 0040                            ?___awtoft 0009  
                          ?___ftpack 0001                            ?___lbtoft 0009  
                          ?___lltoft 0009                          PID_init@pid 0036  
                   ??_PID_SetTunings 0032                       PID_Compute@pid 0027  
                    __CFG_VREGEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000         ??_PID_SetControllerDirection 002A  
PID_SetControllerDirection@Direction 0029                      __size_of___ftge 0090  
                            ___ftadd 74FC                              ___ftdiv 7020  
                            ___ftneg 6CBC                              ___ftmul 7106  
                            ___fttol 71FA                      __CFG_STVREN$OFF 000000  
                            __pcinit 6D04                           ??___awtoft 000C  
                         ??___ftpack 0006                           ??___lbtoft 000C  
                            __ramtop 0800                           ??___lltoft 000D  
                            __ptext0 7A28                              __ptext1 6CE0  
                            __ptext2 71FA                              __ptext3 6D3A  
                            __ptext4 73F2                              __ptext5 7860  
                            __ptext6 6DB2                              __ptext7 7020  
                            __ptext8 76A8                              __ptext9 6F4C  
        PID_init@ControllerDirection 0041                              main@PID 0066  
               end_of_initialization 6D34  __size_of_PID_SetControllerDirection 00D4  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                            _PORTCbits 000F82  
                     PID_SetMode@pid 000C                     PID_Compute@error 002F  
                   PID_Compute@input 0032                          ___ftdiv@exp 001F  
                        ___ftmul@exp 0012                       __end_of___ftge 6E9E  
                  __size_of_PID_init 010A                  start_initialization 6D04  
                  PID_Initialize@pid 000A   __end_of_PID_SetControllerDirection 7020  
         _PID_SetControllerDirection 6F4C                             ??___ftge 0007  
                        __pdataBANK0 00A8                     __CFG_LPT1OSC$OFF 000000  
                  __size_of___awtoft 0038                    __size_of___ftpack 00AE  
                  __size_of___lbtoft 0024                    __size_of___lltoft 005C  
                        __pbssCOMRAM 0044                        __pcstackBANK0 0060  
                   _PID_Compute$1039 002C                        ??_PID_Compute 0029  
                          _main$1037 0060                            _main$1038 0063  
                      ??_PID_SetMode 000F                             ?___ftadd 0018  
                           ?___ftdiv 0012                             ?___ftneg 0024  
                           ?___ftmul 0009                             ?___fttol 0001  
                         PID_init@Kd 003E                           PID_init@Ki 003B  
                         PID_init@Kp 0038         __size_of_PID_SetOutputLimits 01B8  
                   __CFG_WDTPS$32768 000000                             _PID_init 73F2  
                __end_of_PID_Compute 8000                  __end_of_PID_SetMode 6DB2  
            __size_of_PID_Initialize 0104                            copy_data0 6D18  
                           __Hrparam 0000                             __Lrparam 0000  
            __size_of_PID_SetTunings 01C8                             _Setpoint 00A5  
                   __size_of___ftadd 01AC                     __size_of___ftdiv 00E6  
                   __size_of___ftneg 0024                     __size_of___ftmul 00F4  
                   __size_of___fttol 00F4                             ___awtoft 6D3A  
                           ___ftpack 6E9E                             ___lbtoft 6CE0  
                           ___lltoft 6DB2                             __ptext10 6D72  
                           __ptext11 72EE                             __ptext12 7CE8  
                           __ptext13 6CBC                             __ptext14 7106  
                           __ptext15 6E0E                             __ptext16 74FC  
                           __ptext17 6E9E                        __size_of_main 02C0  
                        _PID_Compute 7CE8          ?_PID_SetControllerDirection 0027  
                        _PID_SetMode 6D72                          _PID_Out_Max 00A8  
                        _PID_Out_Min 00AA                __CFG_CPUDIV$OSC2_PLL3 000000  
      PID_SetControllerDirection@pid 0027                  _PID_SetOutputLimits 76A8  
                     _PID_Initialize 72EE                 ?_PID_SetOutputLimits 000D  
                 __CFG_FOSC$HSPLL_HS 000000        PID_SetTunings@SampleTimeInSec 0033  
                     _PID_SetTunings 7860  
