

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon May 22 14:53:55 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 1.42
    33                           ; Generated 13/04/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataBANK0
    68  006FA0                     __pidataBANK0:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _Setpoint
    72  006FA0  0064               	dw	100
    73                           
    74                           ;initializer for _PID_Out_Max
    75  006FA2  000A               	dw	10
    76                           
    77                           ;initializer for _PID_Out_Min
    78  006FA4  0005               	dw	5
    79                           
    80                           	psect	nvBANK0
    81  000096                     __pnvBANK0:
    82                           	opt stack 0
    83  000096                     _Input:
    84                           	opt stack 0
    85  000096                     	ds	1
    86  0000                     _PORTD	set	3971
    87  0000                     _PORTB	set	3969
    88  0000                     _TRISB	set	3987
    89                           
    90                           ; #config settings
    91  0000                     
    92                           	psect	cinit
    93  006FEE                     __pcinit:
    94                           	opt stack 0
    95  006FEE                     start_initialization:
    96                           	opt stack 0
    97  006FEE                     __initialization:
    98                           	opt stack 0
    99                           
   100                           ; Initialize objects allocated to BANK0 (6 bytes)
   101                           ; load TBLPTR registers with __pidataBANK0
   102  006FEE  0EA0               	movlw	low __pidataBANK0
   103  006FF0  6EF6               	movwf	tblptrl,c
   104  006FF2  0E6F               	movlw	high __pidataBANK0
   105  006FF4  6EF7               	movwf	tblptrh,c
   106  006FF6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   107  006FF8  6EF8               	movwf	tblptru,c
   108  006FFA  EE00  F08D         	lfsr	0,__pdataBANK0
   109  006FFE  EE10 F006          	lfsr	1,6
   110  007002                     copy_data0:
   111  007002  0009               	tblrd		*+
   112  007004  CFF5 FFEE          	movff	tablat,postinc0
   113  007008  50E5               	movf	postdec1,w,c
   114  00700A  50E1               	movf	fsr1l,w,c
   115  00700C  E1FA               	bnz	copy_data0
   116                           
   117                           ; Clear objects allocated to BANK0 (3 bytes)
   118  00700E  0100               	movlb	0
   119  007010  6B95               	clrf	(__pbssBANK0+2)& (0+255),b
   120  007012  6B94               	clrf	(__pbssBANK0+1)& (0+255),b
   121  007014  6B93               	clrf	__pbssBANK0& (0+255),b
   122  007016                     end_of_initialization:
   123                           	opt stack 0
   124  007016                     __end_of__initialization:
   125                           	opt stack 0
   126  007016  0100               	movlb	0
   127  007018  EF17  F039         	goto	_main	;jump to C main() function
   128                           tblptru	equ	0xFF8
   129                           tblptrh	equ	0xFF7
   130                           tblptrl	equ	0xFF6
   131                           tablat	equ	0xFF5
   132                           postinc0	equ	0xFEE
   133                           postdec1	equ	0xFE5
   134                           fsr1l	equ	0xFE1
   135                           
   136                           	psect	bssBANK0
   137  000093                     __pbssBANK0:
   138                           	opt stack 0
   139  000093                     _Output:
   140                           	opt stack 0
   141  000093                     	ds	3
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           postinc0	equ	0xFEE
   147                           postdec1	equ	0xFE5
   148                           fsr1l	equ	0xFE1
   149                           
   150                           	psect	dataBANK0
   151  00008D                     __pdataBANK0:
   152                           	opt stack 0
   153  00008D                     _Setpoint:
   154                           	opt stack 0
   155  00008D                     	ds	2
   156  00008F                     _PID_Out_Max:
   157                           	opt stack 0
   158  00008F                     	ds	2
   159  000091                     _PID_Out_Min:
   160                           	opt stack 0
   161  000091                     	ds	2
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           postinc0	equ	0xFEE
   167                           postdec1	equ	0xFE5
   168                           fsr1l	equ	0xFE1
   169                           
   170                           	psect	cstackBANK0
   171  000060                     __pcstackBANK0:
   172                           	opt stack 0
   173  000060                     main@PID:
   174                           	opt stack 0
   175                           
   176                           ; 45 bytes @ 0x0
   177  000060                     	ds	45
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           postinc0	equ	0xFEE
   183                           postdec1	equ	0xFE5
   184                           fsr1l	equ	0xFE1
   185                           
   186                           	psect	cstackCOMRAM
   187  000001                     __pcstackCOMRAM:
   188                           	opt stack 0
   189  000001                     ?___ftpack:
   190                           	opt stack 0
   191  000001                     ___ftpack@arg:
   192                           	opt stack 0
   193  000001                     ___ftge@ff1:
   194                           	opt stack 0
   195                           
   196                           ; 3 bytes @ 0x0
   197  000001                     	ds	3
   198  000004                     ___ftpack@exp:
   199                           	opt stack 0
   200  000004                     ___ftge@ff2:
   201                           	opt stack 0
   202                           
   203                           ; 3 bytes @ 0x3
   204  000004                     	ds	1
   205  000005                     ___ftpack@sign:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x4
   209  000005                     	ds	1
   210  000006                     ??___ftpack:
   211                           
   212                           ; 1 bytes @ 0x5
   213  000006                     	ds	1
   214  000007                     ??___ftge:
   215                           
   216                           ; 1 bytes @ 0x6
   217  000007                     	ds	2
   218  000009                     ?___ftmul:
   219                           	opt stack 0
   220  000009                     ?___awtoft:
   221                           	opt stack 0
   222  000009                     ?___lbtoft:
   223                           	opt stack 0
   224  000009                     ?___lltoft:
   225                           	opt stack 0
   226  000009                     ___awtoft@c:
   227                           	opt stack 0
   228  000009                     ___ftmul@f1:
   229                           	opt stack 0
   230  000009                     ___lltoft@c:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0x8
   234  000009                     	ds	1
   235  00000A                     PID_Initialize@pid:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x9
   239  00000A                     	ds	2
   240  00000C                     ___awtoft@sign:
   241                           	opt stack 0
   242  00000C                     ___lbtoft@c:
   243                           	opt stack 0
   244  00000C                     PID_SetMode@pid:
   245                           	opt stack 0
   246  00000C                     ___ftmul@f2:
   247                           	opt stack 0
   248                           
   249                           ; 3 bytes @ 0xB
   250  00000C                     	ds	1
   251  00000D                     ??___lltoft:
   252  00000D                     PID_SetOutputLimits@pid:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0xC
   256  00000D                     	ds	1
   257  00000E                     PID_SetMode@Mode:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0xD
   261  00000E                     	ds	1
   262  00000F                     ??___ftmul:
   263  00000F                     PID_SetOutputLimits@Min:
   264                           	opt stack 0
   265                           
   266                           ; 3 bytes @ 0xE
   267  00000F                     	ds	1
   268  000010                     PID_SetMode@newAuto:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0xF
   272  000010                     	ds	1
   273  000011                     ___lltoft@exp:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x10
   277  000011                     	ds	1
   278  000012                     ?___ftdiv:
   279                           	opt stack 0
   280  000012                     ___ftmul@exp:
   281                           	opt stack 0
   282  000012                     PID_SetOutputLimits@Max:
   283                           	opt stack 0
   284  000012                     ___ftdiv@f1:
   285                           	opt stack 0
   286                           
   287                           ; 3 bytes @ 0x11
   288  000012                     	ds	1
   289  000013                     ___ftmul@f3_as_product:
   290                           	opt stack 0
   291                           
   292                           ; 3 bytes @ 0x12
   293  000013                     	ds	2
   294  000015                     ___ftdiv@f2:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0x14
   298  000015                     	ds	1
   299  000016                     ___ftmul@cntr:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x15
   303  000016                     	ds	1
   304  000017                     ___ftmul@sign:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x16
   308  000017                     	ds	1
   309  000018                     ??___ftdiv:
   310  000018                     ?___ftneg:
   311                           	opt stack 0
   312  000018                     ___ftneg@f1:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x17
   316  000018                     	ds	3
   317  00001B                     ?___ftadd:
   318                           	opt stack 0
   319  00001B                     ___ftdiv@cntr:
   320                           	opt stack 0
   321  00001B                     PID_SetControllerDirection@pid:
   322                           	opt stack 0
   323  00001B                     ___ftadd@f1:
   324                           	opt stack 0
   325                           
   326                           ; 3 bytes @ 0x1A
   327  00001B                     	ds	1
   328  00001C                     ___ftdiv@f3:
   329                           	opt stack 0
   330                           
   331                           ; 3 bytes @ 0x1B
   332  00001C                     	ds	1
   333  00001D                     PID_SetControllerDirection@Direction:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x1C
   337  00001D                     	ds	1
   338  00001E                     ___ftadd@f2:
   339                           	opt stack 0
   340                           
   341                           ; 3 bytes @ 0x1D
   342  00001E                     	ds	1
   343  00001F                     ___ftdiv@exp:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x1E
   347  00001F                     	ds	1
   348  000020                     ___ftdiv@sign:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x1F
   352  000020                     	ds	1
   353  000021                     ??___ftadd:
   354  000021                     PID_SetTunings@pid:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x20
   358  000021                     	ds	2
   359  000023                     PID_SetTunings@Kp:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x22
   363  000023                     	ds	1
   364  000024                     ___ftadd@sign:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x23
   368  000024                     	ds	1
   369  000025                     ___ftadd@exp2:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x24
   373  000025                     	ds	1
   374  000026                     ___ftadd@exp1:
   375                           	opt stack 0
   376  000026                     PID_SetTunings@Ki:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x25
   380  000026                     	ds	1
   381  000027                     PID_Compute@pid:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x26
   385  000027                     	ds	2
   386  000029                     PID_Compute@dInput:
   387                           	opt stack 0
   388  000029                     PID_SetTunings@Kd:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0x28
   392  000029                     	ds	3
   393  00002C                     _PID_Compute$946:
   394                           	opt stack 0
   395                           
   396                           ; 3 bytes @ 0x2B
   397  00002C                     	ds	1
   398  00002D                     PID_SetTunings@SampleTimeInSec:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x2C
   402  00002D                     	ds	2
   403  00002F                     PID_Compute@error:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0x2E
   407  00002F                     	ds	1
   408  000030                     PID_init@pid:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x2F
   412  000030                     	ds	2
   413  000032                     PID_init@Kp:
   414                           	opt stack 0
   415  000032                     PID_Compute@input:
   416                           	opt stack 0
   417                           
   418                           ; 3 bytes @ 0x31
   419  000032                     	ds	3
   420  000035                     PID_init@Ki:
   421                           	opt stack 0
   422  000035                     PID_Compute@output:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x34
   426  000035                     	ds	3
   427  000038                     PID_init@Kd:
   428                           	opt stack 0
   429                           
   430                           ; 3 bytes @ 0x37
   431  000038                     	ds	3
   432  00003B                     PID_init@ControllerDirection:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x3A
   436  00003B                     	ds	1
   437  00003C                     tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           ; 1 bytes @ 0x3B
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 46 in file "newmain.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  PID            45    0[BANK0 ] struct .
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         0       0       0       0       0       0       0       0       0
   466 ;;      Locals:         0      45       0       0       0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0
   468 ;;      Totals:         0      45       0       0       0       0       0       0       0
   469 ;;Total ram usage:       45 bytes
   470 ;; Hardware stack levels required when called:    4
   471 ;; This function calls:
   472 ;;		_PID_Compute
   473 ;;		_PID_SetMode
   474 ;;		_PID_SetOutputLimits
   475 ;;		_PID_init
   476 ;;		___awtoft
   477 ;;		___lbtoft
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text0
   484  00722E                     __ptext0:
   485                           	opt stack 0
   486  00722E                     _main:
   487                           	opt stack 27
   488                           
   489                           ;newmain.c: 47: TRISB = 0xFF;
   490                           
   491                           ;incstack = 0
   492  00722E  6893               	setf	3987,c	;volatile
   493                           
   494                           ;newmain.c: 48: Input = PORTB;
   495  007230  CF81 F096          	movff	3969,_Input	;volatile
   496                           
   497                           ;newmain.c: 49: PidType PID;
   498                           ;newmain.c: 50: PID_init(&PID, 1, 0.05, 0.25, PID_Direction_Direct);
   499  007234  0E60               	movlw	low main@PID
   500  007236  6E30               	movwf	PID_init@pid,c
   501  007238  0E00               	movlw	high main@PID
   502  00723A  6E31               	movwf	PID_init@pid+1,c
   503  00723C  0E00               	movlw	0
   504  00723E  6E32               	movwf	PID_init@Kp,c
   505  007240  0E80               	movlw	128
   506  007242  6E33               	movwf	PID_init@Kp+1,c
   507  007244  0E3F               	movlw	63
   508  007246  6E34               	movwf	PID_init@Kp+2,c
   509  007248  0ECD               	movlw	205
   510  00724A  6E35               	movwf	PID_init@Ki,c
   511  00724C  0E4C               	movlw	76
   512  00724E  6E36               	movwf	PID_init@Ki+1,c
   513  007250  0E3D               	movlw	61
   514  007252  6E37               	movwf	PID_init@Ki+2,c
   515  007254  0E00               	movlw	0
   516  007256  6E38               	movwf	PID_init@Kd,c
   517  007258  0E80               	movlw	128
   518  00725A  6E39               	movwf	PID_init@Kd+1,c
   519  00725C  0E3E               	movlw	62
   520  00725E  6E3A               	movwf	PID_init@Kd+2,c
   521  007260  0E00               	movlw	0
   522  007262  6E3B               	movwf	PID_init@ControllerDirection,c
   523  007264  EC59  F03B         	call	_PID_init	;wreg free
   524                           
   525                           ;newmain.c: 51: PID_SetMode(&PID, PID_Mode_Automatic);
   526  007268  0E60               	movlw	low main@PID
   527  00726A  6E0C               	movwf	PID_SetMode@pid,c
   528  00726C  0E00               	movlw	high main@PID
   529  00726E  6E0D               	movwf	PID_SetMode@pid+1,c
   530  007270  0E01               	movlw	1
   531  007272  6E0E               	movwf	PID_SetMode@Mode,c
   532  007274  EC2A  F038         	call	_PID_SetMode	;wreg free
   533                           
   534                           ;newmain.c: 52: PID_SetOutputLimits(&PID, PID_Out_Min, PID_Out_Max);
   535  007278  0E60               	movlw	low main@PID
   536  00727A  6E0D               	movwf	PID_SetOutputLimits@pid,c
   537  00727C  0E00               	movlw	high main@PID
   538  00727E  6E0E               	movwf	PID_SetOutputLimits@pid+1,c
   539  007280  C091  F009         	movff	_PID_Out_Min,___awtoft@c
   540  007284  C092  F00A         	movff	_PID_Out_Min+1,___awtoft@c+1
   541  007288  EC0E  F038         	call	___awtoft	;wreg free
   542  00728C  C009  F00F         	movff	?___awtoft,PID_SetOutputLimits@Min
   543  007290  C00A  F010         	movff	?___awtoft+1,PID_SetOutputLimits@Min+1
   544  007294  C00B  F011         	movff	?___awtoft+2,PID_SetOutputLimits@Min+2
   545  007298  C08F  F009         	movff	_PID_Out_Max,___awtoft@c
   546  00729C  C090  F00A         	movff	_PID_Out_Max+1,___awtoft@c+1
   547  0072A0  EC0E  F038         	call	___awtoft	;wreg free
   548  0072A4  C009  F012         	movff	?___awtoft,PID_SetOutputLimits@Max
   549  0072A8  C00A  F013         	movff	?___awtoft+1,PID_SetOutputLimits@Max+1
   550  0072AC  C00B  F014         	movff	?___awtoft+2,PID_SetOutputLimits@Max+2
   551  0072B0  ECB4  F03C         	call	_PID_SetOutputLimits	;wreg free
   552                           
   553                           ;newmain.c: 53: PID.mySetpoint = Setpoint;
   554  0072B4  C08D  F009         	movff	_Setpoint,___awtoft@c
   555  0072B8  C08E  F00A         	movff	_Setpoint+1,___awtoft@c+1
   556  0072BC  EC0E  F038         	call	___awtoft	;wreg free
   557  0072C0  C009  F079         	movff	?___awtoft,main@PID+25
   558  0072C4  C00A  F07A         	movff	?___awtoft+1,main@PID+26
   559  0072C8  C00B  F07B         	movff	?___awtoft+2,main@PID+27
   560                           
   561                           ;newmain.c: 54: PID.myInput = Input;
   562  0072CC  0100               	movlb	0	; () banked
   563  0072CE  5196               	movf	_Input& (0+255),w,b
   564  0072D0  ECE5  F037         	call	___lbtoft
   565  0072D4  C009  F073         	movff	?___lbtoft,main@PID+19
   566  0072D8  C00A  F074         	movff	?___lbtoft+1,main@PID+20
   567  0072DC  C00B  F075         	movff	?___lbtoft+2,main@PID+21
   568                           
   569                           ;newmain.c: 55: PID_Compute(&PID);
   570  0072E0  0E60               	movlw	low main@PID
   571  0072E2  6E27               	movwf	PID_Compute@pid,c
   572  0072E4  0E00               	movlw	high main@PID
   573  0072E6  6E28               	movwf	PID_Compute@pid+1,c
   574  0072E8  EC74  F03E         	call	_PID_Compute	;wreg free
   575                           
   576                           ;newmain.c: 56: Output = PID.myOutput;
   577  0072EC  C076  F093         	movff	main@PID+22,_Output
   578  0072F0  C077  F094         	movff	main@PID+23,_Output+1
   579  0072F4  C078  F095         	movff	main@PID+24,_Output+2
   580                           
   581                           ;newmain.c: 57: PORTD = Input;
   582  0072F8  C096  FF83         	movff	_Input,3971	;volatile
   583                           
   584                           ;newmain.c: 58: return;
   585  0072FC  EF00  F000         	goto	start
   586  007300                     __end_of_main:
   587                           	opt stack 0
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           postinc0	equ	0xFEE
   593                           postdec1	equ	0xFE5
   594                           fsr1l	equ	0xFE1
   595                           
   596 ;; *************** function ___lbtoft *****************
   597 ;; Defined at:
   598 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  c               1    wreg     unsigned char 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  c               1   11[COMRAM] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  3    8[COMRAM] float 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   612 ;;      Params:         3       0       0       0       0       0       0       0       0
   613 ;;      Locals:         1       0       0       0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0
   615 ;;      Totals:         4       0       0       0       0       0       0       0       0
   616 ;;Total ram usage:        4 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    1
   619 ;; This function calls:
   620 ;;		___ftpack
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text1
   627  006FCA                     __ptext1:
   628                           	opt stack 0
   629  006FCA                     ___lbtoft:
   630                           	opt stack 29
   631                           
   632                           ;incstack = 0
   633                           ;___lbtoft@c stored from wreg
   634  006FCA  6E0C               	movwf	___lbtoft@c,c
   635  006FCC  500C               	movf	___lbtoft@c,w,c
   636  006FCE  6E01               	movwf	___ftpack@arg,c
   637  006FD0  6A02               	clrf	___ftpack@arg+1,c
   638  006FD2  6A03               	clrf	___ftpack@arg+2,c
   639  006FD4  0E8E               	movlw	142
   640  006FD6  6E04               	movwf	___ftpack@exp,c
   641  006FD8  0E00               	movlw	0
   642  006FDA  6E05               	movwf	___ftpack@sign,c
   643  006FDC  ECC0  F038         	call	___ftpack	;wreg free
   644  006FE0  C001  F009         	movff	?___ftpack,?___lbtoft
   645  006FE4  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   646  006FE8  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   647  006FEC  0012               	return	
   648  006FEE                     __end_of___lbtoft:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           
   658 ;; *************** function ___awtoft *****************
   659 ;; Defined at:
   660 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  c               2    8[COMRAM] int 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  sign            1   11[COMRAM] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  3    8[COMRAM] float 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         3       0       0       0       0       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         4       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        4 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    1
   681 ;; This function calls:
   682 ;;		___ftpack
   683 ;; This function is called by:
   684 ;;		_main
   685 ;;		_PID_SetSampleTime
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text2
   690  00701C                     __ptext2:
   691                           	opt stack 0
   692  00701C                     ___awtoft:
   693                           	opt stack 29
   694                           
   695                           ;incstack = 0
   696  00701C  0E00               	movlw	0
   697  00701E  6E0C               	movwf	___awtoft@sign,c
   698  007020  AE0A               	btfss	___awtoft@c+1,7,c
   699  007022  D006               	goto	l1487
   700  007024  6C09               	negf	___awtoft@c,c
   701  007026  1E0A               	comf	___awtoft@c+1,f,c
   702  007028  B0D8               	btfsc	status,0,c
   703  00702A  2A0A               	incf	___awtoft@c+1,f,c
   704  00702C  0E01               	movlw	1
   705  00702E  6E0C               	movwf	___awtoft@sign,c
   706  007030                     l1487:
   707  007030  C009  F001         	movff	___awtoft@c,___ftpack@arg
   708  007034  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
   709  007038  6A03               	clrf	___ftpack@arg+2,c
   710  00703A  0E8E               	movlw	142
   711  00703C  6E04               	movwf	___ftpack@exp,c
   712  00703E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
   713  007042  ECC0  F038         	call	___ftpack	;wreg free
   714  007046  C001  F009         	movff	?___ftpack,?___awtoft
   715  00704A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
   716  00704E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
   717  007052  0012               	return	
   718  007054                     __end_of___awtoft:
   719                           	opt stack 0
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           postinc0	equ	0xFEE
   725                           postdec1	equ	0xFE5
   726                           fsr1l	equ	0xFE1
   727                           status	equ	0xFD8
   728                           
   729 ;; *************** function _PID_init *****************
   730 ;; Defined at:
   731 ;;		line 16 in file "pid.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  pid             2   47[COMRAM] PTR struct .
   734 ;;		 -> main@PID(45), 
   735 ;;  Kp              3   49[COMRAM] float 
   736 ;;  Ki              3   52[COMRAM] float 
   737 ;;  Kd              3   55[COMRAM] float 
   738 ;;  ControllerDi    1   58[COMRAM] enum E7
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   750 ;;      Params:        12       0       0       0       0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0
   753 ;;      Totals:        12       0       0       0       0       0       0       0       0
   754 ;;Total ram usage:       12 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    3
   757 ;; This function calls:
   758 ;;		_PID_SetControllerDirection
   759 ;;		_PID_SetOutputLimits
   760 ;;		_PID_SetTunings
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text3
   767  0076B2                     __ptext3:
   768                           	opt stack 0
   769  0076B2                     _PID_init:
   770                           	opt stack 27
   771                           
   772                           ;pid.c: 18: pid->myInput = 0;
   773                           
   774                           ;incstack = 0
   775  0076B2  EE20 F013          	lfsr	2,19
   776  0076B6  5030               	movf	PID_init@pid,w,c
   777  0076B8  26D9               	addwf	fsr2l,f,c
   778  0076BA  5031               	movf	PID_init@pid+1,w,c
   779  0076BC  22DA               	addwfc	fsr2h,f,c
   780  0076BE  0E00               	movlw	0
   781  0076C0  6EDE               	movwf	postinc2,c
   782  0076C2  0E00               	movlw	0
   783  0076C4  6EDE               	movwf	postinc2,c
   784  0076C6  0E00               	movlw	0
   785  0076C8  6EDE               	movwf	postinc2,c
   786                           
   787                           ;pid.c: 19: pid->myOutput = 0;
   788  0076CA  EE20 F016          	lfsr	2,22
   789  0076CE  5030               	movf	PID_init@pid,w,c
   790  0076D0  26D9               	addwf	fsr2l,f,c
   791  0076D2  5031               	movf	PID_init@pid+1,w,c
   792  0076D4  22DA               	addwfc	fsr2h,f,c
   793  0076D6  0E00               	movlw	0
   794  0076D8  6EDE               	movwf	postinc2,c
   795  0076DA  0E00               	movlw	0
   796  0076DC  6EDE               	movwf	postinc2,c
   797  0076DE  0E00               	movlw	0
   798  0076E0  6EDE               	movwf	postinc2,c
   799                           
   800                           ;pid.c: 20: pid->mySetpoint = 0;
   801  0076E2  EE20 F019          	lfsr	2,25
   802  0076E6  5030               	movf	PID_init@pid,w,c
   803  0076E8  26D9               	addwf	fsr2l,f,c
   804  0076EA  5031               	movf	PID_init@pid+1,w,c
   805  0076EC  22DA               	addwfc	fsr2h,f,c
   806  0076EE  0E00               	movlw	0
   807  0076F0  6EDE               	movwf	postinc2,c
   808  0076F2  0E00               	movlw	0
   809  0076F4  6EDE               	movwf	postinc2,c
   810  0076F6  0E00               	movlw	0
   811  0076F8  6EDE               	movwf	postinc2,c
   812                           
   813                           ;pid.c: 21: pid->ITerm = 0;
   814  0076FA  EE20 F01C          	lfsr	2,28
   815  0076FE  5030               	movf	PID_init@pid,w,c
   816  007700  26D9               	addwf	fsr2l,f,c
   817  007702  5031               	movf	PID_init@pid+1,w,c
   818  007704  22DA               	addwfc	fsr2h,f,c
   819  007706  0E00               	movlw	0
   820  007708  6EDE               	movwf	postinc2,c
   821  00770A  0E00               	movlw	0
   822  00770C  6EDE               	movwf	postinc2,c
   823  00770E  0E00               	movlw	0
   824  007710  6EDE               	movwf	postinc2,c
   825                           
   826                           ;pid.c: 22: pid->lastInput = 0;
   827  007712  EE20 F01F          	lfsr	2,31
   828  007716  5030               	movf	PID_init@pid,w,c
   829  007718  26D9               	addwf	fsr2l,f,c
   830  00771A  5031               	movf	PID_init@pid+1,w,c
   831  00771C  22DA               	addwfc	fsr2h,f,c
   832  00771E  0E00               	movlw	0
   833  007720  6EDE               	movwf	postinc2,c
   834  007722  0E00               	movlw	0
   835  007724  6EDE               	movwf	postinc2,c
   836  007726  0E00               	movlw	0
   837  007728  6EDE               	movwf	postinc2,c
   838                           
   839                           ;pid.c: 23: pid->inAuto = 0;
   840  00772A  EE20 F02C          	lfsr	2,44
   841  00772E  5030               	movf	PID_init@pid,w,c
   842  007730  26D9               	addwf	fsr2l,f,c
   843  007732  5031               	movf	PID_init@pid+1,w,c
   844  007734  22DA               	addwfc	fsr2h,f,c
   845  007736  0E00               	movlw	0
   846  007738  6EDF               	movwf	indf2,c
   847                           
   848                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
   849  00773A  C030  F00D         	movff	PID_init@pid,PID_SetOutputLimits@pid
   850  00773E  C031  F00E         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
   851  007742  0E00               	movlw	0
   852  007744  6E0F               	movwf	PID_SetOutputLimits@Min,c
   853  007746  0E00               	movlw	0
   854  007748  6E10               	movwf	PID_SetOutputLimits@Min+1,c
   855  00774A  0E00               	movlw	0
   856  00774C  6E11               	movwf	PID_SetOutputLimits@Min+2,c
   857  00774E  0EFF               	movlw	255
   858  007750  6E12               	movwf	PID_SetOutputLimits@Max,c
   859  007752  0E7F               	movlw	127
   860  007754  6E13               	movwf	PID_SetOutputLimits@Max+1,c
   861  007756  0E47               	movlw	71
   862  007758  6E14               	movwf	PID_SetOutputLimits@Max+2,c
   863  00775A  ECB4  F03C         	call	_PID_SetOutputLimits	;wreg free
   864                           
   865                           ;pid.c: 28: pid->SampleTime = 1000;
   866  00775E  EE20 F022          	lfsr	2,34
   867  007762  5030               	movf	PID_init@pid,w,c
   868  007764  26D9               	addwf	fsr2l,f,c
   869  007766  5031               	movf	PID_init@pid+1,w,c
   870  007768  22DA               	addwfc	fsr2h,f,c
   871  00776A  0EE8               	movlw	232
   872  00776C  6EDE               	movwf	postinc2,c
   873  00776E  0E03               	movlw	3
   874  007770  6EDE               	movwf	postinc2,c
   875  007772  0E00               	movlw	0
   876  007774  6EDE               	movwf	postinc2,c
   877  007776  0E00               	movlw	0
   878  007778  6EDD               	movwf	postdec2,c
   879                           
   880                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
   881  00777A  C030  F01B         	movff	PID_init@pid,PID_SetControllerDirection@pid
   882  00777E  C031  F01C         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
   883  007782  C03B  F01D         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
   884  007786  EC80  F039         	call	_PID_SetControllerDirection	;wreg free
   885                           
   886                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
   887  00778A  C030  F021         	movff	PID_init@pid,PID_SetTunings@pid
   888  00778E  C031  F022         	movff	PID_init@pid+1,PID_SetTunings@pid+1
   889  007792  C032  F023         	movff	PID_init@Kp,PID_SetTunings@Kp
   890  007796  C033  F024         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
   891  00779A  C034  F025         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
   892  00779E  C035  F026         	movff	PID_init@Ki,PID_SetTunings@Ki
   893  0077A2  C036  F027         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
   894  0077A6  C037  F028         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
   895  0077AA  C038  F029         	movff	PID_init@Kd,PID_SetTunings@Kd
   896  0077AE  C039  F02A         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
   897  0077B2  C03A  F02B         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
   898  0077B6  EC90  F03D         	call	_PID_SetTunings	;wreg free
   899  0077BA  0012               	return		;funcret
   900  0077BC                     __end_of_PID_init:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           postinc0	equ	0xFEE
   907                           postdec1	equ	0xFE5
   908                           fsr1l	equ	0xFE1
   909                           indf2	equ	0xFDF
   910                           postinc2	equ	0xFDE
   911                           postdec2	equ	0xFDD
   912                           fsr2h	equ	0xFDA
   913                           fsr2l	equ	0xFD9
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function _PID_SetTunings *****************
   917 ;; Defined at:
   918 ;;		line 85 in file "pid.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  pid             2   32[COMRAM] PTR struct .
   921 ;;		 -> main@PID(45), 
   922 ;;  Kp              3   34[COMRAM] float 
   923 ;;  Ki              3   37[COMRAM] float 
   924 ;;  Kd              3   40[COMRAM] float 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  SampleTimeIn    3   44[COMRAM] float 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:        11       0       0       0       0       0       0       0       0
   937 ;;      Locals:         3       0       0       0       0       0       0       0       0
   938 ;;      Temps:          1       0       0       0       0       0       0       0       0
   939 ;;      Totals:        15       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:       15 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    2
   943 ;; This function calls:
   944 ;;		___ftdiv
   945 ;;		___ftmul
   946 ;;		___ftneg
   947 ;;		___lltoft
   948 ;; This function is called by:
   949 ;;		_PID_init
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text4
   954  007B20                     __ptext4:
   955                           	opt stack 0
   956  007B20                     _PID_SetTunings:
   957                           	opt stack 27
   958                           
   959                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
   960                           
   961                           ;incstack = 0
   962  007B20  BE25               	btfsc	PID_SetTunings@Kp+2,7,c
   963  007B22  0012               	return	
   964  007B24  BE28               	btfsc	PID_SetTunings@Ki+2,7,c
   965  007B26  0012               	return	
   966  007B28  BE2B               	btfsc	PID_SetTunings@Kd+2,7,c
   967  007B2A  0012               	return	
   968                           
   969                           ;pid.c: 88: }
   970                           ;pid.c: 90: pid->dispKp = Kp;
   971                           
   972                           ;pid.c: 87: return;
   973  007B2C  C021  FFD9         	movff	PID_SetTunings@pid,fsr2l
   974  007B30  C022  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
   975  007B34  C023  FFDE         	movff	PID_SetTunings@Kp,postinc2
   976  007B38  C024  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
   977  007B3C  C025  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
   978                           
   979                           ;pid.c: 91: pid->dispKi = Ki;
   980  007B40  EE20 F003          	lfsr	2,3
   981  007B44  5021               	movf	PID_SetTunings@pid,w,c
   982  007B46  26D9               	addwf	fsr2l,f,c
   983  007B48  5022               	movf	PID_SetTunings@pid+1,w,c
   984  007B4A  22DA               	addwfc	fsr2h,f,c
   985  007B4C  C026  FFDE         	movff	PID_SetTunings@Ki,postinc2
   986  007B50  C027  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
   987  007B54  C028  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
   988                           
   989                           ;pid.c: 92: pid->dispKd = Kd;
   990  007B58  EE20 F006          	lfsr	2,6
   991  007B5C  5021               	movf	PID_SetTunings@pid,w,c
   992  007B5E  26D9               	addwf	fsr2l,f,c
   993  007B60  5022               	movf	PID_SetTunings@pid+1,w,c
   994  007B62  22DA               	addwfc	fsr2h,f,c
   995  007B64  C029  FFDE         	movff	PID_SetTunings@Kd,postinc2
   996  007B68  C02A  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
   997  007B6C  C02B  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
   998                           
   999                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
  1000  007B70  EE20 F022          	lfsr	2,34
  1001  007B74  5021               	movf	PID_SetTunings@pid,w,c
  1002  007B76  26D9               	addwf	fsr2l,f,c
  1003  007B78  5022               	movf	PID_SetTunings@pid+1,w,c
  1004  007B7A  22DA               	addwfc	fsr2h,f,c
  1005  007B7C  CFDE F009          	movff	postinc2,___lltoft@c
  1006  007B80  CFDE F00A          	movff	postinc2,___lltoft@c+1
  1007  007B84  CFDE F00B          	movff	postinc2,___lltoft@c+2
  1008  007B88  CFDE F00C          	movff	postinc2,___lltoft@c+3
  1009  007B8C  EC4A  F038         	call	___lltoft	;wreg free
  1010  007B90  C009  F012         	movff	?___lltoft,___ftdiv@f1
  1011  007B94  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
  1012  007B98  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
  1013  007B9C  0E00               	movlw	0
  1014  007B9E  6E15               	movwf	___ftdiv@f2,c
  1015  007BA0  0E7A               	movlw	122
  1016  007BA2  6E16               	movwf	___ftdiv@f2+1,c
  1017  007BA4  0E44               	movlw	68
  1018  007BA6  6E17               	movwf	___ftdiv@f2+2,c
  1019  007BA8  ECEA  F039         	call	___ftdiv	;wreg free
  1020  007BAC  C012  F02D         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1021  007BB0  C013  F02E         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1022  007BB4  C014  F02F         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1023                           
  1024                           ;pid.c: 95: pid->kp = Kp;
  1025  007BB8  EE20 F009          	lfsr	2,9
  1026  007BBC  5021               	movf	PID_SetTunings@pid,w,c
  1027  007BBE  26D9               	addwf	fsr2l,f,c
  1028  007BC0  5022               	movf	PID_SetTunings@pid+1,w,c
  1029  007BC2  22DA               	addwfc	fsr2h,f,c
  1030  007BC4  C023  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1031  007BC8  C024  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1032  007BCC  C025  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1033                           
  1034                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1035  007BD0  C026  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1036  007BD4  C027  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1037  007BD8  C028  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1038  007BDC  C02D  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1039  007BE0  C02E  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1040  007BE4  C02F  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1041  007BE8  EC5D  F03A         	call	___ftmul	;wreg free
  1042  007BEC  EE20 F00C          	lfsr	2,12
  1043  007BF0  5021               	movf	PID_SetTunings@pid,w,c
  1044  007BF2  26D9               	addwf	fsr2l,f,c
  1045  007BF4  5022               	movf	PID_SetTunings@pid+1,w,c
  1046  007BF6  22DA               	addwfc	fsr2h,f,c
  1047  007BF8  C009  FFDE         	movff	?___ftmul,postinc2
  1048  007BFC  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1049  007C00  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1050                           
  1051                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1052  007C04  C029  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1053  007C08  C02A  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1054  007C0C  C02B  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1055  007C10  C02D  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1056  007C14  C02E  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1057  007C18  C02F  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1058  007C1C  ECEA  F039         	call	___ftdiv	;wreg free
  1059  007C20  EE20 F00F          	lfsr	2,15
  1060  007C24  5021               	movf	PID_SetTunings@pid,w,c
  1061  007C26  26D9               	addwf	fsr2l,f,c
  1062  007C28  5022               	movf	PID_SetTunings@pid+1,w,c
  1063  007C2A  22DA               	addwfc	fsr2h,f,c
  1064  007C2C  C012  FFDE         	movff	?___ftdiv,postinc2
  1065  007C30  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1066  007C34  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1067                           
  1068                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1069  007C38  EE20 F012          	lfsr	2,18
  1070  007C3C  5021               	movf	PID_SetTunings@pid,w,c
  1071  007C3E  26D9               	addwf	fsr2l,f,c
  1072  007C40  5022               	movf	PID_SetTunings@pid+1,w,c
  1073  007C42  22DA               	addwfc	fsr2h,f,c
  1074  007C44  04DE               	decf	postinc2,w,c
  1075  007C46  A4D8               	btfss	status,2,c
  1076  007C48  0012               	return	
  1077                           
  1078                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1079  007C4A  EE20 F009          	lfsr	2,9
  1080  007C4E  5021               	movf	PID_SetTunings@pid,w,c
  1081  007C50  26D9               	addwf	fsr2l,f,c
  1082  007C52  5022               	movf	PID_SetTunings@pid+1,w,c
  1083  007C54  22DA               	addwfc	fsr2h,f,c
  1084  007C56  CFDE F018          	movff	postinc2,___ftneg@f1
  1085  007C5A  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1086  007C5E  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1087  007C62  ECD3  F037         	call	___ftneg	;wreg free
  1088  007C66  EE20 F009          	lfsr	2,9
  1089  007C6A  5021               	movf	PID_SetTunings@pid,w,c
  1090  007C6C  26D9               	addwf	fsr2l,f,c
  1091  007C6E  5022               	movf	PID_SetTunings@pid+1,w,c
  1092  007C70  22DA               	addwfc	fsr2h,f,c
  1093  007C72  C018  FFDE         	movff	?___ftneg,postinc2
  1094  007C76  C019  FFDE         	movff	?___ftneg+1,postinc2
  1095  007C7A  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1096                           
  1097                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1098  007C7E  EE20 F00C          	lfsr	2,12
  1099  007C82  5021               	movf	PID_SetTunings@pid,w,c
  1100  007C84  26D9               	addwf	fsr2l,f,c
  1101  007C86  5022               	movf	PID_SetTunings@pid+1,w,c
  1102  007C88  22DA               	addwfc	fsr2h,f,c
  1103  007C8A  CFDE F018          	movff	postinc2,___ftneg@f1
  1104  007C8E  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1105  007C92  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1106  007C96  ECD3  F037         	call	___ftneg	;wreg free
  1107  007C9A  EE20 F00C          	lfsr	2,12
  1108  007C9E  5021               	movf	PID_SetTunings@pid,w,c
  1109  007CA0  26D9               	addwf	fsr2l,f,c
  1110  007CA2  5022               	movf	PID_SetTunings@pid+1,w,c
  1111  007CA4  22DA               	addwfc	fsr2h,f,c
  1112  007CA6  C018  FFDE         	movff	?___ftneg,postinc2
  1113  007CAA  C019  FFDE         	movff	?___ftneg+1,postinc2
  1114  007CAE  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1115                           
  1116                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1117  007CB2  EE20 F00F          	lfsr	2,15
  1118  007CB6  5021               	movf	PID_SetTunings@pid,w,c
  1119  007CB8  26D9               	addwf	fsr2l,f,c
  1120  007CBA  5022               	movf	PID_SetTunings@pid+1,w,c
  1121  007CBC  22DA               	addwfc	fsr2h,f,c
  1122  007CBE  CFDE F018          	movff	postinc2,___ftneg@f1
  1123  007CC2  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1124  007CC6  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1125  007CCA  ECD3  F037         	call	___ftneg	;wreg free
  1126  007CCE  EE20 F00F          	lfsr	2,15
  1127  007CD2  5021               	movf	PID_SetTunings@pid,w,c
  1128  007CD4  26D9               	addwf	fsr2l,f,c
  1129  007CD6  5022               	movf	PID_SetTunings@pid+1,w,c
  1130  007CD8  22DA               	addwfc	fsr2h,f,c
  1131  007CDA  C018  FFDE         	movff	?___ftneg,postinc2
  1132  007CDE  C019  FFDE         	movff	?___ftneg+1,postinc2
  1133  007CE2  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1134  007CE6  0012               	return	
  1135  007CE8                     __end_of_PID_SetTunings:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           postinc0	equ	0xFEE
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           indf2	equ	0xFDF
  1145                           postinc2	equ	0xFDE
  1146                           postdec2	equ	0xFDD
  1147                           fsr2h	equ	0xFDA
  1148                           fsr2l	equ	0xFD9
  1149                           status	equ	0xFD8
  1150                           
  1151 ;; *************** function ___lltoft *****************
  1152 ;; Defined at:
  1153 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  c               4    8[COMRAM] unsigned long 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  exp             1   16[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  3    8[COMRAM] float 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1167 ;;      Params:         4       0       0       0       0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1169 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1170 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1171 ;;Total ram usage:        9 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    1
  1174 ;; This function calls:
  1175 ;;		___ftpack
  1176 ;; This function is called by:
  1177 ;;		_PID_SetTunings
  1178 ;;		_PID_SetSampleTime
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text5
  1183  007094                     __ptext5:
  1184                           	opt stack 0
  1185  007094                     ___lltoft:
  1186                           	opt stack 27
  1187                           
  1188                           ;incstack = 0
  1189  007094  0E8E               	movlw	142
  1190  007096  6E11               	movwf	___lltoft@exp,c
  1191  007098  D006               	goto	l1287
  1192  00709A                     l1285:
  1193  00709A  90D8               	bcf	status,0,c
  1194  00709C  320C               	rrcf	___lltoft@c+3,f,c
  1195  00709E  320B               	rrcf	___lltoft@c+2,f,c
  1196  0070A0  320A               	rrcf	___lltoft@c+1,f,c
  1197  0070A2  3209               	rrcf	___lltoft@c,f,c
  1198  0070A4  2A11               	incf	___lltoft@exp,f,c
  1199  0070A6                     l1287:
  1200  0070A6  0E00               	movlw	0
  1201  0070A8  1409               	andwf	___lltoft@c,w,c
  1202  0070AA  6E0D               	movwf	??___lltoft& (0+255),c
  1203  0070AC  0E00               	movlw	0
  1204  0070AE  140A               	andwf	___lltoft@c+1,w,c
  1205  0070B0  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1206  0070B2  0E00               	movlw	0
  1207  0070B4  140B               	andwf	___lltoft@c+2,w,c
  1208  0070B6  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1209  0070B8  0EFF               	movlw	255
  1210  0070BA  140C               	andwf	___lltoft@c+3,w,c
  1211  0070BC  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1212  0070BE  500D               	movf	??___lltoft,w,c
  1213  0070C0  100E               	iorwf	??___lltoft+1,w,c
  1214  0070C2  100F               	iorwf	??___lltoft+2,w,c
  1215  0070C4  1010               	iorwf	??___lltoft+3,w,c
  1216  0070C6  A4D8               	btfss	status,2,c
  1217  0070C8  D7E8               	goto	l1285
  1218  0070CA  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1219  0070CE  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1220  0070D2  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1221  0070D6  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1222  0070DA  0E00               	movlw	0
  1223  0070DC  6E05               	movwf	___ftpack@sign,c
  1224  0070DE  ECC0  F038         	call	___ftpack	;wreg free
  1225  0070E2  C001  F009         	movff	?___ftpack,?___lltoft
  1226  0070E6  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1227  0070EA  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1228  0070EE  0012               	return	
  1229  0070F0                     __end_of___lltoft:
  1230                           	opt stack 0
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           postinc0	equ	0xFEE
  1236                           postdec1	equ	0xFE5
  1237                           fsr1l	equ	0xFE1
  1238                           indf2	equ	0xFDF
  1239                           postinc2	equ	0xFDE
  1240                           postdec2	equ	0xFDD
  1241                           fsr2h	equ	0xFDA
  1242                           fsr2l	equ	0xFD9
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function ___ftdiv *****************
  1246 ;; Defined at:
  1247 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  f1              3   17[COMRAM] float 
  1250 ;;  f2              3   20[COMRAM] float 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  f3              3   27[COMRAM] float 
  1253 ;;  sign            1   31[COMRAM] unsigned char 
  1254 ;;  exp             1   30[COMRAM] unsigned char 
  1255 ;;  cntr            1   26[COMRAM] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  3   17[COMRAM] float 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1265 ;;      Params:         6       0       0       0       0       0       0       0       0
  1266 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1267 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1268 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1269 ;;Total ram usage:       15 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    1
  1272 ;; This function calls:
  1273 ;;		___ftpack
  1274 ;; This function is called by:
  1275 ;;		_PID_SetTunings
  1276 ;;		_PID_SetSampleTime
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text6
  1281  0073D4                     __ptext6:
  1282                           	opt stack 0
  1283  0073D4                     ___ftdiv:
  1284                           	opt stack 27
  1285                           
  1286                           ;incstack = 0
  1287  0073D4  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  1288  0073D8  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1289  0073DA  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1290  0073DC  3413               	rlcf	___ftdiv@f1+1,w,c
  1291  0073DE  3618               	rlcf	??___ftdiv& (0+255),f,c
  1292  0073E0  E301               	bnc	u781
  1293  0073E2  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1294  0073E4                     u781:
  1295  0073E4  5018               	movf	??___ftdiv,w,c
  1296  0073E6  6E1F               	movwf	___ftdiv@exp,c
  1297  0073E8  501F               	movf	___ftdiv@exp,w,c
  1298  0073EA  A4D8               	btfss	status,2,c
  1299  0073EC  D007               	goto	l1173
  1300  0073EE  0E00               	movlw	0
  1301  0073F0  6E12               	movwf	?___ftdiv,c
  1302  0073F2  0E00               	movlw	0
  1303  0073F4  6E13               	movwf	?___ftdiv+1,c
  1304  0073F6  0E00               	movlw	0
  1305  0073F8  6E14               	movwf	?___ftdiv+2,c
  1306  0073FA  0012               	return	
  1307  0073FC                     l1173:
  1308  0073FC  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  1309  007400  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1310  007402  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1311  007404  3416               	rlcf	___ftdiv@f2+1,w,c
  1312  007406  3618               	rlcf	??___ftdiv& (0+255),f,c
  1313  007408  E301               	bnc	u801
  1314  00740A  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1315  00740C                     u801:
  1316  00740C  5018               	movf	??___ftdiv,w,c
  1317  00740E  6E20               	movwf	___ftdiv@sign,c
  1318  007410  5020               	movf	___ftdiv@sign,w,c
  1319  007412  A4D8               	btfss	status,2,c
  1320  007414  D007               	goto	l1179
  1321  007416  0E00               	movlw	0
  1322  007418  6E12               	movwf	?___ftdiv,c
  1323  00741A  0E00               	movlw	0
  1324  00741C  6E13               	movwf	?___ftdiv+1,c
  1325  00741E  0E00               	movlw	0
  1326  007420  6E14               	movwf	?___ftdiv+2,c
  1327  007422  0012               	return	
  1328  007424                     l1179:
  1329  007424  0E00               	movlw	0
  1330  007426  6E1C               	movwf	___ftdiv@f3,c
  1331  007428  0E00               	movlw	0
  1332  00742A  6E1D               	movwf	___ftdiv@f3+1,c
  1333  00742C  0E00               	movlw	0
  1334  00742E  6E1E               	movwf	___ftdiv@f3+2,c
  1335  007430  5020               	movf	___ftdiv@sign,w,c
  1336  007432  0F89               	addlw	137
  1337  007434  5E1F               	subwf	___ftdiv@exp,f,c
  1338  007436  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  1339  00743A  5017               	movf	___ftdiv@f2+2,w,c
  1340  00743C  1A20               	xorwf	___ftdiv@sign,f,c
  1341  00743E  0E80               	movlw	128
  1342  007440  1620               	andwf	___ftdiv@sign,f,c
  1343  007442  8E13               	bsf	___ftdiv@f1+1,7,c
  1344  007444  0EFF               	movlw	255
  1345  007446  1612               	andwf	___ftdiv@f1,f,c
  1346  007448  0EFF               	movlw	255
  1347  00744A  1613               	andwf	___ftdiv@f1+1,f,c
  1348  00744C  0E00               	movlw	0
  1349  00744E  1614               	andwf	___ftdiv@f1+2,f,c
  1350  007450  8E16               	bsf	___ftdiv@f2+1,7,c
  1351  007452  0EFF               	movlw	255
  1352  007454  1615               	andwf	___ftdiv@f2,f,c
  1353  007456  0EFF               	movlw	255
  1354  007458  1616               	andwf	___ftdiv@f2+1,f,c
  1355  00745A  0E00               	movlw	0
  1356  00745C  1617               	andwf	___ftdiv@f2+2,f,c
  1357  00745E  0E18               	movlw	24
  1358  007460  6E1B               	movwf	___ftdiv@cntr,c
  1359  007462                     l1199:
  1360  007462  90D8               	bcf	status,0,c
  1361  007464  361C               	rlcf	___ftdiv@f3,f,c
  1362  007466  361D               	rlcf	___ftdiv@f3+1,f,c
  1363  007468  361E               	rlcf	___ftdiv@f3+2,f,c
  1364  00746A  5015               	movf	___ftdiv@f2,w,c
  1365  00746C  5C12               	subwf	___ftdiv@f1,w,c
  1366  00746E  5016               	movf	___ftdiv@f2+1,w,c
  1367  007470  5813               	subwfb	___ftdiv@f1+1,w,c
  1368  007472  5017               	movf	___ftdiv@f2+2,w,c
  1369  007474  5814               	subwfb	___ftdiv@f1+2,w,c
  1370  007476  A0D8               	btfss	status,0,c
  1371  007478  D007               	goto	l384
  1372  00747A  5015               	movf	___ftdiv@f2,w,c
  1373  00747C  5E12               	subwf	___ftdiv@f1,f,c
  1374  00747E  5016               	movf	___ftdiv@f2+1,w,c
  1375  007480  5A13               	subwfb	___ftdiv@f1+1,f,c
  1376  007482  5017               	movf	___ftdiv@f2+2,w,c
  1377  007484  5A14               	subwfb	___ftdiv@f1+2,f,c
  1378  007486  801C               	bsf	___ftdiv@f3,0,c
  1379  007488                     l384:
  1380  007488  90D8               	bcf	status,0,c
  1381  00748A  3612               	rlcf	___ftdiv@f1,f,c
  1382  00748C  3613               	rlcf	___ftdiv@f1+1,f,c
  1383  00748E  3614               	rlcf	___ftdiv@f1+2,f,c
  1384  007490  2E1B               	decfsz	___ftdiv@cntr,f,c
  1385  007492  D7E7               	goto	l1199
  1386  007494  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  1387  007498  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1388  00749C  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1389  0074A0  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  1390  0074A4  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  1391  0074A8  ECC0  F038         	call	___ftpack	;wreg free
  1392  0074AC  C001  F012         	movff	?___ftpack,?___ftdiv
  1393  0074B0  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  1394  0074B4  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  1395  0074B8  0012               	return	
  1396  0074BA                     __end_of___ftdiv:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           postinc0	equ	0xFEE
  1403                           postdec1	equ	0xFE5
  1404                           fsr1l	equ	0xFE1
  1405                           indf2	equ	0xFDF
  1406                           postinc2	equ	0xFDE
  1407                           postdec2	equ	0xFDD
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _PID_SetOutputLimits *****************
  1413 ;; Defined at:
  1414 ;;		line 126 in file "pid.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  pid             2   12[COMRAM] PTR struct .
  1417 ;;		 -> main@PID(45), 
  1418 ;;  Min             3   14[COMRAM] float 
  1419 ;;  Max             3   17[COMRAM] float 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1431 ;;      Params:         8       0       0       0       0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1434 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1435 ;;Total ram usage:        8 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    1
  1438 ;; This function calls:
  1439 ;;		___ftge
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;;		_PID_init
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447  007968                     __ptext7:
  1448                           	opt stack 0
  1449  007968                     _PID_SetOutputLimits:
  1450                           	opt stack 28
  1451                           
  1452                           ;pid.c: 127: if (Min >= Max) {
  1453                           
  1454                           ;incstack = 0
  1455  007968  C00F  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  1456  00796C  C010  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  1457  007970  C011  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  1458  007974  C012  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  1459  007978  C013  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  1460  00797C  C014  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  1461  007980  EC78  F038         	call	___ftge	;wreg free
  1462  007984  B0D8               	btfsc	status,0,c
  1463  007986  0012               	return	
  1464                           
  1465                           ;pid.c: 129: }
  1466                           ;pid.c: 130: pid->outMin = Min;
  1467                           
  1468                           ;pid.c: 128: return;
  1469  007988  EE20 F026          	lfsr	2,38
  1470  00798C  500D               	movf	PID_SetOutputLimits@pid,w,c
  1471  00798E  26D9               	addwf	fsr2l,f,c
  1472  007990  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1473  007992  22DA               	addwfc	fsr2h,f,c
  1474  007994  C00F  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  1475  007998  C010  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  1476  00799C  C011  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  1477                           
  1478                           ;pid.c: 131: pid->outMax = Max;
  1479  0079A0  EE20 F029          	lfsr	2,41
  1480  0079A4  500D               	movf	PID_SetOutputLimits@pid,w,c
  1481  0079A6  26D9               	addwf	fsr2l,f,c
  1482  0079A8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1483  0079AA  22DA               	addwfc	fsr2h,f,c
  1484  0079AC  C012  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  1485  0079B0  C013  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  1486  0079B4  C014  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  1487                           
  1488                           ;pid.c: 133: if (pid->inAuto) {
  1489  0079B8  EE20 F02C          	lfsr	2,44
  1490  0079BC  500D               	movf	PID_SetOutputLimits@pid,w,c
  1491  0079BE  26D9               	addwf	fsr2l,f,c
  1492  0079C0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1493  0079C2  22DA               	addwfc	fsr2h,f,c
  1494  0079C4  50DF               	movf	indf2,w,c
  1495  0079C6  B4D8               	btfsc	status,2,c
  1496  0079C8  0012               	return	
  1497                           
  1498                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  1499  0079CA  EE20 F029          	lfsr	2,41
  1500  0079CE  500D               	movf	PID_SetOutputLimits@pid,w,c
  1501  0079D0  26D9               	addwf	fsr2l,f,c
  1502  0079D2  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1503  0079D4  22DA               	addwfc	fsr2h,f,c
  1504  0079D6  CFDE F001          	movff	postinc2,___ftge@ff1
  1505  0079DA  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1506  0079DE  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1507  0079E2  EE20 F016          	lfsr	2,22
  1508  0079E6  500D               	movf	PID_SetOutputLimits@pid,w,c
  1509  0079E8  26D9               	addwf	fsr2l,f,c
  1510  0079EA  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1511  0079EC  22DA               	addwfc	fsr2h,f,c
  1512  0079EE  CFDE F004          	movff	postinc2,___ftge@ff2
  1513  0079F2  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1514  0079F6  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1515  0079FA  EC78  F038         	call	___ftge	;wreg free
  1516  0079FE  B0D8               	btfsc	status,0,c
  1517  007A00  D003               	goto	l1303
  1518                           
  1519                           ;pid.c: 135: pid->myOutput = pid->outMax;
  1520  007A02  EE20 F029          	lfsr	2,41
  1521  007A06  D01E               	goto	L1
  1522  007A08                     l1303:
  1523  007A08  EE20 F016          	lfsr	2,22
  1524  007A0C  500D               	movf	PID_SetOutputLimits@pid,w,c
  1525  007A0E  26D9               	addwf	fsr2l,f,c
  1526  007A10  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1527  007A12  22DA               	addwfc	fsr2h,f,c
  1528  007A14  CFDE F001          	movff	postinc2,___ftge@ff1
  1529  007A18  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1530  007A1C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1531  007A20  EE20 F026          	lfsr	2,38
  1532  007A24  500D               	movf	PID_SetOutputLimits@pid,w,c
  1533  007A26  26D9               	addwf	fsr2l,f,c
  1534  007A28  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1535  007A2A  22DA               	addwfc	fsr2h,f,c
  1536  007A2C  CFDE F004          	movff	postinc2,___ftge@ff2
  1537  007A30  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1538  007A34  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1539  007A38  EC78  F038         	call	___ftge	;wreg free
  1540  007A3C  B0D8               	btfsc	status,0,c
  1541  007A3E  D012               	goto	l1307
  1542                           
  1543                           ;pid.c: 137: pid->myOutput = pid->outMin;
  1544  007A40  EE20 F026          	lfsr	2,38
  1545  007A44                     L1:
  1546  007A44  500D               	movf	PID_SetOutputLimits@pid,w,c
  1547  007A46  26D9               	addwf	fsr2l,f,c
  1548  007A48  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1549  007A4A  22DA               	addwfc	fsr2h,f,c
  1550  007A4C  EE10 F016          	lfsr	1,22
  1551  007A50  500D               	movf	PID_SetOutputLimits@pid,w,c
  1552  007A52  26E1               	addwf	fsr1l,f,c
  1553  007A54  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1554  007A56  22E2               	addwfc	fsr1h,f,c
  1555  007A58  CFDE FFE6          	movff	postinc2,postinc1
  1556  007A5C  CFDE FFE6          	movff	postinc2,postinc1
  1557  007A60  CFDE FFE6          	movff	postinc2,postinc1
  1558  007A64                     l1307:
  1559                           
  1560                           ;pid.c: 138: }
  1561                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  1562  007A64  EE20 F029          	lfsr	2,41
  1563  007A68  500D               	movf	PID_SetOutputLimits@pid,w,c
  1564  007A6A  26D9               	addwf	fsr2l,f,c
  1565  007A6C  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1566  007A6E  22DA               	addwfc	fsr2h,f,c
  1567  007A70  CFDE F001          	movff	postinc2,___ftge@ff1
  1568  007A74  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1569  007A78  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1570  007A7C  EE20 F01C          	lfsr	2,28
  1571  007A80  500D               	movf	PID_SetOutputLimits@pid,w,c
  1572  007A82  26D9               	addwf	fsr2l,f,c
  1573  007A84  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1574  007A86  22DA               	addwfc	fsr2h,f,c
  1575  007A88  CFDE F004          	movff	postinc2,___ftge@ff2
  1576  007A8C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1577  007A90  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1578  007A94  EC78  F038         	call	___ftge	;wreg free
  1579  007A98  B0D8               	btfsc	status,0,c
  1580  007A9A  D013               	goto	l1311
  1581                           
  1582                           ;pid.c: 141: pid->ITerm = pid->outMax;
  1583  007A9C  EE20 F029          	lfsr	2,41
  1584  007AA0  500D               	movf	PID_SetOutputLimits@pid,w,c
  1585  007AA2  26D9               	addwf	fsr2l,f,c
  1586  007AA4  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1587  007AA6  22DA               	addwfc	fsr2h,f,c
  1588  007AA8  EE10 F01C          	lfsr	1,28
  1589  007AAC  500D               	movf	PID_SetOutputLimits@pid,w,c
  1590  007AAE  26E1               	addwf	fsr1l,f,c
  1591  007AB0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1592  007AB2  22E2               	addwfc	fsr1h,f,c
  1593  007AB4  CFDE FFE6          	movff	postinc2,postinc1
  1594  007AB8  CFDE FFE6          	movff	postinc2,postinc1
  1595  007ABC  CFDE FFE6          	movff	postinc2,postinc1
  1596                           
  1597                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  1598  007AC0  0012               	return	
  1599  007AC2                     l1311:
  1600  007AC2  EE20 F01C          	lfsr	2,28
  1601  007AC6  500D               	movf	PID_SetOutputLimits@pid,w,c
  1602  007AC8  26D9               	addwf	fsr2l,f,c
  1603  007ACA  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1604  007ACC  22DA               	addwfc	fsr2h,f,c
  1605  007ACE  CFDE F001          	movff	postinc2,___ftge@ff1
  1606  007AD2  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1607  007AD6  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1608  007ADA  EE20 F026          	lfsr	2,38
  1609  007ADE  500D               	movf	PID_SetOutputLimits@pid,w,c
  1610  007AE0  26D9               	addwf	fsr2l,f,c
  1611  007AE2  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1612  007AE4  22DA               	addwfc	fsr2h,f,c
  1613  007AE6  CFDE F004          	movff	postinc2,___ftge@ff2
  1614  007AEA  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1615  007AEE  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1616  007AF2  EC78  F038         	call	___ftge	;wreg free
  1617  007AF6  B0D8               	btfsc	status,0,c
  1618  007AF8  0012               	return	
  1619                           
  1620                           ;pid.c: 143: pid->ITerm = pid->outMin;
  1621  007AFA  EE20 F026          	lfsr	2,38
  1622  007AFE  500D               	movf	PID_SetOutputLimits@pid,w,c
  1623  007B00  26D9               	addwf	fsr2l,f,c
  1624  007B02  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1625  007B04  22DA               	addwfc	fsr2h,f,c
  1626  007B06  EE10 F01C          	lfsr	1,28
  1627  007B0A  500D               	movf	PID_SetOutputLimits@pid,w,c
  1628  007B0C  26E1               	addwf	fsr1l,f,c
  1629  007B0E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1630  007B10  22E2               	addwfc	fsr1h,f,c
  1631  007B12  CFDE FFE6          	movff	postinc2,postinc1
  1632  007B16  CFDE FFE6          	movff	postinc2,postinc1
  1633  007B1A  CFDE FFE6          	movff	postinc2,postinc1
  1634  007B1E  0012               	return	
  1635  007B20                     __end_of_PID_SetOutputLimits:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           postinc0	equ	0xFEE
  1642                           postinc1	equ	0xFE6
  1643                           postdec1	equ	0xFE5
  1644                           fsr1h	equ	0xFE2
  1645                           fsr1l	equ	0xFE1
  1646                           indf2	equ	0xFDF
  1647                           postinc2	equ	0xFDE
  1648                           postdec2	equ	0xFDD
  1649                           fsr2h	equ	0xFDA
  1650                           fsr2l	equ	0xFD9
  1651                           status	equ	0xFD8
  1652                           
  1653 ;; *************** function _PID_SetControllerDirection *****************
  1654 ;; Defined at:
  1655 ;;		line 183 in file "pid.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  pid             2   26[COMRAM] PTR struct .
  1658 ;;		 -> main@PID(45), 
  1659 ;;  Direction       1   28[COMRAM] enum E7
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         3       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1674 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1675 ;;Total ram usage:        4 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		___ftneg
  1680 ;; This function is called by:
  1681 ;;		_PID_init
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text8
  1686  007300                     __ptext8:
  1687                           	opt stack 0
  1688  007300                     _PID_SetControllerDirection:
  1689                           	opt stack 28
  1690                           
  1691                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  1692                           
  1693                           ;incstack = 0
  1694  007300  EE20 F02C          	lfsr	2,44
  1695  007304  501B               	movf	PID_SetControllerDirection@pid,w,c
  1696  007306  26D9               	addwf	fsr2l,f,c
  1697  007308  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1698  00730A  22DA               	addwfc	fsr2h,f,c
  1699  00730C  50DF               	movf	indf2,w,c
  1700  00730E  B4D8               	btfsc	status,2,c
  1701  007310  D058               	goto	l1321
  1702  007312  EE20 F012          	lfsr	2,18
  1703  007316  501B               	movf	PID_SetControllerDirection@pid,w,c
  1704  007318  26D9               	addwf	fsr2l,f,c
  1705  00731A  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1706  00731C  22DA               	addwfc	fsr2h,f,c
  1707  00731E  501D               	movf	PID_SetControllerDirection@Direction,w,c
  1708  007320  18DE               	xorwf	postinc2,w,c
  1709  007322  B4D8               	btfsc	status,2,c
  1710  007324  D04E               	goto	l1321
  1711                           
  1712                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  1713  007326  EE20 F009          	lfsr	2,9
  1714  00732A  501B               	movf	PID_SetControllerDirection@pid,w,c
  1715  00732C  26D9               	addwf	fsr2l,f,c
  1716  00732E  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1717  007330  22DA               	addwfc	fsr2h,f,c
  1718  007332  CFDE F018          	movff	postinc2,___ftneg@f1
  1719  007336  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1720  00733A  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1721  00733E  ECD3  F037         	call	___ftneg	;wreg free
  1722  007342  EE20 F009          	lfsr	2,9
  1723  007346  501B               	movf	PID_SetControllerDirection@pid,w,c
  1724  007348  26D9               	addwf	fsr2l,f,c
  1725  00734A  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1726  00734C  22DA               	addwfc	fsr2h,f,c
  1727  00734E  C018  FFDE         	movff	?___ftneg,postinc2
  1728  007352  C019  FFDE         	movff	?___ftneg+1,postinc2
  1729  007356  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1730                           
  1731                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  1732  00735A  EE20 F00C          	lfsr	2,12
  1733  00735E  501B               	movf	PID_SetControllerDirection@pid,w,c
  1734  007360  26D9               	addwf	fsr2l,f,c
  1735  007362  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1736  007364  22DA               	addwfc	fsr2h,f,c
  1737  007366  CFDE F018          	movff	postinc2,___ftneg@f1
  1738  00736A  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1739  00736E  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1740  007372  ECD3  F037         	call	___ftneg	;wreg free
  1741  007376  EE20 F00C          	lfsr	2,12
  1742  00737A  501B               	movf	PID_SetControllerDirection@pid,w,c
  1743  00737C  26D9               	addwf	fsr2l,f,c
  1744  00737E  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1745  007380  22DA               	addwfc	fsr2h,f,c
  1746  007382  C018  FFDE         	movff	?___ftneg,postinc2
  1747  007386  C019  FFDE         	movff	?___ftneg+1,postinc2
  1748  00738A  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1749                           
  1750                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  1751  00738E  EE20 F00F          	lfsr	2,15
  1752  007392  501B               	movf	PID_SetControllerDirection@pid,w,c
  1753  007394  26D9               	addwf	fsr2l,f,c
  1754  007396  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1755  007398  22DA               	addwfc	fsr2h,f,c
  1756  00739A  CFDE F018          	movff	postinc2,___ftneg@f1
  1757  00739E  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1758  0073A2  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1759  0073A6  ECD3  F037         	call	___ftneg	;wreg free
  1760  0073AA  EE20 F00F          	lfsr	2,15
  1761  0073AE  501B               	movf	PID_SetControllerDirection@pid,w,c
  1762  0073B0  26D9               	addwf	fsr2l,f,c
  1763  0073B2  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1764  0073B4  22DA               	addwfc	fsr2h,f,c
  1765  0073B6  C018  FFDE         	movff	?___ftneg,postinc2
  1766  0073BA  C019  FFDE         	movff	?___ftneg+1,postinc2
  1767  0073BE  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1768  0073C2                     l1321:
  1769                           
  1770                           ;pid.c: 188: }
  1771                           ;pid.c: 189: pid->controllerDirection = Direction;
  1772  0073C2  EE20 F012          	lfsr	2,18
  1773  0073C6  501B               	movf	PID_SetControllerDirection@pid,w,c
  1774  0073C8  26D9               	addwf	fsr2l,f,c
  1775  0073CA  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1776  0073CC  22DA               	addwfc	fsr2h,f,c
  1777  0073CE  C01D  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  1778  0073D2  0012               	return		;funcret
  1779  0073D4                     __end_of_PID_SetControllerDirection:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           postinc0	equ	0xFEE
  1786                           postinc1	equ	0xFE6
  1787                           postdec1	equ	0xFE5
  1788                           fsr1h	equ	0xFE2
  1789                           fsr1l	equ	0xFE1
  1790                           indf2	equ	0xFDF
  1791                           postinc2	equ	0xFDE
  1792                           postdec2	equ	0xFDD
  1793                           fsr2h	equ	0xFDA
  1794                           fsr2l	equ	0xFD9
  1795                           status	equ	0xFD8
  1796                           
  1797 ;; *************** function _PID_SetMode *****************
  1798 ;; Defined at:
  1799 ;;		line 153 in file "pid.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  pid             2   11[COMRAM] PTR struct .
  1802 ;;		 -> main@PID(45), 
  1803 ;;  Mode            1   13[COMRAM] enum E3
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  newAuto         1   15[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1815 ;;      Params:         3       0       0       0       0       0       0       0       0
  1816 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1817 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1818 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1819 ;;Total ram usage:        5 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    2
  1822 ;; This function calls:
  1823 ;;		_PID_Initialize
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text9
  1830  007054                     __ptext9:
  1831                           	opt stack 0
  1832  007054                     _PID_SetMode:
  1833                           	opt stack 28
  1834                           
  1835                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  1836                           
  1837                           ;incstack = 0
  1838  007054  040E               	decf	PID_SetMode@Mode,w,c
  1839  007056  A4D8               	btfss	status,2,c
  1840  007058  D002               	goto	u1290
  1841  00705A  0E01               	movlw	1
  1842  00705C  D001               	goto	u1300
  1843  00705E                     u1290:
  1844  00705E  0E00               	movlw	0
  1845  007060                     u1300:
  1846  007060  6E10               	movwf	PID_SetMode@newAuto,c
  1847                           
  1848                           ;pid.c: 156: if(newAuto != pid->inAuto)
  1849  007062  EE20 F02C          	lfsr	2,44
  1850  007066  500C               	movf	PID_SetMode@pid,w,c
  1851  007068  26D9               	addwf	fsr2l,f,c
  1852  00706A  500D               	movf	PID_SetMode@pid+1,w,c
  1853  00706C  22DA               	addwfc	fsr2h,f,c
  1854  00706E  5010               	movf	PID_SetMode@newAuto,w,c
  1855  007070  18DE               	xorwf	postinc2,w,c
  1856  007072  B4D8               	btfsc	status,2,c
  1857  007074  D006               	goto	l1443
  1858                           
  1859                           ;pid.c: 157: {
  1860                           ;pid.c: 158: PID_Initialize(pid);
  1861  007076  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  1862  00707A  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  1863  00707E  ECD7  F03A         	call	_PID_Initialize	;wreg free
  1864  007082                     l1443:
  1865                           
  1866                           ;pid.c: 159: }
  1867                           ;pid.c: 160: pid->inAuto = newAuto;
  1868  007082  EE20 F02C          	lfsr	2,44
  1869  007086  500C               	movf	PID_SetMode@pid,w,c
  1870  007088  26D9               	addwf	fsr2l,f,c
  1871  00708A  500D               	movf	PID_SetMode@pid+1,w,c
  1872  00708C  22DA               	addwfc	fsr2h,f,c
  1873  00708E  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  1874  007092  0012               	return		;funcret
  1875  007094                     __end_of_PID_SetMode:
  1876                           	opt stack 0
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           postinc0	equ	0xFEE
  1882                           postinc1	equ	0xFE6
  1883                           postdec1	equ	0xFE5
  1884                           fsr1h	equ	0xFE2
  1885                           fsr1l	equ	0xFE1
  1886                           indf2	equ	0xFDF
  1887                           postinc2	equ	0xFDE
  1888                           postdec2	equ	0xFDD
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8
  1892                           
  1893 ;; *************** function _PID_Initialize *****************
  1894 ;; Defined at:
  1895 ;;		line 167 in file "pid.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  pid             2    9[COMRAM] PTR struct .
  1898 ;;		 -> main@PID(45), 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1910 ;;      Params:         2       0       0       0       0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1913 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1914 ;;Total ram usage:        2 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    1
  1917 ;; This function calls:
  1918 ;;		___ftge
  1919 ;; This function is called by:
  1920 ;;		_PID_SetMode
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text10
  1925  0075AE                     __ptext10:
  1926                           	opt stack 0
  1927  0075AE                     _PID_Initialize:
  1928                           	opt stack 28
  1929                           
  1930                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  1931                           
  1932                           ;incstack = 0
  1933  0075AE  EE20 F016          	lfsr	2,22
  1934  0075B2  500A               	movf	PID_Initialize@pid,w,c
  1935  0075B4  26D9               	addwf	fsr2l,f,c
  1936  0075B6  500B               	movf	PID_Initialize@pid+1,w,c
  1937  0075B8  22DA               	addwfc	fsr2h,f,c
  1938  0075BA  EE10 F01C          	lfsr	1,28
  1939  0075BE  500A               	movf	PID_Initialize@pid,w,c
  1940  0075C0  26E1               	addwf	fsr1l,f,c
  1941  0075C2  500B               	movf	PID_Initialize@pid+1,w,c
  1942  0075C4  22E2               	addwfc	fsr1h,f,c
  1943  0075C6  CFDE FFE6          	movff	postinc2,postinc1
  1944  0075CA  CFDE FFE6          	movff	postinc2,postinc1
  1945  0075CE  CFDE FFE6          	movff	postinc2,postinc1
  1946                           
  1947                           ;pid.c: 169: pid->lastInput = pid->myInput;
  1948  0075D2  EE20 F013          	lfsr	2,19
  1949  0075D6  500A               	movf	PID_Initialize@pid,w,c
  1950  0075D8  26D9               	addwf	fsr2l,f,c
  1951  0075DA  500B               	movf	PID_Initialize@pid+1,w,c
  1952  0075DC  22DA               	addwfc	fsr2h,f,c
  1953  0075DE  EE10 F01F          	lfsr	1,31
  1954  0075E2  500A               	movf	PID_Initialize@pid,w,c
  1955  0075E4  26E1               	addwf	fsr1l,f,c
  1956  0075E6  500B               	movf	PID_Initialize@pid+1,w,c
  1957  0075E8  22E2               	addwfc	fsr1h,f,c
  1958  0075EA  CFDE FFE6          	movff	postinc2,postinc1
  1959  0075EE  CFDE FFE6          	movff	postinc2,postinc1
  1960  0075F2  CFDE FFE6          	movff	postinc2,postinc1
  1961                           
  1962                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  1963  0075F6  EE20 F029          	lfsr	2,41
  1964  0075FA  500A               	movf	PID_Initialize@pid,w,c
  1965  0075FC  26D9               	addwf	fsr2l,f,c
  1966  0075FE  500B               	movf	PID_Initialize@pid+1,w,c
  1967  007600  22DA               	addwfc	fsr2h,f,c
  1968  007602  CFDE F001          	movff	postinc2,___ftge@ff1
  1969  007606  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1970  00760A  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1971  00760E  EE20 F01C          	lfsr	2,28
  1972  007612  500A               	movf	PID_Initialize@pid,w,c
  1973  007614  26D9               	addwf	fsr2l,f,c
  1974  007616  500B               	movf	PID_Initialize@pid+1,w,c
  1975  007618  22DA               	addwfc	fsr2h,f,c
  1976  00761A  CFDE F004          	movff	postinc2,___ftge@ff2
  1977  00761E  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1978  007622  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1979  007626  EC78  F038         	call	___ftge	;wreg free
  1980  00762A  B0D8               	btfsc	status,0,c
  1981  00762C  D013               	goto	l1353
  1982                           
  1983                           ;pid.c: 171: pid->ITerm = pid->outMax;
  1984  00762E  EE20 F029          	lfsr	2,41
  1985  007632  500A               	movf	PID_Initialize@pid,w,c
  1986  007634  26D9               	addwf	fsr2l,f,c
  1987  007636  500B               	movf	PID_Initialize@pid+1,w,c
  1988  007638  22DA               	addwfc	fsr2h,f,c
  1989  00763A  EE10 F01C          	lfsr	1,28
  1990  00763E  500A               	movf	PID_Initialize@pid,w,c
  1991  007640  26E1               	addwf	fsr1l,f,c
  1992  007642  500B               	movf	PID_Initialize@pid+1,w,c
  1993  007644  22E2               	addwfc	fsr1h,f,c
  1994  007646  CFDE FFE6          	movff	postinc2,postinc1
  1995  00764A  CFDE FFE6          	movff	postinc2,postinc1
  1996  00764E  CFDE FFE6          	movff	postinc2,postinc1
  1997                           
  1998                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  1999  007652  0012               	return	
  2000  007654                     l1353:
  2001  007654  EE20 F01C          	lfsr	2,28
  2002  007658  500A               	movf	PID_Initialize@pid,w,c
  2003  00765A  26D9               	addwf	fsr2l,f,c
  2004  00765C  500B               	movf	PID_Initialize@pid+1,w,c
  2005  00765E  22DA               	addwfc	fsr2h,f,c
  2006  007660  CFDE F001          	movff	postinc2,___ftge@ff1
  2007  007664  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2008  007668  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2009  00766C  EE20 F026          	lfsr	2,38
  2010  007670  500A               	movf	PID_Initialize@pid,w,c
  2011  007672  26D9               	addwf	fsr2l,f,c
  2012  007674  500B               	movf	PID_Initialize@pid+1,w,c
  2013  007676  22DA               	addwfc	fsr2h,f,c
  2014  007678  CFDE F004          	movff	postinc2,___ftge@ff2
  2015  00767C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2016  007680  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2017  007684  EC78  F038         	call	___ftge	;wreg free
  2018  007688  B0D8               	btfsc	status,0,c
  2019  00768A  0012               	return	
  2020                           
  2021                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2022  00768C  EE20 F026          	lfsr	2,38
  2023  007690  500A               	movf	PID_Initialize@pid,w,c
  2024  007692  26D9               	addwf	fsr2l,f,c
  2025  007694  500B               	movf	PID_Initialize@pid+1,w,c
  2026  007696  22DA               	addwfc	fsr2h,f,c
  2027  007698  EE10 F01C          	lfsr	1,28
  2028  00769C  500A               	movf	PID_Initialize@pid,w,c
  2029  00769E  26E1               	addwf	fsr1l,f,c
  2030  0076A0  500B               	movf	PID_Initialize@pid+1,w,c
  2031  0076A2  22E2               	addwfc	fsr1h,f,c
  2032  0076A4  CFDE FFE6          	movff	postinc2,postinc1
  2033  0076A8  CFDE FFE6          	movff	postinc2,postinc1
  2034  0076AC  CFDE FFE6          	movff	postinc2,postinc1
  2035  0076B0  0012               	return	
  2036  0076B2                     __end_of_PID_Initialize:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           postinc0	equ	0xFEE
  2043                           postinc1	equ	0xFE6
  2044                           postdec1	equ	0xFE5
  2045                           fsr1h	equ	0xFE2
  2046                           fsr1l	equ	0xFE1
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           postdec2	equ	0xFDD
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function _PID_Compute *****************
  2055 ;; Defined at:
  2056 ;;		line 43 in file "pid.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  pid             2   38[COMRAM] PTR struct .
  2059 ;;		 -> main@PID(45), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  output          3   52[COMRAM] float 
  2062 ;;  input           3   49[COMRAM] float 
  2063 ;;  error           3   46[COMRAM] float 
  2064 ;;  dInput          3   40[COMRAM] float 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      unsigned char 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2074 ;;      Params:         2       0       0       0       0       0       0       0       0
  2075 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2077 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2078 ;;Total ram usage:       17 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    2
  2081 ;; This function calls:
  2082 ;;		___ftadd
  2083 ;;		___ftge
  2084 ;;		___ftmul
  2085 ;;		___ftneg
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text11
  2092  007CE8                     __ptext11:
  2093                           	opt stack 0
  2094  007CE8                     _PID_Compute:
  2095                           	opt stack 28
  2096                           
  2097                           ;pid.c: 44: if (!pid->inAuto) {
  2098                           
  2099                           ;incstack = 0
  2100  007CE8  EE20 F02C          	lfsr	2,44
  2101  007CEC  5027               	movf	PID_Compute@pid,w,c
  2102  007CEE  26D9               	addwf	fsr2l,f,c
  2103  007CF0  5028               	movf	PID_Compute@pid+1,w,c
  2104  007CF2  22DA               	addwfc	fsr2h,f,c
  2105  007CF4  50DF               	movf	indf2,w,c
  2106  007CF6  B4D8               	btfsc	status,2,c
  2107  007CF8  0012               	return	
  2108                           
  2109                           ;pid.c: 46: }
  2110                           ;pid.c: 51: FloatType input = pid->myInput;
  2111                           
  2112                           ;pid.c: 45: return 0;
  2113                           ;	Return value of _PID_Compute is never used
  2114  007CFA  EE20 F013          	lfsr	2,19
  2115  007CFE  5027               	movf	PID_Compute@pid,w,c
  2116  007D00  26D9               	addwf	fsr2l,f,c
  2117  007D02  5028               	movf	PID_Compute@pid+1,w,c
  2118  007D04  22DA               	addwfc	fsr2h,f,c
  2119  007D06  CFDE F032          	movff	postinc2,PID_Compute@input
  2120  007D0A  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2121  007D0E  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2122                           
  2123                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2124  007D12  C032  F018         	movff	PID_Compute@input,___ftneg@f1
  2125  007D16  C033  F019         	movff	PID_Compute@input+1,___ftneg@f1+1
  2126  007D1A  C034  F01A         	movff	PID_Compute@input+2,___ftneg@f1+2
  2127  007D1E  ECD3  F037         	call	___ftneg	;wreg free
  2128  007D22  C018  F01B         	movff	?___ftneg,___ftadd@f1
  2129  007D26  C019  F01C         	movff	?___ftneg+1,___ftadd@f1+1
  2130  007D2A  C01A  F01D         	movff	?___ftneg+2,___ftadd@f1+2
  2131  007D2E  EE20 F019          	lfsr	2,25
  2132  007D32  5027               	movf	PID_Compute@pid,w,c
  2133  007D34  26D9               	addwf	fsr2l,f,c
  2134  007D36  5028               	movf	PID_Compute@pid+1,w,c
  2135  007D38  22DA               	addwfc	fsr2h,f,c
  2136  007D3A  CFDE F01E          	movff	postinc2,___ftadd@f2
  2137  007D3E  CFDE F01F          	movff	postinc2,___ftadd@f2+1
  2138  007D42  CFDD F020          	movff	postdec2,___ftadd@f2+2
  2139  007D46  ECDE  F03B         	call	___ftadd	;wreg free
  2140  007D4A  C01B  F02F         	movff	?___ftadd,PID_Compute@error
  2141  007D4E  C01C  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2142  007D52  C01D  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2143                           
  2144                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2145  007D56  EE20 F01C          	lfsr	2,28
  2146  007D5A  5027               	movf	PID_Compute@pid,w,c
  2147  007D5C  26D9               	addwf	fsr2l,f,c
  2148  007D5E  5028               	movf	PID_Compute@pid+1,w,c
  2149  007D60  22DA               	addwfc	fsr2h,f,c
  2150  007D62  CFDE F01B          	movff	postinc2,___ftadd@f1
  2151  007D66  CFDE F01C          	movff	postinc2,___ftadd@f1+1
  2152  007D6A  CFDD F01D          	movff	postdec2,___ftadd@f1+2
  2153  007D6E  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2154  007D72  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2155  007D76  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2156  007D7A  EE20 F00C          	lfsr	2,12
  2157  007D7E  5027               	movf	PID_Compute@pid,w,c
  2158  007D80  26D9               	addwf	fsr2l,f,c
  2159  007D82  5028               	movf	PID_Compute@pid+1,w,c
  2160  007D84  22DA               	addwfc	fsr2h,f,c
  2161  007D86  CFDE F009          	movff	postinc2,___ftmul@f1
  2162  007D8A  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2163  007D8E  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2164  007D92  EC5D  F03A         	call	___ftmul	;wreg free
  2165  007D96  C009  F01E         	movff	?___ftmul,___ftadd@f2
  2166  007D9A  C00A  F01F         	movff	?___ftmul+1,___ftadd@f2+1
  2167  007D9E  C00B  F020         	movff	?___ftmul+2,___ftadd@f2+2
  2168  007DA2  ECDE  F03B         	call	___ftadd	;wreg free
  2169  007DA6  EE20 F01C          	lfsr	2,28
  2170  007DAA  5027               	movf	PID_Compute@pid,w,c
  2171  007DAC  26D9               	addwf	fsr2l,f,c
  2172  007DAE  5028               	movf	PID_Compute@pid+1,w,c
  2173  007DB0  22DA               	addwfc	fsr2h,f,c
  2174  007DB2  C01B  FFDE         	movff	?___ftadd,postinc2
  2175  007DB6  C01C  FFDE         	movff	?___ftadd+1,postinc2
  2176  007DBA  C01D  FFDE         	movff	?___ftadd+2,postinc2
  2177                           
  2178                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2179  007DBE  EE20 F029          	lfsr	2,41
  2180  007DC2  5027               	movf	PID_Compute@pid,w,c
  2181  007DC4  26D9               	addwf	fsr2l,f,c
  2182  007DC6  5028               	movf	PID_Compute@pid+1,w,c
  2183  007DC8  22DA               	addwfc	fsr2h,f,c
  2184  007DCA  CFDE F001          	movff	postinc2,___ftge@ff1
  2185  007DCE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2186  007DD2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2187  007DD6  EE20 F01C          	lfsr	2,28
  2188  007DDA  5027               	movf	PID_Compute@pid,w,c
  2189  007DDC  26D9               	addwf	fsr2l,f,c
  2190  007DDE  5028               	movf	PID_Compute@pid+1,w,c
  2191  007DE0  22DA               	addwfc	fsr2h,f,c
  2192  007DE2  CFDE F004          	movff	postinc2,___ftge@ff2
  2193  007DE6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2194  007DEA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2195  007DEE  EC78  F038         	call	___ftge	;wreg free
  2196  007DF2  B0D8               	btfsc	status,0,c
  2197  007DF4  D003               	goto	l1459
  2198                           
  2199                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2200  007DF6  EE20 F029          	lfsr	2,41
  2201  007DFA  D01E               	goto	L2
  2202  007DFC                     l1459:
  2203                           
  2204                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2205  007DFC  EE20 F01C          	lfsr	2,28
  2206  007E00  5027               	movf	PID_Compute@pid,w,c
  2207  007E02  26D9               	addwf	fsr2l,f,c
  2208  007E04  5028               	movf	PID_Compute@pid+1,w,c
  2209  007E06  22DA               	addwfc	fsr2h,f,c
  2210  007E08  CFDE F001          	movff	postinc2,___ftge@ff1
  2211  007E0C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2212  007E10  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2213  007E14  EE20 F026          	lfsr	2,38
  2214  007E18  5027               	movf	PID_Compute@pid,w,c
  2215  007E1A  26D9               	addwf	fsr2l,f,c
  2216  007E1C  5028               	movf	PID_Compute@pid+1,w,c
  2217  007E1E  22DA               	addwfc	fsr2h,f,c
  2218  007E20  CFDE F004          	movff	postinc2,___ftge@ff2
  2219  007E24  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2220  007E28  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2221  007E2C  EC78  F038         	call	___ftge	;wreg free
  2222  007E30  B0D8               	btfsc	status,0,c
  2223  007E32  D012               	goto	l1463
  2224                           
  2225                           ;pid.c: 57: pid->ITerm = pid->outMin;
  2226  007E34  EE20 F026          	lfsr	2,38
  2227  007E38                     L2:
  2228  007E38  5027               	movf	PID_Compute@pid,w,c
  2229  007E3A  26D9               	addwf	fsr2l,f,c
  2230  007E3C  5028               	movf	PID_Compute@pid+1,w,c
  2231  007E3E  22DA               	addwfc	fsr2h,f,c
  2232  007E40  EE10 F01C          	lfsr	1,28
  2233  007E44  5027               	movf	PID_Compute@pid,w,c
  2234  007E46  26E1               	addwf	fsr1l,f,c
  2235  007E48  5028               	movf	PID_Compute@pid+1,w,c
  2236  007E4A  22E2               	addwfc	fsr1h,f,c
  2237  007E4C  CFDE FFE6          	movff	postinc2,postinc1
  2238  007E50  CFDE FFE6          	movff	postinc2,postinc1
  2239  007E54  CFDE FFE6          	movff	postinc2,postinc1
  2240  007E58                     l1463:
  2241                           
  2242                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  2243  007E58  EE20 F01F          	lfsr	2,31
  2244  007E5C  5027               	movf	PID_Compute@pid,w,c
  2245  007E5E  26D9               	addwf	fsr2l,f,c
  2246  007E60  5028               	movf	PID_Compute@pid+1,w,c
  2247  007E62  22DA               	addwfc	fsr2h,f,c
  2248  007E64  CFDE F018          	movff	postinc2,___ftneg@f1
  2249  007E68  CFDE F019          	movff	postinc2,___ftneg@f1+1
  2250  007E6C  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  2251  007E70  ECD3  F037         	call	___ftneg	;wreg free
  2252  007E74  C018  F01B         	movff	?___ftneg,___ftadd@f1
  2253  007E78  C019  F01C         	movff	?___ftneg+1,___ftadd@f1+1
  2254  007E7C  C01A  F01D         	movff	?___ftneg+2,___ftadd@f1+2
  2255  007E80  C032  F01E         	movff	PID_Compute@input,___ftadd@f2
  2256  007E84  C033  F01F         	movff	PID_Compute@input+1,___ftadd@f2+1
  2257  007E88  C034  F020         	movff	PID_Compute@input+2,___ftadd@f2+2
  2258  007E8C  ECDE  F03B         	call	___ftadd	;wreg free
  2259  007E90  C01B  F029         	movff	?___ftadd,PID_Compute@dInput
  2260  007E94  C01C  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  2261  007E98  C01D  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  2262                           
  2263                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2264  007E9C  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  2265  007EA0  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  2266  007EA4  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  2267  007EA8  EE20 F00F          	lfsr	2,15
  2268  007EAC  5027               	movf	PID_Compute@pid,w,c
  2269  007EAE  26D9               	addwf	fsr2l,f,c
  2270  007EB0  5028               	movf	PID_Compute@pid+1,w,c
  2271  007EB2  22DA               	addwfc	fsr2h,f,c
  2272  007EB4  CFDE F009          	movff	postinc2,___ftmul@f1
  2273  007EB8  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2274  007EBC  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2275  007EC0  EC5D  F03A         	call	___ftmul	;wreg free
  2276  007EC4  C009  F018         	movff	?___ftmul,___ftneg@f1
  2277  007EC8  C00A  F019         	movff	?___ftmul+1,___ftneg@f1+1
  2278  007ECC  C00B  F01A         	movff	?___ftmul+2,___ftneg@f1+2
  2279  007ED0  ECD3  F037         	call	___ftneg	;wreg free
  2280  007ED4  C018  F01E         	movff	?___ftneg,___ftadd@f2
  2281  007ED8  C019  F01F         	movff	?___ftneg+1,___ftadd@f2+1
  2282  007EDC  C01A  F020         	movff	?___ftneg+2,___ftadd@f2+2
  2283  007EE0  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2284  007EE4  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2285  007EE8  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2286  007EEC  EE20 F009          	lfsr	2,9
  2287  007EF0  5027               	movf	PID_Compute@pid,w,c
  2288  007EF2  26D9               	addwf	fsr2l,f,c
  2289  007EF4  5028               	movf	PID_Compute@pid+1,w,c
  2290  007EF6  22DA               	addwfc	fsr2h,f,c
  2291  007EF8  CFDE F009          	movff	postinc2,___ftmul@f1
  2292  007EFC  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2293  007F00  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2294  007F04  EC5D  F03A         	call	___ftmul	;wreg free
  2295  007F08  C009  F01B         	movff	?___ftmul,___ftadd@f1
  2296  007F0C  C00A  F01C         	movff	?___ftmul+1,___ftadd@f1+1
  2297  007F10  C00B  F01D         	movff	?___ftmul+2,___ftadd@f1+2
  2298  007F14  ECDE  F03B         	call	___ftadd	;wreg free
  2299  007F18  C01B  F02C         	movff	?___ftadd,_PID_Compute$946
  2300  007F1C  C01C  F02D         	movff	?___ftadd+1,_PID_Compute$946+1
  2301  007F20  C01D  F02E         	movff	?___ftadd+2,_PID_Compute$946+2
  2302                           
  2303                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2304  007F24  C02C  F01B         	movff	_PID_Compute$946,___ftadd@f1
  2305  007F28  C02D  F01C         	movff	_PID_Compute$946+1,___ftadd@f1+1
  2306  007F2C  C02E  F01D         	movff	_PID_Compute$946+2,___ftadd@f1+2
  2307  007F30  EE20 F01C          	lfsr	2,28
  2308  007F34  5027               	movf	PID_Compute@pid,w,c
  2309  007F36  26D9               	addwf	fsr2l,f,c
  2310  007F38  5028               	movf	PID_Compute@pid+1,w,c
  2311  007F3A  22DA               	addwfc	fsr2h,f,c
  2312  007F3C  CFDE F01E          	movff	postinc2,___ftadd@f2
  2313  007F40  CFDE F01F          	movff	postinc2,___ftadd@f2+1
  2314  007F44  CFDD F020          	movff	postdec2,___ftadd@f2+2
  2315  007F48  ECDE  F03B         	call	___ftadd	;wreg free
  2316  007F4C  C01B  F035         	movff	?___ftadd,PID_Compute@output
  2317  007F50  C01C  F036         	movff	?___ftadd+1,PID_Compute@output+1
  2318  007F54  C01D  F037         	movff	?___ftadd+2,PID_Compute@output+2
  2319                           
  2320                           ;pid.c: 63: if (output > pid->outMax)
  2321  007F58  EE20 F029          	lfsr	2,41
  2322  007F5C  5027               	movf	PID_Compute@pid,w,c
  2323  007F5E  26D9               	addwf	fsr2l,f,c
  2324  007F60  5028               	movf	PID_Compute@pid+1,w,c
  2325  007F62  22DA               	addwfc	fsr2h,f,c
  2326  007F64  CFDE F001          	movff	postinc2,___ftge@ff1
  2327  007F68  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2328  007F6C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2329  007F70  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  2330  007F74  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  2331  007F78  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  2332  007F7C  EC78  F038         	call	___ftge	;wreg free
  2333  007F80  B0D8               	btfsc	status,0,c
  2334  007F82  D003               	goto	l1473
  2335                           
  2336                           ;pid.c: 64: output = pid->outMax;
  2337  007F84  EE20 F029          	lfsr	2,41
  2338  007F88  D018               	goto	L3
  2339  007F8A                     l1473:
  2340                           
  2341                           ;pid.c: 65: else if (output < pid->outMin)
  2342  007F8A  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  2343  007F8E  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  2344  007F92  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  2345  007F96  EE20 F026          	lfsr	2,38
  2346  007F9A  5027               	movf	PID_Compute@pid,w,c
  2347  007F9C  26D9               	addwf	fsr2l,f,c
  2348  007F9E  5028               	movf	PID_Compute@pid+1,w,c
  2349  007FA0  22DA               	addwfc	fsr2h,f,c
  2350  007FA2  CFDE F004          	movff	postinc2,___ftge@ff2
  2351  007FA6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2352  007FAA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2353  007FAE  EC78  F038         	call	___ftge	;wreg free
  2354  007FB2  B0D8               	btfsc	status,0,c
  2355  007FB4  D00C               	goto	l49
  2356                           
  2357                           ;pid.c: 66: output = pid->outMin;
  2358  007FB6  EE20 F026          	lfsr	2,38
  2359  007FBA                     L3:
  2360  007FBA  5027               	movf	PID_Compute@pid,w,c
  2361  007FBC  26D9               	addwf	fsr2l,f,c
  2362  007FBE  5028               	movf	PID_Compute@pid+1,w,c
  2363  007FC0  22DA               	addwfc	fsr2h,f,c
  2364  007FC2  CFDE F035          	movff	postinc2,PID_Compute@output
  2365  007FC6  CFDE F036          	movff	postinc2,PID_Compute@output+1
  2366  007FCA  CFDD F037          	movff	postdec2,PID_Compute@output+2
  2367  007FCE                     l49:
  2368                           
  2369                           ;pid.c: 67: pid->myOutput = output;
  2370  007FCE  EE20 F016          	lfsr	2,22
  2371  007FD2  5027               	movf	PID_Compute@pid,w,c
  2372  007FD4  26D9               	addwf	fsr2l,f,c
  2373  007FD6  5028               	movf	PID_Compute@pid+1,w,c
  2374  007FD8  22DA               	addwfc	fsr2h,f,c
  2375  007FDA  C035  FFDE         	movff	PID_Compute@output,postinc2
  2376  007FDE  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  2377  007FE2  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  2378                           
  2379                           ;pid.c: 70: pid->lastInput = input;
  2380  007FE6  EE20 F01F          	lfsr	2,31
  2381  007FEA  5027               	movf	PID_Compute@pid,w,c
  2382  007FEC  26D9               	addwf	fsr2l,f,c
  2383  007FEE  5028               	movf	PID_Compute@pid+1,w,c
  2384  007FF0  22DA               	addwfc	fsr2h,f,c
  2385  007FF2  C032  FFDE         	movff	PID_Compute@input,postinc2
  2386  007FF6  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  2387  007FFA  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  2388  007FFE  0012               	return	
  2389  008000                     __end_of_PID_Compute:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           postinc0	equ	0xFEE
  2396                           postinc1	equ	0xFE6
  2397                           postdec1	equ	0xFE5
  2398                           fsr1h	equ	0xFE2
  2399                           fsr1l	equ	0xFE1
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function ___ftneg *****************
  2408 ;; Defined at:
  2409 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  f1              3   23[COMRAM] float 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  3   23[COMRAM] float 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2423 ;;      Params:         3       0       0       0       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2426 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2427 ;;Total ram usage:        3 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_PID_Compute
  2433 ;;		_PID_SetTunings
  2434 ;;		_PID_SetControllerDirection
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text12
  2439  006FA6                     __ptext12:
  2440                           	opt stack 0
  2441  006FA6                     ___ftneg:
  2442                           	opt stack 28
  2443                           
  2444                           ;incstack = 0
  2445  006FA6  5018               	movf	___ftneg@f1,w,c
  2446  006FA8  1019               	iorwf	___ftneg@f1+1,w,c
  2447  006FAA  101A               	iorwf	___ftneg@f1+2,w,c
  2448  006FAC  B4D8               	btfsc	status,2,c
  2449  006FAE  D006               	goto	l406
  2450  006FB0  0E00               	movlw	0
  2451  006FB2  1A18               	xorwf	___ftneg@f1,f,c
  2452  006FB4  0E00               	movlw	0
  2453  006FB6  1A19               	xorwf	___ftneg@f1+1,f,c
  2454  006FB8  0E80               	movlw	128
  2455  006FBA  1A1A               	xorwf	___ftneg@f1+2,f,c
  2456  006FBC                     l406:
  2457  006FBC  C018  F018         	movff	___ftneg@f1,?___ftneg
  2458  006FC0  C019  F019         	movff	___ftneg@f1+1,?___ftneg+1
  2459  006FC4  C01A  F01A         	movff	___ftneg@f1+2,?___ftneg+2
  2460  006FC8  0012               	return		;funcret
  2461  006FCA                     __end_of___ftneg:
  2462                           	opt stack 0
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           postinc0	equ	0xFEE
  2468                           postinc1	equ	0xFE6
  2469                           postdec1	equ	0xFE5
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           indf2	equ	0xFDF
  2473                           postinc2	equ	0xFDE
  2474                           postdec2	equ	0xFDD
  2475                           fsr2h	equ	0xFDA
  2476                           fsr2l	equ	0xFD9
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function ___ftmul *****************
  2480 ;; Defined at:
  2481 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  f1              3    8[COMRAM] float 
  2484 ;;  f2              3   11[COMRAM] float 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2487 ;;  sign            1   22[COMRAM] unsigned char 
  2488 ;;  cntr            1   21[COMRAM] unsigned char 
  2489 ;;  exp             1   17[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  3    8[COMRAM] float 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2499 ;;      Params:         6       0       0       0       0       0       0       0       0
  2500 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2501 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2502 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2503 ;;Total ram usage:       15 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    1
  2506 ;; This function calls:
  2507 ;;		___ftpack
  2508 ;; This function is called by:
  2509 ;;		_PID_Compute
  2510 ;;		_PID_SetTunings
  2511 ;;		_PID_SetSampleTime
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text13
  2516  0074BA                     __ptext13:
  2517                           	opt stack 0
  2518  0074BA                     ___ftmul:
  2519                           	opt stack 27
  2520                           
  2521                           ;incstack = 0
  2522  0074BA  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2523  0074BE  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2524  0074C0  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2525  0074C2  340A               	rlcf	___ftmul@f1+1,w,c
  2526  0074C4  360F               	rlcf	??___ftmul& (0+255),f,c
  2527  0074C6  E301               	bnc	u831
  2528  0074C8  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2529  0074CA                     u831:
  2530  0074CA  500F               	movf	??___ftmul,w,c
  2531  0074CC  6E12               	movwf	___ftmul@exp,c
  2532  0074CE  5012               	movf	___ftmul@exp,w,c
  2533  0074D0  A4D8               	btfss	status,2,c
  2534  0074D2  D007               	goto	l1219
  2535  0074D4  0E00               	movlw	0
  2536  0074D6  6E09               	movwf	?___ftmul,c
  2537  0074D8  0E00               	movlw	0
  2538  0074DA  6E0A               	movwf	?___ftmul+1,c
  2539  0074DC  0E00               	movlw	0
  2540  0074DE  6E0B               	movwf	?___ftmul+2,c
  2541  0074E0  0012               	return	
  2542  0074E2                     l1219:
  2543  0074E2  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2544  0074E6  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2545  0074E8  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2546  0074EA  340D               	rlcf	___ftmul@f2+1,w,c
  2547  0074EC  360F               	rlcf	??___ftmul& (0+255),f,c
  2548  0074EE  E301               	bnc	u851
  2549  0074F0  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2550  0074F2                     u851:
  2551  0074F2  500F               	movf	??___ftmul,w,c
  2552  0074F4  6E17               	movwf	___ftmul@sign,c
  2553  0074F6  5017               	movf	___ftmul@sign,w,c
  2554  0074F8  A4D8               	btfss	status,2,c
  2555  0074FA  D007               	goto	l1225
  2556  0074FC  0E00               	movlw	0
  2557  0074FE  6E09               	movwf	?___ftmul,c
  2558  007500  0E00               	movlw	0
  2559  007502  6E0A               	movwf	?___ftmul+1,c
  2560  007504  0E00               	movlw	0
  2561  007506  6E0B               	movwf	?___ftmul+2,c
  2562  007508  0012               	return	
  2563  00750A                     l1225:
  2564  00750A  5017               	movf	___ftmul@sign,w,c
  2565  00750C  0F7B               	addlw	123
  2566  00750E  2612               	addwf	___ftmul@exp,f,c
  2567  007510  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2568  007514  500E               	movf	___ftmul@f2+2,w,c
  2569  007516  1A17               	xorwf	___ftmul@sign,f,c
  2570  007518  0E80               	movlw	128
  2571  00751A  1617               	andwf	___ftmul@sign,f,c
  2572  00751C  8E0A               	bsf	___ftmul@f1+1,7,c
  2573  00751E  8E0D               	bsf	___ftmul@f2+1,7,c
  2574  007520  0EFF               	movlw	255
  2575  007522  160C               	andwf	___ftmul@f2,f,c
  2576  007524  0EFF               	movlw	255
  2577  007526  160D               	andwf	___ftmul@f2+1,f,c
  2578  007528  0E00               	movlw	0
  2579  00752A  160E               	andwf	___ftmul@f2+2,f,c
  2580  00752C  0E00               	movlw	0
  2581  00752E  6E13               	movwf	___ftmul@f3_as_product,c
  2582  007530  0E00               	movlw	0
  2583  007532  6E14               	movwf	___ftmul@f3_as_product+1,c
  2584  007534  0E00               	movlw	0
  2585  007536  6E15               	movwf	___ftmul@f3_as_product+2,c
  2586  007538  0E07               	movlw	7
  2587  00753A  6E16               	movwf	___ftmul@cntr,c
  2588  00753C                     l1239:
  2589  00753C  A009               	btfss	___ftmul@f1,0,c
  2590  00753E  D006               	goto	l1243
  2591  007540  500C               	movf	___ftmul@f2,w,c
  2592  007542  2613               	addwf	___ftmul@f3_as_product,f,c
  2593  007544  500D               	movf	___ftmul@f2+1,w,c
  2594  007546  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2595  007548  500E               	movf	___ftmul@f2+2,w,c
  2596  00754A  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2597  00754C                     l1243:
  2598  00754C  90D8               	bcf	status,0,c
  2599  00754E  320B               	rrcf	___ftmul@f1+2,f,c
  2600  007550  320A               	rrcf	___ftmul@f1+1,f,c
  2601  007552  3209               	rrcf	___ftmul@f1,f,c
  2602  007554  90D8               	bcf	status,0,c
  2603  007556  360C               	rlcf	___ftmul@f2,f,c
  2604  007558  360D               	rlcf	___ftmul@f2+1,f,c
  2605  00755A  360E               	rlcf	___ftmul@f2+2,f,c
  2606  00755C  2E16               	decfsz	___ftmul@cntr,f,c
  2607  00755E  D7EE               	goto	l1239
  2608  007560  0E09               	movlw	9
  2609  007562  6E16               	movwf	___ftmul@cntr,c
  2610  007564                     l1249:
  2611  007564  A009               	btfss	___ftmul@f1,0,c
  2612  007566  D006               	goto	l1253
  2613  007568  500C               	movf	___ftmul@f2,w,c
  2614  00756A  2613               	addwf	___ftmul@f3_as_product,f,c
  2615  00756C  500D               	movf	___ftmul@f2+1,w,c
  2616  00756E  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2617  007570  500E               	movf	___ftmul@f2+2,w,c
  2618  007572  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2619  007574                     l1253:
  2620  007574  90D8               	bcf	status,0,c
  2621  007576  320B               	rrcf	___ftmul@f1+2,f,c
  2622  007578  320A               	rrcf	___ftmul@f1+1,f,c
  2623  00757A  3209               	rrcf	___ftmul@f1,f,c
  2624  00757C  90D8               	bcf	status,0,c
  2625  00757E  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2626  007580  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2627  007582  3213               	rrcf	___ftmul@f3_as_product,f,c
  2628  007584  2E16               	decfsz	___ftmul@cntr,f,c
  2629  007586  D7EE               	goto	l1249
  2630  007588  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2631  00758C  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2632  007590  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2633  007594  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  2634  007598  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  2635  00759C  ECC0  F038         	call	___ftpack	;wreg free
  2636  0075A0  C001  F009         	movff	?___ftpack,?___ftmul
  2637  0075A4  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  2638  0075A8  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  2639  0075AC  0012               	return	
  2640  0075AE                     __end_of___ftmul:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           postinc0	equ	0xFEE
  2647                           postinc1	equ	0xFE6
  2648                           postdec1	equ	0xFE5
  2649                           fsr1h	equ	0xFE2
  2650                           fsr1l	equ	0xFE1
  2651                           indf2	equ	0xFDF
  2652                           postinc2	equ	0xFDE
  2653                           postdec2	equ	0xFDD
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function ___ftge *****************
  2659 ;; Defined at:
  2660 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  ff1             3    0[COMRAM] float 
  2663 ;;  ff2             3    3[COMRAM] float 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;		None               void
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2675 ;;      Params:         6       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        9 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_PID_Compute
  2685 ;;		_PID_SetOutputLimits
  2686 ;;		_PID_Initialize
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text14
  2691  0070F0                     __ptext14:
  2692                           	opt stack 0
  2693  0070F0                     ___ftge:
  2694                           	opt stack 28
  2695                           
  2696                           ;incstack = 0
  2697  0070F0  AE03               	btfss	___ftge@ff1+2,7,c
  2698  0070F2  D016               	goto	l1265
  2699  0070F4  C001  F007         	movff	___ftge@ff1,??___ftge
  2700  0070F8  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  2701  0070FC  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  2702  007100  1E07               	comf	??___ftge,f,c
  2703  007102  1E08               	comf	??___ftge+1,f,c
  2704  007104  1E09               	comf	??___ftge+2,f,c
  2705  007106  2A07               	incf	??___ftge,f,c
  2706  007108  0E00               	movlw	0
  2707  00710A  2208               	addwfc	??___ftge+1,f,c
  2708  00710C  2209               	addwfc	??___ftge+2,f,c
  2709  00710E  0E00               	movlw	0
  2710  007110  2407               	addwf	??___ftge,w,c
  2711  007112  6E01               	movwf	___ftge@ff1,c
  2712  007114  0E00               	movlw	0
  2713  007116  2008               	addwfc	??___ftge+1,w,c
  2714  007118  6E02               	movwf	___ftge@ff1+1,c
  2715  00711A  0E80               	movlw	128
  2716  00711C  2009               	addwfc	??___ftge+2,w,c
  2717  00711E  6E03               	movwf	___ftge@ff1+2,c
  2718  007120                     l1265:
  2719  007120  AE06               	btfss	___ftge@ff2+2,7,c
  2720  007122  D016               	goto	l1269
  2721  007124  C004  F007         	movff	___ftge@ff2,??___ftge
  2722  007128  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  2723  00712C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  2724  007130  1E07               	comf	??___ftge,f,c
  2725  007132  1E08               	comf	??___ftge+1,f,c
  2726  007134  1E09               	comf	??___ftge+2,f,c
  2727  007136  2A07               	incf	??___ftge,f,c
  2728  007138  0E00               	movlw	0
  2729  00713A  2208               	addwfc	??___ftge+1,f,c
  2730  00713C  2209               	addwfc	??___ftge+2,f,c
  2731  00713E  0E00               	movlw	0
  2732  007140  2407               	addwf	??___ftge,w,c
  2733  007142  6E04               	movwf	___ftge@ff2,c
  2734  007144  0E00               	movlw	0
  2735  007146  2008               	addwfc	??___ftge+1,w,c
  2736  007148  6E05               	movwf	___ftge@ff2+1,c
  2737  00714A  0E80               	movlw	128
  2738  00714C  2009               	addwfc	??___ftge+2,w,c
  2739  00714E  6E06               	movwf	___ftge@ff2+2,c
  2740  007150                     l1269:
  2741  007150  0E00               	movlw	0
  2742  007152  1A01               	xorwf	___ftge@ff1,f,c
  2743  007154  0E00               	movlw	0
  2744  007156  1A02               	xorwf	___ftge@ff1+1,f,c
  2745  007158  0E80               	movlw	128
  2746  00715A  1A03               	xorwf	___ftge@ff1+2,f,c
  2747  00715C  0E00               	movlw	0
  2748  00715E  1A04               	xorwf	___ftge@ff2,f,c
  2749  007160  0E00               	movlw	0
  2750  007162  1A05               	xorwf	___ftge@ff2+1,f,c
  2751  007164  0E80               	movlw	128
  2752  007166  1A06               	xorwf	___ftge@ff2+2,f,c
  2753  007168  5004               	movf	___ftge@ff2,w,c
  2754  00716A  5C01               	subwf	___ftge@ff1,w,c
  2755  00716C  5005               	movf	___ftge@ff2+1,w,c
  2756  00716E  5802               	subwfb	___ftge@ff1+1,w,c
  2757  007170  5006               	movf	___ftge@ff2+2,w,c
  2758  007172  5803               	subwfb	___ftge@ff1+2,w,c
  2759  007174  B0D8               	btfsc	status,0,c
  2760  007176  D002               	goto	l1275
  2761  007178  90D8               	bcf	status,0,c
  2762  00717A  0012               	return	
  2763  00717C                     l1275:
  2764  00717C  80D8               	bsf	status,0,c
  2765  00717E  0012               	return	
  2766  007180                     __end_of___ftge:
  2767                           	opt stack 0
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           postinc0	equ	0xFEE
  2773                           postinc1	equ	0xFE6
  2774                           postdec1	equ	0xFE5
  2775                           fsr1h	equ	0xFE2
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           postdec2	equ	0xFDD
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function ___ftadd *****************
  2785 ;; Defined at:
  2786 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  f1              3   26[COMRAM] float 
  2789 ;;  f2              3   29[COMRAM] float 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  exp1            1   37[COMRAM] unsigned char 
  2792 ;;  exp2            1   36[COMRAM] unsigned char 
  2793 ;;  sign            1   35[COMRAM] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  3   26[COMRAM] float 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2803 ;;      Params:         6       0       0       0       0       0       0       0       0
  2804 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2805 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2806 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2807 ;;Total ram usage:       12 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    1
  2810 ;; This function calls:
  2811 ;;		___ftpack
  2812 ;; This function is called by:
  2813 ;;		_PID_Compute
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text15
  2818  0077BC                     __ptext15:
  2819                           	opt stack 0
  2820  0077BC                     ___ftadd:
  2821                           	opt stack 28
  2822                           
  2823                           ;incstack = 0
  2824  0077BC  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
  2825  0077C0  6A22               	clrf	(??___ftadd+1)& (0+255),c
  2826  0077C2  6A23               	clrf	(??___ftadd+2)& (0+255),c
  2827  0077C4  341C               	rlcf	___ftadd@f1+1,w,c
  2828  0077C6  3621               	rlcf	??___ftadd& (0+255),f,c
  2829  0077C8  E301               	bnc	u1081
  2830  0077CA  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  2831  0077CC                     u1081:
  2832  0077CC  5021               	movf	??___ftadd,w,c
  2833  0077CE  6E26               	movwf	___ftadd@exp1,c
  2834  0077D0  C020  F021         	movff	___ftadd@f2+2,??___ftadd
  2835  0077D4  6A22               	clrf	(??___ftadd+1)& (0+255),c
  2836  0077D6  6A23               	clrf	(??___ftadd+2)& (0+255),c
  2837  0077D8  341F               	rlcf	___ftadd@f2+1,w,c
  2838  0077DA  3621               	rlcf	??___ftadd& (0+255),f,c
  2839  0077DC  E301               	bnc	u1091
  2840  0077DE  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  2841  0077E0                     u1091:
  2842  0077E0  5021               	movf	??___ftadd,w,c
  2843  0077E2  6E25               	movwf	___ftadd@exp2,c
  2844  0077E4  5026               	movf	___ftadd@exp1,w,c
  2845  0077E6  B4D8               	btfsc	status,2,c
  2846  0077E8  D00B               	goto	l349
  2847  0077EA  5025               	movf	___ftadd@exp2,w,c
  2848  0077EC  5C26               	subwf	___ftadd@exp1,w,c
  2849  0077EE  B0D8               	btfsc	status,0,c
  2850  0077F0  D00E               	goto	l1365
  2851  0077F2  5026               	movf	___ftadd@exp1,w,c
  2852  0077F4  0800               	sublw	0
  2853  0077F6  2425               	addwf	___ftadd@exp2,w,c
  2854  0077F8  6E21               	movwf	??___ftadd& (0+255),c
  2855  0077FA  0E18               	movlw	24
  2856  0077FC  6421               	cpfsgt	??___ftadd,c
  2857  0077FE  D007               	goto	l1365
  2858  007800                     l349:
  2859  007800  C01E  F01B         	movff	___ftadd@f2,?___ftadd
  2860  007804  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
  2861  007808  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
  2862  00780C  0012               	return	
  2863  00780E                     l1365:
  2864  00780E  5025               	movf	___ftadd@exp2,w,c
  2865  007810  B4D8               	btfsc	status,2,c
  2866  007812  D00B               	goto	l353
  2867  007814  5026               	movf	___ftadd@exp1,w,c
  2868  007816  5C25               	subwf	___ftadd@exp2,w,c
  2869  007818  B0D8               	btfsc	status,0,c
  2870  00781A  D00E               	goto	l1371
  2871  00781C  5025               	movf	___ftadd@exp2,w,c
  2872  00781E  0800               	sublw	0
  2873  007820  2426               	addwf	___ftadd@exp1,w,c
  2874  007822  6E21               	movwf	??___ftadd& (0+255),c
  2875  007824  0E18               	movlw	24
  2876  007826  6421               	cpfsgt	??___ftadd,c
  2877  007828  D007               	goto	l1371
  2878  00782A                     l353:
  2879  00782A  C01B  F01B         	movff	___ftadd@f1,?___ftadd
  2880  00782E  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
  2881  007832  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
  2882  007836  0012               	return	
  2883  007838                     l1371:
  2884  007838  0E06               	movlw	6
  2885  00783A  6E24               	movwf	___ftadd@sign,c
  2886  00783C  BE1D               	btfsc	___ftadd@f1+2,7,c
  2887  00783E  8E24               	bsf	___ftadd@sign,7,c
  2888  007840  BE20               	btfsc	___ftadd@f2+2,7,c
  2889  007842  8C24               	bsf	___ftadd@sign,6,c
  2890  007844  8E1C               	bsf	___ftadd@f1+1,7,c
  2891  007846  0EFF               	movlw	255
  2892  007848  161B               	andwf	___ftadd@f1,f,c
  2893  00784A  0EFF               	movlw	255
  2894  00784C  161C               	andwf	___ftadd@f1+1,f,c
  2895  00784E  0E00               	movlw	0
  2896  007850  161D               	andwf	___ftadd@f1+2,f,c
  2897  007852  8E1F               	bsf	___ftadd@f2+1,7,c
  2898  007854  0EFF               	movlw	255
  2899  007856  161E               	andwf	___ftadd@f2,f,c
  2900  007858  0EFF               	movlw	255
  2901  00785A  161F               	andwf	___ftadd@f2+1,f,c
  2902  00785C  0E00               	movlw	0
  2903  00785E  1620               	andwf	___ftadd@f2+2,f,c
  2904  007860  5025               	movf	___ftadd@exp2,w,c
  2905  007862  5C26               	subwf	___ftadd@exp1,w,c
  2906  007864  B0D8               	btfsc	status,0,c
  2907  007866  D01B               	goto	l1397
  2908  007868                     l1387:
  2909  007868  90D8               	bcf	status,0,c
  2910  00786A  361E               	rlcf	___ftadd@f2,f,c
  2911  00786C  361F               	rlcf	___ftadd@f2+1,f,c
  2912  00786E  3620               	rlcf	___ftadd@f2+2,f,c
  2913  007870  0625               	decf	___ftadd@exp2,f,c
  2914  007872  5026               	movf	___ftadd@exp1,w,c
  2915  007874  1825               	xorwf	___ftadd@exp2,w,c
  2916  007876  B4D8               	btfsc	status,2,c
  2917  007878  D00D               	goto	l1395
  2918  00787A  0624               	decf	___ftadd@sign,f,c
  2919  00787C  C024  F021         	movff	___ftadd@sign,??___ftadd
  2920  007880  0E07               	movlw	7
  2921  007882  1621               	andwf	??___ftadd,f,c
  2922  007884  B4D8               	btfsc	status,2,c
  2923  007886  D006               	goto	l1395
  2924  007888  D7EF               	goto	l1387
  2925  00788A                     l1393:
  2926  00788A  90D8               	bcf	status,0,c
  2927  00788C  321D               	rrcf	___ftadd@f1+2,f,c
  2928  00788E  321C               	rrcf	___ftadd@f1+1,f,c
  2929  007890  321B               	rrcf	___ftadd@f1,f,c
  2930  007892  2A26               	incf	___ftadd@exp1,f,c
  2931  007894                     l1395:
  2932  007894  5025               	movf	___ftadd@exp2,w,c
  2933  007896  1826               	xorwf	___ftadd@exp1,w,c
  2934  007898  B4D8               	btfsc	status,2,c
  2935  00789A  D01F               	goto	l364
  2936  00789C  D7F6               	goto	l1393
  2937  00789E                     l1397:
  2938  00789E  5026               	movf	___ftadd@exp1,w,c
  2939  0078A0  5C25               	subwf	___ftadd@exp2,w,c
  2940  0078A2  B0D8               	btfsc	status,0,c
  2941  0078A4  D01A               	goto	l364
  2942  0078A6                     l1399:
  2943  0078A6  90D8               	bcf	status,0,c
  2944  0078A8  361B               	rlcf	___ftadd@f1,f,c
  2945  0078AA  361C               	rlcf	___ftadd@f1+1,f,c
  2946  0078AC  361D               	rlcf	___ftadd@f1+2,f,c
  2947  0078AE  0626               	decf	___ftadd@exp1,f,c
  2948  0078B0  5026               	movf	___ftadd@exp1,w,c
  2949  0078B2  1825               	xorwf	___ftadd@exp2,w,c
  2950  0078B4  B4D8               	btfsc	status,2,c
  2951  0078B6  D00D               	goto	l1407
  2952  0078B8  0624               	decf	___ftadd@sign,f,c
  2953  0078BA  C024  F021         	movff	___ftadd@sign,??___ftadd
  2954  0078BE  0E07               	movlw	7
  2955  0078C0  1621               	andwf	??___ftadd,f,c
  2956  0078C2  B4D8               	btfsc	status,2,c
  2957  0078C4  D006               	goto	l1407
  2958  0078C6  D7EF               	goto	l1399
  2959  0078C8                     l1405:
  2960  0078C8  90D8               	bcf	status,0,c
  2961  0078CA  3220               	rrcf	___ftadd@f2+2,f,c
  2962  0078CC  321F               	rrcf	___ftadd@f2+1,f,c
  2963  0078CE  321E               	rrcf	___ftadd@f2,f,c
  2964  0078D0  2A25               	incf	___ftadd@exp2,f,c
  2965  0078D2                     l1407:
  2966  0078D2  5025               	movf	___ftadd@exp2,w,c
  2967  0078D4  1826               	xorwf	___ftadd@exp1,w,c
  2968  0078D6  A4D8               	btfss	status,2,c
  2969  0078D8  D7F7               	goto	l1405
  2970  0078DA                     l364:
  2971  0078DA  AE24               	btfss	___ftadd@sign,7,c
  2972  0078DC  D00C               	goto	l373
  2973  0078DE  0EFF               	movlw	255
  2974  0078E0  1A1B               	xorwf	___ftadd@f1,f,c
  2975  0078E2  0EFF               	movlw	255
  2976  0078E4  1A1C               	xorwf	___ftadd@f1+1,f,c
  2977  0078E6  0EFF               	movlw	255
  2978  0078E8  1A1D               	xorwf	___ftadd@f1+2,f,c
  2979  0078EA  0E01               	movlw	1
  2980  0078EC  261B               	addwf	___ftadd@f1,f,c
  2981  0078EE  0E00               	movlw	0
  2982  0078F0  221C               	addwfc	___ftadd@f1+1,f,c
  2983  0078F2  0E00               	movlw	0
  2984  0078F4  221D               	addwfc	___ftadd@f1+2,f,c
  2985  0078F6                     l373:
  2986  0078F6  AC24               	btfss	___ftadd@sign,6,c
  2987  0078F8  D00C               	goto	l1413
  2988  0078FA  0EFF               	movlw	255
  2989  0078FC  1A1E               	xorwf	___ftadd@f2,f,c
  2990  0078FE  0EFF               	movlw	255
  2991  007900  1A1F               	xorwf	___ftadd@f2+1,f,c
  2992  007902  0EFF               	movlw	255
  2993  007904  1A20               	xorwf	___ftadd@f2+2,f,c
  2994  007906  0E01               	movlw	1
  2995  007908  261E               	addwf	___ftadd@f2,f,c
  2996  00790A  0E00               	movlw	0
  2997  00790C  221F               	addwfc	___ftadd@f2+1,f,c
  2998  00790E  0E00               	movlw	0
  2999  007910  2220               	addwfc	___ftadd@f2+2,f,c
  3000  007912                     l1413:
  3001  007912  0E00               	movlw	0
  3002  007914  6E24               	movwf	___ftadd@sign,c
  3003  007916  501B               	movf	___ftadd@f1,w,c
  3004  007918  261E               	addwf	___ftadd@f2,f,c
  3005  00791A  501C               	movf	___ftadd@f1+1,w,c
  3006  00791C  221F               	addwfc	___ftadd@f2+1,f,c
  3007  00791E  501D               	movf	___ftadd@f1+2,w,c
  3008  007920  2220               	addwfc	___ftadd@f2+2,f,c
  3009  007922  AE20               	btfss	___ftadd@f2+2,7,c
  3010  007924  D00E               	goto	l1423
  3011  007926  0EFF               	movlw	255
  3012  007928  1A1E               	xorwf	___ftadd@f2,f,c
  3013  00792A  0EFF               	movlw	255
  3014  00792C  1A1F               	xorwf	___ftadd@f2+1,f,c
  3015  00792E  0EFF               	movlw	255
  3016  007930  1A20               	xorwf	___ftadd@f2+2,f,c
  3017  007932  0E01               	movlw	1
  3018  007934  261E               	addwf	___ftadd@f2,f,c
  3019  007936  0E00               	movlw	0
  3020  007938  221F               	addwfc	___ftadd@f2+1,f,c
  3021  00793A  0E00               	movlw	0
  3022  00793C  2220               	addwfc	___ftadd@f2+2,f,c
  3023  00793E  0E01               	movlw	1
  3024  007940  6E24               	movwf	___ftadd@sign,c
  3025  007942                     l1423:
  3026  007942  C01E  F001         	movff	___ftadd@f2,___ftpack@arg
  3027  007946  C01F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3028  00794A  C020  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3029  00794E  C026  F004         	movff	___ftadd@exp1,___ftpack@exp
  3030  007952  C024  F005         	movff	___ftadd@sign,___ftpack@sign
  3031  007956  ECC0  F038         	call	___ftpack	;wreg free
  3032  00795A  C001  F01B         	movff	?___ftpack,?___ftadd
  3033  00795E  C002  F01C         	movff	?___ftpack+1,?___ftadd+1
  3034  007962  C003  F01D         	movff	?___ftpack+2,?___ftadd+2
  3035  007966  0012               	return	
  3036  007968                     __end_of___ftadd:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           postinc0	equ	0xFEE
  3043                           postinc1	equ	0xFE6
  3044                           postdec1	equ	0xFE5
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           postdec2	equ	0xFDD
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function ___ftpack *****************
  3055 ;; Defined at:
  3056 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  arg             3    0[COMRAM] unsigned um
  3059 ;;  exp             1    3[COMRAM] unsigned char 
  3060 ;;  sign            1    4[COMRAM] unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  3    0[COMRAM] float 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3072 ;;      Params:         5       0       0       0       0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3074 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3075 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3076 ;;Total ram usage:        8 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		___awtoft
  3082 ;;		___ftadd
  3083 ;;		___ftdiv
  3084 ;;		___ftmul
  3085 ;;		___lbtoft
  3086 ;;		___lltoft
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text16
  3091  007180                     __ptext16:
  3092                           	opt stack 0
  3093  007180                     ___ftpack:
  3094                           	opt stack 29
  3095                           
  3096                           ;incstack = 0
  3097  007180  5004               	movf	___ftpack@exp,w,c
  3098  007182  B4D8               	btfsc	status,2,c
  3099  007184  D005               	goto	l1135
  3100  007186  5001               	movf	___ftpack@arg,w,c
  3101  007188  1002               	iorwf	___ftpack@arg+1,w,c
  3102  00718A  1003               	iorwf	___ftpack@arg+2,w,c
  3103  00718C  A4D8               	btfss	status,2,c
  3104  00718E  D00C               	goto	l1141
  3105  007190                     l1135:
  3106  007190  0E00               	movlw	0
  3107  007192  6E01               	movwf	?___ftpack,c
  3108  007194  0E00               	movlw	0
  3109  007196  6E02               	movwf	?___ftpack+1,c
  3110  007198  0E00               	movlw	0
  3111  00719A  6E03               	movwf	?___ftpack+2,c
  3112  00719C  0012               	return	
  3113  00719E                     l1139:
  3114  00719E  2A04               	incf	___ftpack@exp,f,c
  3115  0071A0  90D8               	bcf	status,0,c
  3116  0071A2  3203               	rrcf	___ftpack@arg+2,f,c
  3117  0071A4  3202               	rrcf	___ftpack@arg+1,f,c
  3118  0071A6  3201               	rrcf	___ftpack@arg,f,c
  3119  0071A8                     l1141:
  3120  0071A8  0E00               	movlw	0
  3121  0071AA  1401               	andwf	___ftpack@arg,w,c
  3122  0071AC  6E06               	movwf	??___ftpack& (0+255),c
  3123  0071AE  0E00               	movlw	0
  3124  0071B0  1402               	andwf	___ftpack@arg+1,w,c
  3125  0071B2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3126  0071B4  0EFE               	movlw	254
  3127  0071B6  1403               	andwf	___ftpack@arg+2,w,c
  3128  0071B8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3129  0071BA  5006               	movf	??___ftpack,w,c
  3130  0071BC  1007               	iorwf	??___ftpack+1,w,c
  3131  0071BE  1008               	iorwf	??___ftpack+2,w,c
  3132  0071C0  B4D8               	btfsc	status,2,c
  3133  0071C2  D00C               	goto	l1147
  3134  0071C4  D7EC               	goto	l1139
  3135  0071C6                     l1143:
  3136  0071C6  2A04               	incf	___ftpack@exp,f,c
  3137  0071C8  0E01               	movlw	1
  3138  0071CA  2601               	addwf	___ftpack@arg,f,c
  3139  0071CC  0E00               	movlw	0
  3140  0071CE  2202               	addwfc	___ftpack@arg+1,f,c
  3141  0071D0  0E00               	movlw	0
  3142  0071D2  2203               	addwfc	___ftpack@arg+2,f,c
  3143  0071D4  90D8               	bcf	status,0,c
  3144  0071D6  3203               	rrcf	___ftpack@arg+2,f,c
  3145  0071D8  3202               	rrcf	___ftpack@arg+1,f,c
  3146  0071DA  3201               	rrcf	___ftpack@arg,f,c
  3147  0071DC                     l1147:
  3148  0071DC  0E00               	movlw	0
  3149  0071DE  1401               	andwf	___ftpack@arg,w,c
  3150  0071E0  6E06               	movwf	??___ftpack& (0+255),c
  3151  0071E2  0E00               	movlw	0
  3152  0071E4  1402               	andwf	___ftpack@arg+1,w,c
  3153  0071E6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3154  0071E8  0EFF               	movlw	255
  3155  0071EA  1403               	andwf	___ftpack@arg+2,w,c
  3156  0071EC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3157  0071EE  5006               	movf	??___ftpack,w,c
  3158  0071F0  1007               	iorwf	??___ftpack+1,w,c
  3159  0071F2  1008               	iorwf	??___ftpack+2,w,c
  3160  0071F4  B4D8               	btfsc	status,2,c
  3161  0071F6  D006               	goto	l1151
  3162  0071F8  D7E6               	goto	l1143
  3163  0071FA                     l1149:
  3164  0071FA  0604               	decf	___ftpack@exp,f,c
  3165  0071FC  90D8               	bcf	status,0,c
  3166  0071FE  3601               	rlcf	___ftpack@arg,f,c
  3167  007200  3602               	rlcf	___ftpack@arg+1,f,c
  3168  007202  3603               	rlcf	___ftpack@arg+2,f,c
  3169  007204                     l1151:
  3170  007204  BE02               	btfsc	___ftpack@arg+1,7,c
  3171  007206  D003               	goto	l326
  3172  007208  0E02               	movlw	2
  3173  00720A  6004               	cpfslt	___ftpack@exp,c
  3174  00720C  D7F6               	goto	l1149
  3175  00720E                     l326:
  3176  00720E  A004               	btfss	___ftpack@exp,0,c
  3177  007210  9E02               	bcf	___ftpack@arg+1,7,c
  3178  007212  90D8               	bcf	status,0,c
  3179  007214  3204               	rrcf	___ftpack@exp,f,c
  3180  007216  5004               	movf	___ftpack@exp,w,c
  3181  007218  1203               	iorwf	___ftpack@arg+2,f,c
  3182  00721A  5005               	movf	___ftpack@sign,w,c
  3183  00721C  A4D8               	btfss	status,2,c
  3184  00721E  8E03               	bsf	___ftpack@arg+2,7,c
  3185  007220  C001  F001         	movff	___ftpack@arg,?___ftpack
  3186  007224  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3187  007228  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3188  00722C  0012               	return	
  3189  00722E                     __end_of___ftpack:
  3190                           	opt stack 0
  3191  0000                     tblptru	equ	0xFF8
  3192                           tblptrh	equ	0xFF7
  3193                           tblptrl	equ	0xFF6
  3194                           tablat	equ	0xFF5
  3195                           postinc0	equ	0xFEE
  3196                           postinc1	equ	0xFE6
  3197                           postdec1	equ	0xFE5
  3198                           fsr1h	equ	0xFE2
  3199                           fsr1l	equ	0xFE1
  3200                           indf2	equ	0xFDF
  3201                           postinc2	equ	0xFDE
  3202                           postdec2	equ	0xFDD
  3203                           fsr2h	equ	0xFDA
  3204                           fsr2l	equ	0xFD9
  3205                           status	equ	0xFD8
  3206                           tblptru	equ	0xFF8
  3207                           tblptrh	equ	0xFF7
  3208                           tblptrl	equ	0xFF6
  3209                           tablat	equ	0xFF5
  3210                           postinc0	equ	0xFEE
  3211                           postinc1	equ	0xFE6
  3212                           postdec1	equ	0xFE5
  3213                           fsr1h	equ	0xFE2
  3214                           fsr1l	equ	0xFE1
  3215                           indf2	equ	0xFDF
  3216                           postinc2	equ	0xFDE
  3217                           postdec2	equ	0xFDD
  3218                           fsr2h	equ	0xFDA
  3219                           fsr2l	equ	0xFD9
  3220                           status	equ	0xFD8
  3221                           
  3222                           	psect	rparam
  3223  0000                     tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           postinc0	equ	0xFEE
  3228                           postinc1	equ	0xFE6
  3229                           postdec1	equ	0xFE5
  3230                           fsr1h	equ	0xFE2
  3231                           fsr1l	equ	0xFE1
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      59
    BANK0           160     45      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftdiv
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___awtoft
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___ftneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0   35271
                                              0 BANK0     45    45      0
                        _PID_Compute
                        _PID_SetMode
                _PID_SetOutputLimits
                           _PID_init
                           ___awtoft
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2939
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   15029
                                             47 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11204
                                             32 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3504
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2230
                                             12 COMRAM     8     0      8
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3     907
                                             26 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    1893
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1608
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   10332
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     513
                                             23 COMRAM     3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1268
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4126
                                             26 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_SetOutputLimits
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      37       5       34.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3B      3B       1       62.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      20        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon May 22 14:53:55 2017

                    PID_SetMode@Mode 000E                                   l49 7FCE  
                        __CFG_BOR$ON 000000               __end_of_PID_Initialize 76B2  
                        __CFG_BORV$3 000000                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0026  
                       ___ftadd@exp2 0025                ??_PID_SetOutputLimits 0015  
                        __CFG_LVP$ON 000000                         ___ftadd@sign 0024  
                        __CFG_WDT$ON 000000                                  l326 720E  
                                l406 6FBC                                  l353 782A  
                                l364 78DA                                  l373 78F6  
                                l349 7800                                  l384 7488  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u801 740C                                  u831 74CA  
                                u851 74F2                                  u781 73E4  
                  PID_Compute@dInput 0029                         ___ftdiv@cntr 001B  
                       ___ftdiv@sign 0020                                 l1141 71A8  
                               l1151 7204                                 l1143 71C6  
                               l1135 7190                                 l1311 7AC2  
                               l1303 7A08                                 l1225 750A  
                               l1321 73C2                                 l1147 71DC  
                               l1139 719E                                 l1243 754C  
                               l1219 74E2                                 l1307 7A64  
                               l1149 71FA                                 l1413 7912  
                               l1405 78C8                                 l1253 7574  
                               l1173 73FC                                 l1423 7942  
                               l1407 78D2                                 l1239 753C  
                               l1265 7120                                 l1249 7564  
                               l1353 7654                                 l1371 7838  
                               l1275 717C                                 l1443 7082  
                               l1179 7424                                 l1365 780E  
                               l1269 7150                                 l1285 709A  
                               l1463 7E58                                 l1199 7462  
                               l1287 70A6                                 l1393 788A  
                               l1473 7F8A                                 l1395 7894  
                               l1387 7868                                 l1459 7DFC  
                               l1397 789E                                 l1399 78A6  
                               l1487 7030                                 u1300 7060  
                               u1081 77CC                                 u1091 77E0  
                               u1290 705E                    PID_Compute@output 0035  
                               _main 722E                         ___ftpack@arg 0001  
                       ___ftpack@exp 0004                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             PID_SetOutputLimits@Max 0012               PID_SetOutputLimits@Min 000F  
             PID_SetOutputLimits@pid 000D               __end_of_PID_SetTunings 7CE8  
                               start 0000                        __CFG_IESO$OFF 000000  
                      __CFG_MCLRE$ON 000000                         ___ftmul@cntr 0016  
                       ___param_bank 000000                         ___ftmul@sign 0017  
                      __CFG_PLLDIV$1 000000                      ?_PID_Initialize 000A  
                     __CFG_CCP2MX$ON 000000                                ?_main 0001  
                    __end_of___ftadd 7968                      __end_of___ftdiv 74BA  
                    __end_of___ftneg 6FCA                      __end_of___ftmul 75AE  
                              _PORTB 000F81                                _PORTD 000F83  
                      __CFG_USBDIV$1 000000                                _TRISB 000F93  
                      __CFG_PWRT$OFF 000000                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                         ___lltoft@exp 0011  
                   __end_of_PID_init 77BC                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                                _Input 0096  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                        ___awtoft@sign 000C  
                 PID_SetMode@newAuto 0010                        ___ftpack@sign 0005  
                              tablat 000FF5                                status 000FD8  
                     __CFG_ICPRT$OFF 000000                      ?_PID_SetTunings 0021  
                     __CFG_PBADEN$ON 000000                         ?_PID_Compute 0027  
                    __initialization 6FEE                         __end_of_main 7300  
                       ?_PID_SetMode 000C                               ??_main 003C  
                      __activetblptr 000000                     PID_SetTunings@Kd 0029  
                   PID_SetTunings@Ki 0026                     PID_SetTunings@Kp 0023  
                   __end_of___awtoft 7054                     __end_of___ftpack 722E  
                   __end_of___lbtoft 6FEE                     __end_of___lltoft 70F0  
                     __CFG_XINST$OFF 000000                               _Output 0093  
                             ___ftge 70F0                            ??___ftadd 0021  
                     __CFG_STVREN$ON 000000                            ??___ftdiv 0018  
                          ??___ftneg 001B                            ??___ftmul 000F  
              ___ftmul@f3_as_product 0013                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    __CFG_FOSC$EC_EC 000000                           __accesstop 0060  
            __end_of__initialization 7016                           ___ftadd@f1 001B  
                         ___ftadd@f2 001E                           ___ftge@ff1 0001  
                         ___ftge@ff2 0004                        ___rparam_used 000001  
                         ___ftdiv@f1 0012                           ___ftdiv@f2 0015  
                         ___ftdiv@f3 001C                           ___ftneg@f1 0018  
                         ___awtoft@c 0009                           ___lbtoft@c 000C  
                         ___ftmul@f1 0009                           ___ftmul@f2 000C  
                     __pcstackCOMRAM 0001                            ?_PID_init 0030  
                       __pidataBANK0 6FA0                           ___lltoft@c 0009  
                         __pbssBANK0 0093                    PID_SetTunings@pid 0021  
                   ??_PID_Initialize 000C                              ?___ftge 0001  
                         ??_PID_init 003C          __end_of_PID_SetOutputLimits 7B20  
               __size_of_PID_Compute 0318                 __size_of_PID_SetMode 0040  
                          ?___awtoft 0009                            ?___ftpack 0001  
                          ?___lbtoft 0009                            ?___lltoft 0009  
                        PID_init@pid 0030                     ??_PID_SetTunings 002C  
                     PID_Compute@pid 0027                      __CFG_VREGEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
       ??_PID_SetControllerDirection 001E  PID_SetControllerDirection@Direction 001D  
                    __size_of___ftge 0090                              ___ftadd 77BC  
                            ___ftdiv 73D4                              ___ftneg 6FA6  
                            ___ftmul 74BA                              __pcinit 6FEE  
                         ??___awtoft 000C                           ??___ftpack 0006  
                         ??___lbtoft 000C                              __ramtop 0800  
                         ??___lltoft 000D                              __ptext0 722E  
                            __ptext1 6FCA                              __ptext2 701C  
                            __ptext3 76B2                              __ptext4 7B20  
                            __ptext5 7094                              __ptext6 73D4  
                            __ptext7 7968                              __ptext8 7300  
                            __ptext9 7054          PID_init@ControllerDirection 003B  
                            main@PID 0060                 end_of_initialization 7016  
__size_of_PID_SetControllerDirection 00D4                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                     PID_SetMode@pid 000C                     PID_Compute@error 002F  
                   PID_Compute@input 0032                          ___ftdiv@exp 001F  
                        ___ftmul@exp 0012                       __end_of___ftge 7180  
                  __size_of_PID_init 010A                  start_initialization 6FEE  
                  PID_Initialize@pid 000A   __end_of_PID_SetControllerDirection 73D4  
         _PID_SetControllerDirection 7300                             ??___ftge 0007  
                        __pdataBANK0 008D                     __CFG_LPT1OSC$OFF 000000  
                  __size_of___awtoft 0038                    __size_of___ftpack 00AE  
                  __size_of___lbtoft 0024                    __size_of___lltoft 005C  
                      __pcstackBANK0 0060                            __pnvBANK0 0096  
                      ??_PID_Compute 0029                        ??_PID_SetMode 000F  
                           ?___ftadd 001B                             ?___ftdiv 0012  
                           ?___ftneg 0018                             ?___ftmul 0009  
                         PID_init@Kd 0038                           PID_init@Ki 0035  
                         PID_init@Kp 0032         __size_of_PID_SetOutputLimits 01B8  
                   __CFG_WDTPS$32768 000000                             _PID_init 76B2  
                __end_of_PID_Compute 8000                  __end_of_PID_SetMode 7094  
            __size_of_PID_Initialize 0104                            copy_data0 7002  
                           __Hrparam 0000                             __Lrparam 0000  
            __size_of_PID_SetTunings 01C8                             _Setpoint 008D  
                   __size_of___ftadd 01AC                     __size_of___ftdiv 00E6  
                   __size_of___ftneg 0024                     __size_of___ftmul 00F4  
                           ___awtoft 701C                             ___ftpack 7180  
                           ___lbtoft 6FCA                             ___lltoft 7094  
                    _PID_Compute$946 002C                             __ptext10 75AE  
                           __ptext11 7CE8                             __ptext12 6FA6  
                           __ptext13 74BA                             __ptext14 70F0  
                           __ptext15 77BC                             __ptext16 7180  
                      __size_of_main 00D2                          _PID_Compute 7CE8  
        ?_PID_SetControllerDirection 001B                          _PID_SetMode 7054  
                        _PID_Out_Max 008F                          _PID_Out_Min 0091  
              __CFG_CPUDIV$OSC1_PLL2 000000        PID_SetControllerDirection@pid 001B  
                _PID_SetOutputLimits 7968                       _PID_Initialize 75AE  
               ?_PID_SetOutputLimits 000D        PID_SetTunings@SampleTimeInSec 002D  
                     _PID_SetTunings 7B20  
