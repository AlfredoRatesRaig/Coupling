

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jun 12 17:48:16 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  006E40                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _PID_Out_Max
    73  006E40  000A               	dw	10
    74  0000                     _PORTD	set	3971
    75  0000                     _PORTB	set	3969
    76  0000                     _PORTCbits	set	3970
    77  0000                     _TRISC	set	3988
    78  0000                     _TRISD	set	3989
    79  0000                     _TRISB	set	3987
    80  0000                     _TMR3CS	set	32137
    81  0000                     _TMR1CS	set	32361
    82                           
    83                           ; #config settings
    84  0000                     
    85                           	psect	cinit
    86  006E8A                     __pcinit:
    87                           	opt stack 0
    88  006E8A                     start_initialization:
    89                           	opt stack 0
    90  006E8A                     __initialization:
    91                           	opt stack 0
    92                           
    93                           ; Initialize objects allocated to COMRAM (2 bytes)
    94                           ; load TBLPTR registers with __pidataCOMRAM
    95  006E8A  0E40               	movlw	low __pidataCOMRAM
    96  006E8C  6EF6               	movwf	tblptrl,c
    97  006E8E  0E6E               	movlw	high __pidataCOMRAM
    98  006E90  6EF7               	movwf	tblptrh,c
    99  006E92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   100  006E94  6EF8               	movwf	tblptru,c
   101  006E96  0009               	tblrd		*+	;fetch initializer
   102  006E98  CFF5 F03E          	movff	tablat,__pdataCOMRAM
   103  006E9C  0009               	tblrd		*+	;fetch initializer
   104  006E9E  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
   105                           
   106                           ; Clear objects allocated to BANK0 (20 bytes)
   107  006EA2  EE00  F08D         	lfsr	0,__pbssBANK0
   108  006EA6  0E14               	movlw	20
   109  006EA8                     clear_0:
   110  006EA8  6AEE               	clrf	postinc0,c
   111  006EAA  06E8               	decf	wreg,f,c
   112  006EAC  E1FD               	bnz	clear_0
   113                           
   114                           ; Clear objects allocated to COMRAM (2 bytes)
   115  006EAE  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   116  006EB0  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   117  006EB2                     end_of_initialization:
   118                           	opt stack 0
   119  006EB2                     __end_of__initialization:
   120                           	opt stack 0
   121  006EB2  0100               	movlb	0
   122  006EB4  EF3D  F03B         	goto	_main	;jump to C main() function
   123                           tblptru	equ	0xFF8
   124                           tblptrh	equ	0xFF7
   125                           tblptrl	equ	0xFF6
   126                           tablat	equ	0xFF5
   127                           postinc0	equ	0xFEE
   128                           wreg	equ	0xFE8
   129                           
   130                           	psect	bssCOMRAM
   131  00003C                     __pbssCOMRAM:
   132                           	opt stack 0
   133  00003C                     _PID_Out_Min:
   134                           	opt stack 0
   135  00003C                     	ds	2
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	dataCOMRAM
   144  00003E                     __pdataCOMRAM:
   145                           	opt stack 0
   146  00003E                     _PID_Out_Max:
   147                           	opt stack 0
   148  00003E                     	ds	2
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           
   156                           	psect	bssBANK0
   157  00008D                     __pbssBANK0:
   158                           	opt stack 0
   159  00008D                     _D:
   160                           	opt stack 0
   161  00008D                     	ds	3
   162  000090                     _C:
   163                           	opt stack 0
   164  000090                     	ds	3
   165  000093                     _B:
   166                           	opt stack 0
   167  000093                     	ds	3
   168  000096                     _A:
   169                           	opt stack 0
   170  000096                     	ds	3
   171  000099                     _Input:
   172                           	opt stack 0
   173  000099                     	ds	3
   174  00009C                     _Output:
   175                           	opt stack 0
   176  00009C                     	ds	3
   177  00009F                     _Setpoint:
   178                           	opt stack 0
   179  00009F                     	ds	2
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           
   187                           	psect	cstackBANK0
   188  000060                     __pcstackBANK0:
   189                           	opt stack 0
   190  000060                     main@PID:
   191                           	opt stack 0
   192                           
   193                           ; 45 bytes @ 0x0
   194  000060                     	ds	45
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           
   202                           	psect	cstackCOMRAM
   203  000001                     __pcstackCOMRAM:
   204                           	opt stack 0
   205  000001                     ?___ftpack:
   206                           	opt stack 0
   207  000001                     ?___fttol:
   208                           	opt stack 0
   209  000001                     ___ftpack@arg:
   210                           	opt stack 0
   211  000001                     ___ftge@ff1:
   212                           	opt stack 0
   213  000001                     ___fttol@f1:
   214                           	opt stack 0
   215                           
   216                           ; 3 bytes @ 0x0
   217  000001                     	ds	3
   218  000004                     ___ftpack@exp:
   219                           	opt stack 0
   220  000004                     ___ftge@ff2:
   221                           	opt stack 0
   222                           
   223                           ; 3 bytes @ 0x3
   224  000004                     	ds	1
   225  000005                     ??___fttol:
   226  000005                     ___ftpack@sign:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x4
   230  000005                     	ds	1
   231  000006                     ??___ftpack:
   232                           
   233                           ; 1 bytes @ 0x5
   234  000006                     	ds	1
   235  000007                     ??___ftge:
   236                           
   237                           ; 1 bytes @ 0x6
   238  000007                     	ds	2
   239  000009                     ?___ftmul:
   240                           	opt stack 0
   241  000009                     ?___awtoft:
   242                           	opt stack 0
   243  000009                     ?___lbtoft:
   244                           	opt stack 0
   245  000009                     ?___lltoft:
   246                           	opt stack 0
   247  000009                     ___awtoft@c:
   248                           	opt stack 0
   249  000009                     ___ftmul@f1:
   250                           	opt stack 0
   251  000009                     ___lltoft@c:
   252                           	opt stack 0
   253                           
   254                           ; 4 bytes @ 0x8
   255  000009                     	ds	1
   256  00000A                     ___fttol@sign1:
   257                           	opt stack 0
   258  00000A                     PID_SetOutputLimits@pid:
   259                           	opt stack 0
   260  00000A                     PID_Initialize@pid:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x9
   264  00000A                     	ds	1
   265  00000B                     ___fttol@lval:
   266                           	opt stack 0
   267                           
   268                           ; 4 bytes @ 0xA
   269  00000B                     	ds	1
   270  00000C                     ___awtoft@sign:
   271                           	opt stack 0
   272  00000C                     ___lbtoft@c:
   273                           	opt stack 0
   274  00000C                     PID_SetMode@pid:
   275                           	opt stack 0
   276  00000C                     PID_SetOutputLimits@Min:
   277                           	opt stack 0
   278  00000C                     ___ftmul@f2:
   279                           	opt stack 0
   280                           
   281                           ; 3 bytes @ 0xB
   282  00000C                     	ds	1
   283  00000D                     ??___lltoft:
   284                           
   285                           ; 1 bytes @ 0xC
   286  00000D                     	ds	1
   287  00000E                     PID_SetMode@Mode:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0xD
   291  00000E                     	ds	1
   292  00000F                     ??___ftmul:
   293  00000F                     ___fttol@exp1:
   294                           	opt stack 0
   295  00000F                     PID_SetOutputLimits@Max:
   296                           	opt stack 0
   297                           
   298                           ; 3 bytes @ 0xE
   299  00000F                     	ds	1
   300  000010                     PID_SetMode@newAuto:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0xF
   304  000010                     	ds	1
   305  000011                     ___lltoft@exp:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x10
   309  000011                     	ds	1
   310  000012                     ?___ftdiv:
   311                           	opt stack 0
   312  000012                     ___ftmul@exp:
   313                           	opt stack 0
   314  000012                     ___ftdiv@f1:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0x11
   318  000012                     	ds	1
   319  000013                     ___ftmul@f3_as_product:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x12
   323  000013                     	ds	2
   324  000015                     ___ftdiv@f2:
   325                           	opt stack 0
   326                           
   327                           ; 3 bytes @ 0x14
   328  000015                     	ds	1
   329  000016                     ___ftmul@cntr:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x15
   333  000016                     	ds	1
   334  000017                     ___ftmul@sign:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x16
   338  000017                     	ds	1
   339  000018                     ??___ftdiv:
   340  000018                     ?___ftneg:
   341                           	opt stack 0
   342  000018                     ___ftneg@f1:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0x17
   346  000018                     	ds	3
   347  00001B                     ?___ftadd:
   348                           	opt stack 0
   349  00001B                     ___ftdiv@cntr:
   350                           	opt stack 0
   351  00001B                     PID_SetControllerDirection@pid:
   352                           	opt stack 0
   353  00001B                     ___ftadd@f1:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0x1A
   357  00001B                     	ds	1
   358  00001C                     ___ftdiv@f3:
   359                           	opt stack 0
   360                           
   361                           ; 3 bytes @ 0x1B
   362  00001C                     	ds	1
   363  00001D                     PID_SetControllerDirection@Direction:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x1C
   367  00001D                     	ds	1
   368  00001E                     ___ftadd@f2:
   369                           	opt stack 0
   370                           
   371                           ; 3 bytes @ 0x1D
   372  00001E                     	ds	1
   373  00001F                     ___ftdiv@exp:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x1E
   377  00001F                     	ds	1
   378  000020                     ___ftdiv@sign:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x1F
   382  000020                     	ds	1
   383  000021                     ??___ftadd:
   384  000021                     PID_SetTunings@pid:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x20
   388  000021                     	ds	2
   389  000023                     PID_SetTunings@Kp:
   390                           	opt stack 0
   391                           
   392                           ; 3 bytes @ 0x22
   393  000023                     	ds	1
   394  000024                     ___ftadd@sign:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x23
   398  000024                     	ds	1
   399  000025                     ___ftadd@exp2:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x24
   403  000025                     	ds	1
   404  000026                     ___ftadd@exp1:
   405                           	opt stack 0
   406  000026                     PID_SetTunings@Ki:
   407                           	opt stack 0
   408                           
   409                           ; 3 bytes @ 0x25
   410  000026                     	ds	1
   411  000027                     PID_Compute@pid:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x26
   415  000027                     	ds	2
   416  000029                     PID_Compute@dInput:
   417                           	opt stack 0
   418  000029                     PID_SetTunings@Kd:
   419                           	opt stack 0
   420                           
   421                           ; 3 bytes @ 0x28
   422  000029                     	ds	3
   423  00002C                     _PID_Compute$1034:
   424                           	opt stack 0
   425                           
   426                           ; 3 bytes @ 0x2B
   427  00002C                     	ds	1
   428  00002D                     PID_SetTunings@SampleTimeInSec:
   429                           	opt stack 0
   430                           
   431                           ; 3 bytes @ 0x2C
   432  00002D                     	ds	2
   433  00002F                     PID_Compute@error:
   434                           	opt stack 0
   435                           
   436                           ; 3 bytes @ 0x2E
   437  00002F                     	ds	1
   438  000030                     PID_init@pid:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x2F
   442  000030                     	ds	2
   443  000032                     PID_init@Kp:
   444                           	opt stack 0
   445  000032                     PID_Compute@input:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x31
   449  000032                     	ds	3
   450  000035                     PID_init@Ki:
   451                           	opt stack 0
   452  000035                     PID_Compute@output:
   453                           	opt stack 0
   454                           
   455                           ; 3 bytes @ 0x34
   456  000035                     	ds	3
   457  000038                     PID_init@Kd:
   458                           	opt stack 0
   459                           
   460                           ; 3 bytes @ 0x37
   461  000038                     	ds	3
   462  00003B                     PID_init@ControllerDirection:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x3A
   466  00003B                     	ds	1
   467  00003C                     tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           
   474                           ; 1 bytes @ 0x3B
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 51 in file "newmain.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  PID            45    0[BANK0 ] struct .
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   494 ;;      Params:         0       0       0       0       0       0       0       0       0
   495 ;;      Locals:         0      45       0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0
   497 ;;      Totals:         0      45       0       0       0       0       0       0       0
   498 ;;Total ram usage:       45 bytes
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		_PID_Compute
   502 ;;		_PID_SetMode
   503 ;;		_PID_init
   504 ;;		___awtoft
   505 ;;		___fttol
   506 ;;		___lbtoft
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text0
   513  00767A                     __ptext0:
   514                           	opt stack 0
   515  00767A                     _main:
   516                           	opt stack 27
   517                           
   518                           ;newmain.c: 52: TRISB = 0xFF;
   519                           
   520                           ;incstack = 0
   521  00767A  6893               	setf	3987,c	;volatile
   522                           
   523                           ;newmain.c: 53: TRISD = 0x00;
   524  00767C  0E00               	movlw	0
   525  00767E  6E95               	movwf	3989,c	;volatile
   526                           
   527                           ;newmain.c: 54: TRISC = 0b01000000;
   528  007680  0E40               	movlw	64
   529  007682  6E94               	movwf	3988,c	;volatile
   530                           
   531                           ;newmain.c: 55: TMR1CS = 0;
   532  007684  92CD               	bcf	4045,1,c	;volatile
   533                           
   534                           ;newmain.c: 56: TMR3CS = 0;
   535  007686  92B1               	bcf	4017,1,c	;volatile
   536                           
   537                           ;newmain.c: 57: PORTCbits.RC0 = 0;
   538  007688  9082               	bcf	3970,0,c	;volatile
   539                           
   540                           ;newmain.c: 58: PORTCbits.RC1 = 0;
   541  00768A  9282               	bcf	3970,1,c	;volatile
   542                           
   543                           ;newmain.c: 59: PORTCbits.RC2 = 1;
   544  00768C  8482               	bsf	3970,2,c	;volatile
   545                           
   546                           ;newmain.c: 60: PORTCbits.RC7 = 0;
   547  00768E  9E82               	bcf	3970,7,c	;volatile
   548  007690                     l1692:
   549                           
   550                           ;newmain.c: 62: PORTCbits.RC0 = 0;
   551  007690  9082               	bcf	3970,0,c	;volatile
   552                           
   553                           ;newmain.c: 63: PORTCbits.RC1 = 0;
   554  007692  9282               	bcf	3970,1,c	;volatile
   555                           
   556                           ;newmain.c: 65: PORTCbits.RC2 = 1;
   557  007694  8482               	bsf	3970,2,c	;volatile
   558                           
   559                           ;newmain.c: 66: _delay((unsigned long)((25)*(32000000/4000000.0)));
   560  007696  0E42               	movlw	66
   561  007698                     u1557:
   562  007698  2EE8               	decfsz	wreg,f,c
   563  00769A  D7FE               	bra	u1557
   564  00769C  D000               	nop2	
   565                           
   566                           ;newmain.c: 67: PORTCbits.RC2 = 0;
   567  00769E  9482               	bcf	3970,2,c	;volatile
   568                           
   569                           ;newmain.c: 68: A = PORTB;
   570  0076A0  5081               	movf	3969,w,c	;volatile
   571  0076A2  EC33  F037         	call	___lbtoft
   572  0076A6  C009  F096         	movff	?___lbtoft,_A
   573  0076AA  C00A  F097         	movff	?___lbtoft+1,_A+1
   574  0076AE  C00B  F098         	movff	?___lbtoft+2,_A+2
   575                           
   576                           ;newmain.c: 72: PORTCbits.RC0 = 1;
   577  0076B2  8082               	bsf	3970,0,c	;volatile
   578                           
   579                           ;newmain.c: 73: PORTCbits.RC1 = 0;
   580  0076B4  9282               	bcf	3970,1,c	;volatile
   581                           
   582                           ;newmain.c: 75: PORTCbits.RC2 = 1;
   583  0076B6  8482               	bsf	3970,2,c	;volatile
   584                           
   585                           ;newmain.c: 76: _delay((unsigned long)((25)*(32000000/4000000.0)));
   586  0076B8  0E42               	movlw	66
   587  0076BA                     u1567:
   588  0076BA  2EE8               	decfsz	wreg,f,c
   589  0076BC  D7FE               	bra	u1567
   590  0076BE  D000               	nop2	
   591                           
   592                           ;newmain.c: 77: PORTCbits.RC2 = 0;
   593  0076C0  9482               	bcf	3970,2,c	;volatile
   594                           
   595                           ;newmain.c: 78: B = PORTB;
   596  0076C2  5081               	movf	3969,w,c	;volatile
   597  0076C4  EC33  F037         	call	___lbtoft
   598  0076C8  C009  F093         	movff	?___lbtoft,_B
   599  0076CC  C00A  F094         	movff	?___lbtoft+1,_B+1
   600  0076D0  C00B  F095         	movff	?___lbtoft+2,_B+2
   601                           
   602                           ;newmain.c: 82: PORTCbits.RC0 = 0;
   603  0076D4  9082               	bcf	3970,0,c	;volatile
   604                           
   605                           ;newmain.c: 83: PORTCbits.RC1 = 1;
   606  0076D6  8282               	bsf	3970,1,c	;volatile
   607                           
   608                           ;newmain.c: 85: PORTCbits.RC2 = 1;
   609  0076D8  8482               	bsf	3970,2,c	;volatile
   610                           
   611                           ;newmain.c: 86: _delay((unsigned long)((25)*(32000000/4000000.0)));
   612  0076DA  0E42               	movlw	66
   613  0076DC                     u1577:
   614  0076DC  2EE8               	decfsz	wreg,f,c
   615  0076DE  D7FE               	bra	u1577
   616  0076E0  D000               	nop2	
   617                           
   618                           ;newmain.c: 87: PORTCbits.RC2 = 0;
   619  0076E2  9482               	bcf	3970,2,c	;volatile
   620                           
   621                           ;newmain.c: 88: C = PORTB;
   622  0076E4  5081               	movf	3969,w,c	;volatile
   623  0076E6  EC33  F037         	call	___lbtoft
   624  0076EA  C009  F090         	movff	?___lbtoft,_C
   625  0076EE  C00A  F091         	movff	?___lbtoft+1,_C+1
   626  0076F2  C00B  F092         	movff	?___lbtoft+2,_C+2
   627                           
   628                           ;newmain.c: 92: PORTCbits.RC0 = 1;
   629  0076F6  8082               	bsf	3970,0,c	;volatile
   630                           
   631                           ;newmain.c: 93: PORTCbits.RC1 = 1;
   632  0076F8  8282               	bsf	3970,1,c	;volatile
   633                           
   634                           ;newmain.c: 95: PORTCbits.RC2 = 1;
   635  0076FA  8482               	bsf	3970,2,c	;volatile
   636                           
   637                           ;newmain.c: 96: _delay((unsigned long)((25)*(32000000/4000000.0)));
   638  0076FC  0E42               	movlw	66
   639  0076FE                     u1587:
   640  0076FE  2EE8               	decfsz	wreg,f,c
   641  007700  D7FE               	bra	u1587
   642  007702  D000               	nop2	
   643                           
   644                           ;newmain.c: 97: PORTCbits.RC2 = 0;
   645  007704  9482               	bcf	3970,2,c	;volatile
   646                           
   647                           ;newmain.c: 98: D = PORTB;
   648  007706  5081               	movf	3969,w,c	;volatile
   649  007708  EC33  F037         	call	___lbtoft
   650  00770C  C009  F08D         	movff	?___lbtoft,_D
   651  007710  C00A  F08E         	movff	?___lbtoft+1,_D+1
   652  007714  C00B  F08F         	movff	?___lbtoft+2,_D+2
   653                           
   654                           ;newmain.c: 101: PORTCbits.RC7 = 0;
   655  007718  9E82               	bcf	3970,7,c	;volatile
   656                           
   657                           ;newmain.c: 103: Input = A;
   658  00771A  C096  F099         	movff	_A,_Input
   659  00771E  C097  F09A         	movff	_A+1,_Input+1
   660  007722  C098  F09B         	movff	_A+2,_Input+2
   661                           
   662                           ;newmain.c: 104: PidType PID;
   663                           ;newmain.c: 105: PID_init(&PID, 1, 0, 0, PID_Direction_Reverse);
   664  007726  0E60               	movlw	low main@PID
   665  007728  6E30               	movwf	PID_init@pid,c
   666  00772A  0E00               	movlw	high main@PID
   667  00772C  6E31               	movwf	PID_init@pid+1,c
   668  00772E  0E00               	movlw	0
   669  007730  6E32               	movwf	PID_init@Kp,c
   670  007732  0E80               	movlw	128
   671  007734  6E33               	movwf	PID_init@Kp+1,c
   672  007736  0E3F               	movlw	63
   673  007738  6E34               	movwf	PID_init@Kp+2,c
   674  00773A  0E00               	movlw	0
   675  00773C  6E35               	movwf	PID_init@Ki,c
   676  00773E  0E00               	movlw	0
   677  007740  6E36               	movwf	PID_init@Ki+1,c
   678  007742  0E00               	movlw	0
   679  007744  6E37               	movwf	PID_init@Ki+2,c
   680  007746  0E00               	movlw	0
   681  007748  6E38               	movwf	PID_init@Kd,c
   682  00774A  0E00               	movlw	0
   683  00774C  6E39               	movwf	PID_init@Kd+1,c
   684  00774E  0E00               	movlw	0
   685  007750  6E3A               	movwf	PID_init@Kd+2,c
   686  007752  0E01               	movlw	1
   687  007754  6E3B               	movwf	PID_init@ControllerDirection,c
   688  007756  ECB8  F03A         	call	_PID_init	;wreg free
   689                           
   690                           ;newmain.c: 106: PID_SetMode(&PID, PID_Mode_Automatic);
   691  00775A  0E60               	movlw	low main@PID
   692  00775C  6E0C               	movwf	PID_SetMode@pid,c
   693  00775E  0E00               	movlw	high main@PID
   694  007760  6E0D               	movwf	PID_SetMode@pid+1,c
   695  007762  0E01               	movlw	1
   696  007764  6E0E               	movwf	PID_SetMode@Mode,c
   697  007766  EC78  F037         	call	_PID_SetMode	;wreg free
   698                           
   699                           ;newmain.c: 108: PID.mySetpoint = Setpoint;
   700  00776A  C09F  F009         	movff	_Setpoint,___awtoft@c
   701  00776E  C0A0  F00A         	movff	_Setpoint+1,___awtoft@c+1
   702  007772  EC5C  F037         	call	___awtoft	;wreg free
   703  007776  C009  F079         	movff	?___awtoft,main@PID+25
   704  00777A  C00A  F07A         	movff	?___awtoft+1,main@PID+26
   705  00777E  C00B  F07B         	movff	?___awtoft+2,main@PID+27
   706                           
   707                           ;newmain.c: 109: PID.myInput = Input;
   708  007782  C099  F073         	movff	_Input,main@PID+19
   709  007786  C09A  F074         	movff	_Input+1,main@PID+20
   710  00778A  C09B  F075         	movff	_Input+2,main@PID+21
   711                           
   712                           ;newmain.c: 110: PID_Compute(&PID);
   713  00778E  0E60               	movlw	low main@PID
   714  007790  6E27               	movwf	PID_Compute@pid,c
   715  007792  0E00               	movlw	high main@PID
   716  007794  6E28               	movwf	PID_Compute@pid+1,c
   717  007796  EC74  F03E         	call	_PID_Compute	;wreg free
   718                           
   719                           ;newmain.c: 111: Output = PID.myOutput;
   720  00779A  C076  F09C         	movff	main@PID+22,_Output
   721  00779E  C077  F09D         	movff	main@PID+23,_Output+1
   722  0077A2  C078  F09E         	movff	main@PID+24,_Output+2
   723                           
   724                           ;newmain.c: 113: PORTD = A;
   725  0077A6  C096  F001         	movff	_A,___fttol@f1
   726  0077AA  C097  F002         	movff	_A+1,___fttol@f1+1
   727  0077AE  C098  F003         	movff	_A+2,___fttol@f1+2
   728  0077B2  ECBC  F039         	call	___fttol	;wreg free
   729  0077B6  5001               	movf	?___fttol,w,c
   730  0077B8  6E83               	movwf	3971,c	;volatile
   731  0077BA  D76A               	goto	l1692
   732  0077BC                     __end_of_main:
   733                           	opt stack 0
   734                           tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           postinc0	equ	0xFEE
   739                           wreg	equ	0xFE8
   740                           
   741 ;; *************** function ___lbtoft *****************
   742 ;; Defined at:
   743 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  c               1    wreg     unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  c               1   11[COMRAM] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  3    8[COMRAM] float 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   757 ;;      Params:         3       0       0       0       0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0
   760 ;;      Totals:         4       0       0       0       0       0       0       0       0
   761 ;;Total ram usage:        4 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    1
   764 ;; This function calls:
   765 ;;		___ftpack
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text1
   772  006E66                     __ptext1:
   773                           	opt stack 0
   774  006E66                     ___lbtoft:
   775                           	opt stack 29
   776                           
   777                           ;incstack = 0
   778                           ;___lbtoft@c stored from wreg
   779  006E66  6E0C               	movwf	___lbtoft@c,c
   780  006E68  500C               	movf	___lbtoft@c,w,c
   781  006E6A  6E01               	movwf	___ftpack@arg,c
   782  006E6C  6A02               	clrf	___ftpack@arg+1,c
   783  006E6E  6A03               	clrf	___ftpack@arg+2,c
   784  006E70  0E8E               	movlw	142
   785  006E72  6E04               	movwf	___ftpack@exp,c
   786  006E74  0E00               	movlw	0
   787  006E76  6E05               	movwf	___ftpack@sign,c
   788  006E78  EC0E  F038         	call	___ftpack	;wreg free
   789  006E7C  C001  F009         	movff	?___ftpack,?___lbtoft
   790  006E80  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   791  006E84  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   792  006E88  0012               	return	
   793  006E8A                     __end_of___lbtoft:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           
   802 ;; *************** function ___fttol *****************
   803 ;; Defined at:
   804 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  f1              3    0[COMRAM] float 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  lval            4   10[COMRAM] unsigned long 
   809 ;;  exp1            1   14[COMRAM] unsigned char 
   810 ;;  sign1           1    9[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  4    0[COMRAM] long 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         4       0       0       0       0       0       0       0       0
   821 ;;      Locals:         6       0       0       0       0       0       0       0       0
   822 ;;      Temps:          5       0       0       0       0       0       0       0       0
   823 ;;      Totals:        15       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:       15 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text2
   834  007378                     __ptext2:
   835                           	opt stack 0
   836  007378                     ___fttol:
   837                           	opt stack 30
   838                           
   839                           ;incstack = 0
   840  007378  C003  F005         	movff	___fttol@f1+2,??___fttol
   841  00737C  6A06               	clrf	(??___fttol+1)& (0+255),c
   842  00737E  6A07               	clrf	(??___fttol+2)& (0+255),c
   843  007380  3402               	rlcf	___fttol@f1+1,w,c
   844  007382  3605               	rlcf	??___fttol& (0+255),f,c
   845  007384  E301               	bnc	u1461
   846  007386  8006               	bsf	(??___fttol+1)& (0+255),0,c
   847  007388                     u1461:
   848  007388  5005               	movf	??___fttol,w,c
   849  00738A  6E0F               	movwf	___fttol@exp1,c
   850  00738C  500F               	movf	___fttol@exp1,w,c
   851  00738E  A4D8               	btfss	status,2,c
   852  007390  D009               	goto	l1632
   853  007392  0E00               	movlw	0
   854  007394  6E01               	movwf	?___fttol,c
   855  007396  0E00               	movlw	0
   856  007398  6E02               	movwf	?___fttol+1,c
   857  00739A  0E00               	movlw	0
   858  00739C  6E03               	movwf	?___fttol+2,c
   859  00739E  0E00               	movlw	0
   860  0073A0  6E04               	movwf	?___fttol+3,c
   861  0073A2  0012               	return	
   862  0073A4                     l1632:
   863  0073A4  0E17               	movlw	23
   864  0073A6  6E05               	movwf	??___fttol& (0+255),c
   865  0073A8  C001  F006         	movff	___fttol@f1,??___fttol+1
   866  0073AC  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   867  0073B0  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   868  0073B4  2805               	incf	??___fttol,w,c
   869  0073B6  6E09               	movwf	(??___fttol+4)& (0+255),c
   870  0073B8  D004               	goto	u1480
   871  0073BA                     u1485:
   872  0073BA  90D8               	bcf	status,0,c
   873  0073BC  3208               	rrcf	??___fttol+3,f,c
   874  0073BE  3207               	rrcf	??___fttol+2,f,c
   875  0073C0  3206               	rrcf	??___fttol+1,f,c
   876  0073C2                     u1480:
   877  0073C2  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   878  0073C4  D7FA               	goto	u1485
   879  0073C6  5006               	movf	??___fttol+1,w,c
   880  0073C8  6E0A               	movwf	___fttol@sign1,c
   881  0073CA  8E02               	bsf	___fttol@f1+1,7,c
   882  0073CC  0EFF               	movlw	255
   883  0073CE  1601               	andwf	___fttol@f1,f,c
   884  0073D0  0EFF               	movlw	255
   885  0073D2  1602               	andwf	___fttol@f1+1,f,c
   886  0073D4  0E00               	movlw	0
   887  0073D6  1603               	andwf	___fttol@f1+2,f,c
   888  0073D8  5001               	movf	___fttol@f1,w,c
   889  0073DA  6E0B               	movwf	___fttol@lval,c
   890  0073DC  5002               	movf	___fttol@f1+1,w,c
   891  0073DE  6E0C               	movwf	___fttol@lval+1,c
   892  0073E0  5003               	movf	___fttol@f1+2,w,c
   893  0073E2  6E0D               	movwf	___fttol@lval+2,c
   894  0073E4  6A0E               	clrf	___fttol@lval+3,c
   895  0073E6  0E8E               	movlw	142
   896  0073E8  5E0F               	subwf	___fttol@exp1,f,c
   897  0073EA  AE0F               	btfss	___fttol@exp1,7,c
   898  0073EC  D016               	goto	l1654
   899  0073EE  500F               	movf	___fttol@exp1,w,c
   900  0073F0  0A80               	xorlw	128
   901  0073F2  0F8F               	addlw	143
   902  0073F4  B0D8               	btfsc	status,0,c
   903  0073F6  D009               	goto	l1650
   904  0073F8  0E00               	movlw	0
   905  0073FA  6E01               	movwf	?___fttol,c
   906  0073FC  0E00               	movlw	0
   907  0073FE  6E02               	movwf	?___fttol+1,c
   908  007400  0E00               	movlw	0
   909  007402  6E03               	movwf	?___fttol+2,c
   910  007404  0E00               	movlw	0
   911  007406  6E04               	movwf	?___fttol+3,c
   912  007408  0012               	return	
   913  00740A                     l1650:
   914  00740A  90D8               	bcf	status,0,c
   915  00740C  320E               	rrcf	___fttol@lval+3,f,c
   916  00740E  320D               	rrcf	___fttol@lval+2,f,c
   917  007410  320C               	rrcf	___fttol@lval+1,f,c
   918  007412  320B               	rrcf	___fttol@lval,f,c
   919  007414  3E0F               	incfsz	___fttol@exp1,f,c
   920  007416  D7F9               	goto	l1650
   921  007418  D015               	goto	l1664
   922  00741A                     l1654:
   923  00741A  0E17               	movlw	23
   924  00741C  640F               	cpfsgt	___fttol@exp1,c
   925  00741E  D00F               	goto	l1662
   926  007420  0E00               	movlw	0
   927  007422  6E01               	movwf	?___fttol,c
   928  007424  0E00               	movlw	0
   929  007426  6E02               	movwf	?___fttol+1,c
   930  007428  0E00               	movlw	0
   931  00742A  6E03               	movwf	?___fttol+2,c
   932  00742C  0E00               	movlw	0
   933  00742E  6E04               	movwf	?___fttol+3,c
   934  007430  0012               	return	
   935  007432                     l1660:
   936  007432  90D8               	bcf	status,0,c
   937  007434  360B               	rlcf	___fttol@lval,f,c
   938  007436  360C               	rlcf	___fttol@lval+1,f,c
   939  007438  360D               	rlcf	___fttol@lval+2,f,c
   940  00743A  360E               	rlcf	___fttol@lval+3,f,c
   941  00743C  060F               	decf	___fttol@exp1,f,c
   942  00743E                     l1662:
   943  00743E  500F               	movf	___fttol@exp1,w,c
   944  007440  A4D8               	btfss	status,2,c
   945  007442  D7F7               	goto	l1660
   946  007444                     l1664:
   947  007444  500A               	movf	___fttol@sign1,w,c
   948  007446  B4D8               	btfsc	status,2,c
   949  007448  D008               	goto	l1668
   950  00744A  1E0E               	comf	___fttol@lval+3,f,c
   951  00744C  1E0D               	comf	___fttol@lval+2,f,c
   952  00744E  1E0C               	comf	___fttol@lval+1,f,c
   953  007450  6C0B               	negf	___fttol@lval,c
   954  007452  0E00               	movlw	0
   955  007454  220C               	addwfc	___fttol@lval+1,f,c
   956  007456  220D               	addwfc	___fttol@lval+2,f,c
   957  007458  220E               	addwfc	___fttol@lval+3,f,c
   958  00745A                     l1668:
   959  00745A  C00B  F001         	movff	___fttol@lval,?___fttol
   960  00745E  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   961  007462  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   962  007466  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   963  00746A  0012               	return	
   964  00746C                     __end_of___fttol:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           tblptrl	equ	0xFF6
   969                           tablat	equ	0xFF5
   970                           postinc0	equ	0xFEE
   971                           wreg	equ	0xFE8
   972                           status	equ	0xFD8
   973                           
   974 ;; *************** function ___awtoft *****************
   975 ;; Defined at:
   976 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  c               2    8[COMRAM] int 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  sign            1   11[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  3    8[COMRAM] float 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         3       0       0       0       0       0       0       0       0
   991 ;;      Locals:         1       0       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         4       0       0       0       0       0       0       0       0
   994 ;;Total ram usage:        4 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    1
   997 ;; This function calls:
   998 ;;		___ftpack
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;;		_PID_SetSampleTime
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text3
  1006  006EB8                     __ptext3:
  1007                           	opt stack 0
  1008  006EB8                     ___awtoft:
  1009                           	opt stack 29
  1010                           
  1011                           ;incstack = 0
  1012  006EB8  0E00               	movlw	0
  1013  006EBA  6E0C               	movwf	___awtoft@sign,c
  1014  006EBC  AE0A               	btfss	___awtoft@c+1,7,c
  1015  006EBE  D006               	goto	l1622
  1016  006EC0  6C09               	negf	___awtoft@c,c
  1017  006EC2  1E0A               	comf	___awtoft@c+1,f,c
  1018  006EC4  B0D8               	btfsc	status,0,c
  1019  006EC6  2A0A               	incf	___awtoft@c+1,f,c
  1020  006EC8  0E01               	movlw	1
  1021  006ECA  6E0C               	movwf	___awtoft@sign,c
  1022  006ECC                     l1622:
  1023  006ECC  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1024  006ED0  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1025  006ED4  6A03               	clrf	___ftpack@arg+2,c
  1026  006ED6  0E8E               	movlw	142
  1027  006ED8  6E04               	movwf	___ftpack@exp,c
  1028  006EDA  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1029  006EDE  EC0E  F038         	call	___ftpack	;wreg free
  1030  006EE2  C001  F009         	movff	?___ftpack,?___awtoft
  1031  006EE6  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1032  006EEA  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1033  006EEE  0012               	return	
  1034  006EF0                     __end_of___awtoft:
  1035                           	opt stack 0
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _PID_init *****************
  1045 ;; Defined at:
  1046 ;;		line 16 in file "pid.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  pid             2   47[COMRAM] PTR struct .
  1049 ;;		 -> main@PID(45), 
  1050 ;;  Kp              3   49[COMRAM] float 
  1051 ;;  Ki              3   52[COMRAM] float 
  1052 ;;  Kd              3   55[COMRAM] float 
  1053 ;;  ControllerDi    1   58[COMRAM] enum E7
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1065 ;;      Params:        12       0       0       0       0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1068 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1069 ;;Total ram usage:       12 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    3
  1072 ;; This function calls:
  1073 ;;		_PID_SetControllerDirection
  1074 ;;		_PID_SetOutputLimits
  1075 ;;		_PID_SetTunings
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text4
  1082  007570                     __ptext4:
  1083                           	opt stack 0
  1084  007570                     _PID_init:
  1085                           	opt stack 27
  1086                           
  1087                           ;pid.c: 18: pid->myInput = 0;
  1088                           
  1089                           ;incstack = 0
  1090  007570  EE20 F013          	lfsr	2,19
  1091  007574  5030               	movf	PID_init@pid,w,c
  1092  007576  26D9               	addwf	fsr2l,f,c
  1093  007578  5031               	movf	PID_init@pid+1,w,c
  1094  00757A  22DA               	addwfc	fsr2h,f,c
  1095  00757C  0E00               	movlw	0
  1096  00757E  6EDE               	movwf	postinc2,c
  1097  007580  0E00               	movlw	0
  1098  007582  6EDE               	movwf	postinc2,c
  1099  007584  0E00               	movlw	0
  1100  007586  6EDE               	movwf	postinc2,c
  1101                           
  1102                           ;pid.c: 19: pid->myOutput = 0;
  1103  007588  EE20 F016          	lfsr	2,22
  1104  00758C  5030               	movf	PID_init@pid,w,c
  1105  00758E  26D9               	addwf	fsr2l,f,c
  1106  007590  5031               	movf	PID_init@pid+1,w,c
  1107  007592  22DA               	addwfc	fsr2h,f,c
  1108  007594  0E00               	movlw	0
  1109  007596  6EDE               	movwf	postinc2,c
  1110  007598  0E00               	movlw	0
  1111  00759A  6EDE               	movwf	postinc2,c
  1112  00759C  0E00               	movlw	0
  1113  00759E  6EDE               	movwf	postinc2,c
  1114                           
  1115                           ;pid.c: 20: pid->mySetpoint = 0;
  1116  0075A0  EE20 F019          	lfsr	2,25
  1117  0075A4  5030               	movf	PID_init@pid,w,c
  1118  0075A6  26D9               	addwf	fsr2l,f,c
  1119  0075A8  5031               	movf	PID_init@pid+1,w,c
  1120  0075AA  22DA               	addwfc	fsr2h,f,c
  1121  0075AC  0E00               	movlw	0
  1122  0075AE  6EDE               	movwf	postinc2,c
  1123  0075B0  0E00               	movlw	0
  1124  0075B2  6EDE               	movwf	postinc2,c
  1125  0075B4  0E00               	movlw	0
  1126  0075B6  6EDE               	movwf	postinc2,c
  1127                           
  1128                           ;pid.c: 21: pid->ITerm = 0;
  1129  0075B8  EE20 F01C          	lfsr	2,28
  1130  0075BC  5030               	movf	PID_init@pid,w,c
  1131  0075BE  26D9               	addwf	fsr2l,f,c
  1132  0075C0  5031               	movf	PID_init@pid+1,w,c
  1133  0075C2  22DA               	addwfc	fsr2h,f,c
  1134  0075C4  0E00               	movlw	0
  1135  0075C6  6EDE               	movwf	postinc2,c
  1136  0075C8  0E00               	movlw	0
  1137  0075CA  6EDE               	movwf	postinc2,c
  1138  0075CC  0E00               	movlw	0
  1139  0075CE  6EDE               	movwf	postinc2,c
  1140                           
  1141                           ;pid.c: 22: pid->lastInput = 0;
  1142  0075D0  EE20 F01F          	lfsr	2,31
  1143  0075D4  5030               	movf	PID_init@pid,w,c
  1144  0075D6  26D9               	addwf	fsr2l,f,c
  1145  0075D8  5031               	movf	PID_init@pid+1,w,c
  1146  0075DA  22DA               	addwfc	fsr2h,f,c
  1147  0075DC  0E00               	movlw	0
  1148  0075DE  6EDE               	movwf	postinc2,c
  1149  0075E0  0E00               	movlw	0
  1150  0075E2  6EDE               	movwf	postinc2,c
  1151  0075E4  0E00               	movlw	0
  1152  0075E6  6EDE               	movwf	postinc2,c
  1153                           
  1154                           ;pid.c: 23: pid->inAuto = 0;
  1155  0075E8  EE20 F02C          	lfsr	2,44
  1156  0075EC  5030               	movf	PID_init@pid,w,c
  1157  0075EE  26D9               	addwf	fsr2l,f,c
  1158  0075F0  5031               	movf	PID_init@pid+1,w,c
  1159  0075F2  22DA               	addwfc	fsr2h,f,c
  1160  0075F4  0E00               	movlw	0
  1161  0075F6  6EDF               	movwf	indf2,c
  1162                           
  1163                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
  1164  0075F8  C030  F00A         	movff	PID_init@pid,PID_SetOutputLimits@pid
  1165  0075FC  C031  F00B         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
  1166  007600  0E00               	movlw	0
  1167  007602  6E0C               	movwf	PID_SetOutputLimits@Min,c
  1168  007604  0E00               	movlw	0
  1169  007606  6E0D               	movwf	PID_SetOutputLimits@Min+1,c
  1170  007608  0E00               	movlw	0
  1171  00760A  6E0E               	movwf	PID_SetOutputLimits@Min+2,c
  1172  00760C  0EFF               	movlw	255
  1173  00760E  6E0F               	movwf	PID_SetOutputLimits@Max,c
  1174  007610  0E7F               	movlw	127
  1175  007612  6E10               	movwf	PID_SetOutputLimits@Max+1,c
  1176  007614  0E47               	movlw	71
  1177  007616  6E11               	movwf	PID_SetOutputLimits@Max+2,c
  1178  007618  ECB4  F03C         	call	_PID_SetOutputLimits	;wreg free
  1179                           
  1180                           ;pid.c: 28: pid->SampleTime = 1000;
  1181  00761C  EE20 F022          	lfsr	2,34
  1182  007620  5030               	movf	PID_init@pid,w,c
  1183  007622  26D9               	addwf	fsr2l,f,c
  1184  007624  5031               	movf	PID_init@pid+1,w,c
  1185  007626  22DA               	addwfc	fsr2h,f,c
  1186  007628  0EE8               	movlw	232
  1187  00762A  6EDE               	movwf	postinc2,c
  1188  00762C  0E03               	movlw	3
  1189  00762E  6EDE               	movwf	postinc2,c
  1190  007630  0E00               	movlw	0
  1191  007632  6EDE               	movwf	postinc2,c
  1192  007634  0E00               	movlw	0
  1193  007636  6EDD               	movwf	postdec2,c
  1194                           
  1195                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
  1196  007638  C030  F01B         	movff	PID_init@pid,PID_SetControllerDirection@pid
  1197  00763C  C031  F01C         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
  1198  007640  C03B  F01D         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
  1199  007644  EC65  F038         	call	_PID_SetControllerDirection	;wreg free
  1200                           
  1201                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
  1202  007648  C030  F021         	movff	PID_init@pid,PID_SetTunings@pid
  1203  00764C  C031  F022         	movff	PID_init@pid+1,PID_SetTunings@pid+1
  1204  007650  C032  F023         	movff	PID_init@Kp,PID_SetTunings@Kp
  1205  007654  C033  F024         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
  1206  007658  C034  F025         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
  1207  00765C  C035  F026         	movff	PID_init@Ki,PID_SetTunings@Ki
  1208  007660  C036  F027         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
  1209  007664  C037  F028         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
  1210  007668  C038  F029         	movff	PID_init@Kd,PID_SetTunings@Kd
  1211  00766C  C039  F02A         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
  1212  007670  C03A  F02B         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
  1213  007674  EC90  F03D         	call	_PID_SetTunings	;wreg free
  1214  007678  0012               	return		;funcret
  1215  00767A                     __end_of_PID_init:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           indf2	equ	0xFDF
  1224                           postinc2	equ	0xFDE
  1225                           postdec2	equ	0xFDD
  1226                           fsr2h	equ	0xFDA
  1227                           fsr2l	equ	0xFD9
  1228                           status	equ	0xFD8
  1229                           
  1230 ;; *************** function _PID_SetTunings *****************
  1231 ;; Defined at:
  1232 ;;		line 85 in file "pid.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  pid             2   32[COMRAM] PTR struct .
  1235 ;;		 -> main@PID(45), 
  1236 ;;  Kp              3   34[COMRAM] float 
  1237 ;;  Ki              3   37[COMRAM] float 
  1238 ;;  Kd              3   40[COMRAM] float 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  SampleTimeIn    3   44[COMRAM] float 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1250 ;;      Params:        11       0       0       0       0       0       0       0       0
  1251 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1252 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1253 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1254 ;;Total ram usage:       15 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    2
  1257 ;; This function calls:
  1258 ;;		___ftdiv
  1259 ;;		___ftmul
  1260 ;;		___ftneg
  1261 ;;		___lltoft
  1262 ;; This function is called by:
  1263 ;;		_PID_init
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text5
  1268  007B20                     __ptext5:
  1269                           	opt stack 0
  1270  007B20                     _PID_SetTunings:
  1271                           	opt stack 27
  1272                           
  1273                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
  1274                           
  1275                           ;incstack = 0
  1276  007B20  BE25               	btfsc	PID_SetTunings@Kp+2,7,c
  1277  007B22  0012               	return	
  1278  007B24  BE28               	btfsc	PID_SetTunings@Ki+2,7,c
  1279  007B26  0012               	return	
  1280  007B28  BE2B               	btfsc	PID_SetTunings@Kd+2,7,c
  1281  007B2A  0012               	return	
  1282                           
  1283                           ;pid.c: 88: }
  1284                           ;pid.c: 90: pid->dispKp = Kp;
  1285                           
  1286                           ;pid.c: 87: return;
  1287  007B2C  C021  FFD9         	movff	PID_SetTunings@pid,fsr2l
  1288  007B30  C022  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
  1289  007B34  C023  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1290  007B38  C024  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1291  007B3C  C025  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1292                           
  1293                           ;pid.c: 91: pid->dispKi = Ki;
  1294  007B40  EE20 F003          	lfsr	2,3
  1295  007B44  5021               	movf	PID_SetTunings@pid,w,c
  1296  007B46  26D9               	addwf	fsr2l,f,c
  1297  007B48  5022               	movf	PID_SetTunings@pid+1,w,c
  1298  007B4A  22DA               	addwfc	fsr2h,f,c
  1299  007B4C  C026  FFDE         	movff	PID_SetTunings@Ki,postinc2
  1300  007B50  C027  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
  1301  007B54  C028  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
  1302                           
  1303                           ;pid.c: 92: pid->dispKd = Kd;
  1304  007B58  EE20 F006          	lfsr	2,6
  1305  007B5C  5021               	movf	PID_SetTunings@pid,w,c
  1306  007B5E  26D9               	addwf	fsr2l,f,c
  1307  007B60  5022               	movf	PID_SetTunings@pid+1,w,c
  1308  007B62  22DA               	addwfc	fsr2h,f,c
  1309  007B64  C029  FFDE         	movff	PID_SetTunings@Kd,postinc2
  1310  007B68  C02A  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
  1311  007B6C  C02B  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
  1312                           
  1313                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
  1314  007B70  EE20 F022          	lfsr	2,34
  1315  007B74  5021               	movf	PID_SetTunings@pid,w,c
  1316  007B76  26D9               	addwf	fsr2l,f,c
  1317  007B78  5022               	movf	PID_SetTunings@pid+1,w,c
  1318  007B7A  22DA               	addwfc	fsr2h,f,c
  1319  007B7C  CFDE F009          	movff	postinc2,___lltoft@c
  1320  007B80  CFDE F00A          	movff	postinc2,___lltoft@c+1
  1321  007B84  CFDE F00B          	movff	postinc2,___lltoft@c+2
  1322  007B88  CFDE F00C          	movff	postinc2,___lltoft@c+3
  1323  007B8C  EC98  F037         	call	___lltoft	;wreg free
  1324  007B90  C009  F012         	movff	?___lltoft,___ftdiv@f1
  1325  007B94  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
  1326  007B98  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
  1327  007B9C  0E00               	movlw	0
  1328  007B9E  6E15               	movwf	___ftdiv@f2,c
  1329  007BA0  0E7A               	movlw	122
  1330  007BA2  6E16               	movwf	___ftdiv@f2+1,c
  1331  007BA4  0E44               	movlw	68
  1332  007BA6  6E17               	movwf	___ftdiv@f2+2,c
  1333  007BA8  ECCF  F038         	call	___ftdiv	;wreg free
  1334  007BAC  C012  F02D         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1335  007BB0  C013  F02E         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1336  007BB4  C014  F02F         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1337                           
  1338                           ;pid.c: 95: pid->kp = Kp;
  1339  007BB8  EE20 F009          	lfsr	2,9
  1340  007BBC  5021               	movf	PID_SetTunings@pid,w,c
  1341  007BBE  26D9               	addwf	fsr2l,f,c
  1342  007BC0  5022               	movf	PID_SetTunings@pid+1,w,c
  1343  007BC2  22DA               	addwfc	fsr2h,f,c
  1344  007BC4  C023  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1345  007BC8  C024  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1346  007BCC  C025  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1347                           
  1348                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1349  007BD0  C026  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1350  007BD4  C027  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1351  007BD8  C028  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1352  007BDC  C02D  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1353  007BE0  C02E  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1354  007BE4  C02F  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1355  007BE8  EC42  F039         	call	___ftmul	;wreg free
  1356  007BEC  EE20 F00C          	lfsr	2,12
  1357  007BF0  5021               	movf	PID_SetTunings@pid,w,c
  1358  007BF2  26D9               	addwf	fsr2l,f,c
  1359  007BF4  5022               	movf	PID_SetTunings@pid+1,w,c
  1360  007BF6  22DA               	addwfc	fsr2h,f,c
  1361  007BF8  C009  FFDE         	movff	?___ftmul,postinc2
  1362  007BFC  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1363  007C00  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1364                           
  1365                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1366  007C04  C029  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1367  007C08  C02A  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1368  007C0C  C02B  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1369  007C10  C02D  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1370  007C14  C02E  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1371  007C18  C02F  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1372  007C1C  ECCF  F038         	call	___ftdiv	;wreg free
  1373  007C20  EE20 F00F          	lfsr	2,15
  1374  007C24  5021               	movf	PID_SetTunings@pid,w,c
  1375  007C26  26D9               	addwf	fsr2l,f,c
  1376  007C28  5022               	movf	PID_SetTunings@pid+1,w,c
  1377  007C2A  22DA               	addwfc	fsr2h,f,c
  1378  007C2C  C012  FFDE         	movff	?___ftdiv,postinc2
  1379  007C30  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1380  007C34  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1381                           
  1382                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1383  007C38  EE20 F012          	lfsr	2,18
  1384  007C3C  5021               	movf	PID_SetTunings@pid,w,c
  1385  007C3E  26D9               	addwf	fsr2l,f,c
  1386  007C40  5022               	movf	PID_SetTunings@pid+1,w,c
  1387  007C42  22DA               	addwfc	fsr2h,f,c
  1388  007C44  04DE               	decf	postinc2,w,c
  1389  007C46  A4D8               	btfss	status,2,c
  1390  007C48  0012               	return	
  1391                           
  1392                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1393  007C4A  EE20 F009          	lfsr	2,9
  1394  007C4E  5021               	movf	PID_SetTunings@pid,w,c
  1395  007C50  26D9               	addwf	fsr2l,f,c
  1396  007C52  5022               	movf	PID_SetTunings@pid+1,w,c
  1397  007C54  22DA               	addwfc	fsr2h,f,c
  1398  007C56  CFDE F018          	movff	postinc2,___ftneg@f1
  1399  007C5A  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1400  007C5E  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1401  007C62  EC21  F037         	call	___ftneg	;wreg free
  1402  007C66  EE20 F009          	lfsr	2,9
  1403  007C6A  5021               	movf	PID_SetTunings@pid,w,c
  1404  007C6C  26D9               	addwf	fsr2l,f,c
  1405  007C6E  5022               	movf	PID_SetTunings@pid+1,w,c
  1406  007C70  22DA               	addwfc	fsr2h,f,c
  1407  007C72  C018  FFDE         	movff	?___ftneg,postinc2
  1408  007C76  C019  FFDE         	movff	?___ftneg+1,postinc2
  1409  007C7A  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1410                           
  1411                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1412  007C7E  EE20 F00C          	lfsr	2,12
  1413  007C82  5021               	movf	PID_SetTunings@pid,w,c
  1414  007C84  26D9               	addwf	fsr2l,f,c
  1415  007C86  5022               	movf	PID_SetTunings@pid+1,w,c
  1416  007C88  22DA               	addwfc	fsr2h,f,c
  1417  007C8A  CFDE F018          	movff	postinc2,___ftneg@f1
  1418  007C8E  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1419  007C92  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1420  007C96  EC21  F037         	call	___ftneg	;wreg free
  1421  007C9A  EE20 F00C          	lfsr	2,12
  1422  007C9E  5021               	movf	PID_SetTunings@pid,w,c
  1423  007CA0  26D9               	addwf	fsr2l,f,c
  1424  007CA2  5022               	movf	PID_SetTunings@pid+1,w,c
  1425  007CA4  22DA               	addwfc	fsr2h,f,c
  1426  007CA6  C018  FFDE         	movff	?___ftneg,postinc2
  1427  007CAA  C019  FFDE         	movff	?___ftneg+1,postinc2
  1428  007CAE  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1429                           
  1430                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1431  007CB2  EE20 F00F          	lfsr	2,15
  1432  007CB6  5021               	movf	PID_SetTunings@pid,w,c
  1433  007CB8  26D9               	addwf	fsr2l,f,c
  1434  007CBA  5022               	movf	PID_SetTunings@pid+1,w,c
  1435  007CBC  22DA               	addwfc	fsr2h,f,c
  1436  007CBE  CFDE F018          	movff	postinc2,___ftneg@f1
  1437  007CC2  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1438  007CC6  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1439  007CCA  EC21  F037         	call	___ftneg	;wreg free
  1440  007CCE  EE20 F00F          	lfsr	2,15
  1441  007CD2  5021               	movf	PID_SetTunings@pid,w,c
  1442  007CD4  26D9               	addwf	fsr2l,f,c
  1443  007CD6  5022               	movf	PID_SetTunings@pid+1,w,c
  1444  007CD8  22DA               	addwfc	fsr2h,f,c
  1445  007CDA  C018  FFDE         	movff	?___ftneg,postinc2
  1446  007CDE  C019  FFDE         	movff	?___ftneg+1,postinc2
  1447  007CE2  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1448  007CE6  0012               	return	
  1449  007CE8                     __end_of_PID_SetTunings:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           indf2	equ	0xFDF
  1458                           postinc2	equ	0xFDE
  1459                           postdec2	equ	0xFDD
  1460                           fsr2h	equ	0xFDA
  1461                           fsr2l	equ	0xFD9
  1462                           status	equ	0xFD8
  1463                           
  1464 ;; *************** function ___lltoft *****************
  1465 ;; Defined at:
  1466 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  c               4    8[COMRAM] unsigned long 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  exp             1   16[COMRAM] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  3    8[COMRAM] float 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1480 ;;      Params:         4       0       0       0       0       0       0       0       0
  1481 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1482 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1483 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1484 ;;Total ram usage:        9 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    1
  1487 ;; This function calls:
  1488 ;;		___ftpack
  1489 ;; This function is called by:
  1490 ;;		_PID_SetTunings
  1491 ;;		_PID_SetSampleTime
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text6
  1496  006F30                     __ptext6:
  1497                           	opt stack 0
  1498  006F30                     ___lltoft:
  1499                           	opt stack 27
  1500                           
  1501                           ;incstack = 0
  1502  006F30  0E8E               	movlw	142
  1503  006F32  6E11               	movwf	___lltoft@exp,c
  1504  006F34  D006               	goto	l1422
  1505  006F36                     l1420:
  1506  006F36  90D8               	bcf	status,0,c
  1507  006F38  320C               	rrcf	___lltoft@c+3,f,c
  1508  006F3A  320B               	rrcf	___lltoft@c+2,f,c
  1509  006F3C  320A               	rrcf	___lltoft@c+1,f,c
  1510  006F3E  3209               	rrcf	___lltoft@c,f,c
  1511  006F40  2A11               	incf	___lltoft@exp,f,c
  1512  006F42                     l1422:
  1513  006F42  0E00               	movlw	0
  1514  006F44  1409               	andwf	___lltoft@c,w,c
  1515  006F46  6E0D               	movwf	??___lltoft& (0+255),c
  1516  006F48  0E00               	movlw	0
  1517  006F4A  140A               	andwf	___lltoft@c+1,w,c
  1518  006F4C  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1519  006F4E  0E00               	movlw	0
  1520  006F50  140B               	andwf	___lltoft@c+2,w,c
  1521  006F52  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1522  006F54  0EFF               	movlw	255
  1523  006F56  140C               	andwf	___lltoft@c+3,w,c
  1524  006F58  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1525  006F5A  500D               	movf	??___lltoft,w,c
  1526  006F5C  100E               	iorwf	??___lltoft+1,w,c
  1527  006F5E  100F               	iorwf	??___lltoft+2,w,c
  1528  006F60  1010               	iorwf	??___lltoft+3,w,c
  1529  006F62  A4D8               	btfss	status,2,c
  1530  006F64  D7E8               	goto	l1420
  1531  006F66  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1532  006F6A  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1533  006F6E  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1534  006F72  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1535  006F76  0E00               	movlw	0
  1536  006F78  6E05               	movwf	___ftpack@sign,c
  1537  006F7A  EC0E  F038         	call	___ftpack	;wreg free
  1538  006F7E  C001  F009         	movff	?___ftpack,?___lltoft
  1539  006F82  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1540  006F86  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1541  006F8A  0012               	return	
  1542  006F8C                     __end_of___lltoft:
  1543                           	opt stack 0
  1544                           tblptru	equ	0xFF8
  1545                           tblptrh	equ	0xFF7
  1546                           tblptrl	equ	0xFF6
  1547                           tablat	equ	0xFF5
  1548                           postinc0	equ	0xFEE
  1549                           wreg	equ	0xFE8
  1550                           indf2	equ	0xFDF
  1551                           postinc2	equ	0xFDE
  1552                           postdec2	equ	0xFDD
  1553                           fsr2h	equ	0xFDA
  1554                           fsr2l	equ	0xFD9
  1555                           status	equ	0xFD8
  1556                           
  1557 ;; *************** function ___ftdiv *****************
  1558 ;; Defined at:
  1559 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  f1              3   17[COMRAM] float 
  1562 ;;  f2              3   20[COMRAM] float 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  f3              3   27[COMRAM] float 
  1565 ;;  sign            1   31[COMRAM] unsigned char 
  1566 ;;  exp             1   30[COMRAM] unsigned char 
  1567 ;;  cntr            1   26[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  3   17[COMRAM] float 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1577 ;;      Params:         6       0       0       0       0       0       0       0       0
  1578 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1579 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1580 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1581 ;;Total ram usage:       15 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    1
  1584 ;; This function calls:
  1585 ;;		___ftpack
  1586 ;; This function is called by:
  1587 ;;		_PID_SetTunings
  1588 ;;		_PID_SetSampleTime
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text7
  1593  00719E                     __ptext7:
  1594                           	opt stack 0
  1595  00719E                     ___ftdiv:
  1596                           	opt stack 27
  1597                           
  1598                           ;incstack = 0
  1599  00719E  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  1600  0071A2  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1601  0071A4  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1602  0071A6  3413               	rlcf	___ftdiv@f1+1,w,c
  1603  0071A8  3618               	rlcf	??___ftdiv& (0+255),f,c
  1604  0071AA  E301               	bnc	u861
  1605  0071AC  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1606  0071AE                     u861:
  1607  0071AE  5018               	movf	??___ftdiv,w,c
  1608  0071B0  6E1F               	movwf	___ftdiv@exp,c
  1609  0071B2  501F               	movf	___ftdiv@exp,w,c
  1610  0071B4  A4D8               	btfss	status,2,c
  1611  0071B6  D007               	goto	l1308
  1612  0071B8  0E00               	movlw	0
  1613  0071BA  6E12               	movwf	?___ftdiv,c
  1614  0071BC  0E00               	movlw	0
  1615  0071BE  6E13               	movwf	?___ftdiv+1,c
  1616  0071C0  0E00               	movlw	0
  1617  0071C2  6E14               	movwf	?___ftdiv+2,c
  1618  0071C4  0012               	return	
  1619  0071C6                     l1308:
  1620  0071C6  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  1621  0071CA  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1622  0071CC  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1623  0071CE  3416               	rlcf	___ftdiv@f2+1,w,c
  1624  0071D0  3618               	rlcf	??___ftdiv& (0+255),f,c
  1625  0071D2  E301               	bnc	u881
  1626  0071D4  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1627  0071D6                     u881:
  1628  0071D6  5018               	movf	??___ftdiv,w,c
  1629  0071D8  6E20               	movwf	___ftdiv@sign,c
  1630  0071DA  5020               	movf	___ftdiv@sign,w,c
  1631  0071DC  A4D8               	btfss	status,2,c
  1632  0071DE  D007               	goto	l1314
  1633  0071E0  0E00               	movlw	0
  1634  0071E2  6E12               	movwf	?___ftdiv,c
  1635  0071E4  0E00               	movlw	0
  1636  0071E6  6E13               	movwf	?___ftdiv+1,c
  1637  0071E8  0E00               	movlw	0
  1638  0071EA  6E14               	movwf	?___ftdiv+2,c
  1639  0071EC  0012               	return	
  1640  0071EE                     l1314:
  1641  0071EE  0E00               	movlw	0
  1642  0071F0  6E1C               	movwf	___ftdiv@f3,c
  1643  0071F2  0E00               	movlw	0
  1644  0071F4  6E1D               	movwf	___ftdiv@f3+1,c
  1645  0071F6  0E00               	movlw	0
  1646  0071F8  6E1E               	movwf	___ftdiv@f3+2,c
  1647  0071FA  5020               	movf	___ftdiv@sign,w,c
  1648  0071FC  0F89               	addlw	137
  1649  0071FE  5E1F               	subwf	___ftdiv@exp,f,c
  1650  007200  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  1651  007204  5017               	movf	___ftdiv@f2+2,w,c
  1652  007206  1A20               	xorwf	___ftdiv@sign,f,c
  1653  007208  0E80               	movlw	128
  1654  00720A  1620               	andwf	___ftdiv@sign,f,c
  1655  00720C  8E13               	bsf	___ftdiv@f1+1,7,c
  1656  00720E  0EFF               	movlw	255
  1657  007210  1612               	andwf	___ftdiv@f1,f,c
  1658  007212  0EFF               	movlw	255
  1659  007214  1613               	andwf	___ftdiv@f1+1,f,c
  1660  007216  0E00               	movlw	0
  1661  007218  1614               	andwf	___ftdiv@f1+2,f,c
  1662  00721A  8E16               	bsf	___ftdiv@f2+1,7,c
  1663  00721C  0EFF               	movlw	255
  1664  00721E  1615               	andwf	___ftdiv@f2,f,c
  1665  007220  0EFF               	movlw	255
  1666  007222  1616               	andwf	___ftdiv@f2+1,f,c
  1667  007224  0E00               	movlw	0
  1668  007226  1617               	andwf	___ftdiv@f2+2,f,c
  1669  007228  0E18               	movlw	24
  1670  00722A  6E1B               	movwf	___ftdiv@cntr,c
  1671  00722C                     l1334:
  1672  00722C  90D8               	bcf	status,0,c
  1673  00722E  361C               	rlcf	___ftdiv@f3,f,c
  1674  007230  361D               	rlcf	___ftdiv@f3+1,f,c
  1675  007232  361E               	rlcf	___ftdiv@f3+2,f,c
  1676  007234  5015               	movf	___ftdiv@f2,w,c
  1677  007236  5C12               	subwf	___ftdiv@f1,w,c
  1678  007238  5016               	movf	___ftdiv@f2+1,w,c
  1679  00723A  5813               	subwfb	___ftdiv@f1+1,w,c
  1680  00723C  5017               	movf	___ftdiv@f2+2,w,c
  1681  00723E  5814               	subwfb	___ftdiv@f1+2,w,c
  1682  007240  A0D8               	btfss	status,0,c
  1683  007242  D007               	goto	l405
  1684  007244  5015               	movf	___ftdiv@f2,w,c
  1685  007246  5E12               	subwf	___ftdiv@f1,f,c
  1686  007248  5016               	movf	___ftdiv@f2+1,w,c
  1687  00724A  5A13               	subwfb	___ftdiv@f1+1,f,c
  1688  00724C  5017               	movf	___ftdiv@f2+2,w,c
  1689  00724E  5A14               	subwfb	___ftdiv@f1+2,f,c
  1690  007250  801C               	bsf	___ftdiv@f3,0,c
  1691  007252                     l405:
  1692  007252  90D8               	bcf	status,0,c
  1693  007254  3612               	rlcf	___ftdiv@f1,f,c
  1694  007256  3613               	rlcf	___ftdiv@f1+1,f,c
  1695  007258  3614               	rlcf	___ftdiv@f1+2,f,c
  1696  00725A  2E1B               	decfsz	___ftdiv@cntr,f,c
  1697  00725C  D7E7               	goto	l1334
  1698  00725E  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  1699  007262  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1700  007266  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1701  00726A  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  1702  00726E  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  1703  007272  EC0E  F038         	call	___ftpack	;wreg free
  1704  007276  C001  F012         	movff	?___ftpack,?___ftdiv
  1705  00727A  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  1706  00727E  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  1707  007282  0012               	return	
  1708  007284                     __end_of___ftdiv:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           postinc0	equ	0xFEE
  1715                           wreg	equ	0xFE8
  1716                           indf2	equ	0xFDF
  1717                           postinc2	equ	0xFDE
  1718                           postdec2	equ	0xFDD
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _PID_SetOutputLimits *****************
  1724 ;; Defined at:
  1725 ;;		line 126 in file "pid.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  pid             2    9[COMRAM] PTR struct .
  1728 ;;		 -> main@PID(45), 
  1729 ;;  Min             3   11[COMRAM] float 
  1730 ;;  Max             3   14[COMRAM] float 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1742 ;;      Params:         8       0       0       0       0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1745 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1746 ;;Total ram usage:        8 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		___ftge
  1751 ;; This function is called by:
  1752 ;;		_PID_init
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text8
  1757  007968                     __ptext8:
  1758                           	opt stack 0
  1759  007968                     _PID_SetOutputLimits:
  1760                           	opt stack 28
  1761                           
  1762                           ;pid.c: 127: if (Min >= Max) {
  1763                           
  1764                           ;incstack = 0
  1765  007968  C00C  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  1766  00796C  C00D  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  1767  007970  C00E  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  1768  007974  C00F  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  1769  007978  C010  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  1770  00797C  C011  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  1771  007980  ECC6  F037         	call	___ftge	;wreg free
  1772  007984  B0D8               	btfsc	status,0,c
  1773  007986  0012               	return	
  1774                           
  1775                           ;pid.c: 129: }
  1776                           ;pid.c: 130: pid->outMin = Min;
  1777                           
  1778                           ;pid.c: 128: return;
  1779  007988  EE20 F026          	lfsr	2,38
  1780  00798C  500A               	movf	PID_SetOutputLimits@pid,w,c
  1781  00798E  26D9               	addwf	fsr2l,f,c
  1782  007990  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1783  007992  22DA               	addwfc	fsr2h,f,c
  1784  007994  C00C  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  1785  007998  C00D  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  1786  00799C  C00E  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  1787                           
  1788                           ;pid.c: 131: pid->outMax = Max;
  1789  0079A0  EE20 F029          	lfsr	2,41
  1790  0079A4  500A               	movf	PID_SetOutputLimits@pid,w,c
  1791  0079A6  26D9               	addwf	fsr2l,f,c
  1792  0079A8  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1793  0079AA  22DA               	addwfc	fsr2h,f,c
  1794  0079AC  C00F  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  1795  0079B0  C010  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  1796  0079B4  C011  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  1797                           
  1798                           ;pid.c: 133: if (pid->inAuto) {
  1799  0079B8  EE20 F02C          	lfsr	2,44
  1800  0079BC  500A               	movf	PID_SetOutputLimits@pid,w,c
  1801  0079BE  26D9               	addwf	fsr2l,f,c
  1802  0079C0  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1803  0079C2  22DA               	addwfc	fsr2h,f,c
  1804  0079C4  50DF               	movf	indf2,w,c
  1805  0079C6  B4D8               	btfsc	status,2,c
  1806  0079C8  0012               	return	
  1807                           
  1808                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  1809  0079CA  EE20 F029          	lfsr	2,41
  1810  0079CE  500A               	movf	PID_SetOutputLimits@pid,w,c
  1811  0079D0  26D9               	addwf	fsr2l,f,c
  1812  0079D2  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1813  0079D4  22DA               	addwfc	fsr2h,f,c
  1814  0079D6  CFDE F001          	movff	postinc2,___ftge@ff1
  1815  0079DA  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1816  0079DE  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1817  0079E2  EE20 F016          	lfsr	2,22
  1818  0079E6  500A               	movf	PID_SetOutputLimits@pid,w,c
  1819  0079E8  26D9               	addwf	fsr2l,f,c
  1820  0079EA  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1821  0079EC  22DA               	addwfc	fsr2h,f,c
  1822  0079EE  CFDE F004          	movff	postinc2,___ftge@ff2
  1823  0079F2  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1824  0079F6  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1825  0079FA  ECC6  F037         	call	___ftge	;wreg free
  1826  0079FE  B0D8               	btfsc	status,0,c
  1827  007A00  D003               	goto	l1438
  1828                           
  1829                           ;pid.c: 135: pid->myOutput = pid->outMax;
  1830  007A02  EE20 F029          	lfsr	2,41
  1831  007A06  D01E               	goto	L1
  1832  007A08                     l1438:
  1833  007A08  EE20 F016          	lfsr	2,22
  1834  007A0C  500A               	movf	PID_SetOutputLimits@pid,w,c
  1835  007A0E  26D9               	addwf	fsr2l,f,c
  1836  007A10  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1837  007A12  22DA               	addwfc	fsr2h,f,c
  1838  007A14  CFDE F001          	movff	postinc2,___ftge@ff1
  1839  007A18  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1840  007A1C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1841  007A20  EE20 F026          	lfsr	2,38
  1842  007A24  500A               	movf	PID_SetOutputLimits@pid,w,c
  1843  007A26  26D9               	addwf	fsr2l,f,c
  1844  007A28  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1845  007A2A  22DA               	addwfc	fsr2h,f,c
  1846  007A2C  CFDE F004          	movff	postinc2,___ftge@ff2
  1847  007A30  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1848  007A34  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1849  007A38  ECC6  F037         	call	___ftge	;wreg free
  1850  007A3C  B0D8               	btfsc	status,0,c
  1851  007A3E  D012               	goto	l1442
  1852                           
  1853                           ;pid.c: 137: pid->myOutput = pid->outMin;
  1854  007A40  EE20 F026          	lfsr	2,38
  1855  007A44                     L1:
  1856  007A44  500A               	movf	PID_SetOutputLimits@pid,w,c
  1857  007A46  26D9               	addwf	fsr2l,f,c
  1858  007A48  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1859  007A4A  22DA               	addwfc	fsr2h,f,c
  1860  007A4C  EE10 F016          	lfsr	1,22
  1861  007A50  500A               	movf	PID_SetOutputLimits@pid,w,c
  1862  007A52  26E1               	addwf	fsr1l,f,c
  1863  007A54  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1864  007A56  22E2               	addwfc	fsr1h,f,c
  1865  007A58  CFDE FFE6          	movff	postinc2,postinc1
  1866  007A5C  CFDE FFE6          	movff	postinc2,postinc1
  1867  007A60  CFDE FFE6          	movff	postinc2,postinc1
  1868  007A64                     l1442:
  1869                           
  1870                           ;pid.c: 138: }
  1871                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  1872  007A64  EE20 F029          	lfsr	2,41
  1873  007A68  500A               	movf	PID_SetOutputLimits@pid,w,c
  1874  007A6A  26D9               	addwf	fsr2l,f,c
  1875  007A6C  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1876  007A6E  22DA               	addwfc	fsr2h,f,c
  1877  007A70  CFDE F001          	movff	postinc2,___ftge@ff1
  1878  007A74  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1879  007A78  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1880  007A7C  EE20 F01C          	lfsr	2,28
  1881  007A80  500A               	movf	PID_SetOutputLimits@pid,w,c
  1882  007A82  26D9               	addwf	fsr2l,f,c
  1883  007A84  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1884  007A86  22DA               	addwfc	fsr2h,f,c
  1885  007A88  CFDE F004          	movff	postinc2,___ftge@ff2
  1886  007A8C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1887  007A90  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1888  007A94  ECC6  F037         	call	___ftge	;wreg free
  1889  007A98  B0D8               	btfsc	status,0,c
  1890  007A9A  D013               	goto	l1446
  1891                           
  1892                           ;pid.c: 141: pid->ITerm = pid->outMax;
  1893  007A9C  EE20 F029          	lfsr	2,41
  1894  007AA0  500A               	movf	PID_SetOutputLimits@pid,w,c
  1895  007AA2  26D9               	addwf	fsr2l,f,c
  1896  007AA4  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1897  007AA6  22DA               	addwfc	fsr2h,f,c
  1898  007AA8  EE10 F01C          	lfsr	1,28
  1899  007AAC  500A               	movf	PID_SetOutputLimits@pid,w,c
  1900  007AAE  26E1               	addwf	fsr1l,f,c
  1901  007AB0  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1902  007AB2  22E2               	addwfc	fsr1h,f,c
  1903  007AB4  CFDE FFE6          	movff	postinc2,postinc1
  1904  007AB8  CFDE FFE6          	movff	postinc2,postinc1
  1905  007ABC  CFDE FFE6          	movff	postinc2,postinc1
  1906                           
  1907                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  1908  007AC0  0012               	return	
  1909  007AC2                     l1446:
  1910  007AC2  EE20 F01C          	lfsr	2,28
  1911  007AC6  500A               	movf	PID_SetOutputLimits@pid,w,c
  1912  007AC8  26D9               	addwf	fsr2l,f,c
  1913  007ACA  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1914  007ACC  22DA               	addwfc	fsr2h,f,c
  1915  007ACE  CFDE F001          	movff	postinc2,___ftge@ff1
  1916  007AD2  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1917  007AD6  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1918  007ADA  EE20 F026          	lfsr	2,38
  1919  007ADE  500A               	movf	PID_SetOutputLimits@pid,w,c
  1920  007AE0  26D9               	addwf	fsr2l,f,c
  1921  007AE2  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1922  007AE4  22DA               	addwfc	fsr2h,f,c
  1923  007AE6  CFDE F004          	movff	postinc2,___ftge@ff2
  1924  007AEA  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1925  007AEE  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1926  007AF2  ECC6  F037         	call	___ftge	;wreg free
  1927  007AF6  B0D8               	btfsc	status,0,c
  1928  007AF8  0012               	return	
  1929                           
  1930                           ;pid.c: 143: pid->ITerm = pid->outMin;
  1931  007AFA  EE20 F026          	lfsr	2,38
  1932  007AFE  500A               	movf	PID_SetOutputLimits@pid,w,c
  1933  007B00  26D9               	addwf	fsr2l,f,c
  1934  007B02  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1935  007B04  22DA               	addwfc	fsr2h,f,c
  1936  007B06  EE10 F01C          	lfsr	1,28
  1937  007B0A  500A               	movf	PID_SetOutputLimits@pid,w,c
  1938  007B0C  26E1               	addwf	fsr1l,f,c
  1939  007B0E  500B               	movf	PID_SetOutputLimits@pid+1,w,c
  1940  007B10  22E2               	addwfc	fsr1h,f,c
  1941  007B12  CFDE FFE6          	movff	postinc2,postinc1
  1942  007B16  CFDE FFE6          	movff	postinc2,postinc1
  1943  007B1A  CFDE FFE6          	movff	postinc2,postinc1
  1944  007B1E  0012               	return	
  1945  007B20                     __end_of_PID_SetOutputLimits:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           postinc1	equ	0xFE6
  1954                           fsr1h	equ	0xFE2
  1955                           fsr1l	equ	0xFE1
  1956                           indf2	equ	0xFDF
  1957                           postinc2	equ	0xFDE
  1958                           postdec2	equ	0xFDD
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _PID_SetControllerDirection *****************
  1964 ;; Defined at:
  1965 ;;		line 183 in file "pid.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  pid             2   26[COMRAM] PTR struct .
  1968 ;;		 -> main@PID(45), 
  1969 ;;  Direction       1   28[COMRAM] enum E7
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1981 ;;      Params:         3       0       0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1983 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1984 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1985 ;;Total ram usage:        4 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		___ftneg
  1990 ;; This function is called by:
  1991 ;;		_PID_init
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text9
  1996  0070CA                     __ptext9:
  1997                           	opt stack 0
  1998  0070CA                     _PID_SetControllerDirection:
  1999                           	opt stack 28
  2000                           
  2001                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  2002                           
  2003                           ;incstack = 0
  2004  0070CA  EE20 F02C          	lfsr	2,44
  2005  0070CE  501B               	movf	PID_SetControllerDirection@pid,w,c
  2006  0070D0  26D9               	addwf	fsr2l,f,c
  2007  0070D2  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2008  0070D4  22DA               	addwfc	fsr2h,f,c
  2009  0070D6  50DF               	movf	indf2,w,c
  2010  0070D8  B4D8               	btfsc	status,2,c
  2011  0070DA  D058               	goto	l1456
  2012  0070DC  EE20 F012          	lfsr	2,18
  2013  0070E0  501B               	movf	PID_SetControllerDirection@pid,w,c
  2014  0070E2  26D9               	addwf	fsr2l,f,c
  2015  0070E4  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2016  0070E6  22DA               	addwfc	fsr2h,f,c
  2017  0070E8  501D               	movf	PID_SetControllerDirection@Direction,w,c
  2018  0070EA  18DE               	xorwf	postinc2,w,c
  2019  0070EC  B4D8               	btfsc	status,2,c
  2020  0070EE  D04E               	goto	l1456
  2021                           
  2022                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  2023  0070F0  EE20 F009          	lfsr	2,9
  2024  0070F4  501B               	movf	PID_SetControllerDirection@pid,w,c
  2025  0070F6  26D9               	addwf	fsr2l,f,c
  2026  0070F8  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2027  0070FA  22DA               	addwfc	fsr2h,f,c
  2028  0070FC  CFDE F018          	movff	postinc2,___ftneg@f1
  2029  007100  CFDE F019          	movff	postinc2,___ftneg@f1+1
  2030  007104  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  2031  007108  EC21  F037         	call	___ftneg	;wreg free
  2032  00710C  EE20 F009          	lfsr	2,9
  2033  007110  501B               	movf	PID_SetControllerDirection@pid,w,c
  2034  007112  26D9               	addwf	fsr2l,f,c
  2035  007114  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2036  007116  22DA               	addwfc	fsr2h,f,c
  2037  007118  C018  FFDE         	movff	?___ftneg,postinc2
  2038  00711C  C019  FFDE         	movff	?___ftneg+1,postinc2
  2039  007120  C01A  FFDE         	movff	?___ftneg+2,postinc2
  2040                           
  2041                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  2042  007124  EE20 F00C          	lfsr	2,12
  2043  007128  501B               	movf	PID_SetControllerDirection@pid,w,c
  2044  00712A  26D9               	addwf	fsr2l,f,c
  2045  00712C  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2046  00712E  22DA               	addwfc	fsr2h,f,c
  2047  007130  CFDE F018          	movff	postinc2,___ftneg@f1
  2048  007134  CFDE F019          	movff	postinc2,___ftneg@f1+1
  2049  007138  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  2050  00713C  EC21  F037         	call	___ftneg	;wreg free
  2051  007140  EE20 F00C          	lfsr	2,12
  2052  007144  501B               	movf	PID_SetControllerDirection@pid,w,c
  2053  007146  26D9               	addwf	fsr2l,f,c
  2054  007148  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2055  00714A  22DA               	addwfc	fsr2h,f,c
  2056  00714C  C018  FFDE         	movff	?___ftneg,postinc2
  2057  007150  C019  FFDE         	movff	?___ftneg+1,postinc2
  2058  007154  C01A  FFDE         	movff	?___ftneg+2,postinc2
  2059                           
  2060                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  2061  007158  EE20 F00F          	lfsr	2,15
  2062  00715C  501B               	movf	PID_SetControllerDirection@pid,w,c
  2063  00715E  26D9               	addwf	fsr2l,f,c
  2064  007160  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2065  007162  22DA               	addwfc	fsr2h,f,c
  2066  007164  CFDE F018          	movff	postinc2,___ftneg@f1
  2067  007168  CFDE F019          	movff	postinc2,___ftneg@f1+1
  2068  00716C  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  2069  007170  EC21  F037         	call	___ftneg	;wreg free
  2070  007174  EE20 F00F          	lfsr	2,15
  2071  007178  501B               	movf	PID_SetControllerDirection@pid,w,c
  2072  00717A  26D9               	addwf	fsr2l,f,c
  2073  00717C  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2074  00717E  22DA               	addwfc	fsr2h,f,c
  2075  007180  C018  FFDE         	movff	?___ftneg,postinc2
  2076  007184  C019  FFDE         	movff	?___ftneg+1,postinc2
  2077  007188  C01A  FFDE         	movff	?___ftneg+2,postinc2
  2078  00718C                     l1456:
  2079                           
  2080                           ;pid.c: 188: }
  2081                           ;pid.c: 189: pid->controllerDirection = Direction;
  2082  00718C  EE20 F012          	lfsr	2,18
  2083  007190  501B               	movf	PID_SetControllerDirection@pid,w,c
  2084  007192  26D9               	addwf	fsr2l,f,c
  2085  007194  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  2086  007196  22DA               	addwfc	fsr2h,f,c
  2087  007198  C01D  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  2088  00719C  0012               	return		;funcret
  2089  00719E                     __end_of_PID_SetControllerDirection:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           postinc0	equ	0xFEE
  2096                           wreg	equ	0xFE8
  2097                           postinc1	equ	0xFE6
  2098                           fsr1h	equ	0xFE2
  2099                           fsr1l	equ	0xFE1
  2100                           indf2	equ	0xFDF
  2101                           postinc2	equ	0xFDE
  2102                           postdec2	equ	0xFDD
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _PID_SetMode *****************
  2108 ;; Defined at:
  2109 ;;		line 153 in file "pid.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  pid             2   11[COMRAM] PTR struct .
  2112 ;;		 -> main@PID(45), 
  2113 ;;  Mode            1   13[COMRAM] enum E3
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  newAuto         1   15[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2125 ;;      Params:         3       0       0       0       0       0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2127 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2128 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2129 ;;Total ram usage:        5 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    2
  2132 ;; This function calls:
  2133 ;;		_PID_Initialize
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text10
  2140  006EF0                     __ptext10:
  2141                           	opt stack 0
  2142  006EF0                     _PID_SetMode:
  2143                           	opt stack 28
  2144                           
  2145                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  2146                           
  2147                           ;incstack = 0
  2148  006EF0  040E               	decf	PID_SetMode@Mode,w,c
  2149  006EF2  A4D8               	btfss	status,2,c
  2150  006EF4  D002               	goto	u1370
  2151  006EF6  0E01               	movlw	1
  2152  006EF8  D001               	goto	u1380
  2153  006EFA                     u1370:
  2154  006EFA  0E00               	movlw	0
  2155  006EFC                     u1380:
  2156  006EFC  6E10               	movwf	PID_SetMode@newAuto,c
  2157                           
  2158                           ;pid.c: 156: if(newAuto != pid->inAuto)
  2159  006EFE  EE20 F02C          	lfsr	2,44
  2160  006F02  500C               	movf	PID_SetMode@pid,w,c
  2161  006F04  26D9               	addwf	fsr2l,f,c
  2162  006F06  500D               	movf	PID_SetMode@pid+1,w,c
  2163  006F08  22DA               	addwfc	fsr2h,f,c
  2164  006F0A  5010               	movf	PID_SetMode@newAuto,w,c
  2165  006F0C  18DE               	xorwf	postinc2,w,c
  2166  006F0E  B4D8               	btfsc	status,2,c
  2167  006F10  D006               	goto	l1578
  2168                           
  2169                           ;pid.c: 157: {
  2170                           ;pid.c: 158: PID_Initialize(pid);
  2171  006F12  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  2172  006F16  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  2173  006F1A  EC36  F03A         	call	_PID_Initialize	;wreg free
  2174  006F1E                     l1578:
  2175                           
  2176                           ;pid.c: 159: }
  2177                           ;pid.c: 160: pid->inAuto = newAuto;
  2178  006F1E  EE20 F02C          	lfsr	2,44
  2179  006F22  500C               	movf	PID_SetMode@pid,w,c
  2180  006F24  26D9               	addwf	fsr2l,f,c
  2181  006F26  500D               	movf	PID_SetMode@pid+1,w,c
  2182  006F28  22DA               	addwfc	fsr2h,f,c
  2183  006F2A  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  2184  006F2E  0012               	return		;funcret
  2185  006F30                     __end_of_PID_SetMode:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postinc1	equ	0xFE6
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           indf2	equ	0xFDF
  2197                           postinc2	equ	0xFDE
  2198                           postdec2	equ	0xFDD
  2199                           fsr2h	equ	0xFDA
  2200                           fsr2l	equ	0xFD9
  2201                           status	equ	0xFD8
  2202                           
  2203 ;; *************** function _PID_Initialize *****************
  2204 ;; Defined at:
  2205 ;;		line 167 in file "pid.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  pid             2    9[COMRAM] PTR struct .
  2208 ;;		 -> main@PID(45), 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2220 ;;      Params:         2       0       0       0       0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2223 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2224 ;;Total ram usage:        2 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    1
  2227 ;; This function calls:
  2228 ;;		___ftge
  2229 ;; This function is called by:
  2230 ;;		_PID_SetMode
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text11
  2235  00746C                     __ptext11:
  2236                           	opt stack 0
  2237  00746C                     _PID_Initialize:
  2238                           	opt stack 28
  2239                           
  2240                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  2241                           
  2242                           ;incstack = 0
  2243  00746C  EE20 F016          	lfsr	2,22
  2244  007470  500A               	movf	PID_Initialize@pid,w,c
  2245  007472  26D9               	addwf	fsr2l,f,c
  2246  007474  500B               	movf	PID_Initialize@pid+1,w,c
  2247  007476  22DA               	addwfc	fsr2h,f,c
  2248  007478  EE10 F01C          	lfsr	1,28
  2249  00747C  500A               	movf	PID_Initialize@pid,w,c
  2250  00747E  26E1               	addwf	fsr1l,f,c
  2251  007480  500B               	movf	PID_Initialize@pid+1,w,c
  2252  007482  22E2               	addwfc	fsr1h,f,c
  2253  007484  CFDE FFE6          	movff	postinc2,postinc1
  2254  007488  CFDE FFE6          	movff	postinc2,postinc1
  2255  00748C  CFDE FFE6          	movff	postinc2,postinc1
  2256                           
  2257                           ;pid.c: 169: pid->lastInput = pid->myInput;
  2258  007490  EE20 F013          	lfsr	2,19
  2259  007494  500A               	movf	PID_Initialize@pid,w,c
  2260  007496  26D9               	addwf	fsr2l,f,c
  2261  007498  500B               	movf	PID_Initialize@pid+1,w,c
  2262  00749A  22DA               	addwfc	fsr2h,f,c
  2263  00749C  EE10 F01F          	lfsr	1,31
  2264  0074A0  500A               	movf	PID_Initialize@pid,w,c
  2265  0074A2  26E1               	addwf	fsr1l,f,c
  2266  0074A4  500B               	movf	PID_Initialize@pid+1,w,c
  2267  0074A6  22E2               	addwfc	fsr1h,f,c
  2268  0074A8  CFDE FFE6          	movff	postinc2,postinc1
  2269  0074AC  CFDE FFE6          	movff	postinc2,postinc1
  2270  0074B0  CFDE FFE6          	movff	postinc2,postinc1
  2271                           
  2272                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  2273  0074B4  EE20 F029          	lfsr	2,41
  2274  0074B8  500A               	movf	PID_Initialize@pid,w,c
  2275  0074BA  26D9               	addwf	fsr2l,f,c
  2276  0074BC  500B               	movf	PID_Initialize@pid+1,w,c
  2277  0074BE  22DA               	addwfc	fsr2h,f,c
  2278  0074C0  CFDE F001          	movff	postinc2,___ftge@ff1
  2279  0074C4  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2280  0074C8  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2281  0074CC  EE20 F01C          	lfsr	2,28
  2282  0074D0  500A               	movf	PID_Initialize@pid,w,c
  2283  0074D2  26D9               	addwf	fsr2l,f,c
  2284  0074D4  500B               	movf	PID_Initialize@pid+1,w,c
  2285  0074D6  22DA               	addwfc	fsr2h,f,c
  2286  0074D8  CFDE F004          	movff	postinc2,___ftge@ff2
  2287  0074DC  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2288  0074E0  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2289  0074E4  ECC6  F037         	call	___ftge	;wreg free
  2290  0074E8  B0D8               	btfsc	status,0,c
  2291  0074EA  D013               	goto	l1488
  2292                           
  2293                           ;pid.c: 171: pid->ITerm = pid->outMax;
  2294  0074EC  EE20 F029          	lfsr	2,41
  2295  0074F0  500A               	movf	PID_Initialize@pid,w,c
  2296  0074F2  26D9               	addwf	fsr2l,f,c
  2297  0074F4  500B               	movf	PID_Initialize@pid+1,w,c
  2298  0074F6  22DA               	addwfc	fsr2h,f,c
  2299  0074F8  EE10 F01C          	lfsr	1,28
  2300  0074FC  500A               	movf	PID_Initialize@pid,w,c
  2301  0074FE  26E1               	addwf	fsr1l,f,c
  2302  007500  500B               	movf	PID_Initialize@pid+1,w,c
  2303  007502  22E2               	addwfc	fsr1h,f,c
  2304  007504  CFDE FFE6          	movff	postinc2,postinc1
  2305  007508  CFDE FFE6          	movff	postinc2,postinc1
  2306  00750C  CFDE FFE6          	movff	postinc2,postinc1
  2307                           
  2308                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  2309  007510  0012               	return	
  2310  007512                     l1488:
  2311  007512  EE20 F01C          	lfsr	2,28
  2312  007516  500A               	movf	PID_Initialize@pid,w,c
  2313  007518  26D9               	addwf	fsr2l,f,c
  2314  00751A  500B               	movf	PID_Initialize@pid+1,w,c
  2315  00751C  22DA               	addwfc	fsr2h,f,c
  2316  00751E  CFDE F001          	movff	postinc2,___ftge@ff1
  2317  007522  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2318  007526  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2319  00752A  EE20 F026          	lfsr	2,38
  2320  00752E  500A               	movf	PID_Initialize@pid,w,c
  2321  007530  26D9               	addwf	fsr2l,f,c
  2322  007532  500B               	movf	PID_Initialize@pid+1,w,c
  2323  007534  22DA               	addwfc	fsr2h,f,c
  2324  007536  CFDE F004          	movff	postinc2,___ftge@ff2
  2325  00753A  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2326  00753E  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2327  007542  ECC6  F037         	call	___ftge	;wreg free
  2328  007546  B0D8               	btfsc	status,0,c
  2329  007548  0012               	return	
  2330                           
  2331                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2332  00754A  EE20 F026          	lfsr	2,38
  2333  00754E  500A               	movf	PID_Initialize@pid,w,c
  2334  007550  26D9               	addwf	fsr2l,f,c
  2335  007552  500B               	movf	PID_Initialize@pid+1,w,c
  2336  007554  22DA               	addwfc	fsr2h,f,c
  2337  007556  EE10 F01C          	lfsr	1,28
  2338  00755A  500A               	movf	PID_Initialize@pid,w,c
  2339  00755C  26E1               	addwf	fsr1l,f,c
  2340  00755E  500B               	movf	PID_Initialize@pid+1,w,c
  2341  007560  22E2               	addwfc	fsr1h,f,c
  2342  007562  CFDE FFE6          	movff	postinc2,postinc1
  2343  007566  CFDE FFE6          	movff	postinc2,postinc1
  2344  00756A  CFDE FFE6          	movff	postinc2,postinc1
  2345  00756E  0012               	return	
  2346  007570                     __end_of_PID_Initialize:
  2347                           	opt stack 0
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postinc1	equ	0xFE6
  2355                           fsr1h	equ	0xFE2
  2356                           fsr1l	equ	0xFE1
  2357                           indf2	equ	0xFDF
  2358                           postinc2	equ	0xFDE
  2359                           postdec2	equ	0xFDD
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _PID_Compute *****************
  2365 ;; Defined at:
  2366 ;;		line 43 in file "pid.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  pid             2   38[COMRAM] PTR struct .
  2369 ;;		 -> main@PID(45), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  output          3   52[COMRAM] float 
  2372 ;;  input           3   49[COMRAM] float 
  2373 ;;  error           3   46[COMRAM] float 
  2374 ;;  dInput          3   40[COMRAM] float 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      unsigned char 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2384 ;;      Params:         2       0       0       0       0       0       0       0       0
  2385 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2387 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2388 ;;Total ram usage:       17 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    2
  2391 ;; This function calls:
  2392 ;;		___ftadd
  2393 ;;		___ftge
  2394 ;;		___ftmul
  2395 ;;		___ftneg
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text12
  2402  007CE8                     __ptext12:
  2403                           	opt stack 0
  2404  007CE8                     _PID_Compute:
  2405                           	opt stack 28
  2406                           
  2407                           ;pid.c: 44: if (!pid->inAuto) {
  2408                           
  2409                           ;incstack = 0
  2410  007CE8  EE20 F02C          	lfsr	2,44
  2411  007CEC  5027               	movf	PID_Compute@pid,w,c
  2412  007CEE  26D9               	addwf	fsr2l,f,c
  2413  007CF0  5028               	movf	PID_Compute@pid+1,w,c
  2414  007CF2  22DA               	addwfc	fsr2h,f,c
  2415  007CF4  50DF               	movf	indf2,w,c
  2416  007CF6  B4D8               	btfsc	status,2,c
  2417  007CF8  0012               	return	
  2418                           
  2419                           ;pid.c: 46: }
  2420                           ;pid.c: 51: FloatType input = pid->myInput;
  2421                           
  2422                           ;pid.c: 45: return 0;
  2423                           ;	Return value of _PID_Compute is never used
  2424  007CFA  EE20 F013          	lfsr	2,19
  2425  007CFE  5027               	movf	PID_Compute@pid,w,c
  2426  007D00  26D9               	addwf	fsr2l,f,c
  2427  007D02  5028               	movf	PID_Compute@pid+1,w,c
  2428  007D04  22DA               	addwfc	fsr2h,f,c
  2429  007D06  CFDE F032          	movff	postinc2,PID_Compute@input
  2430  007D0A  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2431  007D0E  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2432                           
  2433                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2434  007D12  C032  F018         	movff	PID_Compute@input,___ftneg@f1
  2435  007D16  C033  F019         	movff	PID_Compute@input+1,___ftneg@f1+1
  2436  007D1A  C034  F01A         	movff	PID_Compute@input+2,___ftneg@f1+2
  2437  007D1E  EC21  F037         	call	___ftneg	;wreg free
  2438  007D22  C018  F01B         	movff	?___ftneg,___ftadd@f1
  2439  007D26  C019  F01C         	movff	?___ftneg+1,___ftadd@f1+1
  2440  007D2A  C01A  F01D         	movff	?___ftneg+2,___ftadd@f1+2
  2441  007D2E  EE20 F019          	lfsr	2,25
  2442  007D32  5027               	movf	PID_Compute@pid,w,c
  2443  007D34  26D9               	addwf	fsr2l,f,c
  2444  007D36  5028               	movf	PID_Compute@pid+1,w,c
  2445  007D38  22DA               	addwfc	fsr2h,f,c
  2446  007D3A  CFDE F01E          	movff	postinc2,___ftadd@f2
  2447  007D3E  CFDE F01F          	movff	postinc2,___ftadd@f2+1
  2448  007D42  CFDD F020          	movff	postdec2,___ftadd@f2+2
  2449  007D46  ECDE  F03B         	call	___ftadd	;wreg free
  2450  007D4A  C01B  F02F         	movff	?___ftadd,PID_Compute@error
  2451  007D4E  C01C  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2452  007D52  C01D  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2453                           
  2454                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2455  007D56  EE20 F01C          	lfsr	2,28
  2456  007D5A  5027               	movf	PID_Compute@pid,w,c
  2457  007D5C  26D9               	addwf	fsr2l,f,c
  2458  007D5E  5028               	movf	PID_Compute@pid+1,w,c
  2459  007D60  22DA               	addwfc	fsr2h,f,c
  2460  007D62  CFDE F01B          	movff	postinc2,___ftadd@f1
  2461  007D66  CFDE F01C          	movff	postinc2,___ftadd@f1+1
  2462  007D6A  CFDD F01D          	movff	postdec2,___ftadd@f1+2
  2463  007D6E  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2464  007D72  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2465  007D76  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2466  007D7A  EE20 F00C          	lfsr	2,12
  2467  007D7E  5027               	movf	PID_Compute@pid,w,c
  2468  007D80  26D9               	addwf	fsr2l,f,c
  2469  007D82  5028               	movf	PID_Compute@pid+1,w,c
  2470  007D84  22DA               	addwfc	fsr2h,f,c
  2471  007D86  CFDE F009          	movff	postinc2,___ftmul@f1
  2472  007D8A  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2473  007D8E  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2474  007D92  EC42  F039         	call	___ftmul	;wreg free
  2475  007D96  C009  F01E         	movff	?___ftmul,___ftadd@f2
  2476  007D9A  C00A  F01F         	movff	?___ftmul+1,___ftadd@f2+1
  2477  007D9E  C00B  F020         	movff	?___ftmul+2,___ftadd@f2+2
  2478  007DA2  ECDE  F03B         	call	___ftadd	;wreg free
  2479  007DA6  EE20 F01C          	lfsr	2,28
  2480  007DAA  5027               	movf	PID_Compute@pid,w,c
  2481  007DAC  26D9               	addwf	fsr2l,f,c
  2482  007DAE  5028               	movf	PID_Compute@pid+1,w,c
  2483  007DB0  22DA               	addwfc	fsr2h,f,c
  2484  007DB2  C01B  FFDE         	movff	?___ftadd,postinc2
  2485  007DB6  C01C  FFDE         	movff	?___ftadd+1,postinc2
  2486  007DBA  C01D  FFDE         	movff	?___ftadd+2,postinc2
  2487                           
  2488                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2489  007DBE  EE20 F029          	lfsr	2,41
  2490  007DC2  5027               	movf	PID_Compute@pid,w,c
  2491  007DC4  26D9               	addwf	fsr2l,f,c
  2492  007DC6  5028               	movf	PID_Compute@pid+1,w,c
  2493  007DC8  22DA               	addwfc	fsr2h,f,c
  2494  007DCA  CFDE F001          	movff	postinc2,___ftge@ff1
  2495  007DCE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2496  007DD2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2497  007DD6  EE20 F01C          	lfsr	2,28
  2498  007DDA  5027               	movf	PID_Compute@pid,w,c
  2499  007DDC  26D9               	addwf	fsr2l,f,c
  2500  007DDE  5028               	movf	PID_Compute@pid+1,w,c
  2501  007DE0  22DA               	addwfc	fsr2h,f,c
  2502  007DE2  CFDE F004          	movff	postinc2,___ftge@ff2
  2503  007DE6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2504  007DEA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2505  007DEE  ECC6  F037         	call	___ftge	;wreg free
  2506  007DF2  B0D8               	btfsc	status,0,c
  2507  007DF4  D003               	goto	l1594
  2508                           
  2509                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2510  007DF6  EE20 F029          	lfsr	2,41
  2511  007DFA  D01E               	goto	L2
  2512  007DFC                     l1594:
  2513                           
  2514                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2515  007DFC  EE20 F01C          	lfsr	2,28
  2516  007E00  5027               	movf	PID_Compute@pid,w,c
  2517  007E02  26D9               	addwf	fsr2l,f,c
  2518  007E04  5028               	movf	PID_Compute@pid+1,w,c
  2519  007E06  22DA               	addwfc	fsr2h,f,c
  2520  007E08  CFDE F001          	movff	postinc2,___ftge@ff1
  2521  007E0C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2522  007E10  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2523  007E14  EE20 F026          	lfsr	2,38
  2524  007E18  5027               	movf	PID_Compute@pid,w,c
  2525  007E1A  26D9               	addwf	fsr2l,f,c
  2526  007E1C  5028               	movf	PID_Compute@pid+1,w,c
  2527  007E1E  22DA               	addwfc	fsr2h,f,c
  2528  007E20  CFDE F004          	movff	postinc2,___ftge@ff2
  2529  007E24  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2530  007E28  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2531  007E2C  ECC6  F037         	call	___ftge	;wreg free
  2532  007E30  B0D8               	btfsc	status,0,c
  2533  007E32  D012               	goto	l1598
  2534                           
  2535                           ;pid.c: 57: pid->ITerm = pid->outMin;
  2536  007E34  EE20 F026          	lfsr	2,38
  2537  007E38                     L2:
  2538  007E38  5027               	movf	PID_Compute@pid,w,c
  2539  007E3A  26D9               	addwf	fsr2l,f,c
  2540  007E3C  5028               	movf	PID_Compute@pid+1,w,c
  2541  007E3E  22DA               	addwfc	fsr2h,f,c
  2542  007E40  EE10 F01C          	lfsr	1,28
  2543  007E44  5027               	movf	PID_Compute@pid,w,c
  2544  007E46  26E1               	addwf	fsr1l,f,c
  2545  007E48  5028               	movf	PID_Compute@pid+1,w,c
  2546  007E4A  22E2               	addwfc	fsr1h,f,c
  2547  007E4C  CFDE FFE6          	movff	postinc2,postinc1
  2548  007E50  CFDE FFE6          	movff	postinc2,postinc1
  2549  007E54  CFDE FFE6          	movff	postinc2,postinc1
  2550  007E58                     l1598:
  2551                           
  2552                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  2553  007E58  EE20 F01F          	lfsr	2,31
  2554  007E5C  5027               	movf	PID_Compute@pid,w,c
  2555  007E5E  26D9               	addwf	fsr2l,f,c
  2556  007E60  5028               	movf	PID_Compute@pid+1,w,c
  2557  007E62  22DA               	addwfc	fsr2h,f,c
  2558  007E64  CFDE F018          	movff	postinc2,___ftneg@f1
  2559  007E68  CFDE F019          	movff	postinc2,___ftneg@f1+1
  2560  007E6C  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  2561  007E70  EC21  F037         	call	___ftneg	;wreg free
  2562  007E74  C018  F01B         	movff	?___ftneg,___ftadd@f1
  2563  007E78  C019  F01C         	movff	?___ftneg+1,___ftadd@f1+1
  2564  007E7C  C01A  F01D         	movff	?___ftneg+2,___ftadd@f1+2
  2565  007E80  C032  F01E         	movff	PID_Compute@input,___ftadd@f2
  2566  007E84  C033  F01F         	movff	PID_Compute@input+1,___ftadd@f2+1
  2567  007E88  C034  F020         	movff	PID_Compute@input+2,___ftadd@f2+2
  2568  007E8C  ECDE  F03B         	call	___ftadd	;wreg free
  2569  007E90  C01B  F029         	movff	?___ftadd,PID_Compute@dInput
  2570  007E94  C01C  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  2571  007E98  C01D  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  2572                           
  2573                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2574  007E9C  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  2575  007EA0  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  2576  007EA4  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  2577  007EA8  EE20 F00F          	lfsr	2,15
  2578  007EAC  5027               	movf	PID_Compute@pid,w,c
  2579  007EAE  26D9               	addwf	fsr2l,f,c
  2580  007EB0  5028               	movf	PID_Compute@pid+1,w,c
  2581  007EB2  22DA               	addwfc	fsr2h,f,c
  2582  007EB4  CFDE F009          	movff	postinc2,___ftmul@f1
  2583  007EB8  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2584  007EBC  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2585  007EC0  EC42  F039         	call	___ftmul	;wreg free
  2586  007EC4  C009  F018         	movff	?___ftmul,___ftneg@f1
  2587  007EC8  C00A  F019         	movff	?___ftmul+1,___ftneg@f1+1
  2588  007ECC  C00B  F01A         	movff	?___ftmul+2,___ftneg@f1+2
  2589  007ED0  EC21  F037         	call	___ftneg	;wreg free
  2590  007ED4  C018  F01E         	movff	?___ftneg,___ftadd@f2
  2591  007ED8  C019  F01F         	movff	?___ftneg+1,___ftadd@f2+1
  2592  007EDC  C01A  F020         	movff	?___ftneg+2,___ftadd@f2+2
  2593  007EE0  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2594  007EE4  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2595  007EE8  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2596  007EEC  EE20 F009          	lfsr	2,9
  2597  007EF0  5027               	movf	PID_Compute@pid,w,c
  2598  007EF2  26D9               	addwf	fsr2l,f,c
  2599  007EF4  5028               	movf	PID_Compute@pid+1,w,c
  2600  007EF6  22DA               	addwfc	fsr2h,f,c
  2601  007EF8  CFDE F009          	movff	postinc2,___ftmul@f1
  2602  007EFC  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2603  007F00  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2604  007F04  EC42  F039         	call	___ftmul	;wreg free
  2605  007F08  C009  F01B         	movff	?___ftmul,___ftadd@f1
  2606  007F0C  C00A  F01C         	movff	?___ftmul+1,___ftadd@f1+1
  2607  007F10  C00B  F01D         	movff	?___ftmul+2,___ftadd@f1+2
  2608  007F14  ECDE  F03B         	call	___ftadd	;wreg free
  2609  007F18  C01B  F02C         	movff	?___ftadd,_PID_Compute$1034
  2610  007F1C  C01C  F02D         	movff	?___ftadd+1,_PID_Compute$1034+1
  2611  007F20  C01D  F02E         	movff	?___ftadd+2,_PID_Compute$1034+2
  2612                           
  2613                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2614  007F24  C02C  F01B         	movff	_PID_Compute$1034,___ftadd@f1
  2615  007F28  C02D  F01C         	movff	_PID_Compute$1034+1,___ftadd@f1+1
  2616  007F2C  C02E  F01D         	movff	_PID_Compute$1034+2,___ftadd@f1+2
  2617  007F30  EE20 F01C          	lfsr	2,28
  2618  007F34  5027               	movf	PID_Compute@pid,w,c
  2619  007F36  26D9               	addwf	fsr2l,f,c
  2620  007F38  5028               	movf	PID_Compute@pid+1,w,c
  2621  007F3A  22DA               	addwfc	fsr2h,f,c
  2622  007F3C  CFDE F01E          	movff	postinc2,___ftadd@f2
  2623  007F40  CFDE F01F          	movff	postinc2,___ftadd@f2+1
  2624  007F44  CFDD F020          	movff	postdec2,___ftadd@f2+2
  2625  007F48  ECDE  F03B         	call	___ftadd	;wreg free
  2626  007F4C  C01B  F035         	movff	?___ftadd,PID_Compute@output
  2627  007F50  C01C  F036         	movff	?___ftadd+1,PID_Compute@output+1
  2628  007F54  C01D  F037         	movff	?___ftadd+2,PID_Compute@output+2
  2629                           
  2630                           ;pid.c: 63: if (output > pid->outMax)
  2631  007F58  EE20 F029          	lfsr	2,41
  2632  007F5C  5027               	movf	PID_Compute@pid,w,c
  2633  007F5E  26D9               	addwf	fsr2l,f,c
  2634  007F60  5028               	movf	PID_Compute@pid+1,w,c
  2635  007F62  22DA               	addwfc	fsr2h,f,c
  2636  007F64  CFDE F001          	movff	postinc2,___ftge@ff1
  2637  007F68  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2638  007F6C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2639  007F70  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  2640  007F74  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  2641  007F78  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  2642  007F7C  ECC6  F037         	call	___ftge	;wreg free
  2643  007F80  B0D8               	btfsc	status,0,c
  2644  007F82  D003               	goto	l1608
  2645                           
  2646                           ;pid.c: 64: output = pid->outMax;
  2647  007F84  EE20 F029          	lfsr	2,41
  2648  007F88  D018               	goto	L3
  2649  007F8A                     l1608:
  2650                           
  2651                           ;pid.c: 65: else if (output < pid->outMin)
  2652  007F8A  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  2653  007F8E  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  2654  007F92  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  2655  007F96  EE20 F026          	lfsr	2,38
  2656  007F9A  5027               	movf	PID_Compute@pid,w,c
  2657  007F9C  26D9               	addwf	fsr2l,f,c
  2658  007F9E  5028               	movf	PID_Compute@pid+1,w,c
  2659  007FA0  22DA               	addwfc	fsr2h,f,c
  2660  007FA2  CFDE F004          	movff	postinc2,___ftge@ff2
  2661  007FA6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2662  007FAA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2663  007FAE  ECC6  F037         	call	___ftge	;wreg free
  2664  007FB2  B0D8               	btfsc	status,0,c
  2665  007FB4  D00C               	goto	l70
  2666                           
  2667                           ;pid.c: 66: output = pid->outMin;
  2668  007FB6  EE20 F026          	lfsr	2,38
  2669  007FBA                     L3:
  2670  007FBA  5027               	movf	PID_Compute@pid,w,c
  2671  007FBC  26D9               	addwf	fsr2l,f,c
  2672  007FBE  5028               	movf	PID_Compute@pid+1,w,c
  2673  007FC0  22DA               	addwfc	fsr2h,f,c
  2674  007FC2  CFDE F035          	movff	postinc2,PID_Compute@output
  2675  007FC6  CFDE F036          	movff	postinc2,PID_Compute@output+1
  2676  007FCA  CFDD F037          	movff	postdec2,PID_Compute@output+2
  2677  007FCE                     l70:
  2678                           
  2679                           ;pid.c: 67: pid->myOutput = output;
  2680  007FCE  EE20 F016          	lfsr	2,22
  2681  007FD2  5027               	movf	PID_Compute@pid,w,c
  2682  007FD4  26D9               	addwf	fsr2l,f,c
  2683  007FD6  5028               	movf	PID_Compute@pid+1,w,c
  2684  007FD8  22DA               	addwfc	fsr2h,f,c
  2685  007FDA  C035  FFDE         	movff	PID_Compute@output,postinc2
  2686  007FDE  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  2687  007FE2  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  2688                           
  2689                           ;pid.c: 70: pid->lastInput = input;
  2690  007FE6  EE20 F01F          	lfsr	2,31
  2691  007FEA  5027               	movf	PID_Compute@pid,w,c
  2692  007FEC  26D9               	addwf	fsr2l,f,c
  2693  007FEE  5028               	movf	PID_Compute@pid+1,w,c
  2694  007FF0  22DA               	addwfc	fsr2h,f,c
  2695  007FF2  C032  FFDE         	movff	PID_Compute@input,postinc2
  2696  007FF6  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  2697  007FFA  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  2698  007FFE  0012               	return	
  2699  008000                     __end_of_PID_Compute:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           postinc0	equ	0xFEE
  2706                           wreg	equ	0xFE8
  2707                           postinc1	equ	0xFE6
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           indf2	equ	0xFDF
  2711                           postinc2	equ	0xFDE
  2712                           postdec2	equ	0xFDD
  2713                           fsr2h	equ	0xFDA
  2714                           fsr2l	equ	0xFD9
  2715                           status	equ	0xFD8
  2716                           
  2717 ;; *************** function ___ftneg *****************
  2718 ;; Defined at:
  2719 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  f1              3   23[COMRAM] float 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  3   23[COMRAM] float 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2733 ;;      Params:         3       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        3 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_PID_Compute
  2743 ;;		_PID_SetTunings
  2744 ;;		_PID_SetControllerDirection
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text13
  2749  006E42                     __ptext13:
  2750                           	opt stack 0
  2751  006E42                     ___ftneg:
  2752                           	opt stack 28
  2753                           
  2754                           ;incstack = 0
  2755  006E42  5018               	movf	___ftneg@f1,w,c
  2756  006E44  1019               	iorwf	___ftneg@f1+1,w,c
  2757  006E46  101A               	iorwf	___ftneg@f1+2,w,c
  2758  006E48  B4D8               	btfsc	status,2,c
  2759  006E4A  D006               	goto	l427
  2760  006E4C  0E00               	movlw	0
  2761  006E4E  1A18               	xorwf	___ftneg@f1,f,c
  2762  006E50  0E00               	movlw	0
  2763  006E52  1A19               	xorwf	___ftneg@f1+1,f,c
  2764  006E54  0E80               	movlw	128
  2765  006E56  1A1A               	xorwf	___ftneg@f1+2,f,c
  2766  006E58                     l427:
  2767  006E58  C018  F018         	movff	___ftneg@f1,?___ftneg
  2768  006E5C  C019  F019         	movff	___ftneg@f1+1,?___ftneg+1
  2769  006E60  C01A  F01A         	movff	___ftneg@f1+2,?___ftneg+2
  2770  006E64  0012               	return		;funcret
  2771  006E66                     __end_of___ftneg:
  2772                           	opt stack 0
  2773                           tblptru	equ	0xFF8
  2774                           tblptrh	equ	0xFF7
  2775                           tblptrl	equ	0xFF6
  2776                           tablat	equ	0xFF5
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           postinc1	equ	0xFE6
  2780                           fsr1h	equ	0xFE2
  2781                           fsr1l	equ	0xFE1
  2782                           indf2	equ	0xFDF
  2783                           postinc2	equ	0xFDE
  2784                           postdec2	equ	0xFDD
  2785                           fsr2h	equ	0xFDA
  2786                           fsr2l	equ	0xFD9
  2787                           status	equ	0xFD8
  2788                           
  2789 ;; *************** function ___ftmul *****************
  2790 ;; Defined at:
  2791 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  f1              3    8[COMRAM] float 
  2794 ;;  f2              3   11[COMRAM] float 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2797 ;;  sign            1   22[COMRAM] unsigned char 
  2798 ;;  cntr            1   21[COMRAM] unsigned char 
  2799 ;;  exp             1   17[COMRAM] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  3    8[COMRAM] float 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2809 ;;      Params:         6       0       0       0       0       0       0       0       0
  2810 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2811 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2812 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2813 ;;Total ram usage:       15 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    1
  2816 ;; This function calls:
  2817 ;;		___ftpack
  2818 ;; This function is called by:
  2819 ;;		_PID_Compute
  2820 ;;		_PID_SetTunings
  2821 ;;		_PID_SetSampleTime
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text14
  2826  007284                     __ptext14:
  2827                           	opt stack 0
  2828  007284                     ___ftmul:
  2829                           	opt stack 27
  2830                           
  2831                           ;incstack = 0
  2832  007284  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2833  007288  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2834  00728A  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2835  00728C  340A               	rlcf	___ftmul@f1+1,w,c
  2836  00728E  360F               	rlcf	??___ftmul& (0+255),f,c
  2837  007290  E301               	bnc	u911
  2838  007292  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2839  007294                     u911:
  2840  007294  500F               	movf	??___ftmul,w,c
  2841  007296  6E12               	movwf	___ftmul@exp,c
  2842  007298  5012               	movf	___ftmul@exp,w,c
  2843  00729A  A4D8               	btfss	status,2,c
  2844  00729C  D007               	goto	l1354
  2845  00729E  0E00               	movlw	0
  2846  0072A0  6E09               	movwf	?___ftmul,c
  2847  0072A2  0E00               	movlw	0
  2848  0072A4  6E0A               	movwf	?___ftmul+1,c
  2849  0072A6  0E00               	movlw	0
  2850  0072A8  6E0B               	movwf	?___ftmul+2,c
  2851  0072AA  0012               	return	
  2852  0072AC                     l1354:
  2853  0072AC  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2854  0072B0  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2855  0072B2  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2856  0072B4  340D               	rlcf	___ftmul@f2+1,w,c
  2857  0072B6  360F               	rlcf	??___ftmul& (0+255),f,c
  2858  0072B8  E301               	bnc	u931
  2859  0072BA  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2860  0072BC                     u931:
  2861  0072BC  500F               	movf	??___ftmul,w,c
  2862  0072BE  6E17               	movwf	___ftmul@sign,c
  2863  0072C0  5017               	movf	___ftmul@sign,w,c
  2864  0072C2  A4D8               	btfss	status,2,c
  2865  0072C4  D007               	goto	l1360
  2866  0072C6  0E00               	movlw	0
  2867  0072C8  6E09               	movwf	?___ftmul,c
  2868  0072CA  0E00               	movlw	0
  2869  0072CC  6E0A               	movwf	?___ftmul+1,c
  2870  0072CE  0E00               	movlw	0
  2871  0072D0  6E0B               	movwf	?___ftmul+2,c
  2872  0072D2  0012               	return	
  2873  0072D4                     l1360:
  2874  0072D4  5017               	movf	___ftmul@sign,w,c
  2875  0072D6  0F7B               	addlw	123
  2876  0072D8  2612               	addwf	___ftmul@exp,f,c
  2877  0072DA  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2878  0072DE  500E               	movf	___ftmul@f2+2,w,c
  2879  0072E0  1A17               	xorwf	___ftmul@sign,f,c
  2880  0072E2  0E80               	movlw	128
  2881  0072E4  1617               	andwf	___ftmul@sign,f,c
  2882  0072E6  8E0A               	bsf	___ftmul@f1+1,7,c
  2883  0072E8  8E0D               	bsf	___ftmul@f2+1,7,c
  2884  0072EA  0EFF               	movlw	255
  2885  0072EC  160C               	andwf	___ftmul@f2,f,c
  2886  0072EE  0EFF               	movlw	255
  2887  0072F0  160D               	andwf	___ftmul@f2+1,f,c
  2888  0072F2  0E00               	movlw	0
  2889  0072F4  160E               	andwf	___ftmul@f2+2,f,c
  2890  0072F6  0E00               	movlw	0
  2891  0072F8  6E13               	movwf	___ftmul@f3_as_product,c
  2892  0072FA  0E00               	movlw	0
  2893  0072FC  6E14               	movwf	___ftmul@f3_as_product+1,c
  2894  0072FE  0E00               	movlw	0
  2895  007300  6E15               	movwf	___ftmul@f3_as_product+2,c
  2896  007302  0E07               	movlw	7
  2897  007304  6E16               	movwf	___ftmul@cntr,c
  2898  007306                     l1374:
  2899  007306  A009               	btfss	___ftmul@f1,0,c
  2900  007308  D006               	goto	l1378
  2901  00730A  500C               	movf	___ftmul@f2,w,c
  2902  00730C  2613               	addwf	___ftmul@f3_as_product,f,c
  2903  00730E  500D               	movf	___ftmul@f2+1,w,c
  2904  007310  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2905  007312  500E               	movf	___ftmul@f2+2,w,c
  2906  007314  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2907  007316                     l1378:
  2908  007316  90D8               	bcf	status,0,c
  2909  007318  320B               	rrcf	___ftmul@f1+2,f,c
  2910  00731A  320A               	rrcf	___ftmul@f1+1,f,c
  2911  00731C  3209               	rrcf	___ftmul@f1,f,c
  2912  00731E  90D8               	bcf	status,0,c
  2913  007320  360C               	rlcf	___ftmul@f2,f,c
  2914  007322  360D               	rlcf	___ftmul@f2+1,f,c
  2915  007324  360E               	rlcf	___ftmul@f2+2,f,c
  2916  007326  2E16               	decfsz	___ftmul@cntr,f,c
  2917  007328  D7EE               	goto	l1374
  2918  00732A  0E09               	movlw	9
  2919  00732C  6E16               	movwf	___ftmul@cntr,c
  2920  00732E                     l1384:
  2921  00732E  A009               	btfss	___ftmul@f1,0,c
  2922  007330  D006               	goto	l1388
  2923  007332  500C               	movf	___ftmul@f2,w,c
  2924  007334  2613               	addwf	___ftmul@f3_as_product,f,c
  2925  007336  500D               	movf	___ftmul@f2+1,w,c
  2926  007338  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2927  00733A  500E               	movf	___ftmul@f2+2,w,c
  2928  00733C  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2929  00733E                     l1388:
  2930  00733E  90D8               	bcf	status,0,c
  2931  007340  320B               	rrcf	___ftmul@f1+2,f,c
  2932  007342  320A               	rrcf	___ftmul@f1+1,f,c
  2933  007344  3209               	rrcf	___ftmul@f1,f,c
  2934  007346  90D8               	bcf	status,0,c
  2935  007348  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2936  00734A  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2937  00734C  3213               	rrcf	___ftmul@f3_as_product,f,c
  2938  00734E  2E16               	decfsz	___ftmul@cntr,f,c
  2939  007350  D7EE               	goto	l1384
  2940  007352  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2941  007356  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2942  00735A  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2943  00735E  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  2944  007362  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  2945  007366  EC0E  F038         	call	___ftpack	;wreg free
  2946  00736A  C001  F009         	movff	?___ftpack,?___ftmul
  2947  00736E  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  2948  007372  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  2949  007376  0012               	return	
  2950  007378                     __end_of___ftmul:
  2951                           	opt stack 0
  2952                           tblptru	equ	0xFF8
  2953                           tblptrh	equ	0xFF7
  2954                           tblptrl	equ	0xFF6
  2955                           tablat	equ	0xFF5
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           postinc1	equ	0xFE6
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           indf2	equ	0xFDF
  2962                           postinc2	equ	0xFDE
  2963                           postdec2	equ	0xFDD
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function ___ftge *****************
  2969 ;; Defined at:
  2970 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  ff1             3    0[COMRAM] float 
  2973 ;;  ff2             3    3[COMRAM] float 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;		None               void
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2985 ;;      Params:         6       0       0       0       0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2987 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2988 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2989 ;;Total ram usage:        9 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_PID_Compute
  2995 ;;		_PID_SetOutputLimits
  2996 ;;		_PID_Initialize
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text15
  3001  006F8C                     __ptext15:
  3002                           	opt stack 0
  3003  006F8C                     ___ftge:
  3004                           	opt stack 28
  3005                           
  3006                           ;incstack = 0
  3007  006F8C  AE03               	btfss	___ftge@ff1+2,7,c
  3008  006F8E  D016               	goto	l1400
  3009  006F90  C001  F007         	movff	___ftge@ff1,??___ftge
  3010  006F94  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3011  006F98  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3012  006F9C  1E07               	comf	??___ftge,f,c
  3013  006F9E  1E08               	comf	??___ftge+1,f,c
  3014  006FA0  1E09               	comf	??___ftge+2,f,c
  3015  006FA2  2A07               	incf	??___ftge,f,c
  3016  006FA4  0E00               	movlw	0
  3017  006FA6  2208               	addwfc	??___ftge+1,f,c
  3018  006FA8  2209               	addwfc	??___ftge+2,f,c
  3019  006FAA  0E00               	movlw	0
  3020  006FAC  2407               	addwf	??___ftge,w,c
  3021  006FAE  6E01               	movwf	___ftge@ff1,c
  3022  006FB0  0E00               	movlw	0
  3023  006FB2  2008               	addwfc	??___ftge+1,w,c
  3024  006FB4  6E02               	movwf	___ftge@ff1+1,c
  3025  006FB6  0E80               	movlw	128
  3026  006FB8  2009               	addwfc	??___ftge+2,w,c
  3027  006FBA  6E03               	movwf	___ftge@ff1+2,c
  3028  006FBC                     l1400:
  3029  006FBC  AE06               	btfss	___ftge@ff2+2,7,c
  3030  006FBE  D016               	goto	l1404
  3031  006FC0  C004  F007         	movff	___ftge@ff2,??___ftge
  3032  006FC4  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3033  006FC8  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3034  006FCC  1E07               	comf	??___ftge,f,c
  3035  006FCE  1E08               	comf	??___ftge+1,f,c
  3036  006FD0  1E09               	comf	??___ftge+2,f,c
  3037  006FD2  2A07               	incf	??___ftge,f,c
  3038  006FD4  0E00               	movlw	0
  3039  006FD6  2208               	addwfc	??___ftge+1,f,c
  3040  006FD8  2209               	addwfc	??___ftge+2,f,c
  3041  006FDA  0E00               	movlw	0
  3042  006FDC  2407               	addwf	??___ftge,w,c
  3043  006FDE  6E04               	movwf	___ftge@ff2,c
  3044  006FE0  0E00               	movlw	0
  3045  006FE2  2008               	addwfc	??___ftge+1,w,c
  3046  006FE4  6E05               	movwf	___ftge@ff2+1,c
  3047  006FE6  0E80               	movlw	128
  3048  006FE8  2009               	addwfc	??___ftge+2,w,c
  3049  006FEA  6E06               	movwf	___ftge@ff2+2,c
  3050  006FEC                     l1404:
  3051  006FEC  0E00               	movlw	0
  3052  006FEE  1A01               	xorwf	___ftge@ff1,f,c
  3053  006FF0  0E00               	movlw	0
  3054  006FF2  1A02               	xorwf	___ftge@ff1+1,f,c
  3055  006FF4  0E80               	movlw	128
  3056  006FF6  1A03               	xorwf	___ftge@ff1+2,f,c
  3057  006FF8  0E00               	movlw	0
  3058  006FFA  1A04               	xorwf	___ftge@ff2,f,c
  3059  006FFC  0E00               	movlw	0
  3060  006FFE  1A05               	xorwf	___ftge@ff2+1,f,c
  3061  007000  0E80               	movlw	128
  3062  007002  1A06               	xorwf	___ftge@ff2+2,f,c
  3063  007004  5004               	movf	___ftge@ff2,w,c
  3064  007006  5C01               	subwf	___ftge@ff1,w,c
  3065  007008  5005               	movf	___ftge@ff2+1,w,c
  3066  00700A  5802               	subwfb	___ftge@ff1+1,w,c
  3067  00700C  5006               	movf	___ftge@ff2+2,w,c
  3068  00700E  5803               	subwfb	___ftge@ff1+2,w,c
  3069  007010  B0D8               	btfsc	status,0,c
  3070  007012  D002               	goto	l1410
  3071  007014  90D8               	bcf	status,0,c
  3072  007016  0012               	return	
  3073  007018                     l1410:
  3074  007018  80D8               	bsf	status,0,c
  3075  00701A  0012               	return	
  3076  00701C                     __end_of___ftge:
  3077                           	opt stack 0
  3078                           tblptru	equ	0xFF8
  3079                           tblptrh	equ	0xFF7
  3080                           tblptrl	equ	0xFF6
  3081                           tablat	equ	0xFF5
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           postinc1	equ	0xFE6
  3085                           fsr1h	equ	0xFE2
  3086                           fsr1l	equ	0xFE1
  3087                           indf2	equ	0xFDF
  3088                           postinc2	equ	0xFDE
  3089                           postdec2	equ	0xFDD
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function ___ftadd *****************
  3095 ;; Defined at:
  3096 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  f1              3   26[COMRAM] float 
  3099 ;;  f2              3   29[COMRAM] float 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  exp1            1   37[COMRAM] unsigned char 
  3102 ;;  exp2            1   36[COMRAM] unsigned char 
  3103 ;;  sign            1   35[COMRAM] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  3   26[COMRAM] float 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3113 ;;      Params:         6       0       0       0       0       0       0       0       0
  3114 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3115 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3116 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3117 ;;Total ram usage:       12 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    1
  3120 ;; This function calls:
  3121 ;;		___ftpack
  3122 ;; This function is called by:
  3123 ;;		_PID_Compute
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text16
  3128  0077BC                     __ptext16:
  3129                           	opt stack 0
  3130  0077BC                     ___ftadd:
  3131                           	opt stack 28
  3132                           
  3133                           ;incstack = 0
  3134  0077BC  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
  3135  0077C0  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3136  0077C2  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3137  0077C4  341C               	rlcf	___ftadd@f1+1,w,c
  3138  0077C6  3621               	rlcf	??___ftadd& (0+255),f,c
  3139  0077C8  E301               	bnc	u1161
  3140  0077CA  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3141  0077CC                     u1161:
  3142  0077CC  5021               	movf	??___ftadd,w,c
  3143  0077CE  6E26               	movwf	___ftadd@exp1,c
  3144  0077D0  C020  F021         	movff	___ftadd@f2+2,??___ftadd
  3145  0077D4  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3146  0077D6  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3147  0077D8  341F               	rlcf	___ftadd@f2+1,w,c
  3148  0077DA  3621               	rlcf	??___ftadd& (0+255),f,c
  3149  0077DC  E301               	bnc	u1171
  3150  0077DE  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3151  0077E0                     u1171:
  3152  0077E0  5021               	movf	??___ftadd,w,c
  3153  0077E2  6E25               	movwf	___ftadd@exp2,c
  3154  0077E4  5026               	movf	___ftadd@exp1,w,c
  3155  0077E6  B4D8               	btfsc	status,2,c
  3156  0077E8  D00B               	goto	l370
  3157  0077EA  5025               	movf	___ftadd@exp2,w,c
  3158  0077EC  5C26               	subwf	___ftadd@exp1,w,c
  3159  0077EE  B0D8               	btfsc	status,0,c
  3160  0077F0  D00E               	goto	l1500
  3161  0077F2  5026               	movf	___ftadd@exp1,w,c
  3162  0077F4  0800               	sublw	0
  3163  0077F6  2425               	addwf	___ftadd@exp2,w,c
  3164  0077F8  6E21               	movwf	??___ftadd& (0+255),c
  3165  0077FA  0E18               	movlw	24
  3166  0077FC  6421               	cpfsgt	??___ftadd,c
  3167  0077FE  D007               	goto	l1500
  3168  007800                     l370:
  3169  007800  C01E  F01B         	movff	___ftadd@f2,?___ftadd
  3170  007804  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
  3171  007808  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
  3172  00780C  0012               	return	
  3173  00780E                     l1500:
  3174  00780E  5025               	movf	___ftadd@exp2,w,c
  3175  007810  B4D8               	btfsc	status,2,c
  3176  007812  D00B               	goto	l374
  3177  007814  5026               	movf	___ftadd@exp1,w,c
  3178  007816  5C25               	subwf	___ftadd@exp2,w,c
  3179  007818  B0D8               	btfsc	status,0,c
  3180  00781A  D00E               	goto	l1506
  3181  00781C  5025               	movf	___ftadd@exp2,w,c
  3182  00781E  0800               	sublw	0
  3183  007820  2426               	addwf	___ftadd@exp1,w,c
  3184  007822  6E21               	movwf	??___ftadd& (0+255),c
  3185  007824  0E18               	movlw	24
  3186  007826  6421               	cpfsgt	??___ftadd,c
  3187  007828  D007               	goto	l1506
  3188  00782A                     l374:
  3189  00782A  C01B  F01B         	movff	___ftadd@f1,?___ftadd
  3190  00782E  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
  3191  007832  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
  3192  007836  0012               	return	
  3193  007838                     l1506:
  3194  007838  0E06               	movlw	6
  3195  00783A  6E24               	movwf	___ftadd@sign,c
  3196  00783C  BE1D               	btfsc	___ftadd@f1+2,7,c
  3197  00783E  8E24               	bsf	___ftadd@sign,7,c
  3198  007840  BE20               	btfsc	___ftadd@f2+2,7,c
  3199  007842  8C24               	bsf	___ftadd@sign,6,c
  3200  007844  8E1C               	bsf	___ftadd@f1+1,7,c
  3201  007846  0EFF               	movlw	255
  3202  007848  161B               	andwf	___ftadd@f1,f,c
  3203  00784A  0EFF               	movlw	255
  3204  00784C  161C               	andwf	___ftadd@f1+1,f,c
  3205  00784E  0E00               	movlw	0
  3206  007850  161D               	andwf	___ftadd@f1+2,f,c
  3207  007852  8E1F               	bsf	___ftadd@f2+1,7,c
  3208  007854  0EFF               	movlw	255
  3209  007856  161E               	andwf	___ftadd@f2,f,c
  3210  007858  0EFF               	movlw	255
  3211  00785A  161F               	andwf	___ftadd@f2+1,f,c
  3212  00785C  0E00               	movlw	0
  3213  00785E  1620               	andwf	___ftadd@f2+2,f,c
  3214  007860  5025               	movf	___ftadd@exp2,w,c
  3215  007862  5C26               	subwf	___ftadd@exp1,w,c
  3216  007864  B0D8               	btfsc	status,0,c
  3217  007866  D01B               	goto	l1532
  3218  007868                     l1522:
  3219  007868  90D8               	bcf	status,0,c
  3220  00786A  361E               	rlcf	___ftadd@f2,f,c
  3221  00786C  361F               	rlcf	___ftadd@f2+1,f,c
  3222  00786E  3620               	rlcf	___ftadd@f2+2,f,c
  3223  007870  0625               	decf	___ftadd@exp2,f,c
  3224  007872  5026               	movf	___ftadd@exp1,w,c
  3225  007874  1825               	xorwf	___ftadd@exp2,w,c
  3226  007876  B4D8               	btfsc	status,2,c
  3227  007878  D00D               	goto	l1530
  3228  00787A  0624               	decf	___ftadd@sign,f,c
  3229  00787C  C024  F021         	movff	___ftadd@sign,??___ftadd
  3230  007880  0E07               	movlw	7
  3231  007882  1621               	andwf	??___ftadd,f,c
  3232  007884  B4D8               	btfsc	status,2,c
  3233  007886  D006               	goto	l1530
  3234  007888  D7EF               	goto	l1522
  3235  00788A                     l1528:
  3236  00788A  90D8               	bcf	status,0,c
  3237  00788C  321D               	rrcf	___ftadd@f1+2,f,c
  3238  00788E  321C               	rrcf	___ftadd@f1+1,f,c
  3239  007890  321B               	rrcf	___ftadd@f1,f,c
  3240  007892  2A26               	incf	___ftadd@exp1,f,c
  3241  007894                     l1530:
  3242  007894  5025               	movf	___ftadd@exp2,w,c
  3243  007896  1826               	xorwf	___ftadd@exp1,w,c
  3244  007898  B4D8               	btfsc	status,2,c
  3245  00789A  D01F               	goto	l385
  3246  00789C  D7F6               	goto	l1528
  3247  00789E                     l1532:
  3248  00789E  5026               	movf	___ftadd@exp1,w,c
  3249  0078A0  5C25               	subwf	___ftadd@exp2,w,c
  3250  0078A2  B0D8               	btfsc	status,0,c
  3251  0078A4  D01A               	goto	l385
  3252  0078A6                     l1534:
  3253  0078A6  90D8               	bcf	status,0,c
  3254  0078A8  361B               	rlcf	___ftadd@f1,f,c
  3255  0078AA  361C               	rlcf	___ftadd@f1+1,f,c
  3256  0078AC  361D               	rlcf	___ftadd@f1+2,f,c
  3257  0078AE  0626               	decf	___ftadd@exp1,f,c
  3258  0078B0  5026               	movf	___ftadd@exp1,w,c
  3259  0078B2  1825               	xorwf	___ftadd@exp2,w,c
  3260  0078B4  B4D8               	btfsc	status,2,c
  3261  0078B6  D00D               	goto	l1542
  3262  0078B8  0624               	decf	___ftadd@sign,f,c
  3263  0078BA  C024  F021         	movff	___ftadd@sign,??___ftadd
  3264  0078BE  0E07               	movlw	7
  3265  0078C0  1621               	andwf	??___ftadd,f,c
  3266  0078C2  B4D8               	btfsc	status,2,c
  3267  0078C4  D006               	goto	l1542
  3268  0078C6  D7EF               	goto	l1534
  3269  0078C8                     l1540:
  3270  0078C8  90D8               	bcf	status,0,c
  3271  0078CA  3220               	rrcf	___ftadd@f2+2,f,c
  3272  0078CC  321F               	rrcf	___ftadd@f2+1,f,c
  3273  0078CE  321E               	rrcf	___ftadd@f2,f,c
  3274  0078D0  2A25               	incf	___ftadd@exp2,f,c
  3275  0078D2                     l1542:
  3276  0078D2  5025               	movf	___ftadd@exp2,w,c
  3277  0078D4  1826               	xorwf	___ftadd@exp1,w,c
  3278  0078D6  A4D8               	btfss	status,2,c
  3279  0078D8  D7F7               	goto	l1540
  3280  0078DA                     l385:
  3281  0078DA  AE24               	btfss	___ftadd@sign,7,c
  3282  0078DC  D00C               	goto	l394
  3283  0078DE  0EFF               	movlw	255
  3284  0078E0  1A1B               	xorwf	___ftadd@f1,f,c
  3285  0078E2  0EFF               	movlw	255
  3286  0078E4  1A1C               	xorwf	___ftadd@f1+1,f,c
  3287  0078E6  0EFF               	movlw	255
  3288  0078E8  1A1D               	xorwf	___ftadd@f1+2,f,c
  3289  0078EA  0E01               	movlw	1
  3290  0078EC  261B               	addwf	___ftadd@f1,f,c
  3291  0078EE  0E00               	movlw	0
  3292  0078F0  221C               	addwfc	___ftadd@f1+1,f,c
  3293  0078F2  0E00               	movlw	0
  3294  0078F4  221D               	addwfc	___ftadd@f1+2,f,c
  3295  0078F6                     l394:
  3296  0078F6  AC24               	btfss	___ftadd@sign,6,c
  3297  0078F8  D00C               	goto	l1548
  3298  0078FA  0EFF               	movlw	255
  3299  0078FC  1A1E               	xorwf	___ftadd@f2,f,c
  3300  0078FE  0EFF               	movlw	255
  3301  007900  1A1F               	xorwf	___ftadd@f2+1,f,c
  3302  007902  0EFF               	movlw	255
  3303  007904  1A20               	xorwf	___ftadd@f2+2,f,c
  3304  007906  0E01               	movlw	1
  3305  007908  261E               	addwf	___ftadd@f2,f,c
  3306  00790A  0E00               	movlw	0
  3307  00790C  221F               	addwfc	___ftadd@f2+1,f,c
  3308  00790E  0E00               	movlw	0
  3309  007910  2220               	addwfc	___ftadd@f2+2,f,c
  3310  007912                     l1548:
  3311  007912  0E00               	movlw	0
  3312  007914  6E24               	movwf	___ftadd@sign,c
  3313  007916  501B               	movf	___ftadd@f1,w,c
  3314  007918  261E               	addwf	___ftadd@f2,f,c
  3315  00791A  501C               	movf	___ftadd@f1+1,w,c
  3316  00791C  221F               	addwfc	___ftadd@f2+1,f,c
  3317  00791E  501D               	movf	___ftadd@f1+2,w,c
  3318  007920  2220               	addwfc	___ftadd@f2+2,f,c
  3319  007922  AE20               	btfss	___ftadd@f2+2,7,c
  3320  007924  D00E               	goto	l1558
  3321  007926  0EFF               	movlw	255
  3322  007928  1A1E               	xorwf	___ftadd@f2,f,c
  3323  00792A  0EFF               	movlw	255
  3324  00792C  1A1F               	xorwf	___ftadd@f2+1,f,c
  3325  00792E  0EFF               	movlw	255
  3326  007930  1A20               	xorwf	___ftadd@f2+2,f,c
  3327  007932  0E01               	movlw	1
  3328  007934  261E               	addwf	___ftadd@f2,f,c
  3329  007936  0E00               	movlw	0
  3330  007938  221F               	addwfc	___ftadd@f2+1,f,c
  3331  00793A  0E00               	movlw	0
  3332  00793C  2220               	addwfc	___ftadd@f2+2,f,c
  3333  00793E  0E01               	movlw	1
  3334  007940  6E24               	movwf	___ftadd@sign,c
  3335  007942                     l1558:
  3336  007942  C01E  F001         	movff	___ftadd@f2,___ftpack@arg
  3337  007946  C01F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3338  00794A  C020  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3339  00794E  C026  F004         	movff	___ftadd@exp1,___ftpack@exp
  3340  007952  C024  F005         	movff	___ftadd@sign,___ftpack@sign
  3341  007956  EC0E  F038         	call	___ftpack	;wreg free
  3342  00795A  C001  F01B         	movff	?___ftpack,?___ftadd
  3343  00795E  C002  F01C         	movff	?___ftpack+1,?___ftadd+1
  3344  007962  C003  F01D         	movff	?___ftpack+2,?___ftadd+2
  3345  007966  0012               	return	
  3346  007968                     __end_of___ftadd:
  3347                           	opt stack 0
  3348                           tblptru	equ	0xFF8
  3349                           tblptrh	equ	0xFF7
  3350                           tblptrl	equ	0xFF6
  3351                           tablat	equ	0xFF5
  3352                           postinc0	equ	0xFEE
  3353                           wreg	equ	0xFE8
  3354                           postinc1	equ	0xFE6
  3355                           fsr1h	equ	0xFE2
  3356                           fsr1l	equ	0xFE1
  3357                           indf2	equ	0xFDF
  3358                           postinc2	equ	0xFDE
  3359                           postdec2	equ	0xFDD
  3360                           fsr2h	equ	0xFDA
  3361                           fsr2l	equ	0xFD9
  3362                           status	equ	0xFD8
  3363                           
  3364 ;; *************** function ___ftpack *****************
  3365 ;; Defined at:
  3366 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  arg             3    0[COMRAM] unsigned um
  3369 ;;  exp             1    3[COMRAM] unsigned char 
  3370 ;;  sign            1    4[COMRAM] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  3    0[COMRAM] float 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3382 ;;      Params:         5       0       0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3384 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3385 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3386 ;;Total ram usage:        8 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		___awtoft
  3392 ;;		___ftadd
  3393 ;;		___ftdiv
  3394 ;;		___ftmul
  3395 ;;		___lbtoft
  3396 ;;		___lltoft
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text17
  3401  00701C                     __ptext17:
  3402                           	opt stack 0
  3403  00701C                     ___ftpack:
  3404                           	opt stack 29
  3405                           
  3406                           ;incstack = 0
  3407  00701C  5004               	movf	___ftpack@exp,w,c
  3408  00701E  B4D8               	btfsc	status,2,c
  3409  007020  D005               	goto	l1270
  3410  007022  5001               	movf	___ftpack@arg,w,c
  3411  007024  1002               	iorwf	___ftpack@arg+1,w,c
  3412  007026  1003               	iorwf	___ftpack@arg+2,w,c
  3413  007028  A4D8               	btfss	status,2,c
  3414  00702A  D00C               	goto	l1276
  3415  00702C                     l1270:
  3416  00702C  0E00               	movlw	0
  3417  00702E  6E01               	movwf	?___ftpack,c
  3418  007030  0E00               	movlw	0
  3419  007032  6E02               	movwf	?___ftpack+1,c
  3420  007034  0E00               	movlw	0
  3421  007036  6E03               	movwf	?___ftpack+2,c
  3422  007038  0012               	return	
  3423  00703A                     l1274:
  3424  00703A  2A04               	incf	___ftpack@exp,f,c
  3425  00703C  90D8               	bcf	status,0,c
  3426  00703E  3203               	rrcf	___ftpack@arg+2,f,c
  3427  007040  3202               	rrcf	___ftpack@arg+1,f,c
  3428  007042  3201               	rrcf	___ftpack@arg,f,c
  3429  007044                     l1276:
  3430  007044  0E00               	movlw	0
  3431  007046  1401               	andwf	___ftpack@arg,w,c
  3432  007048  6E06               	movwf	??___ftpack& (0+255),c
  3433  00704A  0E00               	movlw	0
  3434  00704C  1402               	andwf	___ftpack@arg+1,w,c
  3435  00704E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3436  007050  0EFE               	movlw	254
  3437  007052  1403               	andwf	___ftpack@arg+2,w,c
  3438  007054  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3439  007056  5006               	movf	??___ftpack,w,c
  3440  007058  1007               	iorwf	??___ftpack+1,w,c
  3441  00705A  1008               	iorwf	??___ftpack+2,w,c
  3442  00705C  B4D8               	btfsc	status,2,c
  3443  00705E  D00C               	goto	l1282
  3444  007060  D7EC               	goto	l1274
  3445  007062                     l1278:
  3446  007062  2A04               	incf	___ftpack@exp,f,c
  3447  007064  0E01               	movlw	1
  3448  007066  2601               	addwf	___ftpack@arg,f,c
  3449  007068  0E00               	movlw	0
  3450  00706A  2202               	addwfc	___ftpack@arg+1,f,c
  3451  00706C  0E00               	movlw	0
  3452  00706E  2203               	addwfc	___ftpack@arg+2,f,c
  3453  007070  90D8               	bcf	status,0,c
  3454  007072  3203               	rrcf	___ftpack@arg+2,f,c
  3455  007074  3202               	rrcf	___ftpack@arg+1,f,c
  3456  007076  3201               	rrcf	___ftpack@arg,f,c
  3457  007078                     l1282:
  3458  007078  0E00               	movlw	0
  3459  00707A  1401               	andwf	___ftpack@arg,w,c
  3460  00707C  6E06               	movwf	??___ftpack& (0+255),c
  3461  00707E  0E00               	movlw	0
  3462  007080  1402               	andwf	___ftpack@arg+1,w,c
  3463  007082  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3464  007084  0EFF               	movlw	255
  3465  007086  1403               	andwf	___ftpack@arg+2,w,c
  3466  007088  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3467  00708A  5006               	movf	??___ftpack,w,c
  3468  00708C  1007               	iorwf	??___ftpack+1,w,c
  3469  00708E  1008               	iorwf	??___ftpack+2,w,c
  3470  007090  B4D8               	btfsc	status,2,c
  3471  007092  D006               	goto	l1286
  3472  007094  D7E6               	goto	l1278
  3473  007096                     l1284:
  3474  007096  0604               	decf	___ftpack@exp,f,c
  3475  007098  90D8               	bcf	status,0,c
  3476  00709A  3601               	rlcf	___ftpack@arg,f,c
  3477  00709C  3602               	rlcf	___ftpack@arg+1,f,c
  3478  00709E  3603               	rlcf	___ftpack@arg+2,f,c
  3479  0070A0                     l1286:
  3480  0070A0  BE02               	btfsc	___ftpack@arg+1,7,c
  3481  0070A2  D003               	goto	l347
  3482  0070A4  0E02               	movlw	2
  3483  0070A6  6004               	cpfslt	___ftpack@exp,c
  3484  0070A8  D7F6               	goto	l1284
  3485  0070AA                     l347:
  3486  0070AA  A004               	btfss	___ftpack@exp,0,c
  3487  0070AC  9E02               	bcf	___ftpack@arg+1,7,c
  3488  0070AE  90D8               	bcf	status,0,c
  3489  0070B0  3204               	rrcf	___ftpack@exp,f,c
  3490  0070B2  5004               	movf	___ftpack@exp,w,c
  3491  0070B4  1203               	iorwf	___ftpack@arg+2,f,c
  3492  0070B6  5005               	movf	___ftpack@sign,w,c
  3493  0070B8  A4D8               	btfss	status,2,c
  3494  0070BA  8E03               	bsf	___ftpack@arg+2,7,c
  3495  0070BC  C001  F001         	movff	___ftpack@arg,?___ftpack
  3496  0070C0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3497  0070C4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3498  0070C8  0012               	return	
  3499  0070CA                     __end_of___ftpack:
  3500                           	opt stack 0
  3501  0000                     tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           postinc0	equ	0xFEE
  3506                           wreg	equ	0xFE8
  3507                           postinc1	equ	0xFE6
  3508                           fsr1h	equ	0xFE2
  3509                           fsr1l	equ	0xFE1
  3510                           indf2	equ	0xFDF
  3511                           postinc2	equ	0xFDE
  3512                           postdec2	equ	0xFDD
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           postinc0	equ	0xFEE
  3521                           wreg	equ	0xFE8
  3522                           postinc1	equ	0xFE6
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           postdec2	equ	0xFDD
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532                           	psect	rparam
  3533  0000                     tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           postinc0	equ	0xFEE
  3538                           wreg	equ	0xFE8
  3539                           postinc1	equ	0xFE6
  3540                           fsr1h	equ	0xFE2
  3541                           fsr1l	equ	0xFE1
  3542                           indf2	equ	0xFDF
  3543                           postinc2	equ	0xFDE
  3544                           postdec2	equ	0xFDD
  3545                           fsr2h	equ	0xFDA
  3546                           fsr2l	equ	0xFD9
  3547                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      63
    BANK0           160     45      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftdiv
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___ftge
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___ftneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0   32967
                                              0 BANK0     45    45      0
                        _PID_Compute
                        _PID_SetMode
                           _PID_init
                           ___awtoft
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2787
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   14801
                                             47 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11204
                                             32 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3504
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2002
                                              9 COMRAM     8     0      8
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3     907
                                             26 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    1893
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1608
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   10332
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     513
                                             23 COMRAM     3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1268
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4126
                                             26 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___ftge
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      41       5       40.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3B      3F       1       66.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      20        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jun 12 17:48:16 2017

                                  _A 0096                                    _B 0093  
                                  _C 0090                                    _D 008D  
                    PID_SetMode@Mode 000E                                   l70 7FCE  
             __end_of_PID_Initialize 7570                          __CFG_BORV$3 000000  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                       ___ftadd@exp1 0026                         ___ftadd@exp2 0025  
              ??_PID_SetOutputLimits 0012                         ___ftadd@sign 0024  
                                l405 7252                                  l370 7800  
                                l347 70AA                                  l427 6E58  
                                l374 782A                                  l385 78DA  
                                l394 78F6                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  u911 7294  
                                u931 72BC                                  u861 71AE  
                                u881 71D6                         __CFG_BOR$OFF 000000  
                  PID_Compute@dInput 0029                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                         ___ftdiv@cntr 001B  
                       ___ftdiv@sign 0020                         __CFG_WDT$OFF 000000  
                               l1400 6FBC                                 l1410 7018  
                               l1314 71EE                                 l1500 780E  
                               l1404 6FEC                                 l1308 71C6  
                               l1420 6F36                                 l1270 702C  
                               l1334 722C                                 l1422 6F42  
                               l1360 72D4                                 l1282 7078  
                               l1274 703A                                 l1530 7894  
                               l1522 7868                                 l1506 7838  
                               l1354 72AC                                 l1442 7A64  
                               l1284 7096                                 l1276 7044  
                               l1540 78C8                                 l1532 789E  
                               l1286 70A0                                 l1278 7062  
                               l1542 78D2                                 l1534 78A6  
                               l1374 7306                                 l1446 7AC2  
                               l1438 7A08                                 l1622 6ECC  
                               l1528 788A                                 l1384 732E  
                               l1608 7F8A                                 l1456 718C  
                               l1632 73A4                                 l1378 7316  
                               l1650 740A                                 l1548 7912  
                               l1388 733E                                 l1660 7432  
                               l1558 7942                                 l1662 743E  
                               l1654 741A                                 l1488 7512  
                               l1664 7444                                 l1594 7DFC  
                               l1578 6F1E                                 l1668 745A  
                               l1692 7690                                 l1598 7E58  
                               u1161 77CC                                 u1171 77E0  
                               u1370 6EFA                                 u1380 6EFC  
                               u1461 7388                                 u1480 73C2  
                               u1485 73BA                                 u1557 7698  
                               u1567 76BA                                 u1577 76DC  
                               u1587 76FE                    PID_Compute@output 0035  
                               _main 767A                         ___ftpack@arg 0001  
                       ___ftpack@exp 0004                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             PID_SetOutputLimits@Max 000F               PID_SetOutputLimits@Min 000C  
             PID_SetOutputLimits@pid 000A               __end_of_PID_SetTunings 7CE8  
                               start 0000                        __CFG_IESO$OFF 000000  
                       ___ftmul@cntr 0016                         ___param_bank 000000  
                       ___ftmul@sign 0017                         ___fttol@exp1 000F  
                       ___fttol@lval 000B                        __CFG_PLLDIV$5 000000  
                    ?_PID_Initialize 000A                                ?_main 0001  
                    __end_of___ftadd 7968                      __end_of___ftdiv 7284  
                    __end_of___ftneg 6E66                      __end_of___ftmul 7378  
                    __end_of___fttol 746C                                _PORTB 000F81  
                              _PORTD 000F83                        __CFG_USBDIV$1 000000  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                       ___lltoft@exp 0011                     __end_of_PID_init 767A  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                              _Input 0099                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                      ___awtoft@sign 000C                   PID_SetMode@newAuto 0010  
                      ___ftpack@sign 0005                                tablat 000FF5  
                              status 000FD8                       __CFG_ICPRT$OFF 000000  
                    ?_PID_SetTunings 0021                         ?_PID_Compute 0027  
                     __CFG_MCLRE$OFF 000000                      __initialization 6E8A  
                       __end_of_main 77BC                         ?_PID_SetMode 000C  
                             ??_main 003C                        ___fttol@sign1 000A  
                      __activetblptr 000000                     PID_SetTunings@Kd 0029  
                   PID_SetTunings@Ki 0026                     PID_SetTunings@Kp 0023  
                    __CFG_CCP2MX$OFF 000000                     __end_of___awtoft 6EF0  
                   __end_of___ftpack 70CA                     __end_of___lbtoft 6E8A  
                   __end_of___lltoft 6F8C                               _TMR1CS 007E69  
                             _TMR3CS 007D89                       __CFG_XINST$OFF 000000  
                             _Output 009C                               ___ftge 6F8C  
                          ??___ftadd 0021                            ??___ftdiv 0018  
                          ??___ftneg 001B                            ??___ftmul 000F  
                          ??___fttol 0005                               clear_0 6EA8  
              ___ftmul@f3_as_product 0013                         __pdataCOMRAM 003E  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           __accesstop 0060  
            __end_of__initialization 6EB2                      __CFG_PBADEN$OFF 000000  
                         ___ftadd@f1 001B                           ___ftadd@f2 001E  
                         ___ftge@ff1 0001                           ___ftge@ff2 0004  
                      ___rparam_used 000001                           ___ftdiv@f1 0012  
                         ___ftdiv@f2 0015                           ___ftdiv@f3 001C  
                         ___ftneg@f1 0018                           ___awtoft@c 0009  
                         ___lbtoft@c 000C                           ___ftmul@f1 0009  
                         ___ftmul@f2 000C                           ___fttol@f1 0001  
                     __pcstackCOMRAM 0001                            ?_PID_init 0030  
                         ___lltoft@c 0009                           __pbssBANK0 008D  
                  PID_SetTunings@pid 0021                     ??_PID_Initialize 000C  
                            ?___ftge 0001                           ??_PID_init 003C  
        __end_of_PID_SetOutputLimits 7B20                 __size_of_PID_Compute 0318  
               __size_of_PID_SetMode 0040                            ?___awtoft 0009  
                          ?___ftpack 0001                            ?___lbtoft 0009  
                          ?___lltoft 0009                          PID_init@pid 0030  
                   ??_PID_SetTunings 002C                       PID_Compute@pid 0027  
                    __CFG_VREGEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000         ??_PID_SetControllerDirection 001E  
PID_SetControllerDirection@Direction 001D                      __size_of___ftge 0090  
                            ___ftadd 77BC                              ___ftdiv 719E  
                            ___ftneg 6E42                              ___ftmul 7284  
                            ___fttol 7378                      __CFG_STVREN$OFF 000000  
                            __pcinit 6E8A                           ??___awtoft 000C  
                         ??___ftpack 0006                           ??___lbtoft 000C  
                            __ramtop 0800                           ??___lltoft 000D  
                            __ptext0 767A                              __ptext1 6E66  
                            __ptext2 7378                              __ptext3 6EB8  
                            __ptext4 7570                              __ptext5 7B20  
                            __ptext6 6F30                              __ptext7 719E  
                            __ptext8 7968                              __ptext9 70CA  
        PID_init@ControllerDirection 003B                              main@PID 0060  
               end_of_initialization 6EB2  __size_of_PID_SetControllerDirection 00D4  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                          _PORTCbits 000F82                       PID_SetMode@pid 000C  
                   PID_Compute@error 002F                     PID_Compute@input 0032  
                        ___ftdiv@exp 001F                          ___ftmul@exp 0012  
                     __end_of___ftge 701C                    __size_of_PID_init 010A  
                      __pidataCOMRAM 6E40                  start_initialization 6E8A  
                  PID_Initialize@pid 000A   __end_of_PID_SetControllerDirection 719E  
         _PID_SetControllerDirection 70CA                             ??___ftge 0007  
                   __CFG_LPT1OSC$OFF 000000                    __size_of___awtoft 0038  
                  __size_of___ftpack 00AE                    __size_of___lbtoft 0024  
                  __size_of___lltoft 005C                          __pbssCOMRAM 003C  
                      __pcstackBANK0 0060                     _PID_Compute$1034 002C  
                      ??_PID_Compute 0029                        ??_PID_SetMode 000F  
                           ?___ftadd 001B                             ?___ftdiv 0012  
                           ?___ftneg 0018                             ?___ftmul 0009  
                           ?___fttol 0001                           PID_init@Kd 0038  
                         PID_init@Ki 0035                           PID_init@Kp 0032  
       __size_of_PID_SetOutputLimits 01B8                     __CFG_WDTPS$32768 000000  
                           _PID_init 7570                  __end_of_PID_Compute 8000  
                __end_of_PID_SetMode 6F30              __size_of_PID_Initialize 0104  
                           __Hrparam 0000                             __Lrparam 0000  
            __size_of_PID_SetTunings 01C8                             _Setpoint 009F  
                   __size_of___ftadd 01AC                     __size_of___ftdiv 00E6  
                   __size_of___ftneg 0024                     __size_of___ftmul 00F4  
                   __size_of___fttol 00F4                             ___awtoft 6EB8  
                           ___ftpack 701C                             ___lbtoft 6E66  
                           ___lltoft 6F30                             __ptext10 6EF0  
                           __ptext11 746C                             __ptext12 7CE8  
                           __ptext13 6E42                             __ptext14 7284  
                           __ptext15 6F8C                             __ptext16 77BC  
                           __ptext17 701C                        __size_of_main 0142  
                        _PID_Compute 7CE8          ?_PID_SetControllerDirection 001B  
                        _PID_SetMode 6EF0                          _PID_Out_Max 003E  
                        _PID_Out_Min 003C                __CFG_CPUDIV$OSC2_PLL3 000000  
      PID_SetControllerDirection@pid 001B                  _PID_SetOutputLimits 7968  
                     _PID_Initialize 746C                 ?_PID_SetOutputLimits 000A  
                 __CFG_FOSC$HSPLL_HS 000000        PID_SetTunings@SampleTimeInSec 002D  
                     _PID_SetTunings 7B20  
