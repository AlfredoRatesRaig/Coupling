

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 15 11:55:28 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataBANK0
    69  006A00                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _PID_Out_Max
    73  006A00  2710               	dw	10000
    74                           
    75                           ;initializer for _PID_Out_Min
    76  006A02  D8F0               	dw	55536
    77  0000                     _PORTD	set	3971
    78  0000                     _PORTB	set	3969
    79  0000                     _PORTCbits	set	3970
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISD	set	3989
    82  0000                     _TRISB	set	3987
    83  0000                     _TMR3CS	set	32137
    84  0000                     _TMR1CS	set	32361
    85                           
    86                           ; #config settings
    87  0000                     
    88                           	psect	cinit
    89  006A4C                     __pcinit:
    90                           	opt stack 0
    91  006A4C                     start_initialization:
    92                           	opt stack 0
    93  006A4C                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Initialize objects allocated to BANK0 (4 bytes)
    97                           ; load TBLPTR registers with __pidataBANK0
    98  006A4C  0E00               	movlw	low __pidataBANK0
    99  006A4E  6EF6               	movwf	tblptrl,c
   100  006A50  0E6A               	movlw	high __pidataBANK0
   101  006A52  6EF7               	movwf	tblptrh,c
   102  006A54  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   103  006A56  6EF8               	movwf	tblptru,c
   104  006A58  EE00  F0A5         	lfsr	0,__pdataBANK0
   105  006A5C  EE10 F004          	lfsr	1,4
   106  006A60                     copy_data0:
   107  006A60  0009               	tblrd		*+
   108  006A62  CFF5 FFEE          	movff	tablat,postinc0
   109  006A66  50E5               	movf	postdec1,w,c
   110  006A68  50E1               	movf	fsr1l,w,c
   111  006A6A  E1FA               	bnz	copy_data0
   112                           
   113                           ; Clear objects allocated to BANK0 (21 bytes)
   114  006A6C  EE00  F090         	lfsr	0,__pbssBANK0
   115  006A70  0E15               	movlw	21
   116  006A72                     clear_0:
   117  006A72  6AEE               	clrf	postinc0,c
   118  006A74  06E8               	decf	wreg,f,c
   119  006A76  E1FD               	bnz	clear_0
   120                           
   121                           ; Clear objects allocated to COMRAM (2 bytes)
   122  006A78  6A45               	clrf	(__pbssCOMRAM+1)& (0+255),c
   123  006A7A  6A44               	clrf	__pbssCOMRAM& (0+255),c
   124  006A7C                     end_of_initialization:
   125                           	opt stack 0
   126  006A7C                     __end_of__initialization:
   127                           	opt stack 0
   128  006A7C  0100               	movlb	0
   129  006A7E  EFB8  F03B         	goto	_main	;jump to C main() function
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           wreg	equ	0xFE8
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	bssCOMRAM
   140  000044                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000044                     _sign:
   143                           	opt stack 0
   144  000044                     	ds	2
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	bssBANK0
   155  000090                     __pbssBANK0:
   156                           	opt stack 0
   157  000090                     _D:
   158                           	opt stack 0
   159  000090                     	ds	3
   160  000093                     _C:
   161                           	opt stack 0
   162  000093                     	ds	3
   163  000096                     _B:
   164                           	opt stack 0
   165  000096                     	ds	3
   166  000099                     _A:
   167                           	opt stack 0
   168  000099                     	ds	3
   169  00009C                     _Input:
   170                           	opt stack 0
   171  00009C                     	ds	3
   172  00009F                     _Output:
   173                           	opt stack 0
   174  00009F                     	ds	3
   175  0000A2                     _Setpoint:
   176                           	opt stack 0
   177  0000A2                     	ds	2
   178  0000A4                     _output:
   179                           	opt stack 0
   180  0000A4                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           postdec1	equ	0xFE5
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	dataBANK0
   191  0000A5                     __pdataBANK0:
   192                           	opt stack 0
   193  0000A5                     _PID_Out_Max:
   194                           	opt stack 0
   195  0000A5                     	ds	2
   196  0000A7                     _PID_Out_Min:
   197                           	opt stack 0
   198  0000A7                     	ds	2
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	cstackBANK0
   209  000060                     __pcstackBANK0:
   210                           	opt stack 0
   211  000060                     _main$1037:
   212                           	opt stack 0
   213                           
   214                           ; 3 bytes @ 0x0
   215  000060                     	ds	3
   216  000063                     main@PID:
   217                           	opt stack 0
   218                           
   219                           ; 45 bytes @ 0x3
   220  000063                     	ds	45
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	cstackCOMRAM
   231  000001                     __pcstackCOMRAM:
   232                           	opt stack 0
   233  000001                     ?___ftpack:
   234                           	opt stack 0
   235  000001                     ?___fttol:
   236                           	opt stack 0
   237  000001                     ___ftpack@arg:
   238                           	opt stack 0
   239  000001                     ___ftge@ff1:
   240                           	opt stack 0
   241  000001                     ___fttol@f1:
   242                           	opt stack 0
   243                           
   244                           ; 3 bytes @ 0x0
   245  000001                     	ds	3
   246  000004                     ___ftpack@exp:
   247                           	opt stack 0
   248  000004                     ___ftge@ff2:
   249                           	opt stack 0
   250                           
   251                           ; 3 bytes @ 0x3
   252  000004                     	ds	1
   253  000005                     ??___fttol:
   254  000005                     ___ftpack@sign:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x4
   258  000005                     	ds	1
   259  000006                     ??___ftpack:
   260                           
   261                           ; 1 bytes @ 0x5
   262  000006                     	ds	1
   263  000007                     ??___ftge:
   264                           
   265                           ; 1 bytes @ 0x6
   266  000007                     	ds	2
   267  000009                     ?___ftmul:
   268                           	opt stack 0
   269  000009                     ?___awtoft:
   270                           	opt stack 0
   271  000009                     ?___lbtoft:
   272                           	opt stack 0
   273  000009                     ?___lltoft:
   274                           	opt stack 0
   275  000009                     ___awtoft@c:
   276                           	opt stack 0
   277  000009                     ___ftmul@f1:
   278                           	opt stack 0
   279  000009                     ___lltoft@c:
   280                           	opt stack 0
   281                           
   282                           ; 4 bytes @ 0x8
   283  000009                     	ds	1
   284  00000A                     ___fttol@sign1:
   285                           	opt stack 0
   286  00000A                     PID_Initialize@pid:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x9
   290  00000A                     	ds	1
   291  00000B                     ___fttol@lval:
   292                           	opt stack 0
   293                           
   294                           ; 4 bytes @ 0xA
   295  00000B                     	ds	1
   296  00000C                     ___awtoft@sign:
   297                           	opt stack 0
   298  00000C                     ___lbtoft@c:
   299                           	opt stack 0
   300  00000C                     PID_SetMode@pid:
   301                           	opt stack 0
   302  00000C                     ___ftmul@f2:
   303                           	opt stack 0
   304                           
   305                           ; 3 bytes @ 0xB
   306  00000C                     	ds	1
   307  00000D                     ??___lltoft:
   308  00000D                     PID_SetOutputLimits@pid:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0xC
   312  00000D                     	ds	1
   313  00000E                     PID_SetMode@Mode:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0xD
   317  00000E                     	ds	1
   318  00000F                     ??___ftmul:
   319  00000F                     ___fttol@exp1:
   320                           	opt stack 0
   321  00000F                     PID_SetOutputLimits@Min:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0xE
   325  00000F                     	ds	1
   326  000010                     PID_SetMode@newAuto:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0xF
   330  000010                     	ds	1
   331  000011                     ___lltoft@exp:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x10
   335  000011                     	ds	1
   336  000012                     ?___ftdiv:
   337                           	opt stack 0
   338  000012                     ___ftmul@exp:
   339                           	opt stack 0
   340  000012                     PID_SetOutputLimits@Max:
   341                           	opt stack 0
   342  000012                     ___ftdiv@f1:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0x11
   346  000012                     	ds	1
   347  000013                     ___ftmul@f3_as_product:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x12
   351  000013                     	ds	2
   352  000015                     ___ftdiv@f2:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x14
   356  000015                     	ds	1
   357  000016                     ___ftmul@cntr:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x15
   361  000016                     	ds	1
   362  000017                     ___ftmul@sign:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x16
   366  000017                     	ds	1
   367  000018                     ??___ftdiv:
   368  000018                     ?___ftadd:
   369                           	opt stack 0
   370  000018                     ___ftadd@f1:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x17
   374  000018                     	ds	3
   375  00001B                     ___ftdiv@cntr:
   376                           	opt stack 0
   377  00001B                     ___ftadd@f2:
   378                           	opt stack 0
   379                           
   380                           ; 3 bytes @ 0x1A
   381  00001B                     	ds	1
   382  00001C                     ___ftdiv@f3:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x1B
   386  00001C                     	ds	2
   387  00001E                     ??___ftadd:
   388                           
   389                           ; 1 bytes @ 0x1D
   390  00001E                     	ds	1
   391  00001F                     ___ftdiv@exp:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x1E
   395  00001F                     	ds	1
   396  000020                     ___ftdiv@sign:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x1F
   400  000020                     	ds	1
   401  000021                     ___ftadd@sign:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x20
   405  000021                     	ds	1
   406  000022                     ___ftadd@exp2:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x21
   410  000022                     	ds	1
   411  000023                     ___ftadd@exp1:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x22
   415  000023                     	ds	1
   416  000024                     ?___ftneg:
   417                           	opt stack 0
   418  000024                     ___ftneg@f1:
   419                           	opt stack 0
   420                           
   421                           ; 3 bytes @ 0x23
   422  000024                     	ds	3
   423  000027                     PID_Compute@pid:
   424                           	opt stack 0
   425  000027                     PID_SetTunings@pid:
   426                           	opt stack 0
   427  000027                     PID_SetControllerDirection@pid:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x26
   431  000027                     	ds	2
   432  000029                     PID_SetControllerDirection@Direction:
   433                           	opt stack 0
   434  000029                     PID_Compute@dInput:
   435                           	opt stack 0
   436  000029                     PID_SetTunings@Kp:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x28
   440  000029                     	ds	1
   441  00002A                     
   442                           ; 1 bytes @ 0x29
   443  00002A                     	ds	2
   444  00002C                     PID_SetTunings@Ki:
   445                           	opt stack 0
   446  00002C                     _PID_Compute$1038:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0x2B
   450  00002C                     	ds	3
   451  00002F                     PID_Compute@error:
   452                           	opt stack 0
   453  00002F                     PID_SetTunings@Kd:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x2E
   457  00002F                     	ds	3
   458  000032                     PID_Compute@input:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x31
   462  000032                     	ds	1
   463  000033                     PID_SetTunings@SampleTimeInSec:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x32
   467  000033                     	ds	2
   468  000035                     PID_Compute@output:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x34
   472  000035                     	ds	1
   473  000036                     PID_init@pid:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x35
   477  000036                     	ds	2
   478  000038                     PID_init@Kp:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x37
   482  000038                     	ds	3
   483  00003B                     PID_init@Ki:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x3A
   487  00003B                     	ds	3
   488  00003E                     PID_init@Kd:
   489                           	opt stack 0
   490                           
   491                           ; 3 bytes @ 0x3D
   492  00003E                     	ds	3
   493  000041                     PID_init@ControllerDirection:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x40
   497  000041                     	ds	1
   498  000042                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x41
   501  000042                     	ds	2
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 52 in file "newmain.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  PID            45    3[BANK0 ] struct .
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   530 ;;      Params:         0       0       0       0       0       0       0       0       0
   531 ;;      Locals:         0      48       0       0       0       0       0       0       0
   532 ;;      Temps:          2       0       0       0       0       0       0       0       0
   533 ;;      Totals:         2      48       0       0       0       0       0       0       0
   534 ;;Total ram usage:       50 bytes
   535 ;; Hardware stack levels required when called:    4
   536 ;; This function calls:
   537 ;;		_PID_Compute
   538 ;;		_PID_SetMode
   539 ;;		_PID_SetOutputLimits
   540 ;;		_PID_init
   541 ;;		___awtoft
   542 ;;		___ftadd
   543 ;;		___ftge
   544 ;;		___ftneg
   545 ;;		___fttol
   546 ;;		___lbtoft
   547 ;; This function is called by:
   548 ;;		Startup code after reset
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text0
   553  007770                     __ptext0:
   554                           	opt stack 0
   555  007770                     _main:
   556                           	opt stack 27
   557                           
   558                           ;newmain.c: 53: TRISB = 0xFF;
   559                           
   560                           ;incstack = 0
   561  007770  6893               	setf	3987,c	;volatile
   562                           
   563                           ;newmain.c: 54: TRISD = 0x00;
   564  007772  0E00               	movlw	0
   565  007774  6E95               	movwf	3989,c	;volatile
   566                           
   567                           ;newmain.c: 55: TRISC = 0b01000000;
   568  007776  0E40               	movlw	64
   569  007778  6E94               	movwf	3988,c	;volatile
   570                           
   571                           ;newmain.c: 56: TMR1CS = 0;
   572  00777A  92CD               	bcf	4045,1,c	;volatile
   573                           
   574                           ;newmain.c: 57: TMR3CS = 0;
   575  00777C  92B1               	bcf	4017,1,c	;volatile
   576                           
   577                           ;newmain.c: 58: PORTCbits.RC0 = 0;
   578  00777E  9082               	bcf	3970,0,c	;volatile
   579                           
   580                           ;newmain.c: 59: PORTCbits.RC1 = 0;
   581  007780  9282               	bcf	3970,1,c	;volatile
   582                           
   583                           ;newmain.c: 60: PORTCbits.RC2 = 1;
   584  007782  8482               	bsf	3970,2,c	;volatile
   585                           
   586                           ;newmain.c: 61: PORTCbits.RC7 = 0;
   587  007784  9E82               	bcf	3970,7,c	;volatile
   588  007786                     l1718:
   589                           
   590                           ;newmain.c: 63: PORTCbits.RC0 = 0;
   591  007786  9082               	bcf	3970,0,c	;volatile
   592                           
   593                           ;newmain.c: 64: PORTCbits.RC1 = 0;
   594  007788  9282               	bcf	3970,1,c	;volatile
   595                           
   596                           ;newmain.c: 66: PORTCbits.RC2 = 1;
   597  00778A  8482               	bsf	3970,2,c	;volatile
   598                           
   599                           ;newmain.c: 67: _delay((unsigned long)((25)*(32000000/4000000.0)));
   600  00778C  0E42               	movlw	66
   601  00778E                     u1577:
   602  00778E  2EE8               	decfsz	wreg,f,c
   603  007790  D7FE               	bra	u1577
   604  007792  D000               	nop2	
   605                           
   606                           ;newmain.c: 68: PORTCbits.RC2 = 0;
   607  007794  9482               	bcf	3970,2,c	;volatile
   608                           
   609                           ;newmain.c: 69: A = PORTB;
   610  007796  5081               	movf	3969,w,c	;volatile
   611  007798  EC14  F035         	call	___lbtoft
   612  00779C  C009  F099         	movff	?___lbtoft,_A
   613  0077A0  C00A  F09A         	movff	?___lbtoft+1,_A+1
   614  0077A4  C00B  F09B         	movff	?___lbtoft+2,_A+2
   615                           
   616                           ;newmain.c: 71: _delay((unsigned long)((40)*(32000000/4000.0)));
   617  0077A8  0E02               	movlw	2
   618  0077AA  6E43               	movwf	(??_main+1)& (0+255),c
   619  0077AC  0EA0               	movlw	160
   620  0077AE  6E42               	movwf	??_main& (0+255),c
   621  0077B0  0E92               	movlw	146
   622  0077B2                     u1587:
   623  0077B2  2EE8               	decfsz	wreg,f,c
   624  0077B4  D7FE               	bra	u1587
   625  0077B6  2E42               	decfsz	??_main& (0+255),f,c
   626  0077B8  D7FC               	bra	u1587
   627  0077BA  2E43               	decfsz	(??_main+1)& (0+255),f,c
   628  0077BC  D7FA               	bra	u1587
   629  0077BE  D000               	nop2	
   630                           
   631                           ;newmain.c: 73: PORTCbits.RC0 = 1;
   632  0077C0  8082               	bsf	3970,0,c	;volatile
   633                           
   634                           ;newmain.c: 74: PORTCbits.RC1 = 0;
   635  0077C2  9282               	bcf	3970,1,c	;volatile
   636                           
   637                           ;newmain.c: 76: PORTCbits.RC2 = 1;
   638  0077C4  8482               	bsf	3970,2,c	;volatile
   639                           
   640                           ;newmain.c: 77: _delay((unsigned long)((25)*(32000000/4000000.0)));
   641  0077C6  0E42               	movlw	66
   642  0077C8                     u1597:
   643  0077C8  2EE8               	decfsz	wreg,f,c
   644  0077CA  D7FE               	bra	u1597
   645  0077CC  D000               	nop2	
   646                           
   647                           ;newmain.c: 78: PORTCbits.RC2 = 0;
   648  0077CE  9482               	bcf	3970,2,c	;volatile
   649                           
   650                           ;newmain.c: 79: B = PORTB;
   651  0077D0  5081               	movf	3969,w,c	;volatile
   652  0077D2  EC14  F035         	call	___lbtoft
   653  0077D6  C009  F096         	movff	?___lbtoft,_B
   654  0077DA  C00A  F097         	movff	?___lbtoft+1,_B+1
   655  0077DE  C00B  F098         	movff	?___lbtoft+2,_B+2
   656                           
   657                           ;newmain.c: 81: _delay((unsigned long)((40)*(32000000/4000.0)));
   658  0077E2  0E02               	movlw	2
   659  0077E4  6E43               	movwf	(??_main+1)& (0+255),c
   660  0077E6  0EA0               	movlw	160
   661  0077E8  6E42               	movwf	??_main& (0+255),c
   662  0077EA  0E92               	movlw	146
   663  0077EC                     u1607:
   664  0077EC  2EE8               	decfsz	wreg,f,c
   665  0077EE  D7FE               	bra	u1607
   666  0077F0  2E42               	decfsz	??_main& (0+255),f,c
   667  0077F2  D7FC               	bra	u1607
   668  0077F4  2E43               	decfsz	(??_main+1)& (0+255),f,c
   669  0077F6  D7FA               	bra	u1607
   670  0077F8  D000               	nop2	
   671                           
   672                           ;newmain.c: 83: PORTCbits.RC0 = 0;
   673  0077FA  9082               	bcf	3970,0,c	;volatile
   674                           
   675                           ;newmain.c: 84: PORTCbits.RC1 = 1;
   676  0077FC  8282               	bsf	3970,1,c	;volatile
   677                           
   678                           ;newmain.c: 86: PORTCbits.RC2 = 1;
   679  0077FE  8482               	bsf	3970,2,c	;volatile
   680                           
   681                           ;newmain.c: 87: _delay((unsigned long)((25)*(32000000/4000000.0)));
   682  007800  0E42               	movlw	66
   683  007802                     u1617:
   684  007802  2EE8               	decfsz	wreg,f,c
   685  007804  D7FE               	bra	u1617
   686  007806  D000               	nop2	
   687                           
   688                           ;newmain.c: 88: PORTCbits.RC2 = 0;
   689  007808  9482               	bcf	3970,2,c	;volatile
   690                           
   691                           ;newmain.c: 89: C = PORTB;
   692  00780A  5081               	movf	3969,w,c	;volatile
   693  00780C  EC14  F035         	call	___lbtoft
   694  007810  C009  F093         	movff	?___lbtoft,_C
   695  007814  C00A  F094         	movff	?___lbtoft+1,_C+1
   696  007818  C00B  F095         	movff	?___lbtoft+2,_C+2
   697                           
   698                           ;newmain.c: 91: _delay((unsigned long)((40)*(32000000/4000.0)));
   699  00781C  0E02               	movlw	2
   700  00781E  6E43               	movwf	(??_main+1)& (0+255),c
   701  007820  0EA0               	movlw	160
   702  007822  6E42               	movwf	??_main& (0+255),c
   703  007824  0E92               	movlw	146
   704  007826                     u1627:
   705  007826  2EE8               	decfsz	wreg,f,c
   706  007828  D7FE               	bra	u1627
   707  00782A  2E42               	decfsz	??_main& (0+255),f,c
   708  00782C  D7FC               	bra	u1627
   709  00782E  2E43               	decfsz	(??_main+1)& (0+255),f,c
   710  007830  D7FA               	bra	u1627
   711  007832  D000               	nop2	
   712                           
   713                           ;newmain.c: 93: PORTCbits.RC0 = 1;
   714  007834  8082               	bsf	3970,0,c	;volatile
   715                           
   716                           ;newmain.c: 94: PORTCbits.RC1 = 1;
   717  007836  8282               	bsf	3970,1,c	;volatile
   718                           
   719                           ;newmain.c: 96: PORTCbits.RC2 = 1;
   720  007838  8482               	bsf	3970,2,c	;volatile
   721                           
   722                           ;newmain.c: 97: _delay((unsigned long)((25)*(32000000/4000000.0)));
   723  00783A  0E42               	movlw	66
   724  00783C                     u1637:
   725  00783C  2EE8               	decfsz	wreg,f,c
   726  00783E  D7FE               	bra	u1637
   727  007840  D000               	nop2	
   728                           
   729                           ;newmain.c: 98: PORTCbits.RC2 = 0;
   730  007842  9482               	bcf	3970,2,c	;volatile
   731                           
   732                           ;newmain.c: 99: D = PORTB;
   733  007844  5081               	movf	3969,w,c	;volatile
   734  007846  EC14  F035         	call	___lbtoft
   735  00784A  C009  F090         	movff	?___lbtoft,_D
   736  00784E  C00A  F091         	movff	?___lbtoft+1,_D+1
   737  007852  C00B  F092         	movff	?___lbtoft+2,_D+2
   738                           
   739                           ;newmain.c: 101: _delay((unsigned long)((40)*(32000000/4000.0)));
   740  007856  0E02               	movlw	2
   741  007858  6E43               	movwf	(??_main+1)& (0+255),c
   742  00785A  0EA0               	movlw	160
   743  00785C  6E42               	movwf	??_main& (0+255),c
   744  00785E  0E92               	movlw	146
   745  007860                     u1647:
   746  007860  2EE8               	decfsz	wreg,f,c
   747  007862  D7FE               	bra	u1647
   748  007864  2E42               	decfsz	??_main& (0+255),f,c
   749  007866  D7FC               	bra	u1647
   750  007868  2E43               	decfsz	(??_main+1)& (0+255),f,c
   751  00786A  D7FA               	bra	u1647
   752  00786C  D000               	nop2	
   753                           
   754                           ;newmain.c: 102: Input = A-(C+D);
   755  00786E  C090  F01B         	movff	_D,___ftadd@f2
   756  007872  C091  F01C         	movff	_D+1,___ftadd@f2+1
   757  007876  C092  F01D         	movff	_D+2,___ftadd@f2+2
   758  00787A  C093  F018         	movff	_C,___ftadd@f1
   759  00787E  C094  F019         	movff	_C+1,___ftadd@f1+1
   760  007882  C095  F01A         	movff	_C+2,___ftadd@f1+2
   761  007886  EC22  F039         	call	___ftadd	;wreg free
   762  00788A  C018  F024         	movff	?___ftadd,___ftneg@f1
   763  00788E  C019  F025         	movff	?___ftadd+1,___ftneg@f1+1
   764  007892  C01A  F026         	movff	?___ftadd+2,___ftneg@f1+2
   765  007896  EC02  F035         	call	___ftneg	;wreg free
   766  00789A  C024  F060         	movff	?___ftneg,_main$1037
   767  00789E  C025  F061         	movff	?___ftneg+1,_main$1037+1
   768  0078A2  C026  F062         	movff	?___ftneg+2,_main$1037+2
   769                           
   770                           ;newmain.c: 102: Input = A-(C+D);
   771  0078A6  C060  F018         	movff	_main$1037,___ftadd@f1
   772  0078AA  C061  F019         	movff	_main$1037+1,___ftadd@f1+1
   773  0078AE  C062  F01A         	movff	_main$1037+2,___ftadd@f1+2
   774  0078B2  C099  F01B         	movff	_A,___ftadd@f2
   775  0078B6  C09A  F01C         	movff	_A+1,___ftadd@f2+1
   776  0078BA  C09B  F01D         	movff	_A+2,___ftadd@f2+2
   777  0078BE  EC22  F039         	call	___ftadd	;wreg free
   778  0078C2  C018  F09C         	movff	?___ftadd,_Input
   779  0078C6  C019  F09D         	movff	?___ftadd+1,_Input+1
   780  0078CA  C01A  F09E         	movff	?___ftadd+2,_Input+2
   781                           
   782                           ;newmain.c: 103: PidType PID;
   783                           ;newmain.c: 104: PID_init(&PID, 1, 0, 0, PID_Direction_Reverse);
   784  0078CE  0E63               	movlw	low main@PID
   785  0078D0  6E36               	movwf	PID_init@pid,c
   786  0078D2  0E00               	movlw	high main@PID
   787  0078D4  6E37               	movwf	PID_init@pid+1,c
   788  0078D6  0E00               	movlw	0
   789  0078D8  6E38               	movwf	PID_init@Kp,c
   790  0078DA  0E80               	movlw	128
   791  0078DC  6E39               	movwf	PID_init@Kp+1,c
   792  0078DE  0E3F               	movlw	63
   793  0078E0  6E3A               	movwf	PID_init@Kp+2,c
   794  0078E2  0E00               	movlw	0
   795  0078E4  6E3B               	movwf	PID_init@Ki,c
   796  0078E6  0E00               	movlw	0
   797  0078E8  6E3C               	movwf	PID_init@Ki+1,c
   798  0078EA  0E00               	movlw	0
   799  0078EC  6E3D               	movwf	PID_init@Ki+2,c
   800  0078EE  0E00               	movlw	0
   801  0078F0  6E3E               	movwf	PID_init@Kd,c
   802  0078F2  0E00               	movlw	0
   803  0078F4  6E3F               	movwf	PID_init@Kd+1,c
   804  0078F6  0E00               	movlw	0
   805  0078F8  6E40               	movwf	PID_init@Kd+2,c
   806  0078FA  0E01               	movlw	1
   807  0078FC  6E41               	movwf	PID_init@ControllerDirection,c
   808  0078FE  EC9D  F038         	call	_PID_init	;wreg free
   809                           
   810                           ;newmain.c: 105: PID_SetMode(&PID, PID_Mode_Automatic);
   811  007902  0E63               	movlw	low main@PID
   812  007904  6E0C               	movwf	PID_SetMode@pid,c
   813  007906  0E00               	movlw	high main@PID
   814  007908  6E0D               	movwf	PID_SetMode@pid+1,c
   815  00790A  0E01               	movlw	1
   816  00790C  6E0E               	movwf	PID_SetMode@Mode,c
   817  00790E  EC5D  F035         	call	_PID_SetMode	;wreg free
   818                           
   819                           ;newmain.c: 106: PID_SetOutputLimits(&PID, PID_Out_Min, PID_Out_Max);
   820  007912  0E63               	movlw	low main@PID
   821  007914  6E0D               	movwf	PID_SetOutputLimits@pid,c
   822  007916  0E00               	movlw	high main@PID
   823  007918  6E0E               	movwf	PID_SetOutputLimits@pid+1,c
   824  00791A  C0A7  F009         	movff	_PID_Out_Min,___awtoft@c
   825  00791E  C0A8  F00A         	movff	_PID_Out_Min+1,___awtoft@c+1
   826  007922  EC41  F035         	call	___awtoft	;wreg free
   827  007926  C009  F00F         	movff	?___awtoft,PID_SetOutputLimits@Min
   828  00792A  C00A  F010         	movff	?___awtoft+1,PID_SetOutputLimits@Min+1
   829  00792E  C00B  F011         	movff	?___awtoft+2,PID_SetOutputLimits@Min+2
   830  007932  C0A5  F009         	movff	_PID_Out_Max,___awtoft@c
   831  007936  C0A6  F00A         	movff	_PID_Out_Max+1,___awtoft@c+1
   832  00793A  EC41  F035         	call	___awtoft	;wreg free
   833  00793E  C009  F012         	movff	?___awtoft,PID_SetOutputLimits@Max
   834  007942  C00A  F013         	movff	?___awtoft+1,PID_SetOutputLimits@Max+1
   835  007946  C00B  F014         	movff	?___awtoft+2,PID_SetOutputLimits@Max+2
   836  00794A  ECF8  F039         	call	_PID_SetOutputLimits	;wreg free
   837                           
   838                           ;newmain.c: 107: PID.mySetpoint = Setpoint;
   839  00794E  C0A2  F009         	movff	_Setpoint,___awtoft@c
   840  007952  C0A3  F00A         	movff	_Setpoint+1,___awtoft@c+1
   841  007956  EC41  F035         	call	___awtoft	;wreg free
   842  00795A  C009  F07C         	movff	?___awtoft,main@PID+25
   843  00795E  C00A  F07D         	movff	?___awtoft+1,main@PID+26
   844  007962  C00B  F07E         	movff	?___awtoft+2,main@PID+27
   845                           
   846                           ;newmain.c: 108: PID.myInput = Input;
   847  007966  C09C  F076         	movff	_Input,main@PID+19
   848  00796A  C09D  F077         	movff	_Input+1,main@PID+20
   849  00796E  C09E  F078         	movff	_Input+2,main@PID+21
   850                           
   851                           ;newmain.c: 109: PID_Compute(&PID);
   852  007972  0E63               	movlw	low main@PID
   853  007974  6E27               	movwf	PID_Compute@pid,c
   854  007976  0E00               	movlw	high main@PID
   855  007978  6E28               	movwf	PID_Compute@pid+1,c
   856  00797A  ECF4  F03C         	call	_PID_Compute	;wreg free
   857                           
   858                           ;newmain.c: 110: Output = PID.myOutput;
   859  00797E  C079  F09F         	movff	main@PID+22,_Output
   860  007982  C07A  F0A0         	movff	main@PID+23,_Output+1
   861  007986  C07B  F0A1         	movff	main@PID+24,_Output+2
   862                           
   863                           ;newmain.c: 112: if(Output>0){
   864  00798A  0E00               	movlw	0
   865  00798C  6E01               	movwf	___ftge@ff1,c
   866  00798E  0E00               	movlw	0
   867  007990  6E02               	movwf	___ftge@ff1+1,c
   868  007992  0E00               	movlw	0
   869  007994  6E03               	movwf	___ftge@ff1+2,c
   870  007996  C09F  F004         	movff	_Output,___ftge@ff2
   871  00799A  C0A0  F005         	movff	_Output+1,___ftge@ff2+1
   872  00799E  C0A1  F006         	movff	_Output+2,___ftge@ff2+2
   873  0079A2  ECAB  F035         	call	___ftge	;wreg free
   874  0079A6  B0D8               	btfsc	status,0,c
   875  0079A8  D002               	goto	l1796
   876                           
   877                           ;newmain.c: 114: PORTCbits.RC7 = 0;
   878  0079AA  9E82               	bcf	3970,7,c	;volatile
   879                           
   880                           ;newmain.c: 115: }
   881  0079AC  D00F               	goto	l55
   882  0079AE                     l1796:
   883                           
   884                           ;newmain.c: 116: else{
   885                           ;newmain.c: 117: Output = -Output;
   886  0079AE  C09F  F024         	movff	_Output,___ftneg@f1
   887  0079B2  C0A0  F025         	movff	_Output+1,___ftneg@f1+1
   888  0079B6  C0A1  F026         	movff	_Output+2,___ftneg@f1+2
   889  0079BA  EC02  F035         	call	___ftneg	;wreg free
   890  0079BE  C024  F09F         	movff	?___ftneg,_Output
   891  0079C2  C025  F0A0         	movff	?___ftneg+1,_Output+1
   892  0079C6  C026  F0A1         	movff	?___ftneg+2,_Output+2
   893                           
   894                           ;newmain.c: 118: PORTCbits.RC7 = 1;
   895  0079CA  8E82               	bsf	3970,7,c	;volatile
   896  0079CC                     l55:
   897                           
   898                           ;newmain.c: 119: }
   899                           ;newmain.c: 120: output = Output;
   900  0079CC  C09F  F001         	movff	_Output,___fttol@f1
   901  0079D0  C0A0  F002         	movff	_Output+1,___fttol@f1+1
   902  0079D4  C0A1  F003         	movff	_Output+2,___fttol@f1+2
   903  0079D8  ECA1  F037         	call	___fttol	;wreg free
   904  0079DC  5001               	movf	?___fttol,w,c
   905  0079DE  0100               	movlb	0	; () banked
   906  0079E0  6FA4               	movwf	_output& (0+255),b
   907                           
   908                           ; BSR set to: 0
   909                           ;newmain.c: 121: PORTD = output;
   910  0079E2  C0A4  FF83         	movff	_output,3971	;volatile
   911                           
   912                           ; BSR set to: 0
   913  0079E6  D6CF               	goto	l1718
   914  0079E8                     __end_of_main:
   915                           	opt stack 0
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           postdec1	equ	0xFE5
   923                           fsr1l	equ	0xFE1
   924                           status	equ	0xFD8
   925                           
   926 ;; *************** function ___lbtoft *****************
   927 ;; Defined at:
   928 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  c               1    wreg     unsigned char 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  c               1   11[COMRAM] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  3    8[COMRAM] float 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         3       0       0       0       0       0       0       0       0
   943 ;;      Locals:         1       0       0       0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0
   945 ;;      Totals:         4       0       0       0       0       0       0       0       0
   946 ;;Total ram usage:        4 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    1
   949 ;; This function calls:
   950 ;;		___ftpack
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text1
   957  006A28                     __ptext1:
   958                           	opt stack 0
   959  006A28                     ___lbtoft:
   960                           	opt stack 29
   961                           
   962                           ; BSR set to: 0
   963                           ;incstack = 0
   964                           ;___lbtoft@c stored from wreg
   965  006A28  6E0C               	movwf	___lbtoft@c,c
   966  006A2A  500C               	movf	___lbtoft@c,w,c
   967  006A2C  6E01               	movwf	___ftpack@arg,c
   968  006A2E  6A02               	clrf	___ftpack@arg+1,c
   969  006A30  6A03               	clrf	___ftpack@arg+2,c
   970  006A32  0E8E               	movlw	142
   971  006A34  6E04               	movwf	___ftpack@exp,c
   972  006A36  0E00               	movlw	0
   973  006A38  6E05               	movwf	___ftpack@sign,c
   974  006A3A  ECF3  F035         	call	___ftpack	;wreg free
   975  006A3E  C001  F009         	movff	?___ftpack,?___lbtoft
   976  006A42  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   977  006A46  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   978  006A4A  0012               	return	
   979  006A4C                     __end_of___lbtoft:
   980                           	opt stack 0
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           postdec1	equ	0xFE5
   988                           fsr1l	equ	0xFE1
   989                           status	equ	0xFD8
   990                           
   991 ;; *************** function ___fttol *****************
   992 ;; Defined at:
   993 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  f1              3    0[COMRAM] float 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  lval            4   10[COMRAM] unsigned long 
   998 ;;  exp1            1   14[COMRAM] unsigned char 
   999 ;;  sign1           1    9[COMRAM] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  4    0[COMRAM] long 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1009 ;;      Params:         4       0       0       0       0       0       0       0       0
  1010 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1011 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1012 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1013 ;;Total ram usage:       15 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text2
  1023  006F42                     __ptext2:
  1024                           	opt stack 0
  1025  006F42                     ___fttol:
  1026                           	opt stack 30
  1027                           
  1028                           ;incstack = 0
  1029  006F42  C003  F005         	movff	___fttol@f1+2,??___fttol
  1030  006F46  6A06               	clrf	(??___fttol+1)& (0+255),c
  1031  006F48  6A07               	clrf	(??___fttol+2)& (0+255),c
  1032  006F4A  3402               	rlcf	___fttol@f1+1,w,c
  1033  006F4C  3605               	rlcf	??___fttol& (0+255),f,c
  1034  006F4E  E301               	bnc	u1471
  1035  006F50  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1036  006F52                     u1471:
  1037  006F52  5005               	movf	??___fttol,w,c
  1038  006F54  6E0F               	movwf	___fttol@exp1,c
  1039  006F56  500F               	movf	___fttol@exp1,w,c
  1040  006F58  A4D8               	btfss	status,2,c
  1041  006F5A  D009               	goto	l1658
  1042  006F5C  0E00               	movlw	0
  1043  006F5E  6E01               	movwf	?___fttol,c
  1044  006F60  0E00               	movlw	0
  1045  006F62  6E02               	movwf	?___fttol+1,c
  1046  006F64  0E00               	movlw	0
  1047  006F66  6E03               	movwf	?___fttol+2,c
  1048  006F68  0E00               	movlw	0
  1049  006F6A  6E04               	movwf	?___fttol+3,c
  1050  006F6C  0012               	return	
  1051  006F6E                     l1658:
  1052  006F6E  0E17               	movlw	23
  1053  006F70  6E05               	movwf	??___fttol& (0+255),c
  1054  006F72  C001  F006         	movff	___fttol@f1,??___fttol+1
  1055  006F76  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1056  006F7A  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1057  006F7E  2805               	incf	??___fttol,w,c
  1058  006F80  6E09               	movwf	(??___fttol+4)& (0+255),c
  1059  006F82  D004               	goto	u1490
  1060  006F84                     u1495:
  1061  006F84  90D8               	bcf	status,0,c
  1062  006F86  3208               	rrcf	??___fttol+3,f,c
  1063  006F88  3207               	rrcf	??___fttol+2,f,c
  1064  006F8A  3206               	rrcf	??___fttol+1,f,c
  1065  006F8C                     u1490:
  1066  006F8C  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1067  006F8E  D7FA               	goto	u1495
  1068  006F90  5006               	movf	??___fttol+1,w,c
  1069  006F92  6E0A               	movwf	___fttol@sign1,c
  1070  006F94  8E02               	bsf	___fttol@f1+1,7,c
  1071  006F96  0EFF               	movlw	255
  1072  006F98  1601               	andwf	___fttol@f1,f,c
  1073  006F9A  0EFF               	movlw	255
  1074  006F9C  1602               	andwf	___fttol@f1+1,f,c
  1075  006F9E  0E00               	movlw	0
  1076  006FA0  1603               	andwf	___fttol@f1+2,f,c
  1077  006FA2  5001               	movf	___fttol@f1,w,c
  1078  006FA4  6E0B               	movwf	___fttol@lval,c
  1079  006FA6  5002               	movf	___fttol@f1+1,w,c
  1080  006FA8  6E0C               	movwf	___fttol@lval+1,c
  1081  006FAA  5003               	movf	___fttol@f1+2,w,c
  1082  006FAC  6E0D               	movwf	___fttol@lval+2,c
  1083  006FAE  6A0E               	clrf	___fttol@lval+3,c
  1084  006FB0  0E8E               	movlw	142
  1085  006FB2  5E0F               	subwf	___fttol@exp1,f,c
  1086  006FB4  AE0F               	btfss	___fttol@exp1,7,c
  1087  006FB6  D016               	goto	l1680
  1088  006FB8  500F               	movf	___fttol@exp1,w,c
  1089  006FBA  0A80               	xorlw	128
  1090  006FBC  0F8F               	addlw	143
  1091  006FBE  B0D8               	btfsc	status,0,c
  1092  006FC0  D009               	goto	l1676
  1093  006FC2  0E00               	movlw	0
  1094  006FC4  6E01               	movwf	?___fttol,c
  1095  006FC6  0E00               	movlw	0
  1096  006FC8  6E02               	movwf	?___fttol+1,c
  1097  006FCA  0E00               	movlw	0
  1098  006FCC  6E03               	movwf	?___fttol+2,c
  1099  006FCE  0E00               	movlw	0
  1100  006FD0  6E04               	movwf	?___fttol+3,c
  1101  006FD2  0012               	return	
  1102  006FD4                     l1676:
  1103  006FD4  90D8               	bcf	status,0,c
  1104  006FD6  320E               	rrcf	___fttol@lval+3,f,c
  1105  006FD8  320D               	rrcf	___fttol@lval+2,f,c
  1106  006FDA  320C               	rrcf	___fttol@lval+1,f,c
  1107  006FDC  320B               	rrcf	___fttol@lval,f,c
  1108  006FDE  3E0F               	incfsz	___fttol@exp1,f,c
  1109  006FE0  D7F9               	goto	l1676
  1110  006FE2  D015               	goto	l1690
  1111  006FE4                     l1680:
  1112  006FE4  0E17               	movlw	23
  1113  006FE6  640F               	cpfsgt	___fttol@exp1,c
  1114  006FE8  D00F               	goto	l1688
  1115  006FEA  0E00               	movlw	0
  1116  006FEC  6E01               	movwf	?___fttol,c
  1117  006FEE  0E00               	movlw	0
  1118  006FF0  6E02               	movwf	?___fttol+1,c
  1119  006FF2  0E00               	movlw	0
  1120  006FF4  6E03               	movwf	?___fttol+2,c
  1121  006FF6  0E00               	movlw	0
  1122  006FF8  6E04               	movwf	?___fttol+3,c
  1123  006FFA  0012               	return	
  1124  006FFC                     l1686:
  1125  006FFC  90D8               	bcf	status,0,c
  1126  006FFE  360B               	rlcf	___fttol@lval,f,c
  1127  007000  360C               	rlcf	___fttol@lval+1,f,c
  1128  007002  360D               	rlcf	___fttol@lval+2,f,c
  1129  007004  360E               	rlcf	___fttol@lval+3,f,c
  1130  007006  060F               	decf	___fttol@exp1,f,c
  1131  007008                     l1688:
  1132  007008  500F               	movf	___fttol@exp1,w,c
  1133  00700A  A4D8               	btfss	status,2,c
  1134  00700C  D7F7               	goto	l1686
  1135  00700E                     l1690:
  1136  00700E  500A               	movf	___fttol@sign1,w,c
  1137  007010  B4D8               	btfsc	status,2,c
  1138  007012  D008               	goto	l1694
  1139  007014  1E0E               	comf	___fttol@lval+3,f,c
  1140  007016  1E0D               	comf	___fttol@lval+2,f,c
  1141  007018  1E0C               	comf	___fttol@lval+1,f,c
  1142  00701A  6C0B               	negf	___fttol@lval,c
  1143  00701C  0E00               	movlw	0
  1144  00701E  220C               	addwfc	___fttol@lval+1,f,c
  1145  007020  220D               	addwfc	___fttol@lval+2,f,c
  1146  007022  220E               	addwfc	___fttol@lval+3,f,c
  1147  007024                     l1694:
  1148  007024  C00B  F001         	movff	___fttol@lval,?___fttol
  1149  007028  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1150  00702C  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1151  007030  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1152  007034  0012               	return	
  1153  007036                     __end_of___fttol:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           postdec1	equ	0xFE5
  1162                           fsr1l	equ	0xFE1
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function ___awtoft *****************
  1166 ;; Defined at:
  1167 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  c               2    8[COMRAM] int 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  sign            1   11[COMRAM] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  3    8[COMRAM] float 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         3       0       0       0       0       0       0       0       0
  1182 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1184 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1185 ;;Total ram usage:        4 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    1
  1188 ;; This function calls:
  1189 ;;		___ftpack
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;;		_PID_SetSampleTime
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text3
  1197  006A82                     __ptext3:
  1198                           	opt stack 0
  1199  006A82                     ___awtoft:
  1200                           	opt stack 29
  1201                           
  1202                           ;incstack = 0
  1203  006A82  0E00               	movlw	0
  1204  006A84  6E0C               	movwf	___awtoft@sign,c
  1205  006A86  AE0A               	btfss	___awtoft@c+1,7,c
  1206  006A88  D006               	goto	l1648
  1207  006A8A  6C09               	negf	___awtoft@c,c
  1208  006A8C  1E0A               	comf	___awtoft@c+1,f,c
  1209  006A8E  B0D8               	btfsc	status,0,c
  1210  006A90  2A0A               	incf	___awtoft@c+1,f,c
  1211  006A92  0E01               	movlw	1
  1212  006A94  6E0C               	movwf	___awtoft@sign,c
  1213  006A96                     l1648:
  1214  006A96  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1215  006A9A  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1216  006A9E  6A03               	clrf	___ftpack@arg+2,c
  1217  006AA0  0E8E               	movlw	142
  1218  006AA2  6E04               	movwf	___ftpack@exp,c
  1219  006AA4  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1220  006AA8  ECF3  F035         	call	___ftpack	;wreg free
  1221  006AAC  C001  F009         	movff	?___ftpack,?___awtoft
  1222  006AB0  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1223  006AB4  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1224  006AB8  0012               	return	
  1225  006ABA                     __end_of___awtoft:
  1226                           	opt stack 0
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1l	equ	0xFE1
  1235                           status	equ	0xFD8
  1236                           
  1237 ;; *************** function _PID_init *****************
  1238 ;; Defined at:
  1239 ;;		line 16 in file "pid.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  pid             2   53[COMRAM] PTR struct .
  1242 ;;		 -> main@PID(45), 
  1243 ;;  Kp              3   55[COMRAM] float 
  1244 ;;  Ki              3   58[COMRAM] float 
  1245 ;;  Kd              3   61[COMRAM] float 
  1246 ;;  ControllerDi    1   64[COMRAM] enum E7
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1258 ;;      Params:        12       0       0       0       0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1261 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1262 ;;Total ram usage:       12 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    3
  1265 ;; This function calls:
  1266 ;;		_PID_SetControllerDirection
  1267 ;;		_PID_SetOutputLimits
  1268 ;;		_PID_SetTunings
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text4
  1275  00713A                     __ptext4:
  1276                           	opt stack 0
  1277  00713A                     _PID_init:
  1278                           	opt stack 27
  1279                           
  1280                           ;pid.c: 18: pid->myInput = 0;
  1281                           
  1282                           ;incstack = 0
  1283  00713A  EE20 F013          	lfsr	2,19
  1284  00713E  5036               	movf	PID_init@pid,w,c
  1285  007140  26D9               	addwf	fsr2l,f,c
  1286  007142  5037               	movf	PID_init@pid+1,w,c
  1287  007144  22DA               	addwfc	fsr2h,f,c
  1288  007146  0E00               	movlw	0
  1289  007148  6EDE               	movwf	postinc2,c
  1290  00714A  0E00               	movlw	0
  1291  00714C  6EDE               	movwf	postinc2,c
  1292  00714E  0E00               	movlw	0
  1293  007150  6EDE               	movwf	postinc2,c
  1294                           
  1295                           ;pid.c: 19: pid->myOutput = 0;
  1296  007152  EE20 F016          	lfsr	2,22
  1297  007156  5036               	movf	PID_init@pid,w,c
  1298  007158  26D9               	addwf	fsr2l,f,c
  1299  00715A  5037               	movf	PID_init@pid+1,w,c
  1300  00715C  22DA               	addwfc	fsr2h,f,c
  1301  00715E  0E00               	movlw	0
  1302  007160  6EDE               	movwf	postinc2,c
  1303  007162  0E00               	movlw	0
  1304  007164  6EDE               	movwf	postinc2,c
  1305  007166  0E00               	movlw	0
  1306  007168  6EDE               	movwf	postinc2,c
  1307                           
  1308                           ;pid.c: 20: pid->mySetpoint = 0;
  1309  00716A  EE20 F019          	lfsr	2,25
  1310  00716E  5036               	movf	PID_init@pid,w,c
  1311  007170  26D9               	addwf	fsr2l,f,c
  1312  007172  5037               	movf	PID_init@pid+1,w,c
  1313  007174  22DA               	addwfc	fsr2h,f,c
  1314  007176  0E00               	movlw	0
  1315  007178  6EDE               	movwf	postinc2,c
  1316  00717A  0E00               	movlw	0
  1317  00717C  6EDE               	movwf	postinc2,c
  1318  00717E  0E00               	movlw	0
  1319  007180  6EDE               	movwf	postinc2,c
  1320                           
  1321                           ;pid.c: 21: pid->ITerm = 0;
  1322  007182  EE20 F01C          	lfsr	2,28
  1323  007186  5036               	movf	PID_init@pid,w,c
  1324  007188  26D9               	addwf	fsr2l,f,c
  1325  00718A  5037               	movf	PID_init@pid+1,w,c
  1326  00718C  22DA               	addwfc	fsr2h,f,c
  1327  00718E  0E00               	movlw	0
  1328  007190  6EDE               	movwf	postinc2,c
  1329  007192  0E00               	movlw	0
  1330  007194  6EDE               	movwf	postinc2,c
  1331  007196  0E00               	movlw	0
  1332  007198  6EDE               	movwf	postinc2,c
  1333                           
  1334                           ;pid.c: 22: pid->lastInput = 0;
  1335  00719A  EE20 F01F          	lfsr	2,31
  1336  00719E  5036               	movf	PID_init@pid,w,c
  1337  0071A0  26D9               	addwf	fsr2l,f,c
  1338  0071A2  5037               	movf	PID_init@pid+1,w,c
  1339  0071A4  22DA               	addwfc	fsr2h,f,c
  1340  0071A6  0E00               	movlw	0
  1341  0071A8  6EDE               	movwf	postinc2,c
  1342  0071AA  0E00               	movlw	0
  1343  0071AC  6EDE               	movwf	postinc2,c
  1344  0071AE  0E00               	movlw	0
  1345  0071B0  6EDE               	movwf	postinc2,c
  1346                           
  1347                           ;pid.c: 23: pid->inAuto = 0;
  1348  0071B2  EE20 F02C          	lfsr	2,44
  1349  0071B6  5036               	movf	PID_init@pid,w,c
  1350  0071B8  26D9               	addwf	fsr2l,f,c
  1351  0071BA  5037               	movf	PID_init@pid+1,w,c
  1352  0071BC  22DA               	addwfc	fsr2h,f,c
  1353  0071BE  0E00               	movlw	0
  1354  0071C0  6EDF               	movwf	indf2,c
  1355                           
  1356                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
  1357  0071C2  C036  F00D         	movff	PID_init@pid,PID_SetOutputLimits@pid
  1358  0071C6  C037  F00E         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
  1359  0071CA  0E00               	movlw	0
  1360  0071CC  6E0F               	movwf	PID_SetOutputLimits@Min,c
  1361  0071CE  0E00               	movlw	0
  1362  0071D0  6E10               	movwf	PID_SetOutputLimits@Min+1,c
  1363  0071D2  0E00               	movlw	0
  1364  0071D4  6E11               	movwf	PID_SetOutputLimits@Min+2,c
  1365  0071D6  0EFF               	movlw	255
  1366  0071D8  6E12               	movwf	PID_SetOutputLimits@Max,c
  1367  0071DA  0E7F               	movlw	127
  1368  0071DC  6E13               	movwf	PID_SetOutputLimits@Max+1,c
  1369  0071DE  0E47               	movlw	71
  1370  0071E0  6E14               	movwf	PID_SetOutputLimits@Max+2,c
  1371  0071E2  ECF8  F039         	call	_PID_SetOutputLimits	;wreg free
  1372                           
  1373                           ;pid.c: 28: pid->SampleTime = 1000;
  1374  0071E6  EE20 F022          	lfsr	2,34
  1375  0071EA  5036               	movf	PID_init@pid,w,c
  1376  0071EC  26D9               	addwf	fsr2l,f,c
  1377  0071EE  5037               	movf	PID_init@pid+1,w,c
  1378  0071F0  22DA               	addwfc	fsr2h,f,c
  1379  0071F2  0EE8               	movlw	232
  1380  0071F4  6EDE               	movwf	postinc2,c
  1381  0071F6  0E03               	movlw	3
  1382  0071F8  6EDE               	movwf	postinc2,c
  1383  0071FA  0E00               	movlw	0
  1384  0071FC  6EDE               	movwf	postinc2,c
  1385  0071FE  0E00               	movlw	0
  1386  007200  6EDD               	movwf	postdec2,c
  1387                           
  1388                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
  1389  007202  C036  F027         	movff	PID_init@pid,PID_SetControllerDirection@pid
  1390  007206  C037  F028         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
  1391  00720A  C041  F029         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
  1392  00720E  EC4A  F036         	call	_PID_SetControllerDirection	;wreg free
  1393                           
  1394                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
  1395  007212  C036  F027         	movff	PID_init@pid,PID_SetTunings@pid
  1396  007216  C037  F028         	movff	PID_init@pid+1,PID_SetTunings@pid+1
  1397  00721A  C038  F029         	movff	PID_init@Kp,PID_SetTunings@Kp
  1398  00721E  C039  F02A         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
  1399  007222  C03A  F02B         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
  1400  007226  C03B  F02C         	movff	PID_init@Ki,PID_SetTunings@Ki
  1401  00722A  C03C  F02D         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
  1402  00722E  C03D  F02E         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
  1403  007232  C03E  F02F         	movff	PID_init@Kd,PID_SetTunings@Kd
  1404  007236  C03F  F030         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
  1405  00723A  C040  F031         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
  1406  00723E  ECD4  F03A         	call	_PID_SetTunings	;wreg free
  1407  007242  0012               	return		;funcret
  1408  007244                     __end_of_PID_init:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           fsr1l	equ	0xFE1
  1418                           indf2	equ	0xFDF
  1419                           postinc2	equ	0xFDE
  1420                           postdec2	equ	0xFDD
  1421                           fsr2h	equ	0xFDA
  1422                           fsr2l	equ	0xFD9
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function _PID_SetTunings *****************
  1426 ;; Defined at:
  1427 ;;		line 85 in file "pid.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  pid             2   38[COMRAM] PTR struct .
  1430 ;;		 -> main@PID(45), 
  1431 ;;  Kp              3   40[COMRAM] float 
  1432 ;;  Ki              3   43[COMRAM] float 
  1433 ;;  Kd              3   46[COMRAM] float 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  SampleTimeIn    3   50[COMRAM] float 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1445 ;;      Params:        11       0       0       0       0       0       0       0       0
  1446 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1447 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1448 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1449 ;;Total ram usage:       15 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    2
  1452 ;; This function calls:
  1453 ;;		___ftdiv
  1454 ;;		___ftmul
  1455 ;;		___ftneg
  1456 ;;		___lltoft
  1457 ;; This function is called by:
  1458 ;;		_PID_init
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text5
  1463  0075A8                     __ptext5:
  1464                           	opt stack 0
  1465  0075A8                     _PID_SetTunings:
  1466                           	opt stack 27
  1467                           
  1468                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
  1469                           
  1470                           ;incstack = 0
  1471  0075A8  BE2B               	btfsc	PID_SetTunings@Kp+2,7,c
  1472  0075AA  0012               	return	
  1473  0075AC  BE2E               	btfsc	PID_SetTunings@Ki+2,7,c
  1474  0075AE  0012               	return	
  1475  0075B0  BE31               	btfsc	PID_SetTunings@Kd+2,7,c
  1476  0075B2  0012               	return	
  1477                           
  1478                           ;pid.c: 88: }
  1479                           ;pid.c: 90: pid->dispKp = Kp;
  1480                           
  1481                           ;pid.c: 87: return;
  1482  0075B4  C027  FFD9         	movff	PID_SetTunings@pid,fsr2l
  1483  0075B8  C028  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
  1484  0075BC  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1485  0075C0  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1486  0075C4  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1487                           
  1488                           ;pid.c: 91: pid->dispKi = Ki;
  1489  0075C8  EE20 F003          	lfsr	2,3
  1490  0075CC  5027               	movf	PID_SetTunings@pid,w,c
  1491  0075CE  26D9               	addwf	fsr2l,f,c
  1492  0075D0  5028               	movf	PID_SetTunings@pid+1,w,c
  1493  0075D2  22DA               	addwfc	fsr2h,f,c
  1494  0075D4  C02C  FFDE         	movff	PID_SetTunings@Ki,postinc2
  1495  0075D8  C02D  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
  1496  0075DC  C02E  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
  1497                           
  1498                           ;pid.c: 92: pid->dispKd = Kd;
  1499  0075E0  EE20 F006          	lfsr	2,6
  1500  0075E4  5027               	movf	PID_SetTunings@pid,w,c
  1501  0075E6  26D9               	addwf	fsr2l,f,c
  1502  0075E8  5028               	movf	PID_SetTunings@pid+1,w,c
  1503  0075EA  22DA               	addwfc	fsr2h,f,c
  1504  0075EC  C02F  FFDE         	movff	PID_SetTunings@Kd,postinc2
  1505  0075F0  C030  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
  1506  0075F4  C031  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
  1507                           
  1508                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
  1509  0075F8  EE20 F022          	lfsr	2,34
  1510  0075FC  5027               	movf	PID_SetTunings@pid,w,c
  1511  0075FE  26D9               	addwf	fsr2l,f,c
  1512  007600  5028               	movf	PID_SetTunings@pid+1,w,c
  1513  007602  22DA               	addwfc	fsr2h,f,c
  1514  007604  CFDE F009          	movff	postinc2,___lltoft@c
  1515  007608  CFDE F00A          	movff	postinc2,___lltoft@c+1
  1516  00760C  CFDE F00B          	movff	postinc2,___lltoft@c+2
  1517  007610  CFDE F00C          	movff	postinc2,___lltoft@c+3
  1518  007614  EC7D  F035         	call	___lltoft	;wreg free
  1519  007618  C009  F012         	movff	?___lltoft,___ftdiv@f1
  1520  00761C  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
  1521  007620  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
  1522  007624  0E00               	movlw	0
  1523  007626  6E15               	movwf	___ftdiv@f2,c
  1524  007628  0E7A               	movlw	122
  1525  00762A  6E16               	movwf	___ftdiv@f2+1,c
  1526  00762C  0E44               	movlw	68
  1527  00762E  6E17               	movwf	___ftdiv@f2+2,c
  1528  007630  ECB4  F036         	call	___ftdiv	;wreg free
  1529  007634  C012  F033         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1530  007638  C013  F034         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1531  00763C  C014  F035         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1532                           
  1533                           ;pid.c: 95: pid->kp = Kp;
  1534  007640  EE20 F009          	lfsr	2,9
  1535  007644  5027               	movf	PID_SetTunings@pid,w,c
  1536  007646  26D9               	addwf	fsr2l,f,c
  1537  007648  5028               	movf	PID_SetTunings@pid+1,w,c
  1538  00764A  22DA               	addwfc	fsr2h,f,c
  1539  00764C  C029  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1540  007650  C02A  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1541  007654  C02B  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1542                           
  1543                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1544  007658  C02C  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1545  00765C  C02D  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1546  007660  C02E  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1547  007664  C033  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1548  007668  C034  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1549  00766C  C035  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1550  007670  EC27  F037         	call	___ftmul	;wreg free
  1551  007674  EE20 F00C          	lfsr	2,12
  1552  007678  5027               	movf	PID_SetTunings@pid,w,c
  1553  00767A  26D9               	addwf	fsr2l,f,c
  1554  00767C  5028               	movf	PID_SetTunings@pid+1,w,c
  1555  00767E  22DA               	addwfc	fsr2h,f,c
  1556  007680  C009  FFDE         	movff	?___ftmul,postinc2
  1557  007684  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1558  007688  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1559                           
  1560                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1561  00768C  C02F  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1562  007690  C030  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1563  007694  C031  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1564  007698  C033  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1565  00769C  C034  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1566  0076A0  C035  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1567  0076A4  ECB4  F036         	call	___ftdiv	;wreg free
  1568  0076A8  EE20 F00F          	lfsr	2,15
  1569  0076AC  5027               	movf	PID_SetTunings@pid,w,c
  1570  0076AE  26D9               	addwf	fsr2l,f,c
  1571  0076B0  5028               	movf	PID_SetTunings@pid+1,w,c
  1572  0076B2  22DA               	addwfc	fsr2h,f,c
  1573  0076B4  C012  FFDE         	movff	?___ftdiv,postinc2
  1574  0076B8  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1575  0076BC  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1576                           
  1577                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1578  0076C0  EE20 F012          	lfsr	2,18
  1579  0076C4  5027               	movf	PID_SetTunings@pid,w,c
  1580  0076C6  26D9               	addwf	fsr2l,f,c
  1581  0076C8  5028               	movf	PID_SetTunings@pid+1,w,c
  1582  0076CA  22DA               	addwfc	fsr2h,f,c
  1583  0076CC  04DE               	decf	postinc2,w,c
  1584  0076CE  A4D8               	btfss	status,2,c
  1585  0076D0  0012               	return	
  1586                           
  1587                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1588  0076D2  EE20 F009          	lfsr	2,9
  1589  0076D6  5027               	movf	PID_SetTunings@pid,w,c
  1590  0076D8  26D9               	addwf	fsr2l,f,c
  1591  0076DA  5028               	movf	PID_SetTunings@pid+1,w,c
  1592  0076DC  22DA               	addwfc	fsr2h,f,c
  1593  0076DE  CFDE F024          	movff	postinc2,___ftneg@f1
  1594  0076E2  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1595  0076E6  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1596  0076EA  EC02  F035         	call	___ftneg	;wreg free
  1597  0076EE  EE20 F009          	lfsr	2,9
  1598  0076F2  5027               	movf	PID_SetTunings@pid,w,c
  1599  0076F4  26D9               	addwf	fsr2l,f,c
  1600  0076F6  5028               	movf	PID_SetTunings@pid+1,w,c
  1601  0076F8  22DA               	addwfc	fsr2h,f,c
  1602  0076FA  C024  FFDE         	movff	?___ftneg,postinc2
  1603  0076FE  C025  FFDE         	movff	?___ftneg+1,postinc2
  1604  007702  C026  FFDE         	movff	?___ftneg+2,postinc2
  1605                           
  1606                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1607  007706  EE20 F00C          	lfsr	2,12
  1608  00770A  5027               	movf	PID_SetTunings@pid,w,c
  1609  00770C  26D9               	addwf	fsr2l,f,c
  1610  00770E  5028               	movf	PID_SetTunings@pid+1,w,c
  1611  007710  22DA               	addwfc	fsr2h,f,c
  1612  007712  CFDE F024          	movff	postinc2,___ftneg@f1
  1613  007716  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1614  00771A  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1615  00771E  EC02  F035         	call	___ftneg	;wreg free
  1616  007722  EE20 F00C          	lfsr	2,12
  1617  007726  5027               	movf	PID_SetTunings@pid,w,c
  1618  007728  26D9               	addwf	fsr2l,f,c
  1619  00772A  5028               	movf	PID_SetTunings@pid+1,w,c
  1620  00772C  22DA               	addwfc	fsr2h,f,c
  1621  00772E  C024  FFDE         	movff	?___ftneg,postinc2
  1622  007732  C025  FFDE         	movff	?___ftneg+1,postinc2
  1623  007736  C026  FFDE         	movff	?___ftneg+2,postinc2
  1624                           
  1625                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1626  00773A  EE20 F00F          	lfsr	2,15
  1627  00773E  5027               	movf	PID_SetTunings@pid,w,c
  1628  007740  26D9               	addwf	fsr2l,f,c
  1629  007742  5028               	movf	PID_SetTunings@pid+1,w,c
  1630  007744  22DA               	addwfc	fsr2h,f,c
  1631  007746  CFDE F024          	movff	postinc2,___ftneg@f1
  1632  00774A  CFDE F025          	movff	postinc2,___ftneg@f1+1
  1633  00774E  CFDD F026          	movff	postdec2,___ftneg@f1+2
  1634  007752  EC02  F035         	call	___ftneg	;wreg free
  1635  007756  EE20 F00F          	lfsr	2,15
  1636  00775A  5027               	movf	PID_SetTunings@pid,w,c
  1637  00775C  26D9               	addwf	fsr2l,f,c
  1638  00775E  5028               	movf	PID_SetTunings@pid+1,w,c
  1639  007760  22DA               	addwfc	fsr2h,f,c
  1640  007762  C024  FFDE         	movff	?___ftneg,postinc2
  1641  007766  C025  FFDE         	movff	?___ftneg+1,postinc2
  1642  00776A  C026  FFDE         	movff	?___ftneg+2,postinc2
  1643  00776E  0012               	return	
  1644  007770                     __end_of_PID_SetTunings:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postdec1	equ	0xFE5
  1653                           fsr1l	equ	0xFE1
  1654                           indf2	equ	0xFDF
  1655                           postinc2	equ	0xFDE
  1656                           postdec2	equ	0xFDD
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function ___lltoft *****************
  1662 ;; Defined at:
  1663 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  c               4    8[COMRAM] unsigned long 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  exp             1   16[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  3    8[COMRAM] float 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1677 ;;      Params:         4       0       0       0       0       0       0       0       0
  1678 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1679 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1680 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1681 ;;Total ram usage:        9 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    1
  1684 ;; This function calls:
  1685 ;;		___ftpack
  1686 ;; This function is called by:
  1687 ;;		_PID_SetTunings
  1688 ;;		_PID_SetSampleTime
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text6
  1693  006AFA                     __ptext6:
  1694                           	opt stack 0
  1695  006AFA                     ___lltoft:
  1696                           	opt stack 27
  1697                           
  1698                           ;incstack = 0
  1699  006AFA  0E8E               	movlw	142
  1700  006AFC  6E11               	movwf	___lltoft@exp,c
  1701  006AFE  D006               	goto	l1448
  1702  006B00                     l1446:
  1703  006B00  90D8               	bcf	status,0,c
  1704  006B02  320C               	rrcf	___lltoft@c+3,f,c
  1705  006B04  320B               	rrcf	___lltoft@c+2,f,c
  1706  006B06  320A               	rrcf	___lltoft@c+1,f,c
  1707  006B08  3209               	rrcf	___lltoft@c,f,c
  1708  006B0A  2A11               	incf	___lltoft@exp,f,c
  1709  006B0C                     l1448:
  1710  006B0C  0E00               	movlw	0
  1711  006B0E  1409               	andwf	___lltoft@c,w,c
  1712  006B10  6E0D               	movwf	??___lltoft& (0+255),c
  1713  006B12  0E00               	movlw	0
  1714  006B14  140A               	andwf	___lltoft@c+1,w,c
  1715  006B16  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1716  006B18  0E00               	movlw	0
  1717  006B1A  140B               	andwf	___lltoft@c+2,w,c
  1718  006B1C  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1719  006B1E  0EFF               	movlw	255
  1720  006B20  140C               	andwf	___lltoft@c+3,w,c
  1721  006B22  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1722  006B24  500D               	movf	??___lltoft,w,c
  1723  006B26  100E               	iorwf	??___lltoft+1,w,c
  1724  006B28  100F               	iorwf	??___lltoft+2,w,c
  1725  006B2A  1010               	iorwf	??___lltoft+3,w,c
  1726  006B2C  A4D8               	btfss	status,2,c
  1727  006B2E  D7E8               	goto	l1446
  1728  006B30  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1729  006B34  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1730  006B38  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1731  006B3C  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1732  006B40  0E00               	movlw	0
  1733  006B42  6E05               	movwf	___ftpack@sign,c
  1734  006B44  ECF3  F035         	call	___ftpack	;wreg free
  1735  006B48  C001  F009         	movff	?___ftpack,?___lltoft
  1736  006B4C  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1737  006B50  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1738  006B54  0012               	return	
  1739  006B56                     __end_of___lltoft:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           indf2	equ	0xFDF
  1750                           postinc2	equ	0xFDE
  1751                           postdec2	equ	0xFDD
  1752                           fsr2h	equ	0xFDA
  1753                           fsr2l	equ	0xFD9
  1754                           status	equ	0xFD8
  1755                           
  1756 ;; *************** function ___ftdiv *****************
  1757 ;; Defined at:
  1758 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  f1              3   17[COMRAM] float 
  1761 ;;  f2              3   20[COMRAM] float 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  f3              3   27[COMRAM] float 
  1764 ;;  sign            1   31[COMRAM] unsigned char 
  1765 ;;  exp             1   30[COMRAM] unsigned char 
  1766 ;;  cntr            1   26[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  3   17[COMRAM] float 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1776 ;;      Params:         6       0       0       0       0       0       0       0       0
  1777 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1778 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1779 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1780 ;;Total ram usage:       15 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    1
  1783 ;; This function calls:
  1784 ;;		___ftpack
  1785 ;; This function is called by:
  1786 ;;		_PID_SetTunings
  1787 ;;		_PID_SetSampleTime
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text7
  1792  006D68                     __ptext7:
  1793                           	opt stack 0
  1794  006D68                     ___ftdiv:
  1795                           	opt stack 27
  1796                           
  1797                           ;incstack = 0
  1798  006D68  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  1799  006D6C  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1800  006D6E  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1801  006D70  3413               	rlcf	___ftdiv@f1+1,w,c
  1802  006D72  3618               	rlcf	??___ftdiv& (0+255),f,c
  1803  006D74  E301               	bnc	u871
  1804  006D76  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1805  006D78                     u871:
  1806  006D78  5018               	movf	??___ftdiv,w,c
  1807  006D7A  6E1F               	movwf	___ftdiv@exp,c
  1808  006D7C  501F               	movf	___ftdiv@exp,w,c
  1809  006D7E  A4D8               	btfss	status,2,c
  1810  006D80  D007               	goto	l1334
  1811  006D82  0E00               	movlw	0
  1812  006D84  6E12               	movwf	?___ftdiv,c
  1813  006D86  0E00               	movlw	0
  1814  006D88  6E13               	movwf	?___ftdiv+1,c
  1815  006D8A  0E00               	movlw	0
  1816  006D8C  6E14               	movwf	?___ftdiv+2,c
  1817  006D8E  0012               	return	
  1818  006D90                     l1334:
  1819  006D90  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  1820  006D94  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1821  006D96  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1822  006D98  3416               	rlcf	___ftdiv@f2+1,w,c
  1823  006D9A  3618               	rlcf	??___ftdiv& (0+255),f,c
  1824  006D9C  E301               	bnc	u891
  1825  006D9E  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1826  006DA0                     u891:
  1827  006DA0  5018               	movf	??___ftdiv,w,c
  1828  006DA2  6E20               	movwf	___ftdiv@sign,c
  1829  006DA4  5020               	movf	___ftdiv@sign,w,c
  1830  006DA6  A4D8               	btfss	status,2,c
  1831  006DA8  D007               	goto	l1340
  1832  006DAA  0E00               	movlw	0
  1833  006DAC  6E12               	movwf	?___ftdiv,c
  1834  006DAE  0E00               	movlw	0
  1835  006DB0  6E13               	movwf	?___ftdiv+1,c
  1836  006DB2  0E00               	movlw	0
  1837  006DB4  6E14               	movwf	?___ftdiv+2,c
  1838  006DB6  0012               	return	
  1839  006DB8                     l1340:
  1840  006DB8  0E00               	movlw	0
  1841  006DBA  6E1C               	movwf	___ftdiv@f3,c
  1842  006DBC  0E00               	movlw	0
  1843  006DBE  6E1D               	movwf	___ftdiv@f3+1,c
  1844  006DC0  0E00               	movlw	0
  1845  006DC2  6E1E               	movwf	___ftdiv@f3+2,c
  1846  006DC4  5020               	movf	___ftdiv@sign,w,c
  1847  006DC6  0F89               	addlw	137
  1848  006DC8  5E1F               	subwf	___ftdiv@exp,f,c
  1849  006DCA  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  1850  006DCE  5017               	movf	___ftdiv@f2+2,w,c
  1851  006DD0  1A20               	xorwf	___ftdiv@sign,f,c
  1852  006DD2  0E80               	movlw	128
  1853  006DD4  1620               	andwf	___ftdiv@sign,f,c
  1854  006DD6  8E13               	bsf	___ftdiv@f1+1,7,c
  1855  006DD8  0EFF               	movlw	255
  1856  006DDA  1612               	andwf	___ftdiv@f1,f,c
  1857  006DDC  0EFF               	movlw	255
  1858  006DDE  1613               	andwf	___ftdiv@f1+1,f,c
  1859  006DE0  0E00               	movlw	0
  1860  006DE2  1614               	andwf	___ftdiv@f1+2,f,c
  1861  006DE4  8E16               	bsf	___ftdiv@f2+1,7,c
  1862  006DE6  0EFF               	movlw	255
  1863  006DE8  1615               	andwf	___ftdiv@f2,f,c
  1864  006DEA  0EFF               	movlw	255
  1865  006DEC  1616               	andwf	___ftdiv@f2+1,f,c
  1866  006DEE  0E00               	movlw	0
  1867  006DF0  1617               	andwf	___ftdiv@f2+2,f,c
  1868  006DF2  0E18               	movlw	24
  1869  006DF4  6E1B               	movwf	___ftdiv@cntr,c
  1870  006DF6                     l1360:
  1871  006DF6  90D8               	bcf	status,0,c
  1872  006DF8  361C               	rlcf	___ftdiv@f3,f,c
  1873  006DFA  361D               	rlcf	___ftdiv@f3+1,f,c
  1874  006DFC  361E               	rlcf	___ftdiv@f3+2,f,c
  1875  006DFE  5015               	movf	___ftdiv@f2,w,c
  1876  006E00  5C12               	subwf	___ftdiv@f1,w,c
  1877  006E02  5016               	movf	___ftdiv@f2+1,w,c
  1878  006E04  5813               	subwfb	___ftdiv@f1+1,w,c
  1879  006E06  5017               	movf	___ftdiv@f2+2,w,c
  1880  006E08  5814               	subwfb	___ftdiv@f1+2,w,c
  1881  006E0A  A0D8               	btfss	status,0,c
  1882  006E0C  D007               	goto	l413
  1883  006E0E  5015               	movf	___ftdiv@f2,w,c
  1884  006E10  5E12               	subwf	___ftdiv@f1,f,c
  1885  006E12  5016               	movf	___ftdiv@f2+1,w,c
  1886  006E14  5A13               	subwfb	___ftdiv@f1+1,f,c
  1887  006E16  5017               	movf	___ftdiv@f2+2,w,c
  1888  006E18  5A14               	subwfb	___ftdiv@f1+2,f,c
  1889  006E1A  801C               	bsf	___ftdiv@f3,0,c
  1890  006E1C                     l413:
  1891  006E1C  90D8               	bcf	status,0,c
  1892  006E1E  3612               	rlcf	___ftdiv@f1,f,c
  1893  006E20  3613               	rlcf	___ftdiv@f1+1,f,c
  1894  006E22  3614               	rlcf	___ftdiv@f1+2,f,c
  1895  006E24  2E1B               	decfsz	___ftdiv@cntr,f,c
  1896  006E26  D7E7               	goto	l1360
  1897  006E28  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  1898  006E2C  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1899  006E30  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1900  006E34  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  1901  006E38  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  1902  006E3C  ECF3  F035         	call	___ftpack	;wreg free
  1903  006E40  C001  F012         	movff	?___ftpack,?___ftdiv
  1904  006E44  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  1905  006E48  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  1906  006E4C  0012               	return	
  1907  006E4E                     __end_of___ftdiv:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           postdec1	equ	0xFE5
  1916                           fsr1l	equ	0xFE1
  1917                           indf2	equ	0xFDF
  1918                           postinc2	equ	0xFDE
  1919                           postdec2	equ	0xFDD
  1920                           fsr2h	equ	0xFDA
  1921                           fsr2l	equ	0xFD9
  1922                           status	equ	0xFD8
  1923                           
  1924 ;; *************** function _PID_SetOutputLimits *****************
  1925 ;; Defined at:
  1926 ;;		line 126 in file "pid.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  pid             2   12[COMRAM] PTR struct .
  1929 ;;		 -> main@PID(45), 
  1930 ;;  Min             3   14[COMRAM] float 
  1931 ;;  Max             3   17[COMRAM] float 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1943 ;;      Params:         8       0       0       0       0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1946 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1947 ;;Total ram usage:        8 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    1
  1950 ;; This function calls:
  1951 ;;		___ftge
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;;		_PID_init
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text8
  1959  0073F0                     __ptext8:
  1960                           	opt stack 0
  1961  0073F0                     _PID_SetOutputLimits:
  1962                           	opt stack 28
  1963                           
  1964                           ;pid.c: 127: if (Min >= Max) {
  1965                           
  1966                           ;incstack = 0
  1967  0073F0  C00F  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  1968  0073F4  C010  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  1969  0073F8  C011  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  1970  0073FC  C012  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  1971  007400  C013  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  1972  007404  C014  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  1973  007408  ECAB  F035         	call	___ftge	;wreg free
  1974  00740C  B0D8               	btfsc	status,0,c
  1975  00740E  0012               	return	
  1976                           
  1977                           ;pid.c: 129: }
  1978                           ;pid.c: 130: pid->outMin = Min;
  1979                           
  1980                           ;pid.c: 128: return;
  1981  007410  EE20 F026          	lfsr	2,38
  1982  007414  500D               	movf	PID_SetOutputLimits@pid,w,c
  1983  007416  26D9               	addwf	fsr2l,f,c
  1984  007418  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1985  00741A  22DA               	addwfc	fsr2h,f,c
  1986  00741C  C00F  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  1987  007420  C010  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  1988  007424  C011  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  1989                           
  1990                           ;pid.c: 131: pid->outMax = Max;
  1991  007428  EE20 F029          	lfsr	2,41
  1992  00742C  500D               	movf	PID_SetOutputLimits@pid,w,c
  1993  00742E  26D9               	addwf	fsr2l,f,c
  1994  007430  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1995  007432  22DA               	addwfc	fsr2h,f,c
  1996  007434  C012  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  1997  007438  C013  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  1998  00743C  C014  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  1999                           
  2000                           ;pid.c: 133: if (pid->inAuto) {
  2001  007440  EE20 F02C          	lfsr	2,44
  2002  007444  500D               	movf	PID_SetOutputLimits@pid,w,c
  2003  007446  26D9               	addwf	fsr2l,f,c
  2004  007448  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2005  00744A  22DA               	addwfc	fsr2h,f,c
  2006  00744C  50DF               	movf	indf2,w,c
  2007  00744E  B4D8               	btfsc	status,2,c
  2008  007450  0012               	return	
  2009                           
  2010                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  2011  007452  EE20 F029          	lfsr	2,41
  2012  007456  500D               	movf	PID_SetOutputLimits@pid,w,c
  2013  007458  26D9               	addwf	fsr2l,f,c
  2014  00745A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2015  00745C  22DA               	addwfc	fsr2h,f,c
  2016  00745E  CFDE F001          	movff	postinc2,___ftge@ff1
  2017  007462  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2018  007466  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2019  00746A  EE20 F016          	lfsr	2,22
  2020  00746E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2021  007470  26D9               	addwf	fsr2l,f,c
  2022  007472  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2023  007474  22DA               	addwfc	fsr2h,f,c
  2024  007476  CFDE F004          	movff	postinc2,___ftge@ff2
  2025  00747A  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2026  00747E  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2027  007482  ECAB  F035         	call	___ftge	;wreg free
  2028  007486  B0D8               	btfsc	status,0,c
  2029  007488  D003               	goto	l1464
  2030                           
  2031                           ;pid.c: 135: pid->myOutput = pid->outMax;
  2032  00748A  EE20 F029          	lfsr	2,41
  2033  00748E  D01E               	goto	L1
  2034  007490                     l1464:
  2035  007490  EE20 F016          	lfsr	2,22
  2036  007494  500D               	movf	PID_SetOutputLimits@pid,w,c
  2037  007496  26D9               	addwf	fsr2l,f,c
  2038  007498  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2039  00749A  22DA               	addwfc	fsr2h,f,c
  2040  00749C  CFDE F001          	movff	postinc2,___ftge@ff1
  2041  0074A0  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2042  0074A4  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2043  0074A8  EE20 F026          	lfsr	2,38
  2044  0074AC  500D               	movf	PID_SetOutputLimits@pid,w,c
  2045  0074AE  26D9               	addwf	fsr2l,f,c
  2046  0074B0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2047  0074B2  22DA               	addwfc	fsr2h,f,c
  2048  0074B4  CFDE F004          	movff	postinc2,___ftge@ff2
  2049  0074B8  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2050  0074BC  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2051  0074C0  ECAB  F035         	call	___ftge	;wreg free
  2052  0074C4  B0D8               	btfsc	status,0,c
  2053  0074C6  D012               	goto	l1468
  2054                           
  2055                           ;pid.c: 137: pid->myOutput = pid->outMin;
  2056  0074C8  EE20 F026          	lfsr	2,38
  2057  0074CC                     L1:
  2058  0074CC  500D               	movf	PID_SetOutputLimits@pid,w,c
  2059  0074CE  26D9               	addwf	fsr2l,f,c
  2060  0074D0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2061  0074D2  22DA               	addwfc	fsr2h,f,c
  2062  0074D4  EE10 F016          	lfsr	1,22
  2063  0074D8  500D               	movf	PID_SetOutputLimits@pid,w,c
  2064  0074DA  26E1               	addwf	fsr1l,f,c
  2065  0074DC  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2066  0074DE  22E2               	addwfc	fsr1h,f,c
  2067  0074E0  CFDE FFE6          	movff	postinc2,postinc1
  2068  0074E4  CFDE FFE6          	movff	postinc2,postinc1
  2069  0074E8  CFDE FFE6          	movff	postinc2,postinc1
  2070  0074EC                     l1468:
  2071                           
  2072                           ;pid.c: 138: }
  2073                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  2074  0074EC  EE20 F029          	lfsr	2,41
  2075  0074F0  500D               	movf	PID_SetOutputLimits@pid,w,c
  2076  0074F2  26D9               	addwf	fsr2l,f,c
  2077  0074F4  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2078  0074F6  22DA               	addwfc	fsr2h,f,c
  2079  0074F8  CFDE F001          	movff	postinc2,___ftge@ff1
  2080  0074FC  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2081  007500  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2082  007504  EE20 F01C          	lfsr	2,28
  2083  007508  500D               	movf	PID_SetOutputLimits@pid,w,c
  2084  00750A  26D9               	addwf	fsr2l,f,c
  2085  00750C  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2086  00750E  22DA               	addwfc	fsr2h,f,c
  2087  007510  CFDE F004          	movff	postinc2,___ftge@ff2
  2088  007514  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2089  007518  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2090  00751C  ECAB  F035         	call	___ftge	;wreg free
  2091  007520  B0D8               	btfsc	status,0,c
  2092  007522  D013               	goto	l1472
  2093                           
  2094                           ;pid.c: 141: pid->ITerm = pid->outMax;
  2095  007524  EE20 F029          	lfsr	2,41
  2096  007528  500D               	movf	PID_SetOutputLimits@pid,w,c
  2097  00752A  26D9               	addwf	fsr2l,f,c
  2098  00752C  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2099  00752E  22DA               	addwfc	fsr2h,f,c
  2100  007530  EE10 F01C          	lfsr	1,28
  2101  007534  500D               	movf	PID_SetOutputLimits@pid,w,c
  2102  007536  26E1               	addwf	fsr1l,f,c
  2103  007538  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2104  00753A  22E2               	addwfc	fsr1h,f,c
  2105  00753C  CFDE FFE6          	movff	postinc2,postinc1
  2106  007540  CFDE FFE6          	movff	postinc2,postinc1
  2107  007544  CFDE FFE6          	movff	postinc2,postinc1
  2108                           
  2109                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  2110  007548  0012               	return	
  2111  00754A                     l1472:
  2112  00754A  EE20 F01C          	lfsr	2,28
  2113  00754E  500D               	movf	PID_SetOutputLimits@pid,w,c
  2114  007550  26D9               	addwf	fsr2l,f,c
  2115  007552  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2116  007554  22DA               	addwfc	fsr2h,f,c
  2117  007556  CFDE F001          	movff	postinc2,___ftge@ff1
  2118  00755A  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2119  00755E  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2120  007562  EE20 F026          	lfsr	2,38
  2121  007566  500D               	movf	PID_SetOutputLimits@pid,w,c
  2122  007568  26D9               	addwf	fsr2l,f,c
  2123  00756A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2124  00756C  22DA               	addwfc	fsr2h,f,c
  2125  00756E  CFDE F004          	movff	postinc2,___ftge@ff2
  2126  007572  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2127  007576  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2128  00757A  ECAB  F035         	call	___ftge	;wreg free
  2129  00757E  B0D8               	btfsc	status,0,c
  2130  007580  0012               	return	
  2131                           
  2132                           ;pid.c: 143: pid->ITerm = pid->outMin;
  2133  007582  EE20 F026          	lfsr	2,38
  2134  007586  500D               	movf	PID_SetOutputLimits@pid,w,c
  2135  007588  26D9               	addwf	fsr2l,f,c
  2136  00758A  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2137  00758C  22DA               	addwfc	fsr2h,f,c
  2138  00758E  EE10 F01C          	lfsr	1,28
  2139  007592  500D               	movf	PID_SetOutputLimits@pid,w,c
  2140  007594  26E1               	addwf	fsr1l,f,c
  2141  007596  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  2142  007598  22E2               	addwfc	fsr1h,f,c
  2143  00759A  CFDE FFE6          	movff	postinc2,postinc1
  2144  00759E  CFDE FFE6          	movff	postinc2,postinc1
  2145  0075A2  CFDE FFE6          	movff	postinc2,postinc1
  2146  0075A6  0012               	return	
  2147  0075A8                     __end_of_PID_SetOutputLimits:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           postinc0	equ	0xFEE
  2154                           wreg	equ	0xFE8
  2155                           postinc1	equ	0xFE6
  2156                           postdec1	equ	0xFE5
  2157                           fsr1h	equ	0xFE2
  2158                           fsr1l	equ	0xFE1
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _PID_SetControllerDirection *****************
  2167 ;; Defined at:
  2168 ;;		line 183 in file "pid.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  pid             2   38[COMRAM] PTR struct .
  2171 ;;		 -> main@PID(45), 
  2172 ;;  Direction       1   40[COMRAM] enum E7
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2184 ;;      Params:         3       0       0       0       0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2186 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2187 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2188 ;;Total ram usage:        4 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    1
  2191 ;; This function calls:
  2192 ;;		___ftneg
  2193 ;; This function is called by:
  2194 ;;		_PID_init
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text9
  2199  006C94                     __ptext9:
  2200                           	opt stack 0
  2201  006C94                     _PID_SetControllerDirection:
  2202                           	opt stack 28
  2203                           
  2204                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  2205                           
  2206                           ;incstack = 0
  2207  006C94  EE20 F02C          	lfsr	2,44
  2208  006C98  5027               	movf	PID_SetControllerDirection@pid,w,c
  2209  006C9A  26D9               	addwf	fsr2l,f,c
  2210  006C9C  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2211  006C9E  22DA               	addwfc	fsr2h,f,c
  2212  006CA0  50DF               	movf	indf2,w,c
  2213  006CA2  B4D8               	btfsc	status,2,c
  2214  006CA4  D058               	goto	l1482
  2215  006CA6  EE20 F012          	lfsr	2,18
  2216  006CAA  5027               	movf	PID_SetControllerDirection@pid,w,c
  2217  006CAC  26D9               	addwf	fsr2l,f,c
  2218  006CAE  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2219  006CB0  22DA               	addwfc	fsr2h,f,c
  2220  006CB2  5029               	movf	PID_SetControllerDirection@Direction,w,c
  2221  006CB4  18DE               	xorwf	postinc2,w,c
  2222  006CB6  B4D8               	btfsc	status,2,c
  2223  006CB8  D04E               	goto	l1482
  2224                           
  2225                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  2226  006CBA  EE20 F009          	lfsr	2,9
  2227  006CBE  5027               	movf	PID_SetControllerDirection@pid,w,c
  2228  006CC0  26D9               	addwf	fsr2l,f,c
  2229  006CC2  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2230  006CC4  22DA               	addwfc	fsr2h,f,c
  2231  006CC6  CFDE F024          	movff	postinc2,___ftneg@f1
  2232  006CCA  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2233  006CCE  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2234  006CD2  EC02  F035         	call	___ftneg	;wreg free
  2235  006CD6  EE20 F009          	lfsr	2,9
  2236  006CDA  5027               	movf	PID_SetControllerDirection@pid,w,c
  2237  006CDC  26D9               	addwf	fsr2l,f,c
  2238  006CDE  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2239  006CE0  22DA               	addwfc	fsr2h,f,c
  2240  006CE2  C024  FFDE         	movff	?___ftneg,postinc2
  2241  006CE6  C025  FFDE         	movff	?___ftneg+1,postinc2
  2242  006CEA  C026  FFDE         	movff	?___ftneg+2,postinc2
  2243                           
  2244                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  2245  006CEE  EE20 F00C          	lfsr	2,12
  2246  006CF2  5027               	movf	PID_SetControllerDirection@pid,w,c
  2247  006CF4  26D9               	addwf	fsr2l,f,c
  2248  006CF6  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2249  006CF8  22DA               	addwfc	fsr2h,f,c
  2250  006CFA  CFDE F024          	movff	postinc2,___ftneg@f1
  2251  006CFE  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2252  006D02  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2253  006D06  EC02  F035         	call	___ftneg	;wreg free
  2254  006D0A  EE20 F00C          	lfsr	2,12
  2255  006D0E  5027               	movf	PID_SetControllerDirection@pid,w,c
  2256  006D10  26D9               	addwf	fsr2l,f,c
  2257  006D12  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2258  006D14  22DA               	addwfc	fsr2h,f,c
  2259  006D16  C024  FFDE         	movff	?___ftneg,postinc2
  2260  006D1A  C025  FFDE         	movff	?___ftneg+1,postinc2
  2261  006D1E  C026  FFDE         	movff	?___ftneg+2,postinc2
  2262                           
  2263                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  2264  006D22  EE20 F00F          	lfsr	2,15
  2265  006D26  5027               	movf	PID_SetControllerDirection@pid,w,c
  2266  006D28  26D9               	addwf	fsr2l,f,c
  2267  006D2A  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2268  006D2C  22DA               	addwfc	fsr2h,f,c
  2269  006D2E  CFDE F024          	movff	postinc2,___ftneg@f1
  2270  006D32  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2271  006D36  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2272  006D3A  EC02  F035         	call	___ftneg	;wreg free
  2273  006D3E  EE20 F00F          	lfsr	2,15
  2274  006D42  5027               	movf	PID_SetControllerDirection@pid,w,c
  2275  006D44  26D9               	addwf	fsr2l,f,c
  2276  006D46  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2277  006D48  22DA               	addwfc	fsr2h,f,c
  2278  006D4A  C024  FFDE         	movff	?___ftneg,postinc2
  2279  006D4E  C025  FFDE         	movff	?___ftneg+1,postinc2
  2280  006D52  C026  FFDE         	movff	?___ftneg+2,postinc2
  2281  006D56                     l1482:
  2282                           
  2283                           ;pid.c: 188: }
  2284                           ;pid.c: 189: pid->controllerDirection = Direction;
  2285  006D56  EE20 F012          	lfsr	2,18
  2286  006D5A  5027               	movf	PID_SetControllerDirection@pid,w,c
  2287  006D5C  26D9               	addwf	fsr2l,f,c
  2288  006D5E  5028               	movf	PID_SetControllerDirection@pid+1,w,c
  2289  006D60  22DA               	addwfc	fsr2h,f,c
  2290  006D62  C029  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  2291  006D66  0012               	return		;funcret
  2292  006D68                     __end_of_PID_SetControllerDirection:
  2293                           	opt stack 0
  2294                           tblptru	equ	0xFF8
  2295                           tblptrh	equ	0xFF7
  2296                           tblptrl	equ	0xFF6
  2297                           tablat	equ	0xFF5
  2298                           postinc0	equ	0xFEE
  2299                           wreg	equ	0xFE8
  2300                           postinc1	equ	0xFE6
  2301                           postdec1	equ	0xFE5
  2302                           fsr1h	equ	0xFE2
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           postinc2	equ	0xFDE
  2306                           postdec2	equ	0xFDD
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _PID_SetMode *****************
  2312 ;; Defined at:
  2313 ;;		line 153 in file "pid.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  pid             2   11[COMRAM] PTR struct .
  2316 ;;		 -> main@PID(45), 
  2317 ;;  Mode            1   13[COMRAM] enum E3
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  newAuto         1   15[COMRAM] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2329 ;;      Params:         3       0       0       0       0       0       0       0       0
  2330 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2331 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2332 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2333 ;;Total ram usage:        5 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    2
  2336 ;; This function calls:
  2337 ;;		_PID_Initialize
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text10
  2344  006ABA                     __ptext10:
  2345                           	opt stack 0
  2346  006ABA                     _PID_SetMode:
  2347                           	opt stack 28
  2348                           
  2349                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  2350                           
  2351                           ;incstack = 0
  2352  006ABA  040E               	decf	PID_SetMode@Mode,w,c
  2353  006ABC  A4D8               	btfss	status,2,c
  2354  006ABE  D002               	goto	u1380
  2355  006AC0  0E01               	movlw	1
  2356  006AC2  D001               	goto	u1390
  2357  006AC4                     u1380:
  2358  006AC4  0E00               	movlw	0
  2359  006AC6                     u1390:
  2360  006AC6  6E10               	movwf	PID_SetMode@newAuto,c
  2361                           
  2362                           ;pid.c: 156: if(newAuto != pid->inAuto)
  2363  006AC8  EE20 F02C          	lfsr	2,44
  2364  006ACC  500C               	movf	PID_SetMode@pid,w,c
  2365  006ACE  26D9               	addwf	fsr2l,f,c
  2366  006AD0  500D               	movf	PID_SetMode@pid+1,w,c
  2367  006AD2  22DA               	addwfc	fsr2h,f,c
  2368  006AD4  5010               	movf	PID_SetMode@newAuto,w,c
  2369  006AD6  18DE               	xorwf	postinc2,w,c
  2370  006AD8  B4D8               	btfsc	status,2,c
  2371  006ADA  D006               	goto	l1604
  2372                           
  2373                           ;pid.c: 157: {
  2374                           ;pid.c: 158: PID_Initialize(pid);
  2375  006ADC  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  2376  006AE0  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  2377  006AE4  EC1B  F038         	call	_PID_Initialize	;wreg free
  2378  006AE8                     l1604:
  2379                           
  2380                           ;pid.c: 159: }
  2381                           ;pid.c: 160: pid->inAuto = newAuto;
  2382  006AE8  EE20 F02C          	lfsr	2,44
  2383  006AEC  500C               	movf	PID_SetMode@pid,w,c
  2384  006AEE  26D9               	addwf	fsr2l,f,c
  2385  006AF0  500D               	movf	PID_SetMode@pid+1,w,c
  2386  006AF2  22DA               	addwfc	fsr2h,f,c
  2387  006AF4  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  2388  006AF8  0012               	return		;funcret
  2389  006AFA                     __end_of_PID_SetMode:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           postinc1	equ	0xFE6
  2398                           postdec1	equ	0xFE5
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           indf2	equ	0xFDF
  2402                           postinc2	equ	0xFDE
  2403                           postdec2	equ	0xFDD
  2404                           fsr2h	equ	0xFDA
  2405                           fsr2l	equ	0xFD9
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _PID_Initialize *****************
  2409 ;; Defined at:
  2410 ;;		line 167 in file "pid.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  pid             2    9[COMRAM] PTR struct .
  2413 ;;		 -> main@PID(45), 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2425 ;;      Params:         2       0       0       0       0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2428 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2429 ;;Total ram usage:        2 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    1
  2432 ;; This function calls:
  2433 ;;		___ftge
  2434 ;; This function is called by:
  2435 ;;		_PID_SetMode
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text11
  2440  007036                     __ptext11:
  2441                           	opt stack 0
  2442  007036                     _PID_Initialize:
  2443                           	opt stack 28
  2444                           
  2445                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  2446                           
  2447                           ;incstack = 0
  2448  007036  EE20 F016          	lfsr	2,22
  2449  00703A  500A               	movf	PID_Initialize@pid,w,c
  2450  00703C  26D9               	addwf	fsr2l,f,c
  2451  00703E  500B               	movf	PID_Initialize@pid+1,w,c
  2452  007040  22DA               	addwfc	fsr2h,f,c
  2453  007042  EE10 F01C          	lfsr	1,28
  2454  007046  500A               	movf	PID_Initialize@pid,w,c
  2455  007048  26E1               	addwf	fsr1l,f,c
  2456  00704A  500B               	movf	PID_Initialize@pid+1,w,c
  2457  00704C  22E2               	addwfc	fsr1h,f,c
  2458  00704E  CFDE FFE6          	movff	postinc2,postinc1
  2459  007052  CFDE FFE6          	movff	postinc2,postinc1
  2460  007056  CFDE FFE6          	movff	postinc2,postinc1
  2461                           
  2462                           ;pid.c: 169: pid->lastInput = pid->myInput;
  2463  00705A  EE20 F013          	lfsr	2,19
  2464  00705E  500A               	movf	PID_Initialize@pid,w,c
  2465  007060  26D9               	addwf	fsr2l,f,c
  2466  007062  500B               	movf	PID_Initialize@pid+1,w,c
  2467  007064  22DA               	addwfc	fsr2h,f,c
  2468  007066  EE10 F01F          	lfsr	1,31
  2469  00706A  500A               	movf	PID_Initialize@pid,w,c
  2470  00706C  26E1               	addwf	fsr1l,f,c
  2471  00706E  500B               	movf	PID_Initialize@pid+1,w,c
  2472  007070  22E2               	addwfc	fsr1h,f,c
  2473  007072  CFDE FFE6          	movff	postinc2,postinc1
  2474  007076  CFDE FFE6          	movff	postinc2,postinc1
  2475  00707A  CFDE FFE6          	movff	postinc2,postinc1
  2476                           
  2477                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  2478  00707E  EE20 F029          	lfsr	2,41
  2479  007082  500A               	movf	PID_Initialize@pid,w,c
  2480  007084  26D9               	addwf	fsr2l,f,c
  2481  007086  500B               	movf	PID_Initialize@pid+1,w,c
  2482  007088  22DA               	addwfc	fsr2h,f,c
  2483  00708A  CFDE F001          	movff	postinc2,___ftge@ff1
  2484  00708E  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2485  007092  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2486  007096  EE20 F01C          	lfsr	2,28
  2487  00709A  500A               	movf	PID_Initialize@pid,w,c
  2488  00709C  26D9               	addwf	fsr2l,f,c
  2489  00709E  500B               	movf	PID_Initialize@pid+1,w,c
  2490  0070A0  22DA               	addwfc	fsr2h,f,c
  2491  0070A2  CFDE F004          	movff	postinc2,___ftge@ff2
  2492  0070A6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2493  0070AA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2494  0070AE  ECAB  F035         	call	___ftge	;wreg free
  2495  0070B2  B0D8               	btfsc	status,0,c
  2496  0070B4  D013               	goto	l1514
  2497                           
  2498                           ;pid.c: 171: pid->ITerm = pid->outMax;
  2499  0070B6  EE20 F029          	lfsr	2,41
  2500  0070BA  500A               	movf	PID_Initialize@pid,w,c
  2501  0070BC  26D9               	addwf	fsr2l,f,c
  2502  0070BE  500B               	movf	PID_Initialize@pid+1,w,c
  2503  0070C0  22DA               	addwfc	fsr2h,f,c
  2504  0070C2  EE10 F01C          	lfsr	1,28
  2505  0070C6  500A               	movf	PID_Initialize@pid,w,c
  2506  0070C8  26E1               	addwf	fsr1l,f,c
  2507  0070CA  500B               	movf	PID_Initialize@pid+1,w,c
  2508  0070CC  22E2               	addwfc	fsr1h,f,c
  2509  0070CE  CFDE FFE6          	movff	postinc2,postinc1
  2510  0070D2  CFDE FFE6          	movff	postinc2,postinc1
  2511  0070D6  CFDE FFE6          	movff	postinc2,postinc1
  2512                           
  2513                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  2514  0070DA  0012               	return	
  2515  0070DC                     l1514:
  2516  0070DC  EE20 F01C          	lfsr	2,28
  2517  0070E0  500A               	movf	PID_Initialize@pid,w,c
  2518  0070E2  26D9               	addwf	fsr2l,f,c
  2519  0070E4  500B               	movf	PID_Initialize@pid+1,w,c
  2520  0070E6  22DA               	addwfc	fsr2h,f,c
  2521  0070E8  CFDE F001          	movff	postinc2,___ftge@ff1
  2522  0070EC  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2523  0070F0  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2524  0070F4  EE20 F026          	lfsr	2,38
  2525  0070F8  500A               	movf	PID_Initialize@pid,w,c
  2526  0070FA  26D9               	addwf	fsr2l,f,c
  2527  0070FC  500B               	movf	PID_Initialize@pid+1,w,c
  2528  0070FE  22DA               	addwfc	fsr2h,f,c
  2529  007100  CFDE F004          	movff	postinc2,___ftge@ff2
  2530  007104  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2531  007108  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2532  00710C  ECAB  F035         	call	___ftge	;wreg free
  2533  007110  B0D8               	btfsc	status,0,c
  2534  007112  0012               	return	
  2535                           
  2536                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2537  007114  EE20 F026          	lfsr	2,38
  2538  007118  500A               	movf	PID_Initialize@pid,w,c
  2539  00711A  26D9               	addwf	fsr2l,f,c
  2540  00711C  500B               	movf	PID_Initialize@pid+1,w,c
  2541  00711E  22DA               	addwfc	fsr2h,f,c
  2542  007120  EE10 F01C          	lfsr	1,28
  2543  007124  500A               	movf	PID_Initialize@pid,w,c
  2544  007126  26E1               	addwf	fsr1l,f,c
  2545  007128  500B               	movf	PID_Initialize@pid+1,w,c
  2546  00712A  22E2               	addwfc	fsr1h,f,c
  2547  00712C  CFDE FFE6          	movff	postinc2,postinc1
  2548  007130  CFDE FFE6          	movff	postinc2,postinc1
  2549  007134  CFDE FFE6          	movff	postinc2,postinc1
  2550  007138  0012               	return	
  2551  00713A                     __end_of_PID_Initialize:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           postinc0	equ	0xFEE
  2558                           wreg	equ	0xFE8
  2559                           postinc1	equ	0xFE6
  2560                           postdec1	equ	0xFE5
  2561                           fsr1h	equ	0xFE2
  2562                           fsr1l	equ	0xFE1
  2563                           indf2	equ	0xFDF
  2564                           postinc2	equ	0xFDE
  2565                           postdec2	equ	0xFDD
  2566                           fsr2h	equ	0xFDA
  2567                           fsr2l	equ	0xFD9
  2568                           status	equ	0xFD8
  2569                           
  2570 ;; *************** function _PID_Compute *****************
  2571 ;; Defined at:
  2572 ;;		line 43 in file "pid.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  pid             2   38[COMRAM] PTR struct .
  2575 ;;		 -> main@PID(45), 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  output          3   52[COMRAM] float 
  2578 ;;  input           3   49[COMRAM] float 
  2579 ;;  error           3   46[COMRAM] float 
  2580 ;;  dInput          3   40[COMRAM] float 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      unsigned char 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2590 ;;      Params:         2       0       0       0       0       0       0       0       0
  2591 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2593 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:       17 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    2
  2597 ;; This function calls:
  2598 ;;		___ftadd
  2599 ;;		___ftge
  2600 ;;		___ftmul
  2601 ;;		___ftneg
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text12
  2608  0079E8                     __ptext12:
  2609                           	opt stack 0
  2610  0079E8                     _PID_Compute:
  2611                           	opt stack 28
  2612                           
  2613                           ;pid.c: 44: if (!pid->inAuto) {
  2614                           
  2615                           ;incstack = 0
  2616  0079E8  EE20 F02C          	lfsr	2,44
  2617  0079EC  5027               	movf	PID_Compute@pid,w,c
  2618  0079EE  26D9               	addwf	fsr2l,f,c
  2619  0079F0  5028               	movf	PID_Compute@pid+1,w,c
  2620  0079F2  22DA               	addwfc	fsr2h,f,c
  2621  0079F4  50DF               	movf	indf2,w,c
  2622  0079F6  B4D8               	btfsc	status,2,c
  2623  0079F8  0012               	return	
  2624                           
  2625                           ;pid.c: 46: }
  2626                           ;pid.c: 51: FloatType input = pid->myInput;
  2627                           
  2628                           ;pid.c: 45: return 0;
  2629                           ;	Return value of _PID_Compute is never used
  2630  0079FA  EE20 F013          	lfsr	2,19
  2631  0079FE  5027               	movf	PID_Compute@pid,w,c
  2632  007A00  26D9               	addwf	fsr2l,f,c
  2633  007A02  5028               	movf	PID_Compute@pid+1,w,c
  2634  007A04  22DA               	addwfc	fsr2h,f,c
  2635  007A06  CFDE F032          	movff	postinc2,PID_Compute@input
  2636  007A0A  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2637  007A0E  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2638                           
  2639                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2640  007A12  C032  F024         	movff	PID_Compute@input,___ftneg@f1
  2641  007A16  C033  F025         	movff	PID_Compute@input+1,___ftneg@f1+1
  2642  007A1A  C034  F026         	movff	PID_Compute@input+2,___ftneg@f1+2
  2643  007A1E  EC02  F035         	call	___ftneg	;wreg free
  2644  007A22  C024  F018         	movff	?___ftneg,___ftadd@f1
  2645  007A26  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2646  007A2A  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2647  007A2E  EE20 F019          	lfsr	2,25
  2648  007A32  5027               	movf	PID_Compute@pid,w,c
  2649  007A34  26D9               	addwf	fsr2l,f,c
  2650  007A36  5028               	movf	PID_Compute@pid+1,w,c
  2651  007A38  22DA               	addwfc	fsr2h,f,c
  2652  007A3A  CFDE F01B          	movff	postinc2,___ftadd@f2
  2653  007A3E  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2654  007A42  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2655  007A46  EC22  F039         	call	___ftadd	;wreg free
  2656  007A4A  C018  F02F         	movff	?___ftadd,PID_Compute@error
  2657  007A4E  C019  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2658  007A52  C01A  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2659                           
  2660                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2661  007A56  EE20 F01C          	lfsr	2,28
  2662  007A5A  5027               	movf	PID_Compute@pid,w,c
  2663  007A5C  26D9               	addwf	fsr2l,f,c
  2664  007A5E  5028               	movf	PID_Compute@pid+1,w,c
  2665  007A60  22DA               	addwfc	fsr2h,f,c
  2666  007A62  CFDE F018          	movff	postinc2,___ftadd@f1
  2667  007A66  CFDE F019          	movff	postinc2,___ftadd@f1+1
  2668  007A6A  CFDD F01A          	movff	postdec2,___ftadd@f1+2
  2669  007A6E  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2670  007A72  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2671  007A76  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2672  007A7A  EE20 F00C          	lfsr	2,12
  2673  007A7E  5027               	movf	PID_Compute@pid,w,c
  2674  007A80  26D9               	addwf	fsr2l,f,c
  2675  007A82  5028               	movf	PID_Compute@pid+1,w,c
  2676  007A84  22DA               	addwfc	fsr2h,f,c
  2677  007A86  CFDE F009          	movff	postinc2,___ftmul@f1
  2678  007A8A  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2679  007A8E  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2680  007A92  EC27  F037         	call	___ftmul	;wreg free
  2681  007A96  C009  F01B         	movff	?___ftmul,___ftadd@f2
  2682  007A9A  C00A  F01C         	movff	?___ftmul+1,___ftadd@f2+1
  2683  007A9E  C00B  F01D         	movff	?___ftmul+2,___ftadd@f2+2
  2684  007AA2  EC22  F039         	call	___ftadd	;wreg free
  2685  007AA6  EE20 F01C          	lfsr	2,28
  2686  007AAA  5027               	movf	PID_Compute@pid,w,c
  2687  007AAC  26D9               	addwf	fsr2l,f,c
  2688  007AAE  5028               	movf	PID_Compute@pid+1,w,c
  2689  007AB0  22DA               	addwfc	fsr2h,f,c
  2690  007AB2  C018  FFDE         	movff	?___ftadd,postinc2
  2691  007AB6  C019  FFDE         	movff	?___ftadd+1,postinc2
  2692  007ABA  C01A  FFDE         	movff	?___ftadd+2,postinc2
  2693                           
  2694                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2695  007ABE  EE20 F029          	lfsr	2,41
  2696  007AC2  5027               	movf	PID_Compute@pid,w,c
  2697  007AC4  26D9               	addwf	fsr2l,f,c
  2698  007AC6  5028               	movf	PID_Compute@pid+1,w,c
  2699  007AC8  22DA               	addwfc	fsr2h,f,c
  2700  007ACA  CFDE F001          	movff	postinc2,___ftge@ff1
  2701  007ACE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2702  007AD2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2703  007AD6  EE20 F01C          	lfsr	2,28
  2704  007ADA  5027               	movf	PID_Compute@pid,w,c
  2705  007ADC  26D9               	addwf	fsr2l,f,c
  2706  007ADE  5028               	movf	PID_Compute@pid+1,w,c
  2707  007AE0  22DA               	addwfc	fsr2h,f,c
  2708  007AE2  CFDE F004          	movff	postinc2,___ftge@ff2
  2709  007AE6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2710  007AEA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2711  007AEE  ECAB  F035         	call	___ftge	;wreg free
  2712  007AF2  B0D8               	btfsc	status,0,c
  2713  007AF4  D003               	goto	l1620
  2714                           
  2715                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2716  007AF6  EE20 F029          	lfsr	2,41
  2717  007AFA  D01E               	goto	L2
  2718  007AFC                     l1620:
  2719                           
  2720                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2721  007AFC  EE20 F01C          	lfsr	2,28
  2722  007B00  5027               	movf	PID_Compute@pid,w,c
  2723  007B02  26D9               	addwf	fsr2l,f,c
  2724  007B04  5028               	movf	PID_Compute@pid+1,w,c
  2725  007B06  22DA               	addwfc	fsr2h,f,c
  2726  007B08  CFDE F001          	movff	postinc2,___ftge@ff1
  2727  007B0C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2728  007B10  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2729  007B14  EE20 F026          	lfsr	2,38
  2730  007B18  5027               	movf	PID_Compute@pid,w,c
  2731  007B1A  26D9               	addwf	fsr2l,f,c
  2732  007B1C  5028               	movf	PID_Compute@pid+1,w,c
  2733  007B1E  22DA               	addwfc	fsr2h,f,c
  2734  007B20  CFDE F004          	movff	postinc2,___ftge@ff2
  2735  007B24  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2736  007B28  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2737  007B2C  ECAB  F035         	call	___ftge	;wreg free
  2738  007B30  B0D8               	btfsc	status,0,c
  2739  007B32  D012               	goto	l1624
  2740                           
  2741                           ;pid.c: 57: pid->ITerm = pid->outMin;
  2742  007B34  EE20 F026          	lfsr	2,38
  2743  007B38                     L2:
  2744  007B38  5027               	movf	PID_Compute@pid,w,c
  2745  007B3A  26D9               	addwf	fsr2l,f,c
  2746  007B3C  5028               	movf	PID_Compute@pid+1,w,c
  2747  007B3E  22DA               	addwfc	fsr2h,f,c
  2748  007B40  EE10 F01C          	lfsr	1,28
  2749  007B44  5027               	movf	PID_Compute@pid,w,c
  2750  007B46  26E1               	addwf	fsr1l,f,c
  2751  007B48  5028               	movf	PID_Compute@pid+1,w,c
  2752  007B4A  22E2               	addwfc	fsr1h,f,c
  2753  007B4C  CFDE FFE6          	movff	postinc2,postinc1
  2754  007B50  CFDE FFE6          	movff	postinc2,postinc1
  2755  007B54  CFDE FFE6          	movff	postinc2,postinc1
  2756  007B58                     l1624:
  2757                           
  2758                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  2759  007B58  EE20 F01F          	lfsr	2,31
  2760  007B5C  5027               	movf	PID_Compute@pid,w,c
  2761  007B5E  26D9               	addwf	fsr2l,f,c
  2762  007B60  5028               	movf	PID_Compute@pid+1,w,c
  2763  007B62  22DA               	addwfc	fsr2h,f,c
  2764  007B64  CFDE F024          	movff	postinc2,___ftneg@f1
  2765  007B68  CFDE F025          	movff	postinc2,___ftneg@f1+1
  2766  007B6C  CFDD F026          	movff	postdec2,___ftneg@f1+2
  2767  007B70  EC02  F035         	call	___ftneg	;wreg free
  2768  007B74  C024  F018         	movff	?___ftneg,___ftadd@f1
  2769  007B78  C025  F019         	movff	?___ftneg+1,___ftadd@f1+1
  2770  007B7C  C026  F01A         	movff	?___ftneg+2,___ftadd@f1+2
  2771  007B80  C032  F01B         	movff	PID_Compute@input,___ftadd@f2
  2772  007B84  C033  F01C         	movff	PID_Compute@input+1,___ftadd@f2+1
  2773  007B88  C034  F01D         	movff	PID_Compute@input+2,___ftadd@f2+2
  2774  007B8C  EC22  F039         	call	___ftadd	;wreg free
  2775  007B90  C018  F029         	movff	?___ftadd,PID_Compute@dInput
  2776  007B94  C019  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  2777  007B98  C01A  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  2778                           
  2779                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2780  007B9C  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  2781  007BA0  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  2782  007BA4  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  2783  007BA8  EE20 F00F          	lfsr	2,15
  2784  007BAC  5027               	movf	PID_Compute@pid,w,c
  2785  007BAE  26D9               	addwf	fsr2l,f,c
  2786  007BB0  5028               	movf	PID_Compute@pid+1,w,c
  2787  007BB2  22DA               	addwfc	fsr2h,f,c
  2788  007BB4  CFDE F009          	movff	postinc2,___ftmul@f1
  2789  007BB8  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2790  007BBC  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2791  007BC0  EC27  F037         	call	___ftmul	;wreg free
  2792  007BC4  C009  F024         	movff	?___ftmul,___ftneg@f1
  2793  007BC8  C00A  F025         	movff	?___ftmul+1,___ftneg@f1+1
  2794  007BCC  C00B  F026         	movff	?___ftmul+2,___ftneg@f1+2
  2795  007BD0  EC02  F035         	call	___ftneg	;wreg free
  2796  007BD4  C024  F01B         	movff	?___ftneg,___ftadd@f2
  2797  007BD8  C025  F01C         	movff	?___ftneg+1,___ftadd@f2+1
  2798  007BDC  C026  F01D         	movff	?___ftneg+2,___ftadd@f2+2
  2799  007BE0  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2800  007BE4  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2801  007BE8  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2802  007BEC  EE20 F009          	lfsr	2,9
  2803  007BF0  5027               	movf	PID_Compute@pid,w,c
  2804  007BF2  26D9               	addwf	fsr2l,f,c
  2805  007BF4  5028               	movf	PID_Compute@pid+1,w,c
  2806  007BF6  22DA               	addwfc	fsr2h,f,c
  2807  007BF8  CFDE F009          	movff	postinc2,___ftmul@f1
  2808  007BFC  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2809  007C00  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2810  007C04  EC27  F037         	call	___ftmul	;wreg free
  2811  007C08  C009  F018         	movff	?___ftmul,___ftadd@f1
  2812  007C0C  C00A  F019         	movff	?___ftmul+1,___ftadd@f1+1
  2813  007C10  C00B  F01A         	movff	?___ftmul+2,___ftadd@f1+2
  2814  007C14  EC22  F039         	call	___ftadd	;wreg free
  2815  007C18  C018  F02C         	movff	?___ftadd,_PID_Compute$1038
  2816  007C1C  C019  F02D         	movff	?___ftadd+1,_PID_Compute$1038+1
  2817  007C20  C01A  F02E         	movff	?___ftadd+2,_PID_Compute$1038+2
  2818                           
  2819                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2820  007C24  C02C  F018         	movff	_PID_Compute$1038,___ftadd@f1
  2821  007C28  C02D  F019         	movff	_PID_Compute$1038+1,___ftadd@f1+1
  2822  007C2C  C02E  F01A         	movff	_PID_Compute$1038+2,___ftadd@f1+2
  2823  007C30  EE20 F01C          	lfsr	2,28
  2824  007C34  5027               	movf	PID_Compute@pid,w,c
  2825  007C36  26D9               	addwf	fsr2l,f,c
  2826  007C38  5028               	movf	PID_Compute@pid+1,w,c
  2827  007C3A  22DA               	addwfc	fsr2h,f,c
  2828  007C3C  CFDE F01B          	movff	postinc2,___ftadd@f2
  2829  007C40  CFDE F01C          	movff	postinc2,___ftadd@f2+1
  2830  007C44  CFDD F01D          	movff	postdec2,___ftadd@f2+2
  2831  007C48  EC22  F039         	call	___ftadd	;wreg free
  2832  007C4C  C018  F035         	movff	?___ftadd,PID_Compute@output
  2833  007C50  C019  F036         	movff	?___ftadd+1,PID_Compute@output+1
  2834  007C54  C01A  F037         	movff	?___ftadd+2,PID_Compute@output+2
  2835                           
  2836                           ;pid.c: 63: if (output > pid->outMax)
  2837  007C58  EE20 F029          	lfsr	2,41
  2838  007C5C  5027               	movf	PID_Compute@pid,w,c
  2839  007C5E  26D9               	addwf	fsr2l,f,c
  2840  007C60  5028               	movf	PID_Compute@pid+1,w,c
  2841  007C62  22DA               	addwfc	fsr2h,f,c
  2842  007C64  CFDE F001          	movff	postinc2,___ftge@ff1
  2843  007C68  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2844  007C6C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2845  007C70  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  2846  007C74  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  2847  007C78  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  2848  007C7C  ECAB  F035         	call	___ftge	;wreg free
  2849  007C80  B0D8               	btfsc	status,0,c
  2850  007C82  D003               	goto	l1634
  2851                           
  2852                           ;pid.c: 64: output = pid->outMax;
  2853  007C84  EE20 F029          	lfsr	2,41
  2854  007C88  D018               	goto	L3
  2855  007C8A                     l1634:
  2856                           
  2857                           ;pid.c: 65: else if (output < pid->outMin)
  2858  007C8A  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  2859  007C8E  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  2860  007C92  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  2861  007C96  EE20 F026          	lfsr	2,38
  2862  007C9A  5027               	movf	PID_Compute@pid,w,c
  2863  007C9C  26D9               	addwf	fsr2l,f,c
  2864  007C9E  5028               	movf	PID_Compute@pid+1,w,c
  2865  007CA0  22DA               	addwfc	fsr2h,f,c
  2866  007CA2  CFDE F004          	movff	postinc2,___ftge@ff2
  2867  007CA6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2868  007CAA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2869  007CAE  ECAB  F035         	call	___ftge	;wreg free
  2870  007CB2  B0D8               	btfsc	status,0,c
  2871  007CB4  D00C               	goto	l78
  2872                           
  2873                           ;pid.c: 66: output = pid->outMin;
  2874  007CB6  EE20 F026          	lfsr	2,38
  2875  007CBA                     L3:
  2876  007CBA  5027               	movf	PID_Compute@pid,w,c
  2877  007CBC  26D9               	addwf	fsr2l,f,c
  2878  007CBE  5028               	movf	PID_Compute@pid+1,w,c
  2879  007CC0  22DA               	addwfc	fsr2h,f,c
  2880  007CC2  CFDE F035          	movff	postinc2,PID_Compute@output
  2881  007CC6  CFDE F036          	movff	postinc2,PID_Compute@output+1
  2882  007CCA  CFDD F037          	movff	postdec2,PID_Compute@output+2
  2883  007CCE                     l78:
  2884                           
  2885                           ;pid.c: 67: pid->myOutput = output;
  2886  007CCE  EE20 F016          	lfsr	2,22
  2887  007CD2  5027               	movf	PID_Compute@pid,w,c
  2888  007CD4  26D9               	addwf	fsr2l,f,c
  2889  007CD6  5028               	movf	PID_Compute@pid+1,w,c
  2890  007CD8  22DA               	addwfc	fsr2h,f,c
  2891  007CDA  C035  FFDE         	movff	PID_Compute@output,postinc2
  2892  007CDE  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  2893  007CE2  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  2894                           
  2895                           ;pid.c: 70: pid->lastInput = input;
  2896  007CE6  EE20 F01F          	lfsr	2,31
  2897  007CEA  5027               	movf	PID_Compute@pid,w,c
  2898  007CEC  26D9               	addwf	fsr2l,f,c
  2899  007CEE  5028               	movf	PID_Compute@pid+1,w,c
  2900  007CF0  22DA               	addwfc	fsr2h,f,c
  2901  007CF2  C032  FFDE         	movff	PID_Compute@input,postinc2
  2902  007CF6  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  2903  007CFA  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  2904  007CFE  0012               	return	
  2905  007D00                     __end_of_PID_Compute:
  2906                           	opt stack 0
  2907                           tblptru	equ	0xFF8
  2908                           tblptrh	equ	0xFF7
  2909                           tblptrl	equ	0xFF6
  2910                           tablat	equ	0xFF5
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           postinc1	equ	0xFE6
  2914                           postdec1	equ	0xFE5
  2915                           fsr1h	equ	0xFE2
  2916                           fsr1l	equ	0xFE1
  2917                           indf2	equ	0xFDF
  2918                           postinc2	equ	0xFDE
  2919                           postdec2	equ	0xFDD
  2920                           fsr2h	equ	0xFDA
  2921                           fsr2l	equ	0xFD9
  2922                           status	equ	0xFD8
  2923                           
  2924 ;; *************** function ___ftneg *****************
  2925 ;; Defined at:
  2926 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  f1              3   35[COMRAM] float 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  3   35[COMRAM] float 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2940 ;;      Params:         3       0       0       0       0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2943 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:        3 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;;		_PID_Compute
  2951 ;;		_PID_SetTunings
  2952 ;;		_PID_SetControllerDirection
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text13
  2957  006A04                     __ptext13:
  2958                           	opt stack 0
  2959  006A04                     ___ftneg:
  2960                           	opt stack 30
  2961                           
  2962                           ;incstack = 0
  2963  006A04  5024               	movf	___ftneg@f1,w,c
  2964  006A06  1025               	iorwf	___ftneg@f1+1,w,c
  2965  006A08  1026               	iorwf	___ftneg@f1+2,w,c
  2966  006A0A  B4D8               	btfsc	status,2,c
  2967  006A0C  D006               	goto	l435
  2968  006A0E  0E00               	movlw	0
  2969  006A10  1A24               	xorwf	___ftneg@f1,f,c
  2970  006A12  0E00               	movlw	0
  2971  006A14  1A25               	xorwf	___ftneg@f1+1,f,c
  2972  006A16  0E80               	movlw	128
  2973  006A18  1A26               	xorwf	___ftneg@f1+2,f,c
  2974  006A1A                     l435:
  2975  006A1A  C024  F024         	movff	___ftneg@f1,?___ftneg
  2976  006A1E  C025  F025         	movff	___ftneg@f1+1,?___ftneg+1
  2977  006A22  C026  F026         	movff	___ftneg@f1+2,?___ftneg+2
  2978  006A26  0012               	return		;funcret
  2979  006A28                     __end_of___ftneg:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           postinc1	equ	0xFE6
  2988                           postdec1	equ	0xFE5
  2989                           fsr1h	equ	0xFE2
  2990                           fsr1l	equ	0xFE1
  2991                           indf2	equ	0xFDF
  2992                           postinc2	equ	0xFDE
  2993                           postdec2	equ	0xFDD
  2994                           fsr2h	equ	0xFDA
  2995                           fsr2l	equ	0xFD9
  2996                           status	equ	0xFD8
  2997                           
  2998 ;; *************** function ___ftmul *****************
  2999 ;; Defined at:
  3000 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  f1              3    8[COMRAM] float 
  3003 ;;  f2              3   11[COMRAM] float 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  3006 ;;  sign            1   22[COMRAM] unsigned char 
  3007 ;;  cntr            1   21[COMRAM] unsigned char 
  3008 ;;  exp             1   17[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  3    8[COMRAM] float 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3018 ;;      Params:         6       0       0       0       0       0       0       0       0
  3019 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3020 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3021 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3022 ;;Total ram usage:       15 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    1
  3025 ;; This function calls:
  3026 ;;		___ftpack
  3027 ;; This function is called by:
  3028 ;;		_PID_Compute
  3029 ;;		_PID_SetTunings
  3030 ;;		_PID_SetSampleTime
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text14
  3035  006E4E                     __ptext14:
  3036                           	opt stack 0
  3037  006E4E                     ___ftmul:
  3038                           	opt stack 27
  3039                           
  3040                           ;incstack = 0
  3041  006E4E  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  3042  006E52  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3043  006E54  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3044  006E56  340A               	rlcf	___ftmul@f1+1,w,c
  3045  006E58  360F               	rlcf	??___ftmul& (0+255),f,c
  3046  006E5A  E301               	bnc	u921
  3047  006E5C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3048  006E5E                     u921:
  3049  006E5E  500F               	movf	??___ftmul,w,c
  3050  006E60  6E12               	movwf	___ftmul@exp,c
  3051  006E62  5012               	movf	___ftmul@exp,w,c
  3052  006E64  A4D8               	btfss	status,2,c
  3053  006E66  D007               	goto	l1380
  3054  006E68  0E00               	movlw	0
  3055  006E6A  6E09               	movwf	?___ftmul,c
  3056  006E6C  0E00               	movlw	0
  3057  006E6E  6E0A               	movwf	?___ftmul+1,c
  3058  006E70  0E00               	movlw	0
  3059  006E72  6E0B               	movwf	?___ftmul+2,c
  3060  006E74  0012               	return	
  3061  006E76                     l1380:
  3062  006E76  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  3063  006E7A  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3064  006E7C  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3065  006E7E  340D               	rlcf	___ftmul@f2+1,w,c
  3066  006E80  360F               	rlcf	??___ftmul& (0+255),f,c
  3067  006E82  E301               	bnc	u941
  3068  006E84  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3069  006E86                     u941:
  3070  006E86  500F               	movf	??___ftmul,w,c
  3071  006E88  6E17               	movwf	___ftmul@sign,c
  3072  006E8A  5017               	movf	___ftmul@sign,w,c
  3073  006E8C  A4D8               	btfss	status,2,c
  3074  006E8E  D007               	goto	l1386
  3075  006E90  0E00               	movlw	0
  3076  006E92  6E09               	movwf	?___ftmul,c
  3077  006E94  0E00               	movlw	0
  3078  006E96  6E0A               	movwf	?___ftmul+1,c
  3079  006E98  0E00               	movlw	0
  3080  006E9A  6E0B               	movwf	?___ftmul+2,c
  3081  006E9C  0012               	return	
  3082  006E9E                     l1386:
  3083  006E9E  5017               	movf	___ftmul@sign,w,c
  3084  006EA0  0F7B               	addlw	123
  3085  006EA2  2612               	addwf	___ftmul@exp,f,c
  3086  006EA4  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  3087  006EA8  500E               	movf	___ftmul@f2+2,w,c
  3088  006EAA  1A17               	xorwf	___ftmul@sign,f,c
  3089  006EAC  0E80               	movlw	128
  3090  006EAE  1617               	andwf	___ftmul@sign,f,c
  3091  006EB0  8E0A               	bsf	___ftmul@f1+1,7,c
  3092  006EB2  8E0D               	bsf	___ftmul@f2+1,7,c
  3093  006EB4  0EFF               	movlw	255
  3094  006EB6  160C               	andwf	___ftmul@f2,f,c
  3095  006EB8  0EFF               	movlw	255
  3096  006EBA  160D               	andwf	___ftmul@f2+1,f,c
  3097  006EBC  0E00               	movlw	0
  3098  006EBE  160E               	andwf	___ftmul@f2+2,f,c
  3099  006EC0  0E00               	movlw	0
  3100  006EC2  6E13               	movwf	___ftmul@f3_as_product,c
  3101  006EC4  0E00               	movlw	0
  3102  006EC6  6E14               	movwf	___ftmul@f3_as_product+1,c
  3103  006EC8  0E00               	movlw	0
  3104  006ECA  6E15               	movwf	___ftmul@f3_as_product+2,c
  3105  006ECC  0E07               	movlw	7
  3106  006ECE  6E16               	movwf	___ftmul@cntr,c
  3107  006ED0                     l1400:
  3108  006ED0  A009               	btfss	___ftmul@f1,0,c
  3109  006ED2  D006               	goto	l1404
  3110  006ED4  500C               	movf	___ftmul@f2,w,c
  3111  006ED6  2613               	addwf	___ftmul@f3_as_product,f,c
  3112  006ED8  500D               	movf	___ftmul@f2+1,w,c
  3113  006EDA  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3114  006EDC  500E               	movf	___ftmul@f2+2,w,c
  3115  006EDE  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3116  006EE0                     l1404:
  3117  006EE0  90D8               	bcf	status,0,c
  3118  006EE2  320B               	rrcf	___ftmul@f1+2,f,c
  3119  006EE4  320A               	rrcf	___ftmul@f1+1,f,c
  3120  006EE6  3209               	rrcf	___ftmul@f1,f,c
  3121  006EE8  90D8               	bcf	status,0,c
  3122  006EEA  360C               	rlcf	___ftmul@f2,f,c
  3123  006EEC  360D               	rlcf	___ftmul@f2+1,f,c
  3124  006EEE  360E               	rlcf	___ftmul@f2+2,f,c
  3125  006EF0  2E16               	decfsz	___ftmul@cntr,f,c
  3126  006EF2  D7EE               	goto	l1400
  3127  006EF4  0E09               	movlw	9
  3128  006EF6  6E16               	movwf	___ftmul@cntr,c
  3129  006EF8                     l1410:
  3130  006EF8  A009               	btfss	___ftmul@f1,0,c
  3131  006EFA  D006               	goto	l1414
  3132  006EFC  500C               	movf	___ftmul@f2,w,c
  3133  006EFE  2613               	addwf	___ftmul@f3_as_product,f,c
  3134  006F00  500D               	movf	___ftmul@f2+1,w,c
  3135  006F02  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3136  006F04  500E               	movf	___ftmul@f2+2,w,c
  3137  006F06  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3138  006F08                     l1414:
  3139  006F08  90D8               	bcf	status,0,c
  3140  006F0A  320B               	rrcf	___ftmul@f1+2,f,c
  3141  006F0C  320A               	rrcf	___ftmul@f1+1,f,c
  3142  006F0E  3209               	rrcf	___ftmul@f1,f,c
  3143  006F10  90D8               	bcf	status,0,c
  3144  006F12  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  3145  006F14  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  3146  006F16  3213               	rrcf	___ftmul@f3_as_product,f,c
  3147  006F18  2E16               	decfsz	___ftmul@cntr,f,c
  3148  006F1A  D7EE               	goto	l1410
  3149  006F1C  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3150  006F20  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3151  006F24  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3152  006F28  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  3153  006F2C  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  3154  006F30  ECF3  F035         	call	___ftpack	;wreg free
  3155  006F34  C001  F009         	movff	?___ftpack,?___ftmul
  3156  006F38  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  3157  006F3C  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  3158  006F40  0012               	return	
  3159  006F42                     __end_of___ftmul:
  3160                           	opt stack 0
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           postinc0	equ	0xFEE
  3166                           wreg	equ	0xFE8
  3167                           postinc1	equ	0xFE6
  3168                           postdec1	equ	0xFE5
  3169                           fsr1h	equ	0xFE2
  3170                           fsr1l	equ	0xFE1
  3171                           indf2	equ	0xFDF
  3172                           postinc2	equ	0xFDE
  3173                           postdec2	equ	0xFDD
  3174                           fsr2h	equ	0xFDA
  3175                           fsr2l	equ	0xFD9
  3176                           status	equ	0xFD8
  3177                           
  3178 ;; *************** function ___ftge *****************
  3179 ;; Defined at:
  3180 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  ff1             3    0[COMRAM] float 
  3183 ;;  ff2             3    3[COMRAM] float 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;		None               void
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3195 ;;      Params:         6       0       0       0       0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3197 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3198 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3199 ;;Total ram usage:        9 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;;		_PID_Compute
  3206 ;;		_PID_SetOutputLimits
  3207 ;;		_PID_Initialize
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text15
  3212  006B56                     __ptext15:
  3213                           	opt stack 0
  3214  006B56                     ___ftge:
  3215                           	opt stack 30
  3216                           
  3217                           ;incstack = 0
  3218  006B56  AE03               	btfss	___ftge@ff1+2,7,c
  3219  006B58  D016               	goto	l1426
  3220  006B5A  C001  F007         	movff	___ftge@ff1,??___ftge
  3221  006B5E  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3222  006B62  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3223  006B66  1E07               	comf	??___ftge,f,c
  3224  006B68  1E08               	comf	??___ftge+1,f,c
  3225  006B6A  1E09               	comf	??___ftge+2,f,c
  3226  006B6C  2A07               	incf	??___ftge,f,c
  3227  006B6E  0E00               	movlw	0
  3228  006B70  2208               	addwfc	??___ftge+1,f,c
  3229  006B72  2209               	addwfc	??___ftge+2,f,c
  3230  006B74  0E00               	movlw	0
  3231  006B76  2407               	addwf	??___ftge,w,c
  3232  006B78  6E01               	movwf	___ftge@ff1,c
  3233  006B7A  0E00               	movlw	0
  3234  006B7C  2008               	addwfc	??___ftge+1,w,c
  3235  006B7E  6E02               	movwf	___ftge@ff1+1,c
  3236  006B80  0E80               	movlw	128
  3237  006B82  2009               	addwfc	??___ftge+2,w,c
  3238  006B84  6E03               	movwf	___ftge@ff1+2,c
  3239  006B86                     l1426:
  3240  006B86  AE06               	btfss	___ftge@ff2+2,7,c
  3241  006B88  D016               	goto	l1430
  3242  006B8A  C004  F007         	movff	___ftge@ff2,??___ftge
  3243  006B8E  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3244  006B92  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3245  006B96  1E07               	comf	??___ftge,f,c
  3246  006B98  1E08               	comf	??___ftge+1,f,c
  3247  006B9A  1E09               	comf	??___ftge+2,f,c
  3248  006B9C  2A07               	incf	??___ftge,f,c
  3249  006B9E  0E00               	movlw	0
  3250  006BA0  2208               	addwfc	??___ftge+1,f,c
  3251  006BA2  2209               	addwfc	??___ftge+2,f,c
  3252  006BA4  0E00               	movlw	0
  3253  006BA6  2407               	addwf	??___ftge,w,c
  3254  006BA8  6E04               	movwf	___ftge@ff2,c
  3255  006BAA  0E00               	movlw	0
  3256  006BAC  2008               	addwfc	??___ftge+1,w,c
  3257  006BAE  6E05               	movwf	___ftge@ff2+1,c
  3258  006BB0  0E80               	movlw	128
  3259  006BB2  2009               	addwfc	??___ftge+2,w,c
  3260  006BB4  6E06               	movwf	___ftge@ff2+2,c
  3261  006BB6                     l1430:
  3262  006BB6  0E00               	movlw	0
  3263  006BB8  1A01               	xorwf	___ftge@ff1,f,c
  3264  006BBA  0E00               	movlw	0
  3265  006BBC  1A02               	xorwf	___ftge@ff1+1,f,c
  3266  006BBE  0E80               	movlw	128
  3267  006BC0  1A03               	xorwf	___ftge@ff1+2,f,c
  3268  006BC2  0E00               	movlw	0
  3269  006BC4  1A04               	xorwf	___ftge@ff2,f,c
  3270  006BC6  0E00               	movlw	0
  3271  006BC8  1A05               	xorwf	___ftge@ff2+1,f,c
  3272  006BCA  0E80               	movlw	128
  3273  006BCC  1A06               	xorwf	___ftge@ff2+2,f,c
  3274  006BCE  5004               	movf	___ftge@ff2,w,c
  3275  006BD0  5C01               	subwf	___ftge@ff1,w,c
  3276  006BD2  5005               	movf	___ftge@ff2+1,w,c
  3277  006BD4  5802               	subwfb	___ftge@ff1+1,w,c
  3278  006BD6  5006               	movf	___ftge@ff2+2,w,c
  3279  006BD8  5803               	subwfb	___ftge@ff1+2,w,c
  3280  006BDA  B0D8               	btfsc	status,0,c
  3281  006BDC  D002               	goto	l1436
  3282  006BDE  90D8               	bcf	status,0,c
  3283  006BE0  0012               	return	
  3284  006BE2                     l1436:
  3285  006BE2  80D8               	bsf	status,0,c
  3286  006BE4  0012               	return	
  3287  006BE6                     __end_of___ftge:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           postinc1	equ	0xFE6
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           postinc2	equ	0xFDE
  3301                           postdec2	equ	0xFDD
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function ___ftadd *****************
  3307 ;; Defined at:
  3308 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  f1              3   23[COMRAM] float 
  3311 ;;  f2              3   26[COMRAM] float 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  exp1            1   34[COMRAM] unsigned char 
  3314 ;;  exp2            1   33[COMRAM] unsigned char 
  3315 ;;  sign            1   32[COMRAM] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  3   23[COMRAM] float 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3325 ;;      Params:         6       0       0       0       0       0       0       0       0
  3326 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3327 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3328 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3329 ;;Total ram usage:       12 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    1
  3332 ;; This function calls:
  3333 ;;		___ftpack
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;;		_PID_Compute
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text16
  3341  007244                     __ptext16:
  3342                           	opt stack 0
  3343  007244                     ___ftadd:
  3344                           	opt stack 29
  3345                           
  3346                           ;incstack = 0
  3347  007244  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  3348  007248  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3349  00724A  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3350  00724C  3419               	rlcf	___ftadd@f1+1,w,c
  3351  00724E  361E               	rlcf	??___ftadd& (0+255),f,c
  3352  007250  E301               	bnc	u1171
  3353  007252  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3354  007254                     u1171:
  3355  007254  501E               	movf	??___ftadd,w,c
  3356  007256  6E23               	movwf	___ftadd@exp1,c
  3357  007258  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  3358  00725C  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  3359  00725E  6A20               	clrf	(??___ftadd+2)& (0+255),c
  3360  007260  341C               	rlcf	___ftadd@f2+1,w,c
  3361  007262  361E               	rlcf	??___ftadd& (0+255),f,c
  3362  007264  E301               	bnc	u1181
  3363  007266  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  3364  007268                     u1181:
  3365  007268  501E               	movf	??___ftadd,w,c
  3366  00726A  6E22               	movwf	___ftadd@exp2,c
  3367  00726C  5023               	movf	___ftadd@exp1,w,c
  3368  00726E  B4D8               	btfsc	status,2,c
  3369  007270  D00B               	goto	l378
  3370  007272  5022               	movf	___ftadd@exp2,w,c
  3371  007274  5C23               	subwf	___ftadd@exp1,w,c
  3372  007276  B0D8               	btfsc	status,0,c
  3373  007278  D00E               	goto	l1526
  3374  00727A  5023               	movf	___ftadd@exp1,w,c
  3375  00727C  0800               	sublw	0
  3376  00727E  2422               	addwf	___ftadd@exp2,w,c
  3377  007280  6E1E               	movwf	??___ftadd& (0+255),c
  3378  007282  0E18               	movlw	24
  3379  007284  641E               	cpfsgt	??___ftadd,c
  3380  007286  D007               	goto	l1526
  3381  007288                     l378:
  3382  007288  C01B  F018         	movff	___ftadd@f2,?___ftadd
  3383  00728C  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  3384  007290  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  3385  007294  0012               	return	
  3386  007296                     l1526:
  3387  007296  5022               	movf	___ftadd@exp2,w,c
  3388  007298  B4D8               	btfsc	status,2,c
  3389  00729A  D00B               	goto	l382
  3390  00729C  5023               	movf	___ftadd@exp1,w,c
  3391  00729E  5C22               	subwf	___ftadd@exp2,w,c
  3392  0072A0  B0D8               	btfsc	status,0,c
  3393  0072A2  D00E               	goto	l1532
  3394  0072A4  5022               	movf	___ftadd@exp2,w,c
  3395  0072A6  0800               	sublw	0
  3396  0072A8  2423               	addwf	___ftadd@exp1,w,c
  3397  0072AA  6E1E               	movwf	??___ftadd& (0+255),c
  3398  0072AC  0E18               	movlw	24
  3399  0072AE  641E               	cpfsgt	??___ftadd,c
  3400  0072B0  D007               	goto	l1532
  3401  0072B2                     l382:
  3402  0072B2  C018  F018         	movff	___ftadd@f1,?___ftadd
  3403  0072B6  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  3404  0072BA  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  3405  0072BE  0012               	return	
  3406  0072C0                     l1532:
  3407  0072C0  0E06               	movlw	6
  3408  0072C2  6E21               	movwf	___ftadd@sign,c
  3409  0072C4  BE1A               	btfsc	___ftadd@f1+2,7,c
  3410  0072C6  8E21               	bsf	___ftadd@sign,7,c
  3411  0072C8  BE1D               	btfsc	___ftadd@f2+2,7,c
  3412  0072CA  8C21               	bsf	___ftadd@sign,6,c
  3413  0072CC  8E19               	bsf	___ftadd@f1+1,7,c
  3414  0072CE  0EFF               	movlw	255
  3415  0072D0  1618               	andwf	___ftadd@f1,f,c
  3416  0072D2  0EFF               	movlw	255
  3417  0072D4  1619               	andwf	___ftadd@f1+1,f,c
  3418  0072D6  0E00               	movlw	0
  3419  0072D8  161A               	andwf	___ftadd@f1+2,f,c
  3420  0072DA  8E1C               	bsf	___ftadd@f2+1,7,c
  3421  0072DC  0EFF               	movlw	255
  3422  0072DE  161B               	andwf	___ftadd@f2,f,c
  3423  0072E0  0EFF               	movlw	255
  3424  0072E2  161C               	andwf	___ftadd@f2+1,f,c
  3425  0072E4  0E00               	movlw	0
  3426  0072E6  161D               	andwf	___ftadd@f2+2,f,c
  3427  0072E8  5022               	movf	___ftadd@exp2,w,c
  3428  0072EA  5C23               	subwf	___ftadd@exp1,w,c
  3429  0072EC  B0D8               	btfsc	status,0,c
  3430  0072EE  D01B               	goto	l1558
  3431  0072F0                     l1548:
  3432  0072F0  90D8               	bcf	status,0,c
  3433  0072F2  361B               	rlcf	___ftadd@f2,f,c
  3434  0072F4  361C               	rlcf	___ftadd@f2+1,f,c
  3435  0072F6  361D               	rlcf	___ftadd@f2+2,f,c
  3436  0072F8  0622               	decf	___ftadd@exp2,f,c
  3437  0072FA  5023               	movf	___ftadd@exp1,w,c
  3438  0072FC  1822               	xorwf	___ftadd@exp2,w,c
  3439  0072FE  B4D8               	btfsc	status,2,c
  3440  007300  D00D               	goto	l1556
  3441  007302  0621               	decf	___ftadd@sign,f,c
  3442  007304  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3443  007308  0E07               	movlw	7
  3444  00730A  161E               	andwf	??___ftadd,f,c
  3445  00730C  B4D8               	btfsc	status,2,c
  3446  00730E  D006               	goto	l1556
  3447  007310  D7EF               	goto	l1548
  3448  007312                     l1554:
  3449  007312  90D8               	bcf	status,0,c
  3450  007314  321A               	rrcf	___ftadd@f1+2,f,c
  3451  007316  3219               	rrcf	___ftadd@f1+1,f,c
  3452  007318  3218               	rrcf	___ftadd@f1,f,c
  3453  00731A  2A23               	incf	___ftadd@exp1,f,c
  3454  00731C                     l1556:
  3455  00731C  5022               	movf	___ftadd@exp2,w,c
  3456  00731E  1823               	xorwf	___ftadd@exp1,w,c
  3457  007320  B4D8               	btfsc	status,2,c
  3458  007322  D01F               	goto	l393
  3459  007324  D7F6               	goto	l1554
  3460  007326                     l1558:
  3461  007326  5023               	movf	___ftadd@exp1,w,c
  3462  007328  5C22               	subwf	___ftadd@exp2,w,c
  3463  00732A  B0D8               	btfsc	status,0,c
  3464  00732C  D01A               	goto	l393
  3465  00732E                     l1560:
  3466  00732E  90D8               	bcf	status,0,c
  3467  007330  3618               	rlcf	___ftadd@f1,f,c
  3468  007332  3619               	rlcf	___ftadd@f1+1,f,c
  3469  007334  361A               	rlcf	___ftadd@f1+2,f,c
  3470  007336  0623               	decf	___ftadd@exp1,f,c
  3471  007338  5023               	movf	___ftadd@exp1,w,c
  3472  00733A  1822               	xorwf	___ftadd@exp2,w,c
  3473  00733C  B4D8               	btfsc	status,2,c
  3474  00733E  D00D               	goto	l1568
  3475  007340  0621               	decf	___ftadd@sign,f,c
  3476  007342  C021  F01E         	movff	___ftadd@sign,??___ftadd
  3477  007346  0E07               	movlw	7
  3478  007348  161E               	andwf	??___ftadd,f,c
  3479  00734A  B4D8               	btfsc	status,2,c
  3480  00734C  D006               	goto	l1568
  3481  00734E  D7EF               	goto	l1560
  3482  007350                     l1566:
  3483  007350  90D8               	bcf	status,0,c
  3484  007352  321D               	rrcf	___ftadd@f2+2,f,c
  3485  007354  321C               	rrcf	___ftadd@f2+1,f,c
  3486  007356  321B               	rrcf	___ftadd@f2,f,c
  3487  007358  2A22               	incf	___ftadd@exp2,f,c
  3488  00735A                     l1568:
  3489  00735A  5022               	movf	___ftadd@exp2,w,c
  3490  00735C  1823               	xorwf	___ftadd@exp1,w,c
  3491  00735E  A4D8               	btfss	status,2,c
  3492  007360  D7F7               	goto	l1566
  3493  007362                     l393:
  3494  007362  AE21               	btfss	___ftadd@sign,7,c
  3495  007364  D00C               	goto	l402
  3496  007366  0EFF               	movlw	255
  3497  007368  1A18               	xorwf	___ftadd@f1,f,c
  3498  00736A  0EFF               	movlw	255
  3499  00736C  1A19               	xorwf	___ftadd@f1+1,f,c
  3500  00736E  0EFF               	movlw	255
  3501  007370  1A1A               	xorwf	___ftadd@f1+2,f,c
  3502  007372  0E01               	movlw	1
  3503  007374  2618               	addwf	___ftadd@f1,f,c
  3504  007376  0E00               	movlw	0
  3505  007378  2219               	addwfc	___ftadd@f1+1,f,c
  3506  00737A  0E00               	movlw	0
  3507  00737C  221A               	addwfc	___ftadd@f1+2,f,c
  3508  00737E                     l402:
  3509  00737E  AC21               	btfss	___ftadd@sign,6,c
  3510  007380  D00C               	goto	l1574
  3511  007382  0EFF               	movlw	255
  3512  007384  1A1B               	xorwf	___ftadd@f2,f,c
  3513  007386  0EFF               	movlw	255
  3514  007388  1A1C               	xorwf	___ftadd@f2+1,f,c
  3515  00738A  0EFF               	movlw	255
  3516  00738C  1A1D               	xorwf	___ftadd@f2+2,f,c
  3517  00738E  0E01               	movlw	1
  3518  007390  261B               	addwf	___ftadd@f2,f,c
  3519  007392  0E00               	movlw	0
  3520  007394  221C               	addwfc	___ftadd@f2+1,f,c
  3521  007396  0E00               	movlw	0
  3522  007398  221D               	addwfc	___ftadd@f2+2,f,c
  3523  00739A                     l1574:
  3524  00739A  0E00               	movlw	0
  3525  00739C  6E21               	movwf	___ftadd@sign,c
  3526  00739E  5018               	movf	___ftadd@f1,w,c
  3527  0073A0  261B               	addwf	___ftadd@f2,f,c
  3528  0073A2  5019               	movf	___ftadd@f1+1,w,c
  3529  0073A4  221C               	addwfc	___ftadd@f2+1,f,c
  3530  0073A6  501A               	movf	___ftadd@f1+2,w,c
  3531  0073A8  221D               	addwfc	___ftadd@f2+2,f,c
  3532  0073AA  AE1D               	btfss	___ftadd@f2+2,7,c
  3533  0073AC  D00E               	goto	l1584
  3534  0073AE  0EFF               	movlw	255
  3535  0073B0  1A1B               	xorwf	___ftadd@f2,f,c
  3536  0073B2  0EFF               	movlw	255
  3537  0073B4  1A1C               	xorwf	___ftadd@f2+1,f,c
  3538  0073B6  0EFF               	movlw	255
  3539  0073B8  1A1D               	xorwf	___ftadd@f2+2,f,c
  3540  0073BA  0E01               	movlw	1
  3541  0073BC  261B               	addwf	___ftadd@f2,f,c
  3542  0073BE  0E00               	movlw	0
  3543  0073C0  221C               	addwfc	___ftadd@f2+1,f,c
  3544  0073C2  0E00               	movlw	0
  3545  0073C4  221D               	addwfc	___ftadd@f2+2,f,c
  3546  0073C6  0E01               	movlw	1
  3547  0073C8  6E21               	movwf	___ftadd@sign,c
  3548  0073CA                     l1584:
  3549  0073CA  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  3550  0073CE  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3551  0073D2  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3552  0073D6  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  3553  0073DA  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  3554  0073DE  ECF3  F035         	call	___ftpack	;wreg free
  3555  0073E2  C001  F018         	movff	?___ftpack,?___ftadd
  3556  0073E6  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  3557  0073EA  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  3558  0073EE  0012               	return	
  3559  0073F0                     __end_of___ftadd:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           postinc1	equ	0xFE6
  3568                           postdec1	equ	0xFE5
  3569                           fsr1h	equ	0xFE2
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function ___ftpack *****************
  3579 ;; Defined at:
  3580 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  arg             3    0[COMRAM] unsigned um
  3583 ;;  exp             1    3[COMRAM] unsigned char 
  3584 ;;  sign            1    4[COMRAM] unsigned char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  3    0[COMRAM] float 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3596 ;;      Params:         5       0       0       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3598 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3599 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3600 ;;Total ram usage:        8 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		___awtoft
  3606 ;;		___ftadd
  3607 ;;		___ftdiv
  3608 ;;		___ftmul
  3609 ;;		___lbtoft
  3610 ;;		___lltoft
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text17
  3615  006BE6                     __ptext17:
  3616                           	opt stack 0
  3617  006BE6                     ___ftpack:
  3618                           	opt stack 29
  3619                           
  3620                           ;incstack = 0
  3621  006BE6  5004               	movf	___ftpack@exp,w,c
  3622  006BE8  B4D8               	btfsc	status,2,c
  3623  006BEA  D005               	goto	l1296
  3624  006BEC  5001               	movf	___ftpack@arg,w,c
  3625  006BEE  1002               	iorwf	___ftpack@arg+1,w,c
  3626  006BF0  1003               	iorwf	___ftpack@arg+2,w,c
  3627  006BF2  A4D8               	btfss	status,2,c
  3628  006BF4  D00C               	goto	l1302
  3629  006BF6                     l1296:
  3630  006BF6  0E00               	movlw	0
  3631  006BF8  6E01               	movwf	?___ftpack,c
  3632  006BFA  0E00               	movlw	0
  3633  006BFC  6E02               	movwf	?___ftpack+1,c
  3634  006BFE  0E00               	movlw	0
  3635  006C00  6E03               	movwf	?___ftpack+2,c
  3636  006C02  0012               	return	
  3637  006C04                     l1300:
  3638  006C04  2A04               	incf	___ftpack@exp,f,c
  3639  006C06  90D8               	bcf	status,0,c
  3640  006C08  3203               	rrcf	___ftpack@arg+2,f,c
  3641  006C0A  3202               	rrcf	___ftpack@arg+1,f,c
  3642  006C0C  3201               	rrcf	___ftpack@arg,f,c
  3643  006C0E                     l1302:
  3644  006C0E  0E00               	movlw	0
  3645  006C10  1401               	andwf	___ftpack@arg,w,c
  3646  006C12  6E06               	movwf	??___ftpack& (0+255),c
  3647  006C14  0E00               	movlw	0
  3648  006C16  1402               	andwf	___ftpack@arg+1,w,c
  3649  006C18  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3650  006C1A  0EFE               	movlw	254
  3651  006C1C  1403               	andwf	___ftpack@arg+2,w,c
  3652  006C1E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3653  006C20  5006               	movf	??___ftpack,w,c
  3654  006C22  1007               	iorwf	??___ftpack+1,w,c
  3655  006C24  1008               	iorwf	??___ftpack+2,w,c
  3656  006C26  B4D8               	btfsc	status,2,c
  3657  006C28  D00C               	goto	l1308
  3658  006C2A  D7EC               	goto	l1300
  3659  006C2C                     l1304:
  3660  006C2C  2A04               	incf	___ftpack@exp,f,c
  3661  006C2E  0E01               	movlw	1
  3662  006C30  2601               	addwf	___ftpack@arg,f,c
  3663  006C32  0E00               	movlw	0
  3664  006C34  2202               	addwfc	___ftpack@arg+1,f,c
  3665  006C36  0E00               	movlw	0
  3666  006C38  2203               	addwfc	___ftpack@arg+2,f,c
  3667  006C3A  90D8               	bcf	status,0,c
  3668  006C3C  3203               	rrcf	___ftpack@arg+2,f,c
  3669  006C3E  3202               	rrcf	___ftpack@arg+1,f,c
  3670  006C40  3201               	rrcf	___ftpack@arg,f,c
  3671  006C42                     l1308:
  3672  006C42  0E00               	movlw	0
  3673  006C44  1401               	andwf	___ftpack@arg,w,c
  3674  006C46  6E06               	movwf	??___ftpack& (0+255),c
  3675  006C48  0E00               	movlw	0
  3676  006C4A  1402               	andwf	___ftpack@arg+1,w,c
  3677  006C4C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3678  006C4E  0EFF               	movlw	255
  3679  006C50  1403               	andwf	___ftpack@arg+2,w,c
  3680  006C52  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3681  006C54  5006               	movf	??___ftpack,w,c
  3682  006C56  1007               	iorwf	??___ftpack+1,w,c
  3683  006C58  1008               	iorwf	??___ftpack+2,w,c
  3684  006C5A  B4D8               	btfsc	status,2,c
  3685  006C5C  D006               	goto	l1312
  3686  006C5E  D7E6               	goto	l1304
  3687  006C60                     l1310:
  3688  006C60  0604               	decf	___ftpack@exp,f,c
  3689  006C62  90D8               	bcf	status,0,c
  3690  006C64  3601               	rlcf	___ftpack@arg,f,c
  3691  006C66  3602               	rlcf	___ftpack@arg+1,f,c
  3692  006C68  3603               	rlcf	___ftpack@arg+2,f,c
  3693  006C6A                     l1312:
  3694  006C6A  BE02               	btfsc	___ftpack@arg+1,7,c
  3695  006C6C  D003               	goto	l355
  3696  006C6E  0E02               	movlw	2
  3697  006C70  6004               	cpfslt	___ftpack@exp,c
  3698  006C72  D7F6               	goto	l1310
  3699  006C74                     l355:
  3700  006C74  A004               	btfss	___ftpack@exp,0,c
  3701  006C76  9E02               	bcf	___ftpack@arg+1,7,c
  3702  006C78  90D8               	bcf	status,0,c
  3703  006C7A  3204               	rrcf	___ftpack@exp,f,c
  3704  006C7C  5004               	movf	___ftpack@exp,w,c
  3705  006C7E  1203               	iorwf	___ftpack@arg+2,f,c
  3706  006C80  5005               	movf	___ftpack@sign,w,c
  3707  006C82  A4D8               	btfss	status,2,c
  3708  006C84  8E03               	bsf	___ftpack@arg+2,7,c
  3709  006C86  C001  F001         	movff	___ftpack@arg,?___ftpack
  3710  006C8A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3711  006C8E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3712  006C92  0012               	return	
  3713  006C94                     __end_of___ftpack:
  3714                           	opt stack 0
  3715  0000                     tblptru	equ	0xFF8
  3716                           tblptrh	equ	0xFF7
  3717                           tblptrl	equ	0xFF6
  3718                           tablat	equ	0xFF5
  3719                           postinc0	equ	0xFEE
  3720                           wreg	equ	0xFE8
  3721                           postinc1	equ	0xFE6
  3722                           postdec1	equ	0xFE5
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           postinc2	equ	0xFDE
  3727                           postdec2	equ	0xFDD
  3728                           fsr2h	equ	0xFDA
  3729                           fsr2l	equ	0xFD9
  3730                           status	equ	0xFD8
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           postinc1	equ	0xFE6
  3738                           postdec1	equ	0xFE5
  3739                           fsr1h	equ	0xFE2
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748                           	psect	rparam
  3749  0000                     tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           postinc0	equ	0xFEE
  3754                           wreg	equ	0xFE8
  3755                           postinc1	equ	0xFE6
  3756                           postdec1	equ	0xFE5
  3757                           fsr1h	equ	0xFE2
  3758                           fsr1l	equ	0xFE1
  3759                           indf2	equ	0xFDF
  3760                           postinc2	equ	0xFDE
  3761                           postdec2	equ	0xFDD
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     67      69
    BANK0           160     48      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftneg
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___awtoft
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftneg
    ___ftneg->___ftadd
    ___ftmul->___ftpack
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0   43505
                                             65 COMRAM     2     2      0
                                              0 BANK0     48    48      0
                        _PID_Compute
                        _PID_SetMode
                _PID_SetOutputLimits
                           _PID_init
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2939
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   15485
                                             53 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11356
                                             38 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3504
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2382
                                             12 COMRAM     8     0      8
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3    1059
                                             38 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    2045
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1760
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   10940
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     665
                                             35 COMRAM     3     0      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1420
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4430
                                             23 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_SetOutputLimits
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftneg
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      49       5       45.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     43      45       1       72.6%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      11        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 15 11:55:28 2017

                                  _A 0099                                    _B 0096  
                                  _C 0093                                    _D 0090  
                    PID_SetMode@Mode 000E                                   l55 79CC  
                                 l78 7CCE               __end_of_PID_Initialize 713A  
                        __CFG_BORV$3 000000                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0023  
                       ___ftadd@exp2 0022                ??_PID_SetOutputLimits 0015  
                       ___ftadd@sign 0021                                  l402 737E  
                                l413 6E1C                                  l355 6C74  
                                l435 6A1A                                  l382 72B2  
                                l393 7362                                  l378 7288  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u921 6E5E                                  u941 6E86  
                                u871 6D78                                  u891 6DA0  
                       __CFG_BOR$OFF 000000                    PID_Compute@dInput 0029  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 001B                         ___ftdiv@sign 0020  
                       __CFG_WDT$OFF 000000                                 l1300 6C04  
                               l1310 6C60                                 l1302 6C0E  
                               l1312 6C6A                                 l1304 6C2C  
                               l1400 6ED0                                 l1410 6EF8  
                               l1308 6C42                                 l1404 6EE0  
                               l1340 6DB8                                 l1430 6BB6  
                               l1414 6F08                                 l1334 6D90  
                               l1360 6DF6                                 l1426 6B86  
                               l1514 70DC                                 l1532 72C0  
                               l1436 6BE2                                 l1380 6E76  
                               l1620 7AFC                                 l1604 6AE8  
                               l1526 7296                                 l1446 6B00  
                               l1296 6BF6                                 l1560 732E  
                               l1624 7B58                                 l1472 754A  
                               l1464 7490                                 l1448 6B0C  
                               l1554 7312                                 l1386 6E9E  
                               l1634 7C8A                                 l1482 6D56  
                               l1556 731C                                 l1548 72F0  
                               l1468 74EC                                 l1574 739A  
                               l1566 7350                                 l1558 7326  
                               l1718 7786                                 l1584 73CA  
                               l1568 735A                                 l1648 6A96  
                               l1680 6FE4                                 l1690 700E  
                               l1658 6F6E                                 l1676 6FD4  
                               l1694 7024                                 l1686 6FFC  
                               l1688 7008                                 l1796 79AE  
                               u1171 7254                                 u1181 7268  
                               u1380 6AC4                                 u1390 6AC6  
                               u1471 6F52                                 u1607 77EC  
                               u1617 7802                                 u1490 6F8C  
                               u1627 7826                                 u1637 783C  
                               u1495 6F84                                 u1647 7860  
                               u1577 778E                                 u1587 77B2  
                               u1597 77C8                    PID_Compute@output 0035  
                               _main 7770                         ___ftpack@arg 0001  
                       ___ftpack@exp 0004                                 _sign 0044  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9               PID_SetOutputLimits@Max 0012  
             PID_SetOutputLimits@Min 000F               PID_SetOutputLimits@pid 000D  
             __end_of_PID_SetTunings 7770                                 start 0002  
                      __CFG_IESO$OFF 000000                         ___ftmul@cntr 0016  
                       ___param_bank 000000                         ___ftmul@sign 0017  
                       ___fttol@exp1 000F                         ___fttol@lval 000B  
                      __CFG_PLLDIV$5 000000                      ?_PID_Initialize 000A  
                              ?_main 0001                      __end_of___ftadd 73F0  
                    __end_of___ftdiv 6E4E                      __end_of___ftneg 6A28  
                    __end_of___ftmul 6F42                      __end_of___fttol 7036  
                              _PORTB 000F81                                _PORTD 000F83  
                      __CFG_USBDIV$1 000000                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                      __CFG_PWRT$OFF 000000                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                         ___lltoft@exp 0011  
                   __end_of_PID_init 7244                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                                _Input 009C  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                        ___awtoft@sign 000C  
                 PID_SetMode@newAuto 0010                        ___ftpack@sign 0005  
                              tablat 000FF5                                status 000FD8  
                     __CFG_ICPRT$OFF 000000                      ?_PID_SetTunings 0027  
                       ?_PID_Compute 0027                       __CFG_MCLRE$OFF 000000  
                    __initialization 6A4C                         __end_of_main 79E8  
                       ?_PID_SetMode 000C                               ??_main 0042  
                      ___fttol@sign1 000A                        __activetblptr 000000  
                   PID_SetTunings@Kd 002F                     PID_SetTunings@Ki 002C  
                   PID_SetTunings@Kp 0029                      __CFG_CCP2MX$OFF 000000  
                   __end_of___awtoft 6ABA                     __end_of___ftpack 6C94  
                   __end_of___lbtoft 6A4C                     __end_of___lltoft 6B56  
                             _TMR1CS 007E69                               _TMR3CS 007D89  
                     __CFG_XINST$OFF 000000                               _Output 009F  
                             ___ftge 6B56                            ??___ftadd 001E  
                          ??___ftdiv 0018                            ??___ftneg 0027  
                          ??___ftmul 000F                            ??___fttol 0005  
                             clear_0 6A72                               _output 00A4  
              ___ftmul@f3_as_product 0013                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0060              __end_of__initialization 6A7C  
                    __CFG_PBADEN$OFF 000000                           ___ftadd@f1 0018  
                         ___ftadd@f2 001B                           ___ftge@ff1 0001  
                         ___ftge@ff2 0004                        ___rparam_used 000001  
                         ___ftdiv@f1 0012                           ___ftdiv@f2 0015  
                         ___ftdiv@f3 001C                           ___ftneg@f1 0024  
                         ___awtoft@c 0009                           ___lbtoft@c 000C  
                         ___ftmul@f1 0009                           ___ftmul@f2 000C  
                         ___fttol@f1 0001                       __pcstackCOMRAM 0001  
                          ?_PID_init 0036                         __pidataBANK0 6A00  
                         ___lltoft@c 0009                           __pbssBANK0 0090  
                  PID_SetTunings@pid 0027                     ??_PID_Initialize 000C  
                            ?___ftge 0001                           ??_PID_init 0042  
        __end_of_PID_SetOutputLimits 75A8                 __size_of_PID_Compute 0318  
               __size_of_PID_SetMode 0040                            ?___awtoft 0009  
                          ?___ftpack 0001                            ?___lbtoft 0009  
                          ?___lltoft 0009                          PID_init@pid 0036  
                   ??_PID_SetTunings 0032                       PID_Compute@pid 0027  
                    __CFG_VREGEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000         ??_PID_SetControllerDirection 002A  
PID_SetControllerDirection@Direction 0029                      __size_of___ftge 0090  
                            ___ftadd 7244                              ___ftdiv 6D68  
                            ___ftneg 6A04                              ___ftmul 6E4E  
                            ___fttol 6F42                      __CFG_STVREN$OFF 000000  
                            __pcinit 6A4C                           ??___awtoft 000C  
                         ??___ftpack 0006                           ??___lbtoft 000C  
                            __ramtop 0800                           ??___lltoft 000D  
                            __ptext0 7770                              __ptext1 6A28  
                            __ptext2 6F42                              __ptext3 6A82  
                            __ptext4 713A                              __ptext5 75A8  
                            __ptext6 6AFA                              __ptext7 6D68  
                            __ptext8 73F0                              __ptext9 6C94  
        PID_init@ControllerDirection 0041                              main@PID 0063  
               end_of_initialization 6A7C  __size_of_PID_SetControllerDirection 00D4  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                            _PORTCbits 000F82  
                     PID_SetMode@pid 000C                     PID_Compute@error 002F  
                   PID_Compute@input 0032                          ___ftdiv@exp 001F  
                        ___ftmul@exp 0012                       __end_of___ftge 6BE6  
                  __size_of_PID_init 010A                  start_initialization 6A4C  
                  PID_Initialize@pid 000A   __end_of_PID_SetControllerDirection 6D68  
         _PID_SetControllerDirection 6C94                             ??___ftge 0007  
                        __pdataBANK0 00A5                     __CFG_LPT1OSC$OFF 000000  
                  __size_of___awtoft 0038                    __size_of___ftpack 00AE  
                  __size_of___lbtoft 0024                    __size_of___lltoft 005C  
                        __pbssCOMRAM 0044                        __pcstackBANK0 0060  
                   _PID_Compute$1038 002C                        ??_PID_Compute 0029  
                          _main$1037 0060                        ??_PID_SetMode 000F  
                           ?___ftadd 0018                             ?___ftdiv 0012  
                           ?___ftneg 0024                             ?___ftmul 0009  
                           ?___fttol 0001                           PID_init@Kd 003E  
                         PID_init@Ki 003B                           PID_init@Kp 0038  
       __size_of_PID_SetOutputLimits 01B8                     __CFG_WDTPS$32768 000000  
                           _PID_init 713A                  __end_of_PID_Compute 7D00  
                __end_of_PID_SetMode 6AFA              __size_of_PID_Initialize 0104  
                          copy_data0 6A60                             __Hrparam 0000  
                           __Lrparam 0000              __size_of_PID_SetTunings 01C8  
                           _Setpoint 00A2                     __size_of___ftadd 01AC  
                   __size_of___ftdiv 00E6                     __size_of___ftneg 0024  
                   __size_of___ftmul 00F4                     __size_of___fttol 00F4  
                           ___awtoft 6A82                             ___ftpack 6BE6  
                           ___lbtoft 6A28                             ___lltoft 6AFA  
                           __ptext10 6ABA                             __ptext11 7036  
                           __ptext12 79E8                             __ptext13 6A04  
                           __ptext14 6E4E                             __ptext15 6B56  
                           __ptext16 7244                             __ptext17 6BE6  
                      __size_of_main 0278                          _PID_Compute 79E8  
        ?_PID_SetControllerDirection 0027                          _PID_SetMode 6ABA  
                        _PID_Out_Max 00A5                          _PID_Out_Min 00A7  
              __CFG_CPUDIV$OSC2_PLL3 000000        PID_SetControllerDirection@pid 0027  
                _PID_SetOutputLimits 73F0                       _PID_Initialize 7036  
               ?_PID_SetOutputLimits 000D                   __CFG_FOSC$HSPLL_HS 000000  
      PID_SetTunings@SampleTimeInSec 0033                       _PID_SetTunings 75A8  
