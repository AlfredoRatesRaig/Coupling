

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jun 19 12:25:19 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTD	set	3971
    50  0000                     _PORTB	set	3969
    51  0000                     _PORTCbits	set	3970
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISD	set	3989
    54  0000                     _TRISB	set	3987
    55  0000                     _TMR3CS	set	32137
    56  0000                     _TMR1CS	set	32361
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  007CE8                     __pcinit:
    62                           	opt stack 0
    63  007CE8                     start_initialization:
    64                           	opt stack 0
    65  007CE8                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (12 bytes)
    69  007CE8  EE00  F011         	lfsr	0,__pbssCOMRAM
    70  007CEC  0E0C               	movlw	12
    71  007CEE                     clear_0:
    72  007CEE  6AEE               	clrf	postinc0,c
    73  007CF0  06E8               	decf	wreg,f,c
    74  007CF2  E1FD               	bnz	clear_0
    75  007CF4                     end_of_initialization:
    76                           	opt stack 0
    77  007CF4                     __end_of__initialization:
    78                           	opt stack 0
    79  007CF4  0100               	movlb	0
    80  007CF6  EF60  F03F         	goto	_main	;jump to C main() function
    81                           postinc0	equ	0xFEE
    82                           wreg	equ	0xFE8
    83                           
    84                           	psect	bssCOMRAM
    85  000011                     __pbssCOMRAM:
    86                           	opt stack 0
    87  000011                     _Input4:
    88                           	opt stack 0
    89  000011                     	ds	3
    90  000014                     _Input3:
    91                           	opt stack 0
    92  000014                     	ds	3
    93  000017                     _Input2:
    94                           	opt stack 0
    95  000017                     	ds	3
    96  00001A                     _Input1:
    97                           	opt stack 0
    98  00001A                     	ds	3
    99                           postinc0	equ	0xFEE
   100                           wreg	equ	0xFE8
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	opt stack 0
   105  000001                     ?___ftpack:
   106                           	opt stack 0
   107  000001                     ?___fttol:
   108                           	opt stack 0
   109  000001                     ___ftpack@arg:
   110                           	opt stack 0
   111  000001                     ___fttol@f1:
   112                           	opt stack 0
   113                           
   114                           ; 3 bytes @ 0x0
   115  000001                     	ds	3
   116  000004                     ___ftpack@exp:
   117                           	opt stack 0
   118                           
   119                           ; 1 bytes @ 0x3
   120  000004                     	ds	1
   121  000005                     ??___fttol:
   122  000005                     ___ftpack@sign:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x4
   126  000005                     	ds	1
   127  000006                     ??___ftpack:
   128                           
   129                           ; 1 bytes @ 0x5
   130  000006                     	ds	3
   131  000009                     ?___lbtoft:
   132                           	opt stack 0
   133                           
   134                           ; 3 bytes @ 0x8
   135  000009                     	ds	1
   136  00000A                     ___fttol@sign1:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0x9
   140  00000A                     	ds	1
   141  00000B                     ___fttol@lval:
   142                           	opt stack 0
   143                           
   144                           ; 4 bytes @ 0xA
   145  00000B                     	ds	1
   146  00000C                     ___lbtoft@c:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0xB
   150  00000C                     	ds	3
   151  00000F                     ___fttol@exp1:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0xE
   155  00000F                     	ds	1
   156  000010                     ??_main:
   157                           
   158                           ; 1 bytes @ 0xF
   159  000010                     	ds	1
   160                           postinc0	equ	0xFEE
   161                           wreg	equ	0xFE8
   162                           
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 18 in file "prueba.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  2   30[None  ] int 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   182 ;;      Params:         0       0       0       0       0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0
   184 ;;      Temps:          1       0       0       0       0       0       0       0       0
   185 ;;      Totals:         1       0       0       0       0       0       0       0       0
   186 ;;Total ram usage:        1 bytes
   187 ;; Hardware stack levels required when called:    2
   188 ;; This function calls:
   189 ;;		___fttol
   190 ;;		___lbtoft
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text0
   197  007EC0                     __ptext0:
   198                           	opt stack 0
   199  007EC0                     _main:
   200                           	opt stack 29
   201                           
   202                           ;prueba.c: 20: TRISB = 0xFF;
   203                           
   204                           ;incstack = 0
   205  007EC0  6893               	setf	3987,c	;volatile
   206                           
   207                           ;prueba.c: 21: TRISD = 0x00;
   208  007EC2  0E00               	movlw	0
   209  007EC4  6E95               	movwf	3989,c	;volatile
   210                           
   211                           ;prueba.c: 22: TRISC = 0b01000000;
   212  007EC6  0E40               	movlw	64
   213  007EC8  6E94               	movwf	3988,c	;volatile
   214                           
   215                           ;prueba.c: 23: TMR1CS = 0;
   216  007ECA  92CD               	bcf	4045,1,c	;volatile
   217                           
   218                           ;prueba.c: 24: TMR3CS = 0;
   219  007ECC  92B1               	bcf	4017,1,c	;volatile
   220                           
   221                           ;prueba.c: 25: PORTCbits.RC0 = 0;
   222  007ECE  9082               	bcf	3970,0,c	;volatile
   223                           
   224                           ;prueba.c: 26: PORTCbits.RC1 = 0;
   225  007ED0  9282               	bcf	3970,1,c	;volatile
   226                           
   227                           ;prueba.c: 27: PORTCbits.RC2 = 1;
   228  007ED2  8482               	bsf	3970,2,c	;volatile
   229                           
   230                           ;prueba.c: 28: PORTCbits.RC7 = 0;
   231  007ED4  9E82               	bcf	3970,7,c	;volatile
   232  007ED6                     l936:
   233                           
   234                           ;prueba.c: 32: {
   235                           ;prueba.c: 33: PORTCbits.RC0 = 0;
   236  007ED6  9082               	bcf	3970,0,c	;volatile
   237                           
   238                           ;prueba.c: 34: PORTCbits.RC1 = 0;
   239  007ED8  9282               	bcf	3970,1,c	;volatile
   240                           
   241                           ;prueba.c: 35: PORTCbits.RC7 = 0;
   242  007EDA  9E82               	bcf	3970,7,c	;volatile
   243                           
   244                           ;prueba.c: 37: PORTCbits.RC2 = 1;
   245  007EDC  8482               	bsf	3970,2,c	;volatile
   246                           
   247                           ;prueba.c: 38: _delay((unsigned long)((5)*(32000000/4000000.0)));
   248  007EDE  0E0D               	movlw	13
   249  007EE0                     u417:
   250  007EE0  2EE8               	decfsz	wreg,f,c
   251  007EE2  D7FE               	bra	u417
   252  007EE4  F000               	nop	
   253                           
   254                           ;prueba.c: 39: PORTCbits.RC2 = 0;
   255  007EE6  9482               	bcf	3970,2,c	;volatile
   256  007EE8                     l32:
   257  007EE8  BC82               	btfsc	3970,6,c	;volatile
   258  007EEA  D7FE               	goto	l32
   259                           
   260                           ;prueba.c: 42: Input1 = PORTB;
   261  007EEC  5081               	movf	3969,w,c	;volatile
   262  007EEE  EC7D  F03E         	call	___lbtoft
   263  007EF2  C009  F01A         	movff	?___lbtoft,_Input1
   264  007EF6  C00A  F01B         	movff	?___lbtoft+1,_Input1+1
   265  007EFA  C00B  F01C         	movff	?___lbtoft+2,_Input1+2
   266                           
   267                           ;prueba.c: 43: PORTD = Input1;
   268  007EFE  C01A  F001         	movff	_Input1,___fttol@f1
   269  007F02  C01B  F002         	movff	_Input1+1,___fttol@f1+1
   270  007F06  C01C  F003         	movff	_Input1+2,___fttol@f1+2
   271  007F0A  ECE6  F03E         	call	___fttol	;wreg free
   272  007F0E  5001               	movf	?___fttol,w,c
   273  007F10  6E83               	movwf	3971,c	;volatile
   274                           
   275                           ;prueba.c: 47: _delay((unsigned long)((4)*(32000000/4000.0)));
   276  007F12  0E2A               	movlw	42
   277  007F14  6E10               	movwf	??_main& (0+255),c
   278  007F16  0E8E               	movlw	142
   279  007F18                     u427:
   280  007F18  2EE8               	decfsz	wreg,f,c
   281  007F1A  D7FE               	bra	u427
   282  007F1C  2E10               	decfsz	??_main& (0+255),f,c
   283  007F1E  D7FC               	bra	u427
   284                           
   285                           ;prueba.c: 49: PORTCbits.RC0 = 1;
   286  007F20  8082               	bsf	3970,0,c	;volatile
   287                           
   288                           ;prueba.c: 50: PORTCbits.RC1 = 0;
   289  007F22  9282               	bcf	3970,1,c	;volatile
   290                           
   291                           ;prueba.c: 51: PORTCbits.RC7 = 1;
   292  007F24  8E82               	bsf	3970,7,c	;volatile
   293                           
   294                           ;prueba.c: 53: PORTCbits.RC2 = 1;
   295  007F26  8482               	bsf	3970,2,c	;volatile
   296                           
   297                           ;prueba.c: 54: _delay((unsigned long)((5)*(32000000/4000000.0)));
   298  007F28  0E0D               	movlw	13
   299  007F2A                     u437:
   300  007F2A  2EE8               	decfsz	wreg,f,c
   301  007F2C  D7FE               	bra	u437
   302  007F2E  F000               	nop	
   303                           
   304                           ;prueba.c: 55: PORTCbits.RC2 = 0;
   305  007F30  9482               	bcf	3970,2,c	;volatile
   306  007F32                     l35:
   307  007F32  BC82               	btfsc	3970,6,c	;volatile
   308  007F34  D7FE               	goto	l35
   309                           
   310                           ;prueba.c: 58: Input2 = PORTB;
   311  007F36  5081               	movf	3969,w,c	;volatile
   312  007F38  EC7D  F03E         	call	___lbtoft
   313  007F3C  C009  F017         	movff	?___lbtoft,_Input2
   314  007F40  C00A  F018         	movff	?___lbtoft+1,_Input2+1
   315  007F44  C00B  F019         	movff	?___lbtoft+2,_Input2+2
   316                           
   317                           ;prueba.c: 59: PORTD = Input2;
   318  007F48  C017  F001         	movff	_Input2,___fttol@f1
   319  007F4C  C018  F002         	movff	_Input2+1,___fttol@f1+1
   320  007F50  C019  F003         	movff	_Input2+2,___fttol@f1+2
   321  007F54  ECE6  F03E         	call	___fttol	;wreg free
   322  007F58  5001               	movf	?___fttol,w,c
   323  007F5A  6E83               	movwf	3971,c	;volatile
   324                           
   325                           ;prueba.c: 63: _delay((unsigned long)((4)*(32000000/4000.0)));
   326  007F5C  0E2A               	movlw	42
   327  007F5E  6E10               	movwf	??_main& (0+255),c
   328  007F60  0E8E               	movlw	142
   329  007F62                     u447:
   330  007F62  2EE8               	decfsz	wreg,f,c
   331  007F64  D7FE               	bra	u447
   332  007F66  2E10               	decfsz	??_main& (0+255),f,c
   333  007F68  D7FC               	bra	u447
   334                           
   335                           ;prueba.c: 65: PORTCbits.RC0 = 0;
   336  007F6A  9082               	bcf	3970,0,c	;volatile
   337                           
   338                           ;prueba.c: 66: PORTCbits.RC1 = 1;
   339  007F6C  8282               	bsf	3970,1,c	;volatile
   340                           
   341                           ;prueba.c: 67: PORTCbits.RC7 = 0;
   342  007F6E  9E82               	bcf	3970,7,c	;volatile
   343                           
   344                           ;prueba.c: 69: PORTCbits.RC2 = 1;
   345  007F70  8482               	bsf	3970,2,c	;volatile
   346                           
   347                           ;prueba.c: 70: _delay((unsigned long)((5)*(32000000/4000000.0)));
   348  007F72  0E0D               	movlw	13
   349  007F74                     u457:
   350  007F74  2EE8               	decfsz	wreg,f,c
   351  007F76  D7FE               	bra	u457
   352  007F78  F000               	nop	
   353                           
   354                           ;prueba.c: 71: PORTCbits.RC2 = 0;
   355  007F7A  9482               	bcf	3970,2,c	;volatile
   356  007F7C                     l38:
   357  007F7C  BC82               	btfsc	3970,6,c	;volatile
   358  007F7E  D7FE               	goto	l38
   359                           
   360                           ;prueba.c: 74: Input3 = PORTB;
   361  007F80  5081               	movf	3969,w,c	;volatile
   362  007F82  EC7D  F03E         	call	___lbtoft
   363  007F86  C009  F014         	movff	?___lbtoft,_Input3
   364  007F8A  C00A  F015         	movff	?___lbtoft+1,_Input3+1
   365  007F8E  C00B  F016         	movff	?___lbtoft+2,_Input3+2
   366                           
   367                           ;prueba.c: 75: PORTD = Input3;
   368  007F92  C014  F001         	movff	_Input3,___fttol@f1
   369  007F96  C015  F002         	movff	_Input3+1,___fttol@f1+1
   370  007F9A  C016  F003         	movff	_Input3+2,___fttol@f1+2
   371  007F9E  ECE6  F03E         	call	___fttol	;wreg free
   372  007FA2  5001               	movf	?___fttol,w,c
   373  007FA4  6E83               	movwf	3971,c	;volatile
   374                           
   375                           ;prueba.c: 79: _delay((unsigned long)((4)*(32000000/4000.0)));
   376  007FA6  0E2A               	movlw	42
   377  007FA8  6E10               	movwf	??_main& (0+255),c
   378  007FAA  0E8E               	movlw	142
   379  007FAC                     u467:
   380  007FAC  2EE8               	decfsz	wreg,f,c
   381  007FAE  D7FE               	bra	u467
   382  007FB0  2E10               	decfsz	??_main& (0+255),f,c
   383  007FB2  D7FC               	bra	u467
   384                           
   385                           ;prueba.c: 82: PORTCbits.RC0 = 1;
   386  007FB4  8082               	bsf	3970,0,c	;volatile
   387                           
   388                           ;prueba.c: 83: PORTCbits.RC1 = 1;
   389  007FB6  8282               	bsf	3970,1,c	;volatile
   390                           
   391                           ;prueba.c: 84: PORTCbits.RC7 = 1;
   392  007FB8  8E82               	bsf	3970,7,c	;volatile
   393                           
   394                           ;prueba.c: 86: PORTCbits.RC2 = 1;
   395  007FBA  8482               	bsf	3970,2,c	;volatile
   396                           
   397                           ;prueba.c: 87: _delay((unsigned long)((5)*(32000000/4000000.0)));
   398  007FBC  0E0D               	movlw	13
   399  007FBE                     u477:
   400  007FBE  2EE8               	decfsz	wreg,f,c
   401  007FC0  D7FE               	bra	u477
   402  007FC2  F000               	nop	
   403                           
   404                           ;prueba.c: 88: PORTCbits.RC2 = 0;
   405  007FC4  9482               	bcf	3970,2,c	;volatile
   406  007FC6                     l41:
   407  007FC6  BC82               	btfsc	3970,6,c	;volatile
   408  007FC8  D7FE               	goto	l41
   409                           
   410                           ;prueba.c: 91: Input4 = PORTB;
   411  007FCA  5081               	movf	3969,w,c	;volatile
   412  007FCC  EC7D  F03E         	call	___lbtoft
   413  007FD0  C009  F011         	movff	?___lbtoft,_Input4
   414  007FD4  C00A  F012         	movff	?___lbtoft+1,_Input4+1
   415  007FD8  C00B  F013         	movff	?___lbtoft+2,_Input4+2
   416                           
   417                           ;prueba.c: 92: PORTD = Input4;
   418  007FDC  C011  F001         	movff	_Input4,___fttol@f1
   419  007FE0  C012  F002         	movff	_Input4+1,___fttol@f1+1
   420  007FE4  C013  F003         	movff	_Input4+2,___fttol@f1+2
   421  007FE8  ECE6  F03E         	call	___fttol	;wreg free
   422  007FEC  5001               	movf	?___fttol,w,c
   423  007FEE  6E83               	movwf	3971,c	;volatile
   424                           
   425                           ;prueba.c: 96: _delay((unsigned long)((4)*(32000000/4000.0)));
   426  007FF0  0E2A               	movlw	42
   427  007FF2  6E10               	movwf	??_main& (0+255),c
   428  007FF4  0E8E               	movlw	142
   429  007FF6                     u487:
   430  007FF6  2EE8               	decfsz	wreg,f,c
   431  007FF8  D7FE               	bra	u487
   432  007FFA  2E10               	decfsz	??_main& (0+255),f,c
   433  007FFC  D7FC               	bra	u487
   434  007FFE  D76B               	goto	l936
   435  008000                     __end_of_main:
   436                           	opt stack 0
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           
   440 ;; *************** function ___lbtoft *****************
   441 ;; Defined at:
   442 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;  c               1    wreg     unsigned char 
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  c               1   11[COMRAM] unsigned char 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  3    8[COMRAM] float 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   456 ;;      Params:         3       0       0       0       0       0       0       0       0
   457 ;;      Locals:         1       0       0       0       0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0
   459 ;;      Totals:         4       0       0       0       0       0       0       0       0
   460 ;;Total ram usage:        4 bytes
   461 ;; Hardware stack levels used:    1
   462 ;; Hardware stack levels required when called:    1
   463 ;; This function calls:
   464 ;;		___ftpack
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text1
   471  007CFA                     __ptext1:
   472                           	opt stack 0
   473  007CFA                     ___lbtoft:
   474                           	opt stack 29
   475                           
   476                           ;incstack = 0
   477                           ;___lbtoft@c stored from wreg
   478  007CFA  6E0C               	movwf	___lbtoft@c,c
   479  007CFC  500C               	movf	___lbtoft@c,w,c
   480  007CFE  6E01               	movwf	___ftpack@arg,c
   481  007D00  6A02               	clrf	___ftpack@arg+1,c
   482  007D02  6A03               	clrf	___ftpack@arg+2,c
   483  007D04  0E8E               	movlw	142
   484  007D06  6E04               	movwf	___ftpack@exp,c
   485  007D08  0E00               	movlw	0
   486  007D0A  6E05               	movwf	___ftpack@sign,c
   487  007D0C  EC8F  F03E         	call	___ftpack	;wreg free
   488  007D10  C001  F009         	movff	?___ftpack,?___lbtoft
   489  007D14  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   490  007D18  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   491  007D1C  0012               	return	
   492  007D1E                     __end_of___lbtoft:
   493                           	opt stack 0
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497 ;; *************** function ___ftpack *****************
   498 ;; Defined at:
   499 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  arg             3    0[COMRAM] unsigned um
   502 ;;  exp             1    3[COMRAM] unsigned char 
   503 ;;  sign            1    4[COMRAM] unsigned char 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  3    0[COMRAM] float 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   515 ;;      Params:         5       0       0       0       0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0       0       0       0       0
   517 ;;      Temps:          3       0       0       0       0       0       0       0       0
   518 ;;      Totals:         8       0       0       0       0       0       0       0       0
   519 ;;Total ram usage:        8 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		___lbtoft
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text2
   529  007D1E                     __ptext2:
   530                           	opt stack 0
   531  007D1E                     ___ftpack:
   532                           	opt stack 29
   533                           
   534                           ;incstack = 0
   535  007D1E  5004               	movf	___ftpack@exp,w,c
   536  007D20  B4D8               	btfsc	status,2,c
   537  007D22  D005               	goto	l838
   538  007D24  5001               	movf	___ftpack@arg,w,c
   539  007D26  1002               	iorwf	___ftpack@arg+1,w,c
   540  007D28  1003               	iorwf	___ftpack@arg+2,w,c
   541  007D2A  A4D8               	btfss	status,2,c
   542  007D2C  D00C               	goto	l844
   543  007D2E                     l838:
   544  007D2E  0E00               	movlw	0
   545  007D30  6E01               	movwf	?___ftpack,c
   546  007D32  0E00               	movlw	0
   547  007D34  6E02               	movwf	?___ftpack+1,c
   548  007D36  0E00               	movlw	0
   549  007D38  6E03               	movwf	?___ftpack+2,c
   550  007D3A  0012               	return	
   551  007D3C                     l842:
   552  007D3C  2A04               	incf	___ftpack@exp,f,c
   553  007D3E  90D8               	bcf	status,0,c
   554  007D40  3203               	rrcf	___ftpack@arg+2,f,c
   555  007D42  3202               	rrcf	___ftpack@arg+1,f,c
   556  007D44  3201               	rrcf	___ftpack@arg,f,c
   557  007D46                     l844:
   558  007D46  0E00               	movlw	0
   559  007D48  1401               	andwf	___ftpack@arg,w,c
   560  007D4A  6E06               	movwf	??___ftpack& (0+255),c
   561  007D4C  0E00               	movlw	0
   562  007D4E  1402               	andwf	___ftpack@arg+1,w,c
   563  007D50  6E07               	movwf	(??___ftpack+1)& (0+255),c
   564  007D52  0EFE               	movlw	254
   565  007D54  1403               	andwf	___ftpack@arg+2,w,c
   566  007D56  6E08               	movwf	(??___ftpack+2)& (0+255),c
   567  007D58  5006               	movf	??___ftpack,w,c
   568  007D5A  1007               	iorwf	??___ftpack+1,w,c
   569  007D5C  1008               	iorwf	??___ftpack+2,w,c
   570  007D5E  B4D8               	btfsc	status,2,c
   571  007D60  D00C               	goto	l850
   572  007D62  D7EC               	goto	l842
   573  007D64                     l846:
   574  007D64  2A04               	incf	___ftpack@exp,f,c
   575  007D66  0E01               	movlw	1
   576  007D68  2601               	addwf	___ftpack@arg,f,c
   577  007D6A  0E00               	movlw	0
   578  007D6C  2202               	addwfc	___ftpack@arg+1,f,c
   579  007D6E  0E00               	movlw	0
   580  007D70  2203               	addwfc	___ftpack@arg+2,f,c
   581  007D72  90D8               	bcf	status,0,c
   582  007D74  3203               	rrcf	___ftpack@arg+2,f,c
   583  007D76  3202               	rrcf	___ftpack@arg+1,f,c
   584  007D78  3201               	rrcf	___ftpack@arg,f,c
   585  007D7A                     l850:
   586  007D7A  0E00               	movlw	0
   587  007D7C  1401               	andwf	___ftpack@arg,w,c
   588  007D7E  6E06               	movwf	??___ftpack& (0+255),c
   589  007D80  0E00               	movlw	0
   590  007D82  1402               	andwf	___ftpack@arg+1,w,c
   591  007D84  6E07               	movwf	(??___ftpack+1)& (0+255),c
   592  007D86  0EFF               	movlw	255
   593  007D88  1403               	andwf	___ftpack@arg+2,w,c
   594  007D8A  6E08               	movwf	(??___ftpack+2)& (0+255),c
   595  007D8C  5006               	movf	??___ftpack,w,c
   596  007D8E  1007               	iorwf	??___ftpack+1,w,c
   597  007D90  1008               	iorwf	??___ftpack+2,w,c
   598  007D92  B4D8               	btfsc	status,2,c
   599  007D94  D006               	goto	l854
   600  007D96  D7E6               	goto	l846
   601  007D98                     l852:
   602  007D98  0604               	decf	___ftpack@exp,f,c
   603  007D9A  90D8               	bcf	status,0,c
   604  007D9C  3601               	rlcf	___ftpack@arg,f,c
   605  007D9E  3602               	rlcf	___ftpack@arg+1,f,c
   606  007DA0  3603               	rlcf	___ftpack@arg+2,f,c
   607  007DA2                     l854:
   608  007DA2  BE02               	btfsc	___ftpack@arg+1,7,c
   609  007DA4  D003               	goto	l271
   610  007DA6  0E02               	movlw	2
   611  007DA8  6004               	cpfslt	___ftpack@exp,c
   612  007DAA  D7F6               	goto	l852
   613  007DAC                     l271:
   614  007DAC  A004               	btfss	___ftpack@exp,0,c
   615  007DAE  9E02               	bcf	___ftpack@arg+1,7,c
   616  007DB0  90D8               	bcf	status,0,c
   617  007DB2  3204               	rrcf	___ftpack@exp,f,c
   618  007DB4  5004               	movf	___ftpack@exp,w,c
   619  007DB6  1203               	iorwf	___ftpack@arg+2,f,c
   620  007DB8  5005               	movf	___ftpack@sign,w,c
   621  007DBA  A4D8               	btfss	status,2,c
   622  007DBC  8E03               	bsf	___ftpack@arg+2,7,c
   623  007DBE  C001  F001         	movff	___ftpack@arg,?___ftpack
   624  007DC2  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
   625  007DC6  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
   626  007DCA  0012               	return	
   627  007DCC                     __end_of___ftpack:
   628                           	opt stack 0
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           status	equ	0xFD8
   632                           
   633 ;; *************** function ___fttol *****************
   634 ;; Defined at:
   635 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  f1              3    0[COMRAM] float 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  lval            4   10[COMRAM] unsigned long 
   640 ;;  exp1            1   14[COMRAM] unsigned char 
   641 ;;  sign1           1    9[COMRAM] unsigned char 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  4    0[COMRAM] long 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   651 ;;      Params:         4       0       0       0       0       0       0       0       0
   652 ;;      Locals:         6       0       0       0       0       0       0       0       0
   653 ;;      Temps:          5       0       0       0       0       0       0       0       0
   654 ;;      Totals:        15       0       0       0       0       0       0       0       0
   655 ;;Total ram usage:       15 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text3
   665  007DCC                     __ptext3:
   666                           	opt stack 0
   667  007DCC                     ___fttol:
   668                           	opt stack 30
   669                           
   670                           ;incstack = 0
   671  007DCC  C003  F005         	movff	___fttol@f1+2,??___fttol
   672  007DD0  6A06               	clrf	(??___fttol+1)& (0+255),c
   673  007DD2  6A07               	clrf	(??___fttol+2)& (0+255),c
   674  007DD4  3402               	rlcf	___fttol@f1+1,w,c
   675  007DD6  3605               	rlcf	??___fttol& (0+255),f,c
   676  007DD8  E301               	bnc	u291
   677  007DDA  8006               	bsf	(??___fttol+1)& (0+255),0,c
   678  007DDC                     u291:
   679  007DDC  5005               	movf	??___fttol,w,c
   680  007DDE  6E0F               	movwf	___fttol@exp1,c
   681  007DE0  500F               	movf	___fttol@exp1,w,c
   682  007DE2  A4D8               	btfss	status,2,c
   683  007DE4  D009               	goto	l876
   684  007DE6  0E00               	movlw	0
   685  007DE8  6E01               	movwf	?___fttol,c
   686  007DEA  0E00               	movlw	0
   687  007DEC  6E02               	movwf	?___fttol+1,c
   688  007DEE  0E00               	movlw	0
   689  007DF0  6E03               	movwf	?___fttol+2,c
   690  007DF2  0E00               	movlw	0
   691  007DF4  6E04               	movwf	?___fttol+3,c
   692  007DF6  0012               	return	
   693  007DF8                     l876:
   694  007DF8  0E17               	movlw	23
   695  007DFA  6E05               	movwf	??___fttol& (0+255),c
   696  007DFC  C001  F006         	movff	___fttol@f1,??___fttol+1
   697  007E00  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   698  007E04  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   699  007E08  2805               	incf	??___fttol,w,c
   700  007E0A  6E09               	movwf	(??___fttol+4)& (0+255),c
   701  007E0C  D004               	goto	u310
   702  007E0E                     u315:
   703  007E0E  90D8               	bcf	status,0,c
   704  007E10  3208               	rrcf	??___fttol+3,f,c
   705  007E12  3207               	rrcf	??___fttol+2,f,c
   706  007E14  3206               	rrcf	??___fttol+1,f,c
   707  007E16                     u310:
   708  007E16  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   709  007E18  D7FA               	goto	u315
   710  007E1A  5006               	movf	??___fttol+1,w,c
   711  007E1C  6E0A               	movwf	___fttol@sign1,c
   712  007E1E  8E02               	bsf	___fttol@f1+1,7,c
   713  007E20  0EFF               	movlw	255
   714  007E22  1601               	andwf	___fttol@f1,f,c
   715  007E24  0EFF               	movlw	255
   716  007E26  1602               	andwf	___fttol@f1+1,f,c
   717  007E28  0E00               	movlw	0
   718  007E2A  1603               	andwf	___fttol@f1+2,f,c
   719  007E2C  5001               	movf	___fttol@f1,w,c
   720  007E2E  6E0B               	movwf	___fttol@lval,c
   721  007E30  5002               	movf	___fttol@f1+1,w,c
   722  007E32  6E0C               	movwf	___fttol@lval+1,c
   723  007E34  5003               	movf	___fttol@f1+2,w,c
   724  007E36  6E0D               	movwf	___fttol@lval+2,c
   725  007E38  6A0E               	clrf	___fttol@lval+3,c
   726  007E3A  0E8E               	movlw	142
   727  007E3C  5E0F               	subwf	___fttol@exp1,f,c
   728  007E3E  AE0F               	btfss	___fttol@exp1,7,c
   729  007E40  D016               	goto	l898
   730  007E42  500F               	movf	___fttol@exp1,w,c
   731  007E44  0A80               	xorlw	128
   732  007E46  0F8F               	addlw	143
   733  007E48  B0D8               	btfsc	status,0,c
   734  007E4A  D009               	goto	l894
   735  007E4C  0E00               	movlw	0
   736  007E4E  6E01               	movwf	?___fttol,c
   737  007E50  0E00               	movlw	0
   738  007E52  6E02               	movwf	?___fttol+1,c
   739  007E54  0E00               	movlw	0
   740  007E56  6E03               	movwf	?___fttol+2,c
   741  007E58  0E00               	movlw	0
   742  007E5A  6E04               	movwf	?___fttol+3,c
   743  007E5C  0012               	return	
   744  007E5E                     l894:
   745  007E5E  90D8               	bcf	status,0,c
   746  007E60  320E               	rrcf	___fttol@lval+3,f,c
   747  007E62  320D               	rrcf	___fttol@lval+2,f,c
   748  007E64  320C               	rrcf	___fttol@lval+1,f,c
   749  007E66  320B               	rrcf	___fttol@lval,f,c
   750  007E68  3E0F               	incfsz	___fttol@exp1,f,c
   751  007E6A  D7F9               	goto	l894
   752  007E6C  D015               	goto	l908
   753  007E6E                     l898:
   754  007E6E  0E17               	movlw	23
   755  007E70  640F               	cpfsgt	___fttol@exp1,c
   756  007E72  D00F               	goto	l906
   757  007E74  0E00               	movlw	0
   758  007E76  6E01               	movwf	?___fttol,c
   759  007E78  0E00               	movlw	0
   760  007E7A  6E02               	movwf	?___fttol+1,c
   761  007E7C  0E00               	movlw	0
   762  007E7E  6E03               	movwf	?___fttol+2,c
   763  007E80  0E00               	movlw	0
   764  007E82  6E04               	movwf	?___fttol+3,c
   765  007E84  0012               	return	
   766  007E86                     l904:
   767  007E86  90D8               	bcf	status,0,c
   768  007E88  360B               	rlcf	___fttol@lval,f,c
   769  007E8A  360C               	rlcf	___fttol@lval+1,f,c
   770  007E8C  360D               	rlcf	___fttol@lval+2,f,c
   771  007E8E  360E               	rlcf	___fttol@lval+3,f,c
   772  007E90  060F               	decf	___fttol@exp1,f,c
   773  007E92                     l906:
   774  007E92  500F               	movf	___fttol@exp1,w,c
   775  007E94  A4D8               	btfss	status,2,c
   776  007E96  D7F7               	goto	l904
   777  007E98                     l908:
   778  007E98  500A               	movf	___fttol@sign1,w,c
   779  007E9A  B4D8               	btfsc	status,2,c
   780  007E9C  D008               	goto	l912
   781  007E9E  1E0E               	comf	___fttol@lval+3,f,c
   782  007EA0  1E0D               	comf	___fttol@lval+2,f,c
   783  007EA2  1E0C               	comf	___fttol@lval+1,f,c
   784  007EA4  6C0B               	negf	___fttol@lval,c
   785  007EA6  0E00               	movlw	0
   786  007EA8  220C               	addwfc	___fttol@lval+1,f,c
   787  007EAA  220D               	addwfc	___fttol@lval+2,f,c
   788  007EAC  220E               	addwfc	___fttol@lval+3,f,c
   789  007EAE                     l912:
   790  007EAE  C00B  F001         	movff	___fttol@lval,?___fttol
   791  007EB2  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   792  007EB6  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   793  007EBA  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   794  007EBE  0012               	return	
   795  007EC0                     __end_of___fttol:
   796                           	opt stack 0
   797  0000                     postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           status	equ	0xFD8
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           status	equ	0xFD8
   803                           
   804                           	psect	rparam
   805  0000                     postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    ___lbtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2927
                                             15 COMRAM     1     1      0
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2371
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2349
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     556
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      1C       1       29.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      20        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jun 19 12:25:19 2017

                     l32 7EE8                       l41 7FC6                       l35 7F32  
                     l38 7F7C              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l271 7DAC                      l912 7EAE                      l904 7E86  
                    l906 7E92                      l850 7D7A                      l842 7D3C  
                    l908 7E98                      l852 7D98                      l844 7D46  
                    l854 7DA2                      l846 7D64                      l838 7D2E  
                    l936 7ED6                      l876 7DF8                      l894 7E5E  
                    l898 7E6E             __CFG_CPB$OFF 000000                      u310 7E16  
                    u315 7E0E                      u417 7EE0             __CFG_CPD$OFF 000000  
                    u291 7DDC                      u427 7F18                      u437 7F2A  
                    u447 7F62                      u457 7F74                      u467 7FAC  
                    u477 7FBE                      u487 7FF6             __CFG_BOR$OFF 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
           __CFG_PWRT$ON 000000                     _main 7EC0             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     start 0000            __CFG_IESO$OFF 000000  
           ___param_bank 000000             ___fttol@exp1 000F             ___fttol@lval 000B  
          __CFG_PLLDIV$5 000000                    ?_main 0001          __end_of___fttol 7EC0  
                  _PORTB 000F81                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___ftpack@sign 0005                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_MCLRE$OFF 000000          __initialization 7CE8  
           __end_of_main 8000                   ??_main 0010            ___fttol@sign1 000A  
          __activetblptr 000000          __CFG_CCP2MX$OFF 000000         __end_of___ftpack 7DCC  
       __end_of___lbtoft 7D1E                   _TMR1CS 007E69                   _TMR3CS 007D89  
                 _Input1 001A                   _Input2 0017                   _Input3 0014  
                 _Input4 0011           __CFG_XINST$OFF 000000                ??___fttol 0005  
                 clear_0 7CEE               __accesstop 0060  __end_of__initialization 7CF4  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001               ___lbtoft@c 000C  
             ___fttol@f1 0001           __pcstackCOMRAM 0001                ?___ftpack 0001  
              ?___lbtoft 0009          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___fttol 7DCC          __CFG_STVREN$OFF 000000  
                __pcinit 7CE8               ??___ftpack 0006               ??___lbtoft 000C  
                __ramtop 0800                  __ptext0 7EC0                  __ptext1 7CFA  
                __ptext2 7D1E                  __ptext3 7DCC     end_of_initialization 7CF4  
                postinc0 000FEE                _PORTCbits 000F82      start_initialization 7CE8  
       __CFG_LPT1OSC$OFF 000000        __size_of___ftpack 00AE        __size_of___lbtoft 0024  
            __pbssCOMRAM 0011                 ?___fttol 0001         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000         __size_of___fttol 00F4  
               ___ftpack 7D1E                 ___lbtoft 7CFA            __size_of_main 0140  
  __CFG_CPUDIV$OSC2_PLL3 000000       __CFG_FOSC$HSPLL_HS 000000  
