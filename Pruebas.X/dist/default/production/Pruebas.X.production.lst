

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 08 18:04:42 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTD	set	3971
    50  0000                     _PORTB	set	3969
    51  0000                     _PORTCbits	set	3970
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISD	set	3989
    54  0000                     _TRISB	set	3987
    55  0000                     _TMR3CS	set	32137
    56  0000                     _TMR1CS	set	32361
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  007D30                     __pcinit:
    62                           	opt stack 0
    63  007D30                     start_initialization:
    64                           	opt stack 0
    65  007D30                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (12 bytes)
    69  007D30  EE00  F010         	lfsr	0,__pbssCOMRAM
    70  007D34  0E0C               	movlw	12
    71  007D36                     clear_0:
    72  007D36  6AEE               	clrf	postinc0,c
    73  007D38  06E8               	decf	wreg,f,c
    74  007D3A  E1FD               	bnz	clear_0
    75  007D3C                     end_of_initialization:
    76                           	opt stack 0
    77  007D3C                     __end_of__initialization:
    78                           	opt stack 0
    79  007D3C  0100               	movlb	0
    80  007D3E  EF84  F03F         	goto	_main	;jump to C main() function
    81                           postinc0	equ	0xFEE
    82                           wreg	equ	0xFE8
    83                           
    84                           	psect	bssCOMRAM
    85  000010                     __pbssCOMRAM:
    86                           	opt stack 0
    87  000010                     _Input4:
    88                           	opt stack 0
    89  000010                     	ds	3
    90  000013                     _Input3:
    91                           	opt stack 0
    92  000013                     	ds	3
    93  000016                     _Input2:
    94                           	opt stack 0
    95  000016                     	ds	3
    96  000019                     _Input1:
    97                           	opt stack 0
    98  000019                     	ds	3
    99                           postinc0	equ	0xFEE
   100                           wreg	equ	0xFE8
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	opt stack 0
   105  000001                     ?___ftpack:
   106                           	opt stack 0
   107  000001                     ?___fttol:
   108                           	opt stack 0
   109  000001                     ___ftpack@arg:
   110                           	opt stack 0
   111  000001                     ___fttol@f1:
   112                           	opt stack 0
   113                           
   114                           ; 3 bytes @ 0x0
   115  000001                     	ds	3
   116  000004                     ___ftpack@exp:
   117                           	opt stack 0
   118                           
   119                           ; 1 bytes @ 0x3
   120  000004                     	ds	1
   121  000005                     ??___fttol:
   122  000005                     ___ftpack@sign:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x4
   126  000005                     	ds	1
   127  000006                     ??___ftpack:
   128                           
   129                           ; 1 bytes @ 0x5
   130  000006                     	ds	3
   131  000009                     ?___lbtoft:
   132                           	opt stack 0
   133                           
   134                           ; 3 bytes @ 0x8
   135  000009                     	ds	1
   136  00000A                     ___fttol@sign1:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0x9
   140  00000A                     	ds	1
   141  00000B                     ___fttol@lval:
   142                           	opt stack 0
   143                           
   144                           ; 4 bytes @ 0xA
   145  00000B                     	ds	1
   146  00000C                     ___lbtoft@c:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0xB
   150  00000C                     	ds	3
   151  00000F                     ___fttol@exp1:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0xE
   155  00000F                     	ds	1
   156  000010                     postinc0	equ	0xFEE
   157                           wreg	equ	0xFE8
   158                           
   159                           ; 1 bytes @ 0xF
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 18 in file "prueba.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  2   30[None  ] int 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   179 ;;      Params:         0       0       0       0       0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0       0       0       0       0
   182 ;;      Totals:         0       0       0       0       0       0       0       0       0
   183 ;;Total ram usage:        0 bytes
   184 ;; Hardware stack levels required when called:    2
   185 ;; This function calls:
   186 ;;		___fttol
   187 ;;		___lbtoft
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text0
   194  007F08                     __ptext0:
   195                           	opt stack 0
   196  007F08                     _main:
   197                           	opt stack 29
   198                           
   199                           ;prueba.c: 20: TRISB = 0xFF;
   200                           
   201                           ;incstack = 0
   202  007F08  6893               	setf	3987,c	;volatile
   203                           
   204                           ;prueba.c: 21: TRISD = 0x00;
   205  007F0A  0E00               	movlw	0
   206  007F0C  6E95               	movwf	3989,c	;volatile
   207                           
   208                           ;prueba.c: 22: TRISC = 0b01000000;
   209  007F0E  0E40               	movlw	64
   210  007F10  6E94               	movwf	3988,c	;volatile
   211                           
   212                           ;prueba.c: 23: TMR1CS = 0;
   213  007F12  92CD               	bcf	4045,1,c	;volatile
   214                           
   215                           ;prueba.c: 24: TMR3CS = 0;
   216  007F14  92B1               	bcf	4017,1,c	;volatile
   217                           
   218                           ;prueba.c: 25: PORTCbits.RC0 = 0;
   219  007F16  9082               	bcf	3970,0,c	;volatile
   220                           
   221                           ;prueba.c: 26: PORTCbits.RC1 = 0;
   222  007F18  9282               	bcf	3970,1,c	;volatile
   223                           
   224                           ;prueba.c: 27: PORTCbits.RC2 = 1;
   225  007F1A  8482               	bsf	3970,2,c	;volatile
   226                           
   227                           ;prueba.c: 28: PORTCbits.RC7 = 0;
   228  007F1C  9E82               	bcf	3970,7,c	;volatile
   229  007F1E                     l924:
   230                           
   231                           ;prueba.c: 32: {
   232                           ;prueba.c: 33: PORTCbits.RC0 = 0;
   233  007F1E  9082               	bcf	3970,0,c	;volatile
   234                           
   235                           ;prueba.c: 34: PORTCbits.RC1 = 0;
   236  007F20  9282               	bcf	3970,1,c	;volatile
   237                           
   238                           ;prueba.c: 35: PORTCbits.RC7 = 0;
   239  007F22  9E82               	bcf	3970,7,c	;volatile
   240                           
   241                           ;prueba.c: 37: PORTCbits.RC2 = 1;
   242  007F24  8482               	bsf	3970,2,c	;volatile
   243                           
   244                           ;prueba.c: 38: _delay((unsigned long)((5)*(32000000/4000000.0)));
   245  007F26  0E0D               	movlw	13
   246  007F28                     u337:
   247  007F28  2EE8               	decfsz	wreg,f,c
   248  007F2A  D7FE               	bra	u337
   249  007F2C  F000               	nop	
   250                           
   251                           ;prueba.c: 39: PORTCbits.RC2 = 0;
   252  007F2E  9482               	bcf	3970,2,c	;volatile
   253                           
   254                           ;prueba.c: 40: Input1 = PORTB;
   255  007F30  5081               	movf	3969,w,c	;volatile
   256  007F32  ECA1  F03E         	call	___lbtoft
   257  007F36  C009  F019         	movff	?___lbtoft,_Input1
   258  007F3A  C00A  F01A         	movff	?___lbtoft+1,_Input1+1
   259  007F3E  C00B  F01B         	movff	?___lbtoft+2,_Input1+2
   260                           
   261                           ;prueba.c: 41: PORTD = Input1;
   262  007F42  C019  F001         	movff	_Input1,___fttol@f1
   263  007F46  C01A  F002         	movff	_Input1+1,___fttol@f1+1
   264  007F4A  C01B  F003         	movff	_Input1+2,___fttol@f1+2
   265  007F4E  EC0A  F03F         	call	___fttol	;wreg free
   266  007F52  5001               	movf	?___fttol,w,c
   267  007F54  6E83               	movwf	3971,c	;volatile
   268                           
   269                           ;prueba.c: 44: PORTCbits.RC0 = 1;
   270  007F56  8082               	bsf	3970,0,c	;volatile
   271                           
   272                           ;prueba.c: 45: PORTCbits.RC1 = 0;
   273  007F58  9282               	bcf	3970,1,c	;volatile
   274                           
   275                           ;prueba.c: 46: PORTCbits.RC7 = 0;
   276  007F5A  9E82               	bcf	3970,7,c	;volatile
   277                           
   278                           ;prueba.c: 48: PORTCbits.RC2 = 1;
   279  007F5C  8482               	bsf	3970,2,c	;volatile
   280                           
   281                           ;prueba.c: 49: _delay((unsigned long)((5)*(32000000/4000000.0)));
   282  007F5E  0E0D               	movlw	13
   283  007F60                     u347:
   284  007F60  2EE8               	decfsz	wreg,f,c
   285  007F62  D7FE               	bra	u347
   286  007F64  F000               	nop	
   287                           
   288                           ;prueba.c: 50: PORTCbits.RC2 = 0;
   289  007F66  9482               	bcf	3970,2,c	;volatile
   290                           
   291                           ;prueba.c: 51: Input2 = PORTB;
   292  007F68  5081               	movf	3969,w,c	;volatile
   293  007F6A  ECA1  F03E         	call	___lbtoft
   294  007F6E  C009  F016         	movff	?___lbtoft,_Input2
   295  007F72  C00A  F017         	movff	?___lbtoft+1,_Input2+1
   296  007F76  C00B  F018         	movff	?___lbtoft+2,_Input2+2
   297                           
   298                           ;prueba.c: 52: PORTD = Input2;
   299  007F7A  C016  F001         	movff	_Input2,___fttol@f1
   300  007F7E  C017  F002         	movff	_Input2+1,___fttol@f1+1
   301  007F82  C018  F003         	movff	_Input2+2,___fttol@f1+2
   302  007F86  EC0A  F03F         	call	___fttol	;wreg free
   303  007F8A  5001               	movf	?___fttol,w,c
   304  007F8C  6E83               	movwf	3971,c	;volatile
   305                           
   306                           ;prueba.c: 55: PORTCbits.RC0 = 0;
   307  007F8E  9082               	bcf	3970,0,c	;volatile
   308                           
   309                           ;prueba.c: 56: PORTCbits.RC1 = 1;
   310  007F90  8282               	bsf	3970,1,c	;volatile
   311                           
   312                           ;prueba.c: 57: PORTCbits.RC7 = 1;
   313  007F92  8E82               	bsf	3970,7,c	;volatile
   314                           
   315                           ;prueba.c: 59: PORTCbits.RC2 = 1;
   316  007F94  8482               	bsf	3970,2,c	;volatile
   317                           
   318                           ;prueba.c: 60: _delay((unsigned long)((5)*(32000000/4000000.0)));
   319  007F96  0E0D               	movlw	13
   320  007F98                     u357:
   321  007F98  2EE8               	decfsz	wreg,f,c
   322  007F9A  D7FE               	bra	u357
   323  007F9C  F000               	nop	
   324                           
   325                           ;prueba.c: 61: PORTCbits.RC2 = 0;
   326  007F9E  9482               	bcf	3970,2,c	;volatile
   327                           
   328                           ;prueba.c: 62: Input3 = PORTB;
   329  007FA0  5081               	movf	3969,w,c	;volatile
   330  007FA2  ECA1  F03E         	call	___lbtoft
   331  007FA6  C009  F013         	movff	?___lbtoft,_Input3
   332  007FAA  C00A  F014         	movff	?___lbtoft+1,_Input3+1
   333  007FAE  C00B  F015         	movff	?___lbtoft+2,_Input3+2
   334                           
   335                           ;prueba.c: 63: PORTD = Input3;
   336  007FB2  C013  F001         	movff	_Input3,___fttol@f1
   337  007FB6  C014  F002         	movff	_Input3+1,___fttol@f1+1
   338  007FBA  C015  F003         	movff	_Input3+2,___fttol@f1+2
   339  007FBE  EC0A  F03F         	call	___fttol	;wreg free
   340  007FC2  5001               	movf	?___fttol,w,c
   341  007FC4  6E83               	movwf	3971,c	;volatile
   342                           
   343                           ;prueba.c: 66: PORTCbits.RC0 = 1;
   344  007FC6  8082               	bsf	3970,0,c	;volatile
   345                           
   346                           ;prueba.c: 67: PORTCbits.RC1 = 1;
   347  007FC8  8282               	bsf	3970,1,c	;volatile
   348                           
   349                           ;prueba.c: 68: PORTCbits.RC7 = 1;
   350  007FCA  8E82               	bsf	3970,7,c	;volatile
   351                           
   352                           ;prueba.c: 70: PORTCbits.RC2 = 1;
   353  007FCC  8482               	bsf	3970,2,c	;volatile
   354                           
   355                           ;prueba.c: 71: _delay((unsigned long)((5)*(32000000/4000000.0)));
   356  007FCE  0E0D               	movlw	13
   357  007FD0                     u367:
   358  007FD0  2EE8               	decfsz	wreg,f,c
   359  007FD2  D7FE               	bra	u367
   360  007FD4  F000               	nop	
   361                           
   362                           ;prueba.c: 72: PORTCbits.RC2 = 0;
   363  007FD6  9482               	bcf	3970,2,c	;volatile
   364                           
   365                           ;prueba.c: 73: Input4 = PORTB;
   366  007FD8  5081               	movf	3969,w,c	;volatile
   367  007FDA  ECA1  F03E         	call	___lbtoft
   368  007FDE  C009  F010         	movff	?___lbtoft,_Input4
   369  007FE2  C00A  F011         	movff	?___lbtoft+1,_Input4+1
   370  007FE6  C00B  F012         	movff	?___lbtoft+2,_Input4+2
   371                           
   372                           ;prueba.c: 74: PORTD = Input4;
   373  007FEA  C010  F001         	movff	_Input4,___fttol@f1
   374  007FEE  C011  F002         	movff	_Input4+1,___fttol@f1+1
   375  007FF2  C012  F003         	movff	_Input4+2,___fttol@f1+2
   376  007FF6  EC0A  F03F         	call	___fttol	;wreg free
   377  007FFA  5001               	movf	?___fttol,w,c
   378  007FFC  6E83               	movwf	3971,c	;volatile
   379  007FFE  D78F               	goto	l924
   380  008000                     __end_of_main:
   381                           	opt stack 0
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           
   385 ;; *************** function ___lbtoft *****************
   386 ;; Defined at:
   387 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  c               1    wreg     unsigned char 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  c               1   11[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  3    8[COMRAM] float 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   401 ;;      Params:         3       0       0       0       0       0       0       0       0
   402 ;;      Locals:         1       0       0       0       0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0       0       0
   404 ;;      Totals:         4       0       0       0       0       0       0       0       0
   405 ;;Total ram usage:        4 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    1
   408 ;; This function calls:
   409 ;;		___ftpack
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text1
   416  007D42                     __ptext1:
   417                           	opt stack 0
   418  007D42                     ___lbtoft:
   419                           	opt stack 29
   420                           
   421                           ;incstack = 0
   422                           ;___lbtoft@c stored from wreg
   423  007D42  6E0C               	movwf	___lbtoft@c,c
   424  007D44  500C               	movf	___lbtoft@c,w,c
   425  007D46  6E01               	movwf	___ftpack@arg,c
   426  007D48  6A02               	clrf	___ftpack@arg+1,c
   427  007D4A  6A03               	clrf	___ftpack@arg+2,c
   428  007D4C  0E8E               	movlw	142
   429  007D4E  6E04               	movwf	___ftpack@exp,c
   430  007D50  0E00               	movlw	0
   431  007D52  6E05               	movwf	___ftpack@sign,c
   432  007D54  ECB3  F03E         	call	___ftpack	;wreg free
   433  007D58  C001  F009         	movff	?___ftpack,?___lbtoft
   434  007D5C  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   435  007D60  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   436  007D64  0012               	return	
   437  007D66                     __end_of___lbtoft:
   438                           	opt stack 0
   439                           postinc0	equ	0xFEE
   440                           wreg	equ	0xFE8
   441                           
   442 ;; *************** function ___ftpack *****************
   443 ;; Defined at:
   444 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;  arg             3    0[COMRAM] unsigned um
   447 ;;  exp             1    3[COMRAM] unsigned char 
   448 ;;  sign            1    4[COMRAM] unsigned char 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  3    0[COMRAM] float 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   460 ;;      Params:         5       0       0       0       0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0
   462 ;;      Temps:          3       0       0       0       0       0       0       0       0
   463 ;;      Totals:         8       0       0       0       0       0       0       0       0
   464 ;;Total ram usage:        8 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		___lbtoft
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text2
   474  007D66                     __ptext2:
   475                           	opt stack 0
   476  007D66                     ___ftpack:
   477                           	opt stack 29
   478                           
   479                           ;incstack = 0
   480  007D66  5004               	movf	___ftpack@exp,w,c
   481  007D68  B4D8               	btfsc	status,2,c
   482  007D6A  D005               	goto	l826
   483  007D6C  5001               	movf	___ftpack@arg,w,c
   484  007D6E  1002               	iorwf	___ftpack@arg+1,w,c
   485  007D70  1003               	iorwf	___ftpack@arg+2,w,c
   486  007D72  A4D8               	btfss	status,2,c
   487  007D74  D00C               	goto	l832
   488  007D76                     l826:
   489  007D76  0E00               	movlw	0
   490  007D78  6E01               	movwf	?___ftpack,c
   491  007D7A  0E00               	movlw	0
   492  007D7C  6E02               	movwf	?___ftpack+1,c
   493  007D7E  0E00               	movlw	0
   494  007D80  6E03               	movwf	?___ftpack+2,c
   495  007D82  0012               	return	
   496  007D84                     l830:
   497  007D84  2A04               	incf	___ftpack@exp,f,c
   498  007D86  90D8               	bcf	status,0,c
   499  007D88  3203               	rrcf	___ftpack@arg+2,f,c
   500  007D8A  3202               	rrcf	___ftpack@arg+1,f,c
   501  007D8C  3201               	rrcf	___ftpack@arg,f,c
   502  007D8E                     l832:
   503  007D8E  0E00               	movlw	0
   504  007D90  1401               	andwf	___ftpack@arg,w,c
   505  007D92  6E06               	movwf	??___ftpack& (0+255),c
   506  007D94  0E00               	movlw	0
   507  007D96  1402               	andwf	___ftpack@arg+1,w,c
   508  007D98  6E07               	movwf	(??___ftpack+1)& (0+255),c
   509  007D9A  0EFE               	movlw	254
   510  007D9C  1403               	andwf	___ftpack@arg+2,w,c
   511  007D9E  6E08               	movwf	(??___ftpack+2)& (0+255),c
   512  007DA0  5006               	movf	??___ftpack,w,c
   513  007DA2  1007               	iorwf	??___ftpack+1,w,c
   514  007DA4  1008               	iorwf	??___ftpack+2,w,c
   515  007DA6  B4D8               	btfsc	status,2,c
   516  007DA8  D00C               	goto	l838
   517  007DAA  D7EC               	goto	l830
   518  007DAC                     l834:
   519  007DAC  2A04               	incf	___ftpack@exp,f,c
   520  007DAE  0E01               	movlw	1
   521  007DB0  2601               	addwf	___ftpack@arg,f,c
   522  007DB2  0E00               	movlw	0
   523  007DB4  2202               	addwfc	___ftpack@arg+1,f,c
   524  007DB6  0E00               	movlw	0
   525  007DB8  2203               	addwfc	___ftpack@arg+2,f,c
   526  007DBA  90D8               	bcf	status,0,c
   527  007DBC  3203               	rrcf	___ftpack@arg+2,f,c
   528  007DBE  3202               	rrcf	___ftpack@arg+1,f,c
   529  007DC0  3201               	rrcf	___ftpack@arg,f,c
   530  007DC2                     l838:
   531  007DC2  0E00               	movlw	0
   532  007DC4  1401               	andwf	___ftpack@arg,w,c
   533  007DC6  6E06               	movwf	??___ftpack& (0+255),c
   534  007DC8  0E00               	movlw	0
   535  007DCA  1402               	andwf	___ftpack@arg+1,w,c
   536  007DCC  6E07               	movwf	(??___ftpack+1)& (0+255),c
   537  007DCE  0EFF               	movlw	255
   538  007DD0  1403               	andwf	___ftpack@arg+2,w,c
   539  007DD2  6E08               	movwf	(??___ftpack+2)& (0+255),c
   540  007DD4  5006               	movf	??___ftpack,w,c
   541  007DD6  1007               	iorwf	??___ftpack+1,w,c
   542  007DD8  1008               	iorwf	??___ftpack+2,w,c
   543  007DDA  B4D8               	btfsc	status,2,c
   544  007DDC  D006               	goto	l842
   545  007DDE  D7E6               	goto	l834
   546  007DE0                     l840:
   547  007DE0  0604               	decf	___ftpack@exp,f,c
   548  007DE2  90D8               	bcf	status,0,c
   549  007DE4  3601               	rlcf	___ftpack@arg,f,c
   550  007DE6  3602               	rlcf	___ftpack@arg+1,f,c
   551  007DE8  3603               	rlcf	___ftpack@arg+2,f,c
   552  007DEA                     l842:
   553  007DEA  BE02               	btfsc	___ftpack@arg+1,7,c
   554  007DEC  D003               	goto	l259
   555  007DEE  0E02               	movlw	2
   556  007DF0  6004               	cpfslt	___ftpack@exp,c
   557  007DF2  D7F6               	goto	l840
   558  007DF4                     l259:
   559  007DF4  A004               	btfss	___ftpack@exp,0,c
   560  007DF6  9E02               	bcf	___ftpack@arg+1,7,c
   561  007DF8  90D8               	bcf	status,0,c
   562  007DFA  3204               	rrcf	___ftpack@exp,f,c
   563  007DFC  5004               	movf	___ftpack@exp,w,c
   564  007DFE  1203               	iorwf	___ftpack@arg+2,f,c
   565  007E00  5005               	movf	___ftpack@sign,w,c
   566  007E02  A4D8               	btfss	status,2,c
   567  007E04  8E03               	bsf	___ftpack@arg+2,7,c
   568  007E06  C001  F001         	movff	___ftpack@arg,?___ftpack
   569  007E0A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
   570  007E0E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
   571  007E12  0012               	return	
   572  007E14                     __end_of___ftpack:
   573                           	opt stack 0
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           status	equ	0xFD8
   577                           
   578 ;; *************** function ___fttol *****************
   579 ;; Defined at:
   580 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;  f1              3    0[COMRAM] float 
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  lval            4   10[COMRAM] unsigned long 
   585 ;;  exp1            1   14[COMRAM] unsigned char 
   586 ;;  sign1           1    9[COMRAM] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  4    0[COMRAM] long 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         4       0       0       0       0       0       0       0       0
   597 ;;      Locals:         6       0       0       0       0       0       0       0       0
   598 ;;      Temps:          5       0       0       0       0       0       0       0       0
   599 ;;      Totals:        15       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:       15 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text3
   610  007E14                     __ptext3:
   611                           	opt stack 0
   612  007E14                     ___fttol:
   613                           	opt stack 30
   614                           
   615                           ;incstack = 0
   616  007E14  C003  F005         	movff	___fttol@f1+2,??___fttol
   617  007E18  6A06               	clrf	(??___fttol+1)& (0+255),c
   618  007E1A  6A07               	clrf	(??___fttol+2)& (0+255),c
   619  007E1C  3402               	rlcf	___fttol@f1+1,w,c
   620  007E1E  3605               	rlcf	??___fttol& (0+255),f,c
   621  007E20  E301               	bnc	u251
   622  007E22  8006               	bsf	(??___fttol+1)& (0+255),0,c
   623  007E24                     u251:
   624  007E24  5005               	movf	??___fttol,w,c
   625  007E26  6E0F               	movwf	___fttol@exp1,c
   626  007E28  500F               	movf	___fttol@exp1,w,c
   627  007E2A  A4D8               	btfss	status,2,c
   628  007E2C  D009               	goto	l864
   629  007E2E  0E00               	movlw	0
   630  007E30  6E01               	movwf	?___fttol,c
   631  007E32  0E00               	movlw	0
   632  007E34  6E02               	movwf	?___fttol+1,c
   633  007E36  0E00               	movlw	0
   634  007E38  6E03               	movwf	?___fttol+2,c
   635  007E3A  0E00               	movlw	0
   636  007E3C  6E04               	movwf	?___fttol+3,c
   637  007E3E  0012               	return	
   638  007E40                     l864:
   639  007E40  0E17               	movlw	23
   640  007E42  6E05               	movwf	??___fttol& (0+255),c
   641  007E44  C001  F006         	movff	___fttol@f1,??___fttol+1
   642  007E48  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   643  007E4C  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   644  007E50  2805               	incf	??___fttol,w,c
   645  007E52  6E09               	movwf	(??___fttol+4)& (0+255),c
   646  007E54  D004               	goto	u270
   647  007E56                     u275:
   648  007E56  90D8               	bcf	status,0,c
   649  007E58  3208               	rrcf	??___fttol+3,f,c
   650  007E5A  3207               	rrcf	??___fttol+2,f,c
   651  007E5C  3206               	rrcf	??___fttol+1,f,c
   652  007E5E                     u270:
   653  007E5E  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   654  007E60  D7FA               	goto	u275
   655  007E62  5006               	movf	??___fttol+1,w,c
   656  007E64  6E0A               	movwf	___fttol@sign1,c
   657  007E66  8E02               	bsf	___fttol@f1+1,7,c
   658  007E68  0EFF               	movlw	255
   659  007E6A  1601               	andwf	___fttol@f1,f,c
   660  007E6C  0EFF               	movlw	255
   661  007E6E  1602               	andwf	___fttol@f1+1,f,c
   662  007E70  0E00               	movlw	0
   663  007E72  1603               	andwf	___fttol@f1+2,f,c
   664  007E74  5001               	movf	___fttol@f1,w,c
   665  007E76  6E0B               	movwf	___fttol@lval,c
   666  007E78  5002               	movf	___fttol@f1+1,w,c
   667  007E7A  6E0C               	movwf	___fttol@lval+1,c
   668  007E7C  5003               	movf	___fttol@f1+2,w,c
   669  007E7E  6E0D               	movwf	___fttol@lval+2,c
   670  007E80  6A0E               	clrf	___fttol@lval+3,c
   671  007E82  0E8E               	movlw	142
   672  007E84  5E0F               	subwf	___fttol@exp1,f,c
   673  007E86  AE0F               	btfss	___fttol@exp1,7,c
   674  007E88  D016               	goto	l886
   675  007E8A  500F               	movf	___fttol@exp1,w,c
   676  007E8C  0A80               	xorlw	128
   677  007E8E  0F8F               	addlw	143
   678  007E90  B0D8               	btfsc	status,0,c
   679  007E92  D009               	goto	l882
   680  007E94  0E00               	movlw	0
   681  007E96  6E01               	movwf	?___fttol,c
   682  007E98  0E00               	movlw	0
   683  007E9A  6E02               	movwf	?___fttol+1,c
   684  007E9C  0E00               	movlw	0
   685  007E9E  6E03               	movwf	?___fttol+2,c
   686  007EA0  0E00               	movlw	0
   687  007EA2  6E04               	movwf	?___fttol+3,c
   688  007EA4  0012               	return	
   689  007EA6                     l882:
   690  007EA6  90D8               	bcf	status,0,c
   691  007EA8  320E               	rrcf	___fttol@lval+3,f,c
   692  007EAA  320D               	rrcf	___fttol@lval+2,f,c
   693  007EAC  320C               	rrcf	___fttol@lval+1,f,c
   694  007EAE  320B               	rrcf	___fttol@lval,f,c
   695  007EB0  3E0F               	incfsz	___fttol@exp1,f,c
   696  007EB2  D7F9               	goto	l882
   697  007EB4  D015               	goto	l896
   698  007EB6                     l886:
   699  007EB6  0E17               	movlw	23
   700  007EB8  640F               	cpfsgt	___fttol@exp1,c
   701  007EBA  D00F               	goto	l894
   702  007EBC  0E00               	movlw	0
   703  007EBE  6E01               	movwf	?___fttol,c
   704  007EC0  0E00               	movlw	0
   705  007EC2  6E02               	movwf	?___fttol+1,c
   706  007EC4  0E00               	movlw	0
   707  007EC6  6E03               	movwf	?___fttol+2,c
   708  007EC8  0E00               	movlw	0
   709  007ECA  6E04               	movwf	?___fttol+3,c
   710  007ECC  0012               	return	
   711  007ECE                     l892:
   712  007ECE  90D8               	bcf	status,0,c
   713  007ED0  360B               	rlcf	___fttol@lval,f,c
   714  007ED2  360C               	rlcf	___fttol@lval+1,f,c
   715  007ED4  360D               	rlcf	___fttol@lval+2,f,c
   716  007ED6  360E               	rlcf	___fttol@lval+3,f,c
   717  007ED8  060F               	decf	___fttol@exp1,f,c
   718  007EDA                     l894:
   719  007EDA  500F               	movf	___fttol@exp1,w,c
   720  007EDC  A4D8               	btfss	status,2,c
   721  007EDE  D7F7               	goto	l892
   722  007EE0                     l896:
   723  007EE0  500A               	movf	___fttol@sign1,w,c
   724  007EE2  B4D8               	btfsc	status,2,c
   725  007EE4  D008               	goto	l900
   726  007EE6  1E0E               	comf	___fttol@lval+3,f,c
   727  007EE8  1E0D               	comf	___fttol@lval+2,f,c
   728  007EEA  1E0C               	comf	___fttol@lval+1,f,c
   729  007EEC  6C0B               	negf	___fttol@lval,c
   730  007EEE  0E00               	movlw	0
   731  007EF0  220C               	addwfc	___fttol@lval+1,f,c
   732  007EF2  220D               	addwfc	___fttol@lval+2,f,c
   733  007EF4  220E               	addwfc	___fttol@lval+3,f,c
   734  007EF6                     l900:
   735  007EF6  C00B  F001         	movff	___fttol@lval,?___fttol
   736  007EFA  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   737  007EFE  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   738  007F02  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   739  007F06  0012               	return	
   740  007F08                     __end_of___fttol:
   741                           	opt stack 0
   742  0000                     postinc0	equ	0xFEE
   743                           wreg	equ	0xFE8
   744                           status	equ	0xFD8
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           status	equ	0xFD8
   748                           
   749                           	psect	rparam
   750  0000                     postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    ___lbtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2927
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2371
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2349
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     556
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      1B       1       28.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      20        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 08 18:04:42 2017

            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l259 7DF4  
                    l900 7EF6                      l830 7D84                      l840 7DE0  
                    l832 7D8E                      l842 7DEA                      l834 7DAC  
                    l826 7D76                      l924 7F1E                      l838 7DC2  
                    l864 7E40                      l882 7EA6                      l892 7ECE  
                    l894 7EDA                      l886 7EB6                      l896 7EE0  
           __CFG_CPB$OFF 000000                      u251 7E24                      u270 7E5E  
                    u337 7F28             __CFG_CPD$OFF 000000                      u275 7E56  
                    u347 7F60                      u357 7F98                      u367 7FD0  
           __CFG_BOR$OFF 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7F08             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     start 0000            __CFG_IESO$OFF 000000  
           ___param_bank 000000             ___fttol@exp1 000F             ___fttol@lval 000B  
          __CFG_PLLDIV$5 000000                    ?_main 0001          __end_of___fttol 7F08  
                  _PORTB 000F81                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___ftpack@sign 0005  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_MCLRE$OFF 000000  
        __initialization 7D30             __end_of_main 8000                   ??_main 0010  
          ___fttol@sign1 000A            __activetblptr 000000          __CFG_CCP2MX$OFF 000000  
       __end_of___ftpack 7E14         __end_of___lbtoft 7D66                   _TMR1CS 007E69  
                 _TMR3CS 007D89                   _Input1 0019                   _Input2 0016  
                 _Input3 0013                   _Input4 0010           __CFG_XINST$OFF 000000  
              ??___fttol 0005                   clear_0 7D36               __accesstop 0060  
__end_of__initialization 7D3C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
             ___lbtoft@c 000C               ___fttol@f1 0001           __pcstackCOMRAM 0001  
              ?___ftpack 0001                ?___lbtoft 0009          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___fttol 7E14  
        __CFG_STVREN$OFF 000000                  __pcinit 7D30               ??___ftpack 0006  
             ??___lbtoft 000C                  __ramtop 0800                  __ptext0 7F08  
                __ptext1 7D42                  __ptext2 7D66                  __ptext3 7E14  
   end_of_initialization 7D3C                  postinc0 000FEE                _PORTCbits 000F82  
    start_initialization 7D30         __CFG_LPT1OSC$OFF 000000        __size_of___ftpack 00AE  
      __size_of___lbtoft 0024              __pbssCOMRAM 0010                 ?___fttol 0001  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___fttol 00F4                 ___ftpack 7D66                 ___lbtoft 7D42  
          __size_of_main 00F8    __CFG_CPUDIV$OSC2_PLL3 000000       __CFG_FOSC$HSPLL_HS 000000  
