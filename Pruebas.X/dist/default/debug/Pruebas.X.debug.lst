

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 15 09:19:04 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTD	set	3971
    50  0000                     _PORTB	set	3969
    51  0000                     _PORTCbits	set	3970
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISD	set	3989
    54  0000                     _TRISB	set	3987
    55  0000                     _TMR3CS	set	32137
    56  0000                     _TMR1CS	set	32361
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  0079E0                     __pcinit:
    62                           	opt stack 0
    63  0079E0                     start_initialization:
    64                           	opt stack 0
    65  0079E0                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (12 bytes)
    69  0079E0  EE00  F012         	lfsr	0,__pbssCOMRAM
    70  0079E4  0E0C               	movlw	12
    71  0079E6                     clear_0:
    72  0079E6  6AEE               	clrf	postinc0,c
    73  0079E8  06E8               	decf	wreg,f,c
    74  0079EA  E1FD               	bnz	clear_0
    75  0079EC                     end_of_initialization:
    76                           	opt stack 0
    77  0079EC                     __end_of__initialization:
    78                           	opt stack 0
    79  0079EC  0100               	movlb	0
    80  0079EE  EFDC  F03D         	goto	_main	;jump to C main() function
    81                           postinc0	equ	0xFEE
    82                           wreg	equ	0xFE8
    83                           
    84                           	psect	bssCOMRAM
    85  000012                     __pbssCOMRAM:
    86                           	opt stack 0
    87  000012                     _Input4:
    88                           	opt stack 0
    89  000012                     	ds	3
    90  000015                     _Input3:
    91                           	opt stack 0
    92  000015                     	ds	3
    93  000018                     _Input2:
    94                           	opt stack 0
    95  000018                     	ds	3
    96  00001B                     _Input1:
    97                           	opt stack 0
    98  00001B                     	ds	3
    99                           postinc0	equ	0xFEE
   100                           wreg	equ	0xFE8
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	opt stack 0
   105  000001                     ?___ftpack:
   106                           	opt stack 0
   107  000001                     ?___fttol:
   108                           	opt stack 0
   109  000001                     ___ftpack@arg:
   110                           	opt stack 0
   111  000001                     ___fttol@f1:
   112                           	opt stack 0
   113                           
   114                           ; 3 bytes @ 0x0
   115  000001                     	ds	3
   116  000004                     ___ftpack@exp:
   117                           	opt stack 0
   118                           
   119                           ; 1 bytes @ 0x3
   120  000004                     	ds	1
   121  000005                     ??___fttol:
   122  000005                     ___ftpack@sign:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x4
   126  000005                     	ds	1
   127  000006                     ??___ftpack:
   128                           
   129                           ; 1 bytes @ 0x5
   130  000006                     	ds	3
   131  000009                     ?___lbtoft:
   132                           	opt stack 0
   133                           
   134                           ; 3 bytes @ 0x8
   135  000009                     	ds	1
   136  00000A                     ___fttol@sign1:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0x9
   140  00000A                     	ds	1
   141  00000B                     ___fttol@lval:
   142                           	opt stack 0
   143                           
   144                           ; 4 bytes @ 0xA
   145  00000B                     	ds	1
   146  00000C                     ___lbtoft@c:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0xB
   150  00000C                     	ds	3
   151  00000F                     ___fttol@exp1:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0xE
   155  00000F                     	ds	1
   156  000010                     ??_main:
   157                           
   158                           ; 1 bytes @ 0xF
   159  000010                     	ds	2
   160                           postinc0	equ	0xFEE
   161                           wreg	equ	0xFE8
   162                           
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 18 in file "prueba.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  2   30[None  ] int 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   182 ;;      Params:         0       0       0       0       0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0
   184 ;;      Temps:          2       0       0       0       0       0       0       0       0
   185 ;;      Totals:         2       0       0       0       0       0       0       0       0
   186 ;;Total ram usage:        2 bytes
   187 ;; Hardware stack levels required when called:    2
   188 ;; This function calls:
   189 ;;		___fttol
   190 ;;		___lbtoft
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text0
   197  007BB8                     __ptext0:
   198                           	opt stack 0
   199  007BB8                     _main:
   200                           	opt stack 29
   201                           
   202                           ;prueba.c: 20: TRISB = 0xFF;
   203                           
   204                           ;incstack = 0
   205  007BB8  6893               	setf	3987,c	;volatile
   206                           
   207                           ;prueba.c: 21: TRISD = 0x00;
   208  007BBA  0E00               	movlw	0
   209  007BBC  6E95               	movwf	3989,c	;volatile
   210                           
   211                           ;prueba.c: 22: TRISC = 0b01000000;
   212  007BBE  0E40               	movlw	64
   213  007BC0  6E94               	movwf	3988,c	;volatile
   214                           
   215                           ;prueba.c: 23: TMR1CS = 0;
   216  007BC2  92CD               	bcf	4045,1,c	;volatile
   217                           
   218                           ;prueba.c: 24: TMR3CS = 0;
   219  007BC4  92B1               	bcf	4017,1,c	;volatile
   220                           
   221                           ;prueba.c: 25: PORTCbits.RC0 = 0;
   222  007BC6  9082               	bcf	3970,0,c	;volatile
   223                           
   224                           ;prueba.c: 26: PORTCbits.RC1 = 0;
   225  007BC8  9282               	bcf	3970,1,c	;volatile
   226                           
   227                           ;prueba.c: 27: PORTCbits.RC2 = 1;
   228  007BCA  8482               	bsf	3970,2,c	;volatile
   229                           
   230                           ;prueba.c: 28: PORTCbits.RC7 = 0;
   231  007BCC  9E82               	bcf	3970,7,c	;volatile
   232  007BCE                     l924:
   233                           
   234                           ;prueba.c: 32: {
   235                           ;prueba.c: 33: PORTCbits.RC0 = 0;
   236  007BCE  9082               	bcf	3970,0,c	;volatile
   237                           
   238                           ;prueba.c: 34: PORTCbits.RC1 = 0;
   239  007BD0  9282               	bcf	3970,1,c	;volatile
   240                           
   241                           ;prueba.c: 37: PORTCbits.RC2 = 1;
   242  007BD2  8482               	bsf	3970,2,c	;volatile
   243                           
   244                           ;prueba.c: 38: _delay((unsigned long)((5)*(32000000/4000000.0)));
   245  007BD4  0E0D               	movlw	13
   246  007BD6                     u337:
   247  007BD6  2EE8               	decfsz	wreg,f,c
   248  007BD8  D7FE               	bra	u337
   249  007BDA  F000               	nop	
   250                           
   251                           ;prueba.c: 39: PORTCbits.RC2 = 0;
   252  007BDC  9482               	bcf	3970,2,c	;volatile
   253                           
   254                           ;prueba.c: 40: Input1 = PORTB;
   255  007BDE  5081               	movf	3969,w,c	;volatile
   256  007BE0  ECF9  F03C         	call	___lbtoft
   257  007BE4  C009  F01B         	movff	?___lbtoft,_Input1
   258  007BE8  C00A  F01C         	movff	?___lbtoft+1,_Input1+1
   259  007BEC  C00B  F01D         	movff	?___lbtoft+2,_Input1+2
   260                           
   261                           ;prueba.c: 41: PORTD = Input1;
   262  007BF0  C01B  F001         	movff	_Input1,___fttol@f1
   263  007BF4  C01C  F002         	movff	_Input1+1,___fttol@f1+1
   264  007BF8  C01D  F003         	movff	_Input1+2,___fttol@f1+2
   265  007BFC  EC62  F03D         	call	___fttol	;wreg free
   266  007C00  5001               	movf	?___fttol,w,c
   267  007C02  6E83               	movwf	3971,c	;volatile
   268                           
   269                           ;prueba.c: 42: _delay((unsigned long)((3000)*(32000000/4000.0)));
   270  007C04  0E7A               	movlw	122
   271  007C06  6E11               	movwf	(??_main+1)& (0+255),c
   272  007C08  0EC1               	movlw	193
   273  007C0A  6E10               	movwf	??_main& (0+255),c
   274  007C0C  0E82               	movlw	130
   275  007C0E                     u347:
   276  007C0E  2EE8               	decfsz	wreg,f,c
   277  007C10  D7FE               	bra	u347
   278  007C12  2E10               	decfsz	??_main& (0+255),f,c
   279  007C14  D7FC               	bra	u347
   280  007C16  2E11               	decfsz	(??_main+1)& (0+255),f,c
   281  007C18  D7FA               	bra	u347
   282                           
   283                           ;prueba.c: 44: PORTCbits.RC0 = 1;
   284  007C1A  8082               	bsf	3970,0,c	;volatile
   285                           
   286                           ;prueba.c: 45: PORTCbits.RC1 = 0;
   287  007C1C  9282               	bcf	3970,1,c	;volatile
   288                           
   289                           ;prueba.c: 48: PORTCbits.RC2 = 1;
   290  007C1E  8482               	bsf	3970,2,c	;volatile
   291                           
   292                           ;prueba.c: 49: _delay((unsigned long)((5)*(32000000/4000000.0)));
   293  007C20  0E0D               	movlw	13
   294  007C22                     u357:
   295  007C22  2EE8               	decfsz	wreg,f,c
   296  007C24  D7FE               	bra	u357
   297  007C26  F000               	nop	
   298                           
   299                           ;prueba.c: 50: PORTCbits.RC2 = 0;
   300  007C28  9482               	bcf	3970,2,c	;volatile
   301                           
   302                           ;prueba.c: 51: Input2 = PORTB;
   303  007C2A  5081               	movf	3969,w,c	;volatile
   304  007C2C  ECF9  F03C         	call	___lbtoft
   305  007C30  C009  F018         	movff	?___lbtoft,_Input2
   306  007C34  C00A  F019         	movff	?___lbtoft+1,_Input2+1
   307  007C38  C00B  F01A         	movff	?___lbtoft+2,_Input2+2
   308                           
   309                           ;prueba.c: 52: PORTD = Input2;
   310  007C3C  C018  F001         	movff	_Input2,___fttol@f1
   311  007C40  C019  F002         	movff	_Input2+1,___fttol@f1+1
   312  007C44  C01A  F003         	movff	_Input2+2,___fttol@f1+2
   313  007C48  EC62  F03D         	call	___fttol	;wreg free
   314  007C4C  5001               	movf	?___fttol,w,c
   315  007C4E  6E83               	movwf	3971,c	;volatile
   316                           
   317                           ;prueba.c: 53: _delay((unsigned long)((3000)*(32000000/4000.0)));
   318  007C50  0E7A               	movlw	122
   319  007C52  6E11               	movwf	(??_main+1)& (0+255),c
   320  007C54  0EC1               	movlw	193
   321  007C56  6E10               	movwf	??_main& (0+255),c
   322  007C58  0E82               	movlw	130
   323  007C5A                     u367:
   324  007C5A  2EE8               	decfsz	wreg,f,c
   325  007C5C  D7FE               	bra	u367
   326  007C5E  2E10               	decfsz	??_main& (0+255),f,c
   327  007C60  D7FC               	bra	u367
   328  007C62  2E11               	decfsz	(??_main+1)& (0+255),f,c
   329  007C64  D7FA               	bra	u367
   330                           
   331                           ;prueba.c: 55: PORTCbits.RC0 = 0;
   332  007C66  9082               	bcf	3970,0,c	;volatile
   333                           
   334                           ;prueba.c: 56: PORTCbits.RC1 = 1;
   335  007C68  8282               	bsf	3970,1,c	;volatile
   336                           
   337                           ;prueba.c: 59: PORTCbits.RC2 = 1;
   338  007C6A  8482               	bsf	3970,2,c	;volatile
   339                           
   340                           ;prueba.c: 60: _delay((unsigned long)((5)*(32000000/4000000.0)));
   341  007C6C  0E0D               	movlw	13
   342  007C6E                     u377:
   343  007C6E  2EE8               	decfsz	wreg,f,c
   344  007C70  D7FE               	bra	u377
   345  007C72  F000               	nop	
   346                           
   347                           ;prueba.c: 61: PORTCbits.RC2 = 0;
   348  007C74  9482               	bcf	3970,2,c	;volatile
   349                           
   350                           ;prueba.c: 62: Input3 = PORTB;
   351  007C76  5081               	movf	3969,w,c	;volatile
   352  007C78  ECF9  F03C         	call	___lbtoft
   353  007C7C  C009  F015         	movff	?___lbtoft,_Input3
   354  007C80  C00A  F016         	movff	?___lbtoft+1,_Input3+1
   355  007C84  C00B  F017         	movff	?___lbtoft+2,_Input3+2
   356                           
   357                           ;prueba.c: 63: PORTD = Input3;
   358  007C88  C015  F001         	movff	_Input3,___fttol@f1
   359  007C8C  C016  F002         	movff	_Input3+1,___fttol@f1+1
   360  007C90  C017  F003         	movff	_Input3+2,___fttol@f1+2
   361  007C94  EC62  F03D         	call	___fttol	;wreg free
   362  007C98  5001               	movf	?___fttol,w,c
   363  007C9A  6E83               	movwf	3971,c	;volatile
   364                           
   365                           ;prueba.c: 64: _delay((unsigned long)((3000)*(32000000/4000.0)));
   366  007C9C  0E7A               	movlw	122
   367  007C9E  6E11               	movwf	(??_main+1)& (0+255),c
   368  007CA0  0EC1               	movlw	193
   369  007CA2  6E10               	movwf	??_main& (0+255),c
   370  007CA4  0E82               	movlw	130
   371  007CA6                     u387:
   372  007CA6  2EE8               	decfsz	wreg,f,c
   373  007CA8  D7FE               	bra	u387
   374  007CAA  2E10               	decfsz	??_main& (0+255),f,c
   375  007CAC  D7FC               	bra	u387
   376  007CAE  2E11               	decfsz	(??_main+1)& (0+255),f,c
   377  007CB0  D7FA               	bra	u387
   378                           
   379                           ;prueba.c: 66: PORTCbits.RC0 = 1;
   380  007CB2  8082               	bsf	3970,0,c	;volatile
   381                           
   382                           ;prueba.c: 67: PORTCbits.RC1 = 1;
   383  007CB4  8282               	bsf	3970,1,c	;volatile
   384                           
   385                           ;prueba.c: 70: PORTCbits.RC2 = 1;
   386  007CB6  8482               	bsf	3970,2,c	;volatile
   387                           
   388                           ;prueba.c: 71: _delay((unsigned long)((5)*(32000000/4000000.0)));
   389  007CB8  0E0D               	movlw	13
   390  007CBA                     u397:
   391  007CBA  2EE8               	decfsz	wreg,f,c
   392  007CBC  D7FE               	bra	u397
   393  007CBE  F000               	nop	
   394                           
   395                           ;prueba.c: 72: PORTCbits.RC2 = 0;
   396  007CC0  9482               	bcf	3970,2,c	;volatile
   397                           
   398                           ;prueba.c: 73: Input4 = PORTB;
   399  007CC2  5081               	movf	3969,w,c	;volatile
   400  007CC4  ECF9  F03C         	call	___lbtoft
   401  007CC8  C009  F012         	movff	?___lbtoft,_Input4
   402  007CCC  C00A  F013         	movff	?___lbtoft+1,_Input4+1
   403  007CD0  C00B  F014         	movff	?___lbtoft+2,_Input4+2
   404                           
   405                           ;prueba.c: 74: PORTD = Input4;
   406  007CD4  C012  F001         	movff	_Input4,___fttol@f1
   407  007CD8  C013  F002         	movff	_Input4+1,___fttol@f1+1
   408  007CDC  C014  F003         	movff	_Input4+2,___fttol@f1+2
   409  007CE0  EC62  F03D         	call	___fttol	;wreg free
   410  007CE4  5001               	movf	?___fttol,w,c
   411  007CE6  6E83               	movwf	3971,c	;volatile
   412                           
   413                           ;prueba.c: 75: _delay((unsigned long)((3000)*(32000000/4000.0)));
   414  007CE8  0E7A               	movlw	122
   415  007CEA  6E11               	movwf	(??_main+1)& (0+255),c
   416  007CEC  0EC1               	movlw	193
   417  007CEE  6E10               	movwf	??_main& (0+255),c
   418  007CF0  0E82               	movlw	130
   419  007CF2                     u407:
   420  007CF2  2EE8               	decfsz	wreg,f,c
   421  007CF4  D7FE               	bra	u407
   422  007CF6  2E10               	decfsz	??_main& (0+255),f,c
   423  007CF8  D7FC               	bra	u407
   424  007CFA  2E11               	decfsz	(??_main+1)& (0+255),f,c
   425  007CFC  D7FA               	bra	u407
   426  007CFE  D767               	goto	l924
   427  007D00                     __end_of_main:
   428                           	opt stack 0
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           
   432 ;; *************** function ___lbtoft *****************
   433 ;; Defined at:
   434 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  c               1    wreg     unsigned char 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  c               1   11[COMRAM] unsigned char 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  3    8[COMRAM] float 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   448 ;;      Params:         3       0       0       0       0       0       0       0       0
   449 ;;      Locals:         1       0       0       0       0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0
   451 ;;      Totals:         4       0       0       0       0       0       0       0       0
   452 ;;Total ram usage:        4 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    1
   455 ;; This function calls:
   456 ;;		___ftpack
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463  0079F2                     __ptext1:
   464                           	opt stack 0
   465  0079F2                     ___lbtoft:
   466                           	opt stack 29
   467                           
   468                           ;incstack = 0
   469                           ;___lbtoft@c stored from wreg
   470  0079F2  6E0C               	movwf	___lbtoft@c,c
   471  0079F4  500C               	movf	___lbtoft@c,w,c
   472  0079F6  6E01               	movwf	___ftpack@arg,c
   473  0079F8  6A02               	clrf	___ftpack@arg+1,c
   474  0079FA  6A03               	clrf	___ftpack@arg+2,c
   475  0079FC  0E8E               	movlw	142
   476  0079FE  6E04               	movwf	___ftpack@exp,c
   477  007A00  0E00               	movlw	0
   478  007A02  6E05               	movwf	___ftpack@sign,c
   479  007A04  EC0B  F03D         	call	___ftpack	;wreg free
   480  007A08  C001  F009         	movff	?___ftpack,?___lbtoft
   481  007A0C  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   482  007A10  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   483  007A14  0012               	return	
   484  007A16                     __end_of___lbtoft:
   485                           	opt stack 0
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           
   489 ;; *************** function ___ftpack *****************
   490 ;; Defined at:
   491 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  arg             3    0[COMRAM] unsigned um
   494 ;;  exp             1    3[COMRAM] unsigned char 
   495 ;;  sign            1    4[COMRAM] unsigned char 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  3    0[COMRAM] float 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   507 ;;      Params:         5       0       0       0       0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0
   509 ;;      Temps:          3       0       0       0       0       0       0       0       0
   510 ;;      Totals:         8       0       0       0       0       0       0       0       0
   511 ;;Total ram usage:        8 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		___lbtoft
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text2
   521  007A16                     __ptext2:
   522                           	opt stack 0
   523  007A16                     ___ftpack:
   524                           	opt stack 29
   525                           
   526                           ;incstack = 0
   527  007A16  5004               	movf	___ftpack@exp,w,c
   528  007A18  B4D8               	btfsc	status,2,c
   529  007A1A  D005               	goto	l826
   530  007A1C  5001               	movf	___ftpack@arg,w,c
   531  007A1E  1002               	iorwf	___ftpack@arg+1,w,c
   532  007A20  1003               	iorwf	___ftpack@arg+2,w,c
   533  007A22  A4D8               	btfss	status,2,c
   534  007A24  D00C               	goto	l832
   535  007A26                     l826:
   536  007A26  0E00               	movlw	0
   537  007A28  6E01               	movwf	?___ftpack,c
   538  007A2A  0E00               	movlw	0
   539  007A2C  6E02               	movwf	?___ftpack+1,c
   540  007A2E  0E00               	movlw	0
   541  007A30  6E03               	movwf	?___ftpack+2,c
   542  007A32  0012               	return	
   543  007A34                     l830:
   544  007A34  2A04               	incf	___ftpack@exp,f,c
   545  007A36  90D8               	bcf	status,0,c
   546  007A38  3203               	rrcf	___ftpack@arg+2,f,c
   547  007A3A  3202               	rrcf	___ftpack@arg+1,f,c
   548  007A3C  3201               	rrcf	___ftpack@arg,f,c
   549  007A3E                     l832:
   550  007A3E  0E00               	movlw	0
   551  007A40  1401               	andwf	___ftpack@arg,w,c
   552  007A42  6E06               	movwf	??___ftpack& (0+255),c
   553  007A44  0E00               	movlw	0
   554  007A46  1402               	andwf	___ftpack@arg+1,w,c
   555  007A48  6E07               	movwf	(??___ftpack+1)& (0+255),c
   556  007A4A  0EFE               	movlw	254
   557  007A4C  1403               	andwf	___ftpack@arg+2,w,c
   558  007A4E  6E08               	movwf	(??___ftpack+2)& (0+255),c
   559  007A50  5006               	movf	??___ftpack,w,c
   560  007A52  1007               	iorwf	??___ftpack+1,w,c
   561  007A54  1008               	iorwf	??___ftpack+2,w,c
   562  007A56  B4D8               	btfsc	status,2,c
   563  007A58  D00C               	goto	l838
   564  007A5A  D7EC               	goto	l830
   565  007A5C                     l834:
   566  007A5C  2A04               	incf	___ftpack@exp,f,c
   567  007A5E  0E01               	movlw	1
   568  007A60  2601               	addwf	___ftpack@arg,f,c
   569  007A62  0E00               	movlw	0
   570  007A64  2202               	addwfc	___ftpack@arg+1,f,c
   571  007A66  0E00               	movlw	0
   572  007A68  2203               	addwfc	___ftpack@arg+2,f,c
   573  007A6A  90D8               	bcf	status,0,c
   574  007A6C  3203               	rrcf	___ftpack@arg+2,f,c
   575  007A6E  3202               	rrcf	___ftpack@arg+1,f,c
   576  007A70  3201               	rrcf	___ftpack@arg,f,c
   577  007A72                     l838:
   578  007A72  0E00               	movlw	0
   579  007A74  1401               	andwf	___ftpack@arg,w,c
   580  007A76  6E06               	movwf	??___ftpack& (0+255),c
   581  007A78  0E00               	movlw	0
   582  007A7A  1402               	andwf	___ftpack@arg+1,w,c
   583  007A7C  6E07               	movwf	(??___ftpack+1)& (0+255),c
   584  007A7E  0EFF               	movlw	255
   585  007A80  1403               	andwf	___ftpack@arg+2,w,c
   586  007A82  6E08               	movwf	(??___ftpack+2)& (0+255),c
   587  007A84  5006               	movf	??___ftpack,w,c
   588  007A86  1007               	iorwf	??___ftpack+1,w,c
   589  007A88  1008               	iorwf	??___ftpack+2,w,c
   590  007A8A  B4D8               	btfsc	status,2,c
   591  007A8C  D006               	goto	l842
   592  007A8E  D7E6               	goto	l834
   593  007A90                     l840:
   594  007A90  0604               	decf	___ftpack@exp,f,c
   595  007A92  90D8               	bcf	status,0,c
   596  007A94  3601               	rlcf	___ftpack@arg,f,c
   597  007A96  3602               	rlcf	___ftpack@arg+1,f,c
   598  007A98  3603               	rlcf	___ftpack@arg+2,f,c
   599  007A9A                     l842:
   600  007A9A  BE02               	btfsc	___ftpack@arg+1,7,c
   601  007A9C  D003               	goto	l259
   602  007A9E  0E02               	movlw	2
   603  007AA0  6004               	cpfslt	___ftpack@exp,c
   604  007AA2  D7F6               	goto	l840
   605  007AA4                     l259:
   606  007AA4  A004               	btfss	___ftpack@exp,0,c
   607  007AA6  9E02               	bcf	___ftpack@arg+1,7,c
   608  007AA8  90D8               	bcf	status,0,c
   609  007AAA  3204               	rrcf	___ftpack@exp,f,c
   610  007AAC  5004               	movf	___ftpack@exp,w,c
   611  007AAE  1203               	iorwf	___ftpack@arg+2,f,c
   612  007AB0  5005               	movf	___ftpack@sign,w,c
   613  007AB2  A4D8               	btfss	status,2,c
   614  007AB4  8E03               	bsf	___ftpack@arg+2,7,c
   615  007AB6  C001  F001         	movff	___ftpack@arg,?___ftpack
   616  007ABA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
   617  007ABE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
   618  007AC2  0012               	return	
   619  007AC4                     __end_of___ftpack:
   620                           	opt stack 0
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           status	equ	0xFD8
   624                           
   625 ;; *************** function ___fttol *****************
   626 ;; Defined at:
   627 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  f1              3    0[COMRAM] float 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  lval            4   10[COMRAM] unsigned long 
   632 ;;  exp1            1   14[COMRAM] unsigned char 
   633 ;;  sign1           1    9[COMRAM] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  4    0[COMRAM] long 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   643 ;;      Params:         4       0       0       0       0       0       0       0       0
   644 ;;      Locals:         6       0       0       0       0       0       0       0       0
   645 ;;      Temps:          5       0       0       0       0       0       0       0       0
   646 ;;      Totals:        15       0       0       0       0       0       0       0       0
   647 ;;Total ram usage:       15 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text3
   657  007AC4                     __ptext3:
   658                           	opt stack 0
   659  007AC4                     ___fttol:
   660                           	opt stack 30
   661                           
   662                           ;incstack = 0
   663  007AC4  C003  F005         	movff	___fttol@f1+2,??___fttol
   664  007AC8  6A06               	clrf	(??___fttol+1)& (0+255),c
   665  007ACA  6A07               	clrf	(??___fttol+2)& (0+255),c
   666  007ACC  3402               	rlcf	___fttol@f1+1,w,c
   667  007ACE  3605               	rlcf	??___fttol& (0+255),f,c
   668  007AD0  E301               	bnc	u251
   669  007AD2  8006               	bsf	(??___fttol+1)& (0+255),0,c
   670  007AD4                     u251:
   671  007AD4  5005               	movf	??___fttol,w,c
   672  007AD6  6E0F               	movwf	___fttol@exp1,c
   673  007AD8  500F               	movf	___fttol@exp1,w,c
   674  007ADA  A4D8               	btfss	status,2,c
   675  007ADC  D009               	goto	l864
   676  007ADE  0E00               	movlw	0
   677  007AE0  6E01               	movwf	?___fttol,c
   678  007AE2  0E00               	movlw	0
   679  007AE4  6E02               	movwf	?___fttol+1,c
   680  007AE6  0E00               	movlw	0
   681  007AE8  6E03               	movwf	?___fttol+2,c
   682  007AEA  0E00               	movlw	0
   683  007AEC  6E04               	movwf	?___fttol+3,c
   684  007AEE  0012               	return	
   685  007AF0                     l864:
   686  007AF0  0E17               	movlw	23
   687  007AF2  6E05               	movwf	??___fttol& (0+255),c
   688  007AF4  C001  F006         	movff	___fttol@f1,??___fttol+1
   689  007AF8  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   690  007AFC  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   691  007B00  2805               	incf	??___fttol,w,c
   692  007B02  6E09               	movwf	(??___fttol+4)& (0+255),c
   693  007B04  D004               	goto	u270
   694  007B06                     u275:
   695  007B06  90D8               	bcf	status,0,c
   696  007B08  3208               	rrcf	??___fttol+3,f,c
   697  007B0A  3207               	rrcf	??___fttol+2,f,c
   698  007B0C  3206               	rrcf	??___fttol+1,f,c
   699  007B0E                     u270:
   700  007B0E  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   701  007B10  D7FA               	goto	u275
   702  007B12  5006               	movf	??___fttol+1,w,c
   703  007B14  6E0A               	movwf	___fttol@sign1,c
   704  007B16  8E02               	bsf	___fttol@f1+1,7,c
   705  007B18  0EFF               	movlw	255
   706  007B1A  1601               	andwf	___fttol@f1,f,c
   707  007B1C  0EFF               	movlw	255
   708  007B1E  1602               	andwf	___fttol@f1+1,f,c
   709  007B20  0E00               	movlw	0
   710  007B22  1603               	andwf	___fttol@f1+2,f,c
   711  007B24  5001               	movf	___fttol@f1,w,c
   712  007B26  6E0B               	movwf	___fttol@lval,c
   713  007B28  5002               	movf	___fttol@f1+1,w,c
   714  007B2A  6E0C               	movwf	___fttol@lval+1,c
   715  007B2C  5003               	movf	___fttol@f1+2,w,c
   716  007B2E  6E0D               	movwf	___fttol@lval+2,c
   717  007B30  6A0E               	clrf	___fttol@lval+3,c
   718  007B32  0E8E               	movlw	142
   719  007B34  5E0F               	subwf	___fttol@exp1,f,c
   720  007B36  AE0F               	btfss	___fttol@exp1,7,c
   721  007B38  D016               	goto	l886
   722  007B3A  500F               	movf	___fttol@exp1,w,c
   723  007B3C  0A80               	xorlw	128
   724  007B3E  0F8F               	addlw	143
   725  007B40  B0D8               	btfsc	status,0,c
   726  007B42  D009               	goto	l882
   727  007B44  0E00               	movlw	0
   728  007B46  6E01               	movwf	?___fttol,c
   729  007B48  0E00               	movlw	0
   730  007B4A  6E02               	movwf	?___fttol+1,c
   731  007B4C  0E00               	movlw	0
   732  007B4E  6E03               	movwf	?___fttol+2,c
   733  007B50  0E00               	movlw	0
   734  007B52  6E04               	movwf	?___fttol+3,c
   735  007B54  0012               	return	
   736  007B56                     l882:
   737  007B56  90D8               	bcf	status,0,c
   738  007B58  320E               	rrcf	___fttol@lval+3,f,c
   739  007B5A  320D               	rrcf	___fttol@lval+2,f,c
   740  007B5C  320C               	rrcf	___fttol@lval+1,f,c
   741  007B5E  320B               	rrcf	___fttol@lval,f,c
   742  007B60  3E0F               	incfsz	___fttol@exp1,f,c
   743  007B62  D7F9               	goto	l882
   744  007B64  D015               	goto	l896
   745  007B66                     l886:
   746  007B66  0E17               	movlw	23
   747  007B68  640F               	cpfsgt	___fttol@exp1,c
   748  007B6A  D00F               	goto	l894
   749  007B6C  0E00               	movlw	0
   750  007B6E  6E01               	movwf	?___fttol,c
   751  007B70  0E00               	movlw	0
   752  007B72  6E02               	movwf	?___fttol+1,c
   753  007B74  0E00               	movlw	0
   754  007B76  6E03               	movwf	?___fttol+2,c
   755  007B78  0E00               	movlw	0
   756  007B7A  6E04               	movwf	?___fttol+3,c
   757  007B7C  0012               	return	
   758  007B7E                     l892:
   759  007B7E  90D8               	bcf	status,0,c
   760  007B80  360B               	rlcf	___fttol@lval,f,c
   761  007B82  360C               	rlcf	___fttol@lval+1,f,c
   762  007B84  360D               	rlcf	___fttol@lval+2,f,c
   763  007B86  360E               	rlcf	___fttol@lval+3,f,c
   764  007B88  060F               	decf	___fttol@exp1,f,c
   765  007B8A                     l894:
   766  007B8A  500F               	movf	___fttol@exp1,w,c
   767  007B8C  A4D8               	btfss	status,2,c
   768  007B8E  D7F7               	goto	l892
   769  007B90                     l896:
   770  007B90  500A               	movf	___fttol@sign1,w,c
   771  007B92  B4D8               	btfsc	status,2,c
   772  007B94  D008               	goto	l900
   773  007B96  1E0E               	comf	___fttol@lval+3,f,c
   774  007B98  1E0D               	comf	___fttol@lval+2,f,c
   775  007B9A  1E0C               	comf	___fttol@lval+1,f,c
   776  007B9C  6C0B               	negf	___fttol@lval,c
   777  007B9E  0E00               	movlw	0
   778  007BA0  220C               	addwfc	___fttol@lval+1,f,c
   779  007BA2  220D               	addwfc	___fttol@lval+2,f,c
   780  007BA4  220E               	addwfc	___fttol@lval+3,f,c
   781  007BA6                     l900:
   782  007BA6  C00B  F001         	movff	___fttol@lval,?___fttol
   783  007BAA  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   784  007BAE  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   785  007BB2  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   786  007BB6  0012               	return	
   787  007BB8                     __end_of___fttol:
   788                           	opt stack 0
   789  0000                     postinc0	equ	0xFEE
   790                           wreg	equ	0xFE8
   791                           status	equ	0xFD8
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           status	equ	0xFD8
   795                           
   796                           	psect	rparam
   797  0000                     postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    ___lbtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2927
                                             15 COMRAM     2     2      0
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2371
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2349
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     556
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fttol
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      1D       1       30.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D      11        0.0%
DATA                 0      0      1D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 15 09:19:04 2017

            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l259 7AA4  
                    l900 7BA6                      l830 7A34                      l840 7A90  
                    l832 7A3E                      l842 7A9A                      l834 7A5C  
                    l826 7A26                      l924 7BCE                      l838 7A72  
                    l864 7AF0                      l882 7B56                      l892 7B7E  
                    l894 7B8A                      l886 7B66                      l896 7B90  
           __CFG_CPB$OFF 000000                      u251 7AD4                      u270 7B0E  
                    u407 7CF2                      u337 7BD6             __CFG_CPD$OFF 000000  
                    u275 7B06                      u347 7C0E                      u357 7C22  
                    u367 7C5A                      u377 7C6E                      u387 7CA6  
                    u397 7CBA             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main 7BB8  
           ___ftpack@arg 0001             ___ftpack@exp 0004                     start 0002  
          __CFG_IESO$OFF 000000             ___param_bank 000000             ___fttol@exp1 000F  
           ___fttol@lval 000B            __CFG_PLLDIV$5 000000                    ?_main 0001  
        __end_of___fttol 7BB8                    _PORTB 000F81                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
          ___ftpack@sign 0005                    status 000FD8           __CFG_ICPRT$OFF 000000  
         __CFG_MCLRE$OFF 000000          __initialization 79E0             __end_of_main 7D00  
                 ??_main 0010            ___fttol@sign1 000A            __activetblptr 000000  
        __CFG_CCP2MX$OFF 000000         __end_of___ftpack 7AC4         __end_of___lbtoft 7A16  
                 _TMR1CS 007E69                   _TMR3CS 007D89                   _Input1 001B  
                 _Input2 0018                   _Input3 0015                   _Input4 0012  
         __CFG_XINST$OFF 000000                ??___fttol 0005                   clear_0 79E6  
             __accesstop 0060  __end_of__initialization 79EC          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001               ___lbtoft@c 000C               ___fttol@f1 0001  
         __pcstackCOMRAM 0001                ?___ftpack 0001                ?___lbtoft 0009  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___fttol 7AC4          __CFG_STVREN$OFF 000000                  __pcinit 79E0  
             ??___ftpack 0006               ??___lbtoft 000C                  __ramtop 0800  
                __ptext0 7BB8                  __ptext1 79F2                  __ptext2 7A16  
                __ptext3 7AC4     end_of_initialization 79EC                  postinc0 000FEE  
              _PORTCbits 000F82      start_initialization 79E0         __CFG_LPT1OSC$OFF 000000  
      __size_of___ftpack 00AE        __size_of___lbtoft 0024              __pbssCOMRAM 0012  
               ?___fttol 0001         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000         __size_of___fttol 00F4                 ___ftpack 7A16  
               ___lbtoft 79F2            __size_of_main 0148    __CFG_CPUDIV$OSC2_PLL3 000000  
     __CFG_FOSC$HSPLL_HS 000000  
