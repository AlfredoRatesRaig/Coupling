

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon May 22 12:17:18 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30  0000                     
    31                           ; Version 1.42
    32                           ; Generated 13/04/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataBANK0
    67  006FA8                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _Setpoint
    71  006FA8  0064               	dw	100
    72                           
    73                           ;initializer for _PID_Out_Max
    74  006FAA  000A               	dw	10
    75                           
    76                           ;initializer for _PID_Out_Min
    77  006FAC  0005               	dw	5
    78                           
    79                           ; #config settings
    80                           
    81                           	psect	cinit
    82  006FF6                     __pcinit:
    83                           	opt stack 0
    84  006FF6                     start_initialization:
    85                           	opt stack 0
    86  006FF6                     __initialization:
    87                           	opt stack 0
    88                           
    89                           ; Initialize objects allocated to BANK0 (6 bytes)
    90                           ; load TBLPTR registers with __pidataBANK0
    91  006FF6  0EA8               	movlw	low __pidataBANK0
    92  006FF8  6EF6               	movwf	tblptrl,c
    93  006FFA  0E6F               	movlw	high __pidataBANK0
    94  006FFC  6EF7               	movwf	tblptrh,c
    95  006FFE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
    96  007000  6EF8               	movwf	tblptru,c
    97  007002  EE00  F08D         	lfsr	0,__pdataBANK0
    98  007006  EE10 F006          	lfsr	1,6
    99  00700A                     copy_data0:
   100  00700A  0009               	tblrd		*+
   101  00700C  CFF5 FFEE          	movff	tablat,postinc0
   102  007010  50E5               	movf	postdec1,w,c
   103  007012  50E1               	movf	fsr1l,w,c
   104  007014  E1FA               	bnz	copy_data0
   105                           
   106                           ; Clear objects allocated to BANK0 (4 bytes)
   107  007016  0100               	movlb	0
   108  007018  6B96               	clrf	(__pbssBANK0+3)& (0+255),b
   109  00701A  6B95               	clrf	(__pbssBANK0+2)& (0+255),b
   110  00701C  6B94               	clrf	(__pbssBANK0+1)& (0+255),b
   111  00701E  6B93               	clrf	__pbssBANK0& (0+255),b
   112  007020                     end_of_initialization:
   113                           	opt stack 0
   114  007020                     __end_of__initialization:
   115                           	opt stack 0
   116  007020  0100               	movlb	0
   117  007022  EF1C  F039         	goto	_main	;jump to C main() function
   118                           tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           tblptrl	equ	0xFF6
   121                           tablat	equ	0xFF5
   122                           postinc0	equ	0xFEE
   123                           postdec1	equ	0xFE5
   124                           fsr1l	equ	0xFE1
   125                           
   126                           	psect	bssBANK0
   127  000093                     __pbssBANK0:
   128                           	opt stack 0
   129  000093                     _Output:
   130                           	opt stack 0
   131  000093                     	ds	3
   132  000096                     _Input:
   133                           	opt stack 0
   134  000096                     	ds	1
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           postinc0	equ	0xFEE
   140                           postdec1	equ	0xFE5
   141                           fsr1l	equ	0xFE1
   142                           
   143                           	psect	dataBANK0
   144  00008D                     __pdataBANK0:
   145                           	opt stack 0
   146  00008D                     _Setpoint:
   147                           	opt stack 0
   148  00008D                     	ds	2
   149  00008F                     _PID_Out_Max:
   150                           	opt stack 0
   151  00008F                     	ds	2
   152  000091                     _PID_Out_Min:
   153                           	opt stack 0
   154  000091                     	ds	2
   155                           tblptru	equ	0xFF8
   156                           tblptrh	equ	0xFF7
   157                           tblptrl	equ	0xFF6
   158                           tablat	equ	0xFF5
   159                           postinc0	equ	0xFEE
   160                           postdec1	equ	0xFE5
   161                           fsr1l	equ	0xFE1
   162                           
   163                           	psect	cstackBANK0
   164  000060                     __pcstackBANK0:
   165                           	opt stack 0
   166  000060                     main@PID:
   167                           	opt stack 0
   168                           
   169                           ; 45 bytes @ 0x0
   170  000060                     	ds	45
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           tblptrl	equ	0xFF6
   174                           tablat	equ	0xFF5
   175                           postinc0	equ	0xFEE
   176                           postdec1	equ	0xFE5
   177                           fsr1l	equ	0xFE1
   178                           
   179                           	psect	cstackCOMRAM
   180  000001                     __pcstackCOMRAM:
   181                           	opt stack 0
   182  000001                     ?___ftpack:
   183                           	opt stack 0
   184  000001                     ___ftpack@arg:
   185                           	opt stack 0
   186  000001                     ___ftge@ff1:
   187                           	opt stack 0
   188                           
   189                           ; 3 bytes @ 0x0
   190  000001                     	ds	3
   191  000004                     ___ftpack@exp:
   192                           	opt stack 0
   193  000004                     ___ftge@ff2:
   194                           	opt stack 0
   195                           
   196                           ; 3 bytes @ 0x3
   197  000004                     	ds	1
   198  000005                     ___ftpack@sign:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x4
   202  000005                     	ds	1
   203  000006                     ??___ftpack:
   204                           
   205                           ; 1 bytes @ 0x5
   206  000006                     	ds	1
   207  000007                     ??___ftge:
   208                           
   209                           ; 1 bytes @ 0x6
   210  000007                     	ds	2
   211  000009                     ?___ftmul:
   212                           	opt stack 0
   213  000009                     ?___awtoft:
   214                           	opt stack 0
   215  000009                     ?___lbtoft:
   216                           	opt stack 0
   217  000009                     ?___lltoft:
   218                           	opt stack 0
   219  000009                     ___awtoft@c:
   220                           	opt stack 0
   221  000009                     ___ftmul@f1:
   222                           	opt stack 0
   223  000009                     ___lltoft@c:
   224                           	opt stack 0
   225                           
   226                           ; 4 bytes @ 0x8
   227  000009                     	ds	1
   228  00000A                     PID_Initialize@pid:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x9
   232  00000A                     	ds	2
   233  00000C                     ___awtoft@sign:
   234                           	opt stack 0
   235  00000C                     ___lbtoft@c:
   236                           	opt stack 0
   237  00000C                     PID_SetMode@pid:
   238                           	opt stack 0
   239  00000C                     ___ftmul@f2:
   240                           	opt stack 0
   241                           
   242                           ; 3 bytes @ 0xB
   243  00000C                     	ds	1
   244  00000D                     ??___lltoft:
   245  00000D                     PID_SetOutputLimits@pid:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0xC
   249  00000D                     	ds	1
   250  00000E                     PID_SetMode@Mode:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0xD
   254  00000E                     	ds	1
   255  00000F                     ??___ftmul:
   256  00000F                     PID_SetOutputLimits@Min:
   257                           	opt stack 0
   258                           
   259                           ; 3 bytes @ 0xE
   260  00000F                     	ds	1
   261  000010                     PID_SetMode@newAuto:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0xF
   265  000010                     	ds	1
   266  000011                     ___lltoft@exp:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x10
   270  000011                     	ds	1
   271  000012                     ?___ftdiv:
   272                           	opt stack 0
   273  000012                     ___ftmul@exp:
   274                           	opt stack 0
   275  000012                     PID_SetOutputLimits@Max:
   276                           	opt stack 0
   277  000012                     ___ftdiv@f1:
   278                           	opt stack 0
   279                           
   280                           ; 3 bytes @ 0x11
   281  000012                     	ds	1
   282  000013                     ___ftmul@f3_as_product:
   283                           	opt stack 0
   284                           
   285                           ; 3 bytes @ 0x12
   286  000013                     	ds	2
   287  000015                     ___ftdiv@f2:
   288                           	opt stack 0
   289                           
   290                           ; 3 bytes @ 0x14
   291  000015                     	ds	1
   292  000016                     ___ftmul@cntr:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x15
   296  000016                     	ds	1
   297  000017                     ___ftmul@sign:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x16
   301  000017                     	ds	1
   302  000018                     ??___ftdiv:
   303  000018                     ?___ftneg:
   304                           	opt stack 0
   305  000018                     ___ftneg@f1:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0x17
   309  000018                     	ds	3
   310  00001B                     ?___ftadd:
   311                           	opt stack 0
   312  00001B                     ___ftdiv@cntr:
   313                           	opt stack 0
   314  00001B                     PID_SetControllerDirection@pid:
   315                           	opt stack 0
   316  00001B                     ___ftadd@f1:
   317                           	opt stack 0
   318                           
   319                           ; 3 bytes @ 0x1A
   320  00001B                     	ds	1
   321  00001C                     ___ftdiv@f3:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x1B
   325  00001C                     	ds	1
   326  00001D                     PID_SetControllerDirection@Direction:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x1C
   330  00001D                     	ds	1
   331  00001E                     ___ftadd@f2:
   332                           	opt stack 0
   333                           
   334                           ; 3 bytes @ 0x1D
   335  00001E                     	ds	1
   336  00001F                     ___ftdiv@exp:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x1E
   340  00001F                     	ds	1
   341  000020                     ___ftdiv@sign:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x1F
   345  000020                     	ds	1
   346  000021                     ??___ftadd:
   347  000021                     PID_SetTunings@pid:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x20
   351  000021                     	ds	2
   352  000023                     PID_SetTunings@Kp:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x22
   356  000023                     	ds	1
   357  000024                     ___ftadd@sign:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x23
   361  000024                     	ds	1
   362  000025                     ___ftadd@exp2:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x24
   366  000025                     	ds	1
   367  000026                     ___ftadd@exp1:
   368                           	opt stack 0
   369  000026                     PID_SetTunings@Ki:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0x25
   373  000026                     	ds	1
   374  000027                     PID_Compute@pid:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x26
   378  000027                     	ds	2
   379  000029                     PID_Compute@dInput:
   380                           	opt stack 0
   381  000029                     PID_SetTunings@Kd:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x28
   385  000029                     	ds	3
   386  00002C                     _PID_Compute$943:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x2B
   390  00002C                     	ds	1
   391  00002D                     PID_SetTunings@SampleTimeInSec:
   392                           	opt stack 0
   393                           
   394                           ; 3 bytes @ 0x2C
   395  00002D                     	ds	2
   396  00002F                     PID_Compute@error:
   397                           	opt stack 0
   398                           
   399                           ; 3 bytes @ 0x2E
   400  00002F                     	ds	1
   401  000030                     PID_init@pid:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x2F
   405  000030                     	ds	2
   406  000032                     PID_init@Kp:
   407                           	opt stack 0
   408  000032                     PID_Compute@input:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x31
   412  000032                     	ds	3
   413  000035                     PID_init@Ki:
   414                           	opt stack 0
   415  000035                     PID_Compute@output:
   416                           	opt stack 0
   417                           
   418                           ; 3 bytes @ 0x34
   419  000035                     	ds	3
   420  000038                     PID_init@Kd:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x37
   424  000038                     	ds	3
   425  00003B                     PID_init@ControllerDirection:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x3A
   429  00003B                     	ds	1
   430  00003C                     tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           postdec1	equ	0xFE5
   436                           fsr1l	equ	0xFE1
   437                           
   438                           ; 1 bytes @ 0x3B
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 46 in file "newmain.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  PID            45    0[BANK0 ] struct .
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         0       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0      45       0       0       0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0       0       0       0       0
   461 ;;      Totals:         0      45       0       0       0       0       0       0       0
   462 ;;Total ram usage:       45 bytes
   463 ;; Hardware stack levels required when called:    4
   464 ;; This function calls:
   465 ;;		_PID_Compute
   466 ;;		_PID_SetMode
   467 ;;		_PID_SetOutputLimits
   468 ;;		_PID_init
   469 ;;		___awtoft
   470 ;;		___lbtoft
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text0
   477  007238                     __ptext0:
   478                           	opt stack 0
   479  007238                     _main:
   480                           	opt stack 27
   481                           
   482                           ;newmain.c: 49: PidType PID;
   483                           ;newmain.c: 50: PID_init(&PID, 1, 0.05, 0.25, PID_Direction_Direct);
   484                           
   485                           ;incstack = 0
   486  007238  0E60               	movlw	low main@PID
   487  00723A  6E30               	movwf	PID_init@pid,c
   488  00723C  0E00               	movlw	high main@PID
   489  00723E  6E31               	movwf	PID_init@pid+1,c
   490  007240  0E00               	movlw	0
   491  007242  6E32               	movwf	PID_init@Kp,c
   492  007244  0E80               	movlw	128
   493  007246  6E33               	movwf	PID_init@Kp+1,c
   494  007248  0E3F               	movlw	63
   495  00724A  6E34               	movwf	PID_init@Kp+2,c
   496  00724C  0ECD               	movlw	205
   497  00724E  6E35               	movwf	PID_init@Ki,c
   498  007250  0E4C               	movlw	76
   499  007252  6E36               	movwf	PID_init@Ki+1,c
   500  007254  0E3D               	movlw	61
   501  007256  6E37               	movwf	PID_init@Ki+2,c
   502  007258  0E00               	movlw	0
   503  00725A  6E38               	movwf	PID_init@Kd,c
   504  00725C  0E80               	movlw	128
   505  00725E  6E39               	movwf	PID_init@Kd+1,c
   506  007260  0E3E               	movlw	62
   507  007262  6E3A               	movwf	PID_init@Kd+2,c
   508  007264  0E00               	movlw	0
   509  007266  6E3B               	movwf	PID_init@ControllerDirection,c
   510  007268  EC59  F03B         	call	_PID_init	;wreg free
   511                           
   512                           ;newmain.c: 51: PID_SetMode(&PID, PID_Mode_Automatic);
   513  00726C  0E60               	movlw	low main@PID
   514  00726E  6E0C               	movwf	PID_SetMode@pid,c
   515  007270  0E00               	movlw	high main@PID
   516  007272  6E0D               	movwf	PID_SetMode@pid+1,c
   517  007274  0E01               	movlw	1
   518  007276  6E0E               	movwf	PID_SetMode@Mode,c
   519  007278  EC2F  F038         	call	_PID_SetMode	;wreg free
   520                           
   521                           ;newmain.c: 52: PID_SetOutputLimits(&PID, PID_Out_Min, PID_Out_Max);
   522  00727C  0E60               	movlw	low main@PID
   523  00727E  6E0D               	movwf	PID_SetOutputLimits@pid,c
   524  007280  0E00               	movlw	high main@PID
   525  007282  6E0E               	movwf	PID_SetOutputLimits@pid+1,c
   526  007284  C091  F009         	movff	_PID_Out_Min,___awtoft@c
   527  007288  C092  F00A         	movff	_PID_Out_Min+1,___awtoft@c+1
   528  00728C  EC13  F038         	call	___awtoft	;wreg free
   529  007290  C009  F00F         	movff	?___awtoft,PID_SetOutputLimits@Min
   530  007294  C00A  F010         	movff	?___awtoft+1,PID_SetOutputLimits@Min+1
   531  007298  C00B  F011         	movff	?___awtoft+2,PID_SetOutputLimits@Min+2
   532  00729C  C08F  F009         	movff	_PID_Out_Max,___awtoft@c
   533  0072A0  C090  F00A         	movff	_PID_Out_Max+1,___awtoft@c+1
   534  0072A4  EC13  F038         	call	___awtoft	;wreg free
   535  0072A8  C009  F012         	movff	?___awtoft,PID_SetOutputLimits@Max
   536  0072AC  C00A  F013         	movff	?___awtoft+1,PID_SetOutputLimits@Max+1
   537  0072B0  C00B  F014         	movff	?___awtoft+2,PID_SetOutputLimits@Max+2
   538  0072B4  ECB4  F03C         	call	_PID_SetOutputLimits	;wreg free
   539                           
   540                           ;newmain.c: 53: PID.mySetpoint = Setpoint;
   541  0072B8  C08D  F009         	movff	_Setpoint,___awtoft@c
   542  0072BC  C08E  F00A         	movff	_Setpoint+1,___awtoft@c+1
   543  0072C0  EC13  F038         	call	___awtoft	;wreg free
   544  0072C4  C009  F079         	movff	?___awtoft,main@PID+25
   545  0072C8  C00A  F07A         	movff	?___awtoft+1,main@PID+26
   546  0072CC  C00B  F07B         	movff	?___awtoft+2,main@PID+27
   547                           
   548                           ;newmain.c: 54: PID.myInput = Input;
   549  0072D0  0100               	movlb	0	; () banked
   550  0072D2  5196               	movf	_Input& (0+255),w,b
   551  0072D4  ECE9  F037         	call	___lbtoft
   552  0072D8  C009  F073         	movff	?___lbtoft,main@PID+19
   553  0072DC  C00A  F074         	movff	?___lbtoft+1,main@PID+20
   554  0072E0  C00B  F075         	movff	?___lbtoft+2,main@PID+21
   555                           
   556                           ;newmain.c: 55: PID_Compute(&PID);
   557  0072E4  0E60               	movlw	low main@PID
   558  0072E6  6E27               	movwf	PID_Compute@pid,c
   559  0072E8  0E00               	movlw	high main@PID
   560  0072EA  6E28               	movwf	PID_Compute@pid+1,c
   561  0072EC  EC74  F03E         	call	_PID_Compute	;wreg free
   562                           
   563                           ;newmain.c: 56: Output = PID.myOutput;
   564  0072F0  C076  F093         	movff	main@PID+22,_Output
   565  0072F4  C077  F094         	movff	main@PID+23,_Output+1
   566  0072F8  C078  F095         	movff	main@PID+24,_Output+2
   567                           
   568                           ;newmain.c: 58: return;
   569  0072FC  EF00  F000         	goto	start
   570  007300                     __end_of_main:
   571                           	opt stack 0
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           postinc0	equ	0xFEE
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580 ;; *************** function ___lbtoft *****************
   581 ;; Defined at:
   582 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;  c               1    wreg     unsigned char 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  c               1   11[COMRAM] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  3    8[COMRAM] float 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         3       0       0       0       0       0       0       0       0
   597 ;;      Locals:         1       0       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         4       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        4 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    1
   603 ;; This function calls:
   604 ;;		___ftpack
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text1
   611  006FD2                     __ptext1:
   612                           	opt stack 0
   613  006FD2                     ___lbtoft:
   614                           	opt stack 29
   615                           
   616                           ;incstack = 0
   617                           ;___lbtoft@c stored from wreg
   618  006FD2  6E0C               	movwf	___lbtoft@c,c
   619  006FD4  500C               	movf	___lbtoft@c,w,c
   620  006FD6  6E01               	movwf	___ftpack@arg,c
   621  006FD8  6A02               	clrf	___ftpack@arg+1,c
   622  006FDA  6A03               	clrf	___ftpack@arg+2,c
   623  006FDC  0E8E               	movlw	142
   624  006FDE  6E04               	movwf	___ftpack@exp,c
   625  006FE0  0E00               	movlw	0
   626  006FE2  6E05               	movwf	___ftpack@sign,c
   627  006FE4  ECC5  F038         	call	___ftpack	;wreg free
   628  006FE8  C001  F009         	movff	?___ftpack,?___lbtoft
   629  006FEC  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
   630  006FF0  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
   631  006FF4  0012               	return	
   632  006FF6                     __end_of___lbtoft:
   633                           	opt stack 0
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           tblptrl	equ	0xFF6
   637                           tablat	equ	0xFF5
   638                           postinc0	equ	0xFEE
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642 ;; *************** function ___awtoft *****************
   643 ;; Defined at:
   644 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  c               2    8[COMRAM] int 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  sign            1   11[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  3    8[COMRAM] float 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         3       0       0       0       0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         4       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        4 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    1
   665 ;; This function calls:
   666 ;;		___ftpack
   667 ;; This function is called by:
   668 ;;		_main
   669 ;;		_PID_SetSampleTime
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text2
   674  007026                     __ptext2:
   675                           	opt stack 0
   676  007026                     ___awtoft:
   677                           	opt stack 29
   678                           
   679                           ;incstack = 0
   680  007026  0E00               	movlw	0
   681  007028  6E0C               	movwf	___awtoft@sign,c
   682  00702A  AE0A               	btfss	___awtoft@c+1,7,c
   683  00702C  D006               	goto	l1477
   684  00702E  6C09               	negf	___awtoft@c,c
   685  007030  1E0A               	comf	___awtoft@c+1,f,c
   686  007032  B0D8               	btfsc	status,0,c
   687  007034  2A0A               	incf	___awtoft@c+1,f,c
   688  007036  0E01               	movlw	1
   689  007038  6E0C               	movwf	___awtoft@sign,c
   690  00703A                     l1477:
   691  00703A  C009  F001         	movff	___awtoft@c,___ftpack@arg
   692  00703E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
   693  007042  6A03               	clrf	___ftpack@arg+2,c
   694  007044  0E8E               	movlw	142
   695  007046  6E04               	movwf	___ftpack@exp,c
   696  007048  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
   697  00704C  ECC5  F038         	call	___ftpack	;wreg free
   698  007050  C001  F009         	movff	?___ftpack,?___awtoft
   699  007054  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
   700  007058  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
   701  00705C  0012               	return	
   702  00705E                     __end_of___awtoft:
   703                           	opt stack 0
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           postdec1	equ	0xFE5
   710                           fsr1l	equ	0xFE1
   711                           status	equ	0xFD8
   712                           
   713 ;; *************** function _PID_init *****************
   714 ;; Defined at:
   715 ;;		line 16 in file "pid.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  pid             2   47[COMRAM] PTR struct .
   718 ;;		 -> main@PID(45), 
   719 ;;  Kp              3   49[COMRAM] float 
   720 ;;  Ki              3   52[COMRAM] float 
   721 ;;  Kd              3   55[COMRAM] float 
   722 ;;  ControllerDi    1   58[COMRAM] enum E7
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   734 ;;      Params:        12       0       0       0       0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0       0       0       0       0
   737 ;;      Totals:        12       0       0       0       0       0       0       0       0
   738 ;;Total ram usage:       12 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    3
   741 ;; This function calls:
   742 ;;		_PID_SetControllerDirection
   743 ;;		_PID_SetOutputLimits
   744 ;;		_PID_SetTunings
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text3
   751  0076B2                     __ptext3:
   752                           	opt stack 0
   753  0076B2                     _PID_init:
   754                           	opt stack 27
   755                           
   756                           ;pid.c: 18: pid->myInput = 0;
   757                           
   758                           ;incstack = 0
   759  0076B2  EE20 F013          	lfsr	2,19
   760  0076B6  5030               	movf	PID_init@pid,w,c
   761  0076B8  26D9               	addwf	fsr2l,f,c
   762  0076BA  5031               	movf	PID_init@pid+1,w,c
   763  0076BC  22DA               	addwfc	fsr2h,f,c
   764  0076BE  0E00               	movlw	0
   765  0076C0  6EDE               	movwf	postinc2,c
   766  0076C2  0E00               	movlw	0
   767  0076C4  6EDE               	movwf	postinc2,c
   768  0076C6  0E00               	movlw	0
   769  0076C8  6EDE               	movwf	postinc2,c
   770                           
   771                           ;pid.c: 19: pid->myOutput = 0;
   772  0076CA  EE20 F016          	lfsr	2,22
   773  0076CE  5030               	movf	PID_init@pid,w,c
   774  0076D0  26D9               	addwf	fsr2l,f,c
   775  0076D2  5031               	movf	PID_init@pid+1,w,c
   776  0076D4  22DA               	addwfc	fsr2h,f,c
   777  0076D6  0E00               	movlw	0
   778  0076D8  6EDE               	movwf	postinc2,c
   779  0076DA  0E00               	movlw	0
   780  0076DC  6EDE               	movwf	postinc2,c
   781  0076DE  0E00               	movlw	0
   782  0076E0  6EDE               	movwf	postinc2,c
   783                           
   784                           ;pid.c: 20: pid->mySetpoint = 0;
   785  0076E2  EE20 F019          	lfsr	2,25
   786  0076E6  5030               	movf	PID_init@pid,w,c
   787  0076E8  26D9               	addwf	fsr2l,f,c
   788  0076EA  5031               	movf	PID_init@pid+1,w,c
   789  0076EC  22DA               	addwfc	fsr2h,f,c
   790  0076EE  0E00               	movlw	0
   791  0076F0  6EDE               	movwf	postinc2,c
   792  0076F2  0E00               	movlw	0
   793  0076F4  6EDE               	movwf	postinc2,c
   794  0076F6  0E00               	movlw	0
   795  0076F8  6EDE               	movwf	postinc2,c
   796                           
   797                           ;pid.c: 21: pid->ITerm = 0;
   798  0076FA  EE20 F01C          	lfsr	2,28
   799  0076FE  5030               	movf	PID_init@pid,w,c
   800  007700  26D9               	addwf	fsr2l,f,c
   801  007702  5031               	movf	PID_init@pid+1,w,c
   802  007704  22DA               	addwfc	fsr2h,f,c
   803  007706  0E00               	movlw	0
   804  007708  6EDE               	movwf	postinc2,c
   805  00770A  0E00               	movlw	0
   806  00770C  6EDE               	movwf	postinc2,c
   807  00770E  0E00               	movlw	0
   808  007710  6EDE               	movwf	postinc2,c
   809                           
   810                           ;pid.c: 22: pid->lastInput = 0;
   811  007712  EE20 F01F          	lfsr	2,31
   812  007716  5030               	movf	PID_init@pid,w,c
   813  007718  26D9               	addwf	fsr2l,f,c
   814  00771A  5031               	movf	PID_init@pid+1,w,c
   815  00771C  22DA               	addwfc	fsr2h,f,c
   816  00771E  0E00               	movlw	0
   817  007720  6EDE               	movwf	postinc2,c
   818  007722  0E00               	movlw	0
   819  007724  6EDE               	movwf	postinc2,c
   820  007726  0E00               	movlw	0
   821  007728  6EDE               	movwf	postinc2,c
   822                           
   823                           ;pid.c: 23: pid->inAuto = 0;
   824  00772A  EE20 F02C          	lfsr	2,44
   825  00772E  5030               	movf	PID_init@pid,w,c
   826  007730  26D9               	addwf	fsr2l,f,c
   827  007732  5031               	movf	PID_init@pid+1,w,c
   828  007734  22DA               	addwfc	fsr2h,f,c
   829  007736  0E00               	movlw	0
   830  007738  6EDF               	movwf	indf2,c
   831                           
   832                           ;pid.c: 25: PID_SetOutputLimits(pid, 0, 0xffff);
   833  00773A  C030  F00D         	movff	PID_init@pid,PID_SetOutputLimits@pid
   834  00773E  C031  F00E         	movff	PID_init@pid+1,PID_SetOutputLimits@pid+1
   835  007742  0E00               	movlw	0
   836  007744  6E0F               	movwf	PID_SetOutputLimits@Min,c
   837  007746  0E00               	movlw	0
   838  007748  6E10               	movwf	PID_SetOutputLimits@Min+1,c
   839  00774A  0E00               	movlw	0
   840  00774C  6E11               	movwf	PID_SetOutputLimits@Min+2,c
   841  00774E  0EFF               	movlw	255
   842  007750  6E12               	movwf	PID_SetOutputLimits@Max,c
   843  007752  0E7F               	movlw	127
   844  007754  6E13               	movwf	PID_SetOutputLimits@Max+1,c
   845  007756  0E47               	movlw	71
   846  007758  6E14               	movwf	PID_SetOutputLimits@Max+2,c
   847  00775A  ECB4  F03C         	call	_PID_SetOutputLimits	;wreg free
   848                           
   849                           ;pid.c: 28: pid->SampleTime = 1000;
   850  00775E  EE20 F022          	lfsr	2,34
   851  007762  5030               	movf	PID_init@pid,w,c
   852  007764  26D9               	addwf	fsr2l,f,c
   853  007766  5031               	movf	PID_init@pid+1,w,c
   854  007768  22DA               	addwfc	fsr2h,f,c
   855  00776A  0EE8               	movlw	232
   856  00776C  6EDE               	movwf	postinc2,c
   857  00776E  0E03               	movlw	3
   858  007770  6EDE               	movwf	postinc2,c
   859  007772  0E00               	movlw	0
   860  007774  6EDE               	movwf	postinc2,c
   861  007776  0E00               	movlw	0
   862  007778  6EDD               	movwf	postdec2,c
   863                           
   864                           ;pid.c: 30: PID_SetControllerDirection(pid, ControllerDirection);
   865  00777A  C030  F01B         	movff	PID_init@pid,PID_SetControllerDirection@pid
   866  00777E  C031  F01C         	movff	PID_init@pid+1,PID_SetControllerDirection@pid+1
   867  007782  C03B  F01D         	movff	PID_init@ControllerDirection,PID_SetControllerDirection@Direction
   868  007786  EC80  F039         	call	_PID_SetControllerDirection	;wreg free
   869                           
   870                           ;pid.c: 31: PID_SetTunings(pid, Kp, Ki, Kd);
   871  00778A  C030  F021         	movff	PID_init@pid,PID_SetTunings@pid
   872  00778E  C031  F022         	movff	PID_init@pid+1,PID_SetTunings@pid+1
   873  007792  C032  F023         	movff	PID_init@Kp,PID_SetTunings@Kp
   874  007796  C033  F024         	movff	PID_init@Kp+1,PID_SetTunings@Kp+1
   875  00779A  C034  F025         	movff	PID_init@Kp+2,PID_SetTunings@Kp+2
   876  00779E  C035  F026         	movff	PID_init@Ki,PID_SetTunings@Ki
   877  0077A2  C036  F027         	movff	PID_init@Ki+1,PID_SetTunings@Ki+1
   878  0077A6  C037  F028         	movff	PID_init@Ki+2,PID_SetTunings@Ki+2
   879  0077AA  C038  F029         	movff	PID_init@Kd,PID_SetTunings@Kd
   880  0077AE  C039  F02A         	movff	PID_init@Kd+1,PID_SetTunings@Kd+1
   881  0077B2  C03A  F02B         	movff	PID_init@Kd+2,PID_SetTunings@Kd+2
   882  0077B6  EC90  F03D         	call	_PID_SetTunings	;wreg free
   883  0077BA  0012               	return		;funcret
   884  0077BC                     __end_of_PID_init:
   885                           	opt stack 0
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           postdec1	equ	0xFE5
   892                           fsr1l	equ	0xFE1
   893                           indf2	equ	0xFDF
   894                           postinc2	equ	0xFDE
   895                           postdec2	equ	0xFDD
   896                           fsr2h	equ	0xFDA
   897                           fsr2l	equ	0xFD9
   898                           status	equ	0xFD8
   899                           
   900 ;; *************** function _PID_SetTunings *****************
   901 ;; Defined at:
   902 ;;		line 85 in file "pid.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  pid             2   32[COMRAM] PTR struct .
   905 ;;		 -> main@PID(45), 
   906 ;;  Kp              3   34[COMRAM] float 
   907 ;;  Ki              3   37[COMRAM] float 
   908 ;;  Kd              3   40[COMRAM] float 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  SampleTimeIn    3   44[COMRAM] float 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:        11       0       0       0       0       0       0       0       0
   921 ;;      Locals:         3       0       0       0       0       0       0       0       0
   922 ;;      Temps:          1       0       0       0       0       0       0       0       0
   923 ;;      Totals:        15       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:       15 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    2
   927 ;; This function calls:
   928 ;;		___ftdiv
   929 ;;		___ftmul
   930 ;;		___ftneg
   931 ;;		___lltoft
   932 ;; This function is called by:
   933 ;;		_PID_init
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text4
   938  007B20                     __ptext4:
   939                           	opt stack 0
   940  007B20                     _PID_SetTunings:
   941                           	opt stack 27
   942                           
   943                           ;pid.c: 86: if (Kp < 0 || Ki < 0 || Kd < 0){
   944                           
   945                           ;incstack = 0
   946  007B20  BE25               	btfsc	PID_SetTunings@Kp+2,7,c
   947  007B22  0012               	return	
   948  007B24  BE28               	btfsc	PID_SetTunings@Ki+2,7,c
   949  007B26  0012               	return	
   950  007B28  BE2B               	btfsc	PID_SetTunings@Kd+2,7,c
   951  007B2A  0012               	return	
   952                           
   953                           ;pid.c: 88: }
   954                           ;pid.c: 90: pid->dispKp = Kp;
   955                           
   956                           ;pid.c: 87: return;
   957  007B2C  C021  FFD9         	movff	PID_SetTunings@pid,fsr2l
   958  007B30  C022  FFDA         	movff	PID_SetTunings@pid+1,fsr2h
   959  007B34  C023  FFDE         	movff	PID_SetTunings@Kp,postinc2
   960  007B38  C024  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
   961  007B3C  C025  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
   962                           
   963                           ;pid.c: 91: pid->dispKi = Ki;
   964  007B40  EE20 F003          	lfsr	2,3
   965  007B44  5021               	movf	PID_SetTunings@pid,w,c
   966  007B46  26D9               	addwf	fsr2l,f,c
   967  007B48  5022               	movf	PID_SetTunings@pid+1,w,c
   968  007B4A  22DA               	addwfc	fsr2h,f,c
   969  007B4C  C026  FFDE         	movff	PID_SetTunings@Ki,postinc2
   970  007B50  C027  FFDE         	movff	PID_SetTunings@Ki+1,postinc2
   971  007B54  C028  FFDE         	movff	PID_SetTunings@Ki+2,postinc2
   972                           
   973                           ;pid.c: 92: pid->dispKd = Kd;
   974  007B58  EE20 F006          	lfsr	2,6
   975  007B5C  5021               	movf	PID_SetTunings@pid,w,c
   976  007B5E  26D9               	addwf	fsr2l,f,c
   977  007B60  5022               	movf	PID_SetTunings@pid+1,w,c
   978  007B62  22DA               	addwfc	fsr2h,f,c
   979  007B64  C029  FFDE         	movff	PID_SetTunings@Kd,postinc2
   980  007B68  C02A  FFDE         	movff	PID_SetTunings@Kd+1,postinc2
   981  007B6C  C02B  FFDE         	movff	PID_SetTunings@Kd+2,postinc2
   982                           
   983                           ;pid.c: 94: FloatType SampleTimeInSec = ((FloatType) pid->SampleTime) / 1000;
   984  007B70  EE20 F022          	lfsr	2,34
   985  007B74  5021               	movf	PID_SetTunings@pid,w,c
   986  007B76  26D9               	addwf	fsr2l,f,c
   987  007B78  5022               	movf	PID_SetTunings@pid+1,w,c
   988  007B7A  22DA               	addwfc	fsr2h,f,c
   989  007B7C  CFDE F009          	movff	postinc2,___lltoft@c
   990  007B80  CFDE F00A          	movff	postinc2,___lltoft@c+1
   991  007B84  CFDE F00B          	movff	postinc2,___lltoft@c+2
   992  007B88  CFDE F00C          	movff	postinc2,___lltoft@c+3
   993  007B8C  EC4F  F038         	call	___lltoft	;wreg free
   994  007B90  C009  F012         	movff	?___lltoft,___ftdiv@f1
   995  007B94  C00A  F013         	movff	?___lltoft+1,___ftdiv@f1+1
   996  007B98  C00B  F014         	movff	?___lltoft+2,___ftdiv@f1+2
   997  007B9C  0E00               	movlw	0
   998  007B9E  6E15               	movwf	___ftdiv@f2,c
   999  007BA0  0E7A               	movlw	122
  1000  007BA2  6E16               	movwf	___ftdiv@f2+1,c
  1001  007BA4  0E44               	movlw	68
  1002  007BA6  6E17               	movwf	___ftdiv@f2+2,c
  1003  007BA8  ECEA  F039         	call	___ftdiv	;wreg free
  1004  007BAC  C012  F02D         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  1005  007BB0  C013  F02E         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  1006  007BB4  C014  F02F         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  1007                           
  1008                           ;pid.c: 95: pid->kp = Kp;
  1009  007BB8  EE20 F009          	lfsr	2,9
  1010  007BBC  5021               	movf	PID_SetTunings@pid,w,c
  1011  007BBE  26D9               	addwf	fsr2l,f,c
  1012  007BC0  5022               	movf	PID_SetTunings@pid+1,w,c
  1013  007BC2  22DA               	addwfc	fsr2h,f,c
  1014  007BC4  C023  FFDE         	movff	PID_SetTunings@Kp,postinc2
  1015  007BC8  C024  FFDE         	movff	PID_SetTunings@Kp+1,postinc2
  1016  007BCC  C025  FFDE         	movff	PID_SetTunings@Kp+2,postinc2
  1017                           
  1018                           ;pid.c: 96: pid->ki = Ki * SampleTimeInSec;
  1019  007BD0  C026  F009         	movff	PID_SetTunings@Ki,___ftmul@f1
  1020  007BD4  C027  F00A         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  1021  007BD8  C028  F00B         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  1022  007BDC  C02D  F00C         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  1023  007BE0  C02E  F00D         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  1024  007BE4  C02F  F00E         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  1025  007BE8  EC5D  F03A         	call	___ftmul	;wreg free
  1026  007BEC  EE20 F00C          	lfsr	2,12
  1027  007BF0  5021               	movf	PID_SetTunings@pid,w,c
  1028  007BF2  26D9               	addwf	fsr2l,f,c
  1029  007BF4  5022               	movf	PID_SetTunings@pid+1,w,c
  1030  007BF6  22DA               	addwfc	fsr2h,f,c
  1031  007BF8  C009  FFDE         	movff	?___ftmul,postinc2
  1032  007BFC  C00A  FFDE         	movff	?___ftmul+1,postinc2
  1033  007C00  C00B  FFDE         	movff	?___ftmul+2,postinc2
  1034                           
  1035                           ;pid.c: 97: pid->kd = Kd / SampleTimeInSec;
  1036  007C04  C029  F012         	movff	PID_SetTunings@Kd,___ftdiv@f1
  1037  007C08  C02A  F013         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  1038  007C0C  C02B  F014         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  1039  007C10  C02D  F015         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  1040  007C14  C02E  F016         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  1041  007C18  C02F  F017         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  1042  007C1C  ECEA  F039         	call	___ftdiv	;wreg free
  1043  007C20  EE20 F00F          	lfsr	2,15
  1044  007C24  5021               	movf	PID_SetTunings@pid,w,c
  1045  007C26  26D9               	addwf	fsr2l,f,c
  1046  007C28  5022               	movf	PID_SetTunings@pid+1,w,c
  1047  007C2A  22DA               	addwfc	fsr2h,f,c
  1048  007C2C  C012  FFDE         	movff	?___ftdiv,postinc2
  1049  007C30  C013  FFDE         	movff	?___ftdiv+1,postinc2
  1050  007C34  C014  FFDE         	movff	?___ftdiv+2,postinc2
  1051                           
  1052                           ;pid.c: 99: if (pid->controllerDirection == PID_Direction_Reverse) {
  1053  007C38  EE20 F012          	lfsr	2,18
  1054  007C3C  5021               	movf	PID_SetTunings@pid,w,c
  1055  007C3E  26D9               	addwf	fsr2l,f,c
  1056  007C40  5022               	movf	PID_SetTunings@pid+1,w,c
  1057  007C42  22DA               	addwfc	fsr2h,f,c
  1058  007C44  04DE               	decf	postinc2,w,c
  1059  007C46  A4D8               	btfss	status,2,c
  1060  007C48  0012               	return	
  1061                           
  1062                           ;pid.c: 100: pid->kp = (0 - pid->kp);
  1063  007C4A  EE20 F009          	lfsr	2,9
  1064  007C4E  5021               	movf	PID_SetTunings@pid,w,c
  1065  007C50  26D9               	addwf	fsr2l,f,c
  1066  007C52  5022               	movf	PID_SetTunings@pid+1,w,c
  1067  007C54  22DA               	addwfc	fsr2h,f,c
  1068  007C56  CFDE F018          	movff	postinc2,___ftneg@f1
  1069  007C5A  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1070  007C5E  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1071  007C62  ECD7  F037         	call	___ftneg	;wreg free
  1072  007C66  EE20 F009          	lfsr	2,9
  1073  007C6A  5021               	movf	PID_SetTunings@pid,w,c
  1074  007C6C  26D9               	addwf	fsr2l,f,c
  1075  007C6E  5022               	movf	PID_SetTunings@pid+1,w,c
  1076  007C70  22DA               	addwfc	fsr2h,f,c
  1077  007C72  C018  FFDE         	movff	?___ftneg,postinc2
  1078  007C76  C019  FFDE         	movff	?___ftneg+1,postinc2
  1079  007C7A  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1080                           
  1081                           ;pid.c: 101: pid->ki = (0 - pid->ki);
  1082  007C7E  EE20 F00C          	lfsr	2,12
  1083  007C82  5021               	movf	PID_SetTunings@pid,w,c
  1084  007C84  26D9               	addwf	fsr2l,f,c
  1085  007C86  5022               	movf	PID_SetTunings@pid+1,w,c
  1086  007C88  22DA               	addwfc	fsr2h,f,c
  1087  007C8A  CFDE F018          	movff	postinc2,___ftneg@f1
  1088  007C8E  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1089  007C92  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1090  007C96  ECD7  F037         	call	___ftneg	;wreg free
  1091  007C9A  EE20 F00C          	lfsr	2,12
  1092  007C9E  5021               	movf	PID_SetTunings@pid,w,c
  1093  007CA0  26D9               	addwf	fsr2l,f,c
  1094  007CA2  5022               	movf	PID_SetTunings@pid+1,w,c
  1095  007CA4  22DA               	addwfc	fsr2h,f,c
  1096  007CA6  C018  FFDE         	movff	?___ftneg,postinc2
  1097  007CAA  C019  FFDE         	movff	?___ftneg+1,postinc2
  1098  007CAE  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1099                           
  1100                           ;pid.c: 102: pid->kd = (0 - pid->kd);
  1101  007CB2  EE20 F00F          	lfsr	2,15
  1102  007CB6  5021               	movf	PID_SetTunings@pid,w,c
  1103  007CB8  26D9               	addwf	fsr2l,f,c
  1104  007CBA  5022               	movf	PID_SetTunings@pid+1,w,c
  1105  007CBC  22DA               	addwfc	fsr2h,f,c
  1106  007CBE  CFDE F018          	movff	postinc2,___ftneg@f1
  1107  007CC2  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1108  007CC6  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1109  007CCA  ECD7  F037         	call	___ftneg	;wreg free
  1110  007CCE  EE20 F00F          	lfsr	2,15
  1111  007CD2  5021               	movf	PID_SetTunings@pid,w,c
  1112  007CD4  26D9               	addwf	fsr2l,f,c
  1113  007CD6  5022               	movf	PID_SetTunings@pid+1,w,c
  1114  007CD8  22DA               	addwfc	fsr2h,f,c
  1115  007CDA  C018  FFDE         	movff	?___ftneg,postinc2
  1116  007CDE  C019  FFDE         	movff	?___ftneg+1,postinc2
  1117  007CE2  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1118  007CE6  0012               	return	
  1119  007CE8                     __end_of_PID_SetTunings:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           postinc0	equ	0xFEE
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           indf2	equ	0xFDF
  1129                           postinc2	equ	0xFDE
  1130                           postdec2	equ	0xFDD
  1131                           fsr2h	equ	0xFDA
  1132                           fsr2l	equ	0xFD9
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function ___lltoft *****************
  1136 ;; Defined at:
  1137 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  c               4    8[COMRAM] unsigned long 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  exp             1   16[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  3    8[COMRAM] float 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1151 ;;      Params:         4       0       0       0       0       0       0       0       0
  1152 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1153 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1154 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1155 ;;Total ram usage:        9 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    1
  1158 ;; This function calls:
  1159 ;;		___ftpack
  1160 ;; This function is called by:
  1161 ;;		_PID_SetTunings
  1162 ;;		_PID_SetSampleTime
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text5
  1167  00709E                     __ptext5:
  1168                           	opt stack 0
  1169  00709E                     ___lltoft:
  1170                           	opt stack 27
  1171                           
  1172                           ;incstack = 0
  1173  00709E  0E8E               	movlw	142
  1174  0070A0  6E11               	movwf	___lltoft@exp,c
  1175  0070A2  D006               	goto	l1277
  1176  0070A4                     l1275:
  1177  0070A4  90D8               	bcf	status,0,c
  1178  0070A6  320C               	rrcf	___lltoft@c+3,f,c
  1179  0070A8  320B               	rrcf	___lltoft@c+2,f,c
  1180  0070AA  320A               	rrcf	___lltoft@c+1,f,c
  1181  0070AC  3209               	rrcf	___lltoft@c,f,c
  1182  0070AE  2A11               	incf	___lltoft@exp,f,c
  1183  0070B0                     l1277:
  1184  0070B0  0E00               	movlw	0
  1185  0070B2  1409               	andwf	___lltoft@c,w,c
  1186  0070B4  6E0D               	movwf	??___lltoft& (0+255),c
  1187  0070B6  0E00               	movlw	0
  1188  0070B8  140A               	andwf	___lltoft@c+1,w,c
  1189  0070BA  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1190  0070BC  0E00               	movlw	0
  1191  0070BE  140B               	andwf	___lltoft@c+2,w,c
  1192  0070C0  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1193  0070C2  0EFF               	movlw	255
  1194  0070C4  140C               	andwf	___lltoft@c+3,w,c
  1195  0070C6  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1196  0070C8  500D               	movf	??___lltoft,w,c
  1197  0070CA  100E               	iorwf	??___lltoft+1,w,c
  1198  0070CC  100F               	iorwf	??___lltoft+2,w,c
  1199  0070CE  1010               	iorwf	??___lltoft+3,w,c
  1200  0070D0  A4D8               	btfss	status,2,c
  1201  0070D2  D7E8               	goto	l1275
  1202  0070D4  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1203  0070D8  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1204  0070DC  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1205  0070E0  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1206  0070E4  0E00               	movlw	0
  1207  0070E6  6E05               	movwf	___ftpack@sign,c
  1208  0070E8  ECC5  F038         	call	___ftpack	;wreg free
  1209  0070EC  C001  F009         	movff	?___ftpack,?___lltoft
  1210  0070F0  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1211  0070F4  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1212  0070F8  0012               	return	
  1213  0070FA                     __end_of___lltoft:
  1214                           	opt stack 0
  1215                           tblptru	equ	0xFF8
  1216                           tblptrh	equ	0xFF7
  1217                           tblptrl	equ	0xFF6
  1218                           tablat	equ	0xFF5
  1219                           postinc0	equ	0xFEE
  1220                           postdec1	equ	0xFE5
  1221                           fsr1l	equ	0xFE1
  1222                           indf2	equ	0xFDF
  1223                           postinc2	equ	0xFDE
  1224                           postdec2	equ	0xFDD
  1225                           fsr2h	equ	0xFDA
  1226                           fsr2l	equ	0xFD9
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function ___ftdiv *****************
  1230 ;; Defined at:
  1231 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  f1              3   17[COMRAM] float 
  1234 ;;  f2              3   20[COMRAM] float 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  f3              3   27[COMRAM] float 
  1237 ;;  sign            1   31[COMRAM] unsigned char 
  1238 ;;  exp             1   30[COMRAM] unsigned char 
  1239 ;;  cntr            1   26[COMRAM] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  3   17[COMRAM] float 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1249 ;;      Params:         6       0       0       0       0       0       0       0       0
  1250 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1251 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1252 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1253 ;;Total ram usage:       15 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    1
  1256 ;; This function calls:
  1257 ;;		___ftpack
  1258 ;; This function is called by:
  1259 ;;		_PID_SetTunings
  1260 ;;		_PID_SetSampleTime
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text6
  1265  0073D4                     __ptext6:
  1266                           	opt stack 0
  1267  0073D4                     ___ftdiv:
  1268                           	opt stack 27
  1269                           
  1270                           ;incstack = 0
  1271  0073D4  C014  F018         	movff	___ftdiv@f1+2,??___ftdiv
  1272  0073D8  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1273  0073DA  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1274  0073DC  3413               	rlcf	___ftdiv@f1+1,w,c
  1275  0073DE  3618               	rlcf	??___ftdiv& (0+255),f,c
  1276  0073E0  E301               	bnc	u781
  1277  0073E2  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1278  0073E4                     u781:
  1279  0073E4  5018               	movf	??___ftdiv,w,c
  1280  0073E6  6E1F               	movwf	___ftdiv@exp,c
  1281  0073E8  501F               	movf	___ftdiv@exp,w,c
  1282  0073EA  A4D8               	btfss	status,2,c
  1283  0073EC  D007               	goto	l1163
  1284  0073EE  0E00               	movlw	0
  1285  0073F0  6E12               	movwf	?___ftdiv,c
  1286  0073F2  0E00               	movlw	0
  1287  0073F4  6E13               	movwf	?___ftdiv+1,c
  1288  0073F6  0E00               	movlw	0
  1289  0073F8  6E14               	movwf	?___ftdiv+2,c
  1290  0073FA  0012               	return	
  1291  0073FC                     l1163:
  1292  0073FC  C017  F018         	movff	___ftdiv@f2+2,??___ftdiv
  1293  007400  6A19               	clrf	(??___ftdiv+1)& (0+255),c
  1294  007402  6A1A               	clrf	(??___ftdiv+2)& (0+255),c
  1295  007404  3416               	rlcf	___ftdiv@f2+1,w,c
  1296  007406  3618               	rlcf	??___ftdiv& (0+255),f,c
  1297  007408  E301               	bnc	u801
  1298  00740A  8019               	bsf	(??___ftdiv+1)& (0+255),0,c
  1299  00740C                     u801:
  1300  00740C  5018               	movf	??___ftdiv,w,c
  1301  00740E  6E20               	movwf	___ftdiv@sign,c
  1302  007410  5020               	movf	___ftdiv@sign,w,c
  1303  007412  A4D8               	btfss	status,2,c
  1304  007414  D007               	goto	l1169
  1305  007416  0E00               	movlw	0
  1306  007418  6E12               	movwf	?___ftdiv,c
  1307  00741A  0E00               	movlw	0
  1308  00741C  6E13               	movwf	?___ftdiv+1,c
  1309  00741E  0E00               	movlw	0
  1310  007420  6E14               	movwf	?___ftdiv+2,c
  1311  007422  0012               	return	
  1312  007424                     l1169:
  1313  007424  0E00               	movlw	0
  1314  007426  6E1C               	movwf	___ftdiv@f3,c
  1315  007428  0E00               	movlw	0
  1316  00742A  6E1D               	movwf	___ftdiv@f3+1,c
  1317  00742C  0E00               	movlw	0
  1318  00742E  6E1E               	movwf	___ftdiv@f3+2,c
  1319  007430  5020               	movf	___ftdiv@sign,w,c
  1320  007432  0F89               	addlw	137
  1321  007434  5E1F               	subwf	___ftdiv@exp,f,c
  1322  007436  C014  F020         	movff	___ftdiv@f1+2,___ftdiv@sign
  1323  00743A  5017               	movf	___ftdiv@f2+2,w,c
  1324  00743C  1A20               	xorwf	___ftdiv@sign,f,c
  1325  00743E  0E80               	movlw	128
  1326  007440  1620               	andwf	___ftdiv@sign,f,c
  1327  007442  8E13               	bsf	___ftdiv@f1+1,7,c
  1328  007444  0EFF               	movlw	255
  1329  007446  1612               	andwf	___ftdiv@f1,f,c
  1330  007448  0EFF               	movlw	255
  1331  00744A  1613               	andwf	___ftdiv@f1+1,f,c
  1332  00744C  0E00               	movlw	0
  1333  00744E  1614               	andwf	___ftdiv@f1+2,f,c
  1334  007450  8E16               	bsf	___ftdiv@f2+1,7,c
  1335  007452  0EFF               	movlw	255
  1336  007454  1615               	andwf	___ftdiv@f2,f,c
  1337  007456  0EFF               	movlw	255
  1338  007458  1616               	andwf	___ftdiv@f2+1,f,c
  1339  00745A  0E00               	movlw	0
  1340  00745C  1617               	andwf	___ftdiv@f2+2,f,c
  1341  00745E  0E18               	movlw	24
  1342  007460  6E1B               	movwf	___ftdiv@cntr,c
  1343  007462                     l1189:
  1344  007462  90D8               	bcf	status,0,c
  1345  007464  361C               	rlcf	___ftdiv@f3,f,c
  1346  007466  361D               	rlcf	___ftdiv@f3+1,f,c
  1347  007468  361E               	rlcf	___ftdiv@f3+2,f,c
  1348  00746A  5015               	movf	___ftdiv@f2,w,c
  1349  00746C  5C12               	subwf	___ftdiv@f1,w,c
  1350  00746E  5016               	movf	___ftdiv@f2+1,w,c
  1351  007470  5813               	subwfb	___ftdiv@f1+1,w,c
  1352  007472  5017               	movf	___ftdiv@f2+2,w,c
  1353  007474  5814               	subwfb	___ftdiv@f1+2,w,c
  1354  007476  A0D8               	btfss	status,0,c
  1355  007478  D007               	goto	l378
  1356  00747A  5015               	movf	___ftdiv@f2,w,c
  1357  00747C  5E12               	subwf	___ftdiv@f1,f,c
  1358  00747E  5016               	movf	___ftdiv@f2+1,w,c
  1359  007480  5A13               	subwfb	___ftdiv@f1+1,f,c
  1360  007482  5017               	movf	___ftdiv@f2+2,w,c
  1361  007484  5A14               	subwfb	___ftdiv@f1+2,f,c
  1362  007486  801C               	bsf	___ftdiv@f3,0,c
  1363  007488                     l378:
  1364  007488  90D8               	bcf	status,0,c
  1365  00748A  3612               	rlcf	___ftdiv@f1,f,c
  1366  00748C  3613               	rlcf	___ftdiv@f1+1,f,c
  1367  00748E  3614               	rlcf	___ftdiv@f1+2,f,c
  1368  007490  2E1B               	decfsz	___ftdiv@cntr,f,c
  1369  007492  D7E7               	goto	l1189
  1370  007494  C01C  F001         	movff	___ftdiv@f3,___ftpack@arg
  1371  007498  C01D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1372  00749C  C01E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1373  0074A0  C01F  F004         	movff	___ftdiv@exp,___ftpack@exp
  1374  0074A4  C020  F005         	movff	___ftdiv@sign,___ftpack@sign
  1375  0074A8  ECC5  F038         	call	___ftpack	;wreg free
  1376  0074AC  C001  F012         	movff	?___ftpack,?___ftdiv
  1377  0074B0  C002  F013         	movff	?___ftpack+1,?___ftdiv+1
  1378  0074B4  C003  F014         	movff	?___ftpack+2,?___ftdiv+2
  1379  0074B8  0012               	return	
  1380  0074BA                     __end_of___ftdiv:
  1381                           	opt stack 0
  1382                           tblptru	equ	0xFF8
  1383                           tblptrh	equ	0xFF7
  1384                           tblptrl	equ	0xFF6
  1385                           tablat	equ	0xFF5
  1386                           postinc0	equ	0xFEE
  1387                           postdec1	equ	0xFE5
  1388                           fsr1l	equ	0xFE1
  1389                           indf2	equ	0xFDF
  1390                           postinc2	equ	0xFDE
  1391                           postdec2	equ	0xFDD
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _PID_SetOutputLimits *****************
  1397 ;; Defined at:
  1398 ;;		line 126 in file "pid.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  pid             2   12[COMRAM] PTR struct .
  1401 ;;		 -> main@PID(45), 
  1402 ;;  Min             3   14[COMRAM] float 
  1403 ;;  Max             3   17[COMRAM] float 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1415 ;;      Params:         8       0       0       0       0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1418 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1419 ;;Total ram usage:        8 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    1
  1422 ;; This function calls:
  1423 ;;		___ftge
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;;		_PID_init
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text7
  1431  007968                     __ptext7:
  1432                           	opt stack 0
  1433  007968                     _PID_SetOutputLimits:
  1434                           	opt stack 28
  1435                           
  1436                           ;pid.c: 127: if (Min >= Max) {
  1437                           
  1438                           ;incstack = 0
  1439  007968  C00F  F001         	movff	PID_SetOutputLimits@Min,___ftge@ff1
  1440  00796C  C010  F002         	movff	PID_SetOutputLimits@Min+1,___ftge@ff1+1
  1441  007970  C011  F003         	movff	PID_SetOutputLimits@Min+2,___ftge@ff1+2
  1442  007974  C012  F004         	movff	PID_SetOutputLimits@Max,___ftge@ff2
  1443  007978  C013  F005         	movff	PID_SetOutputLimits@Max+1,___ftge@ff2+1
  1444  00797C  C014  F006         	movff	PID_SetOutputLimits@Max+2,___ftge@ff2+2
  1445  007980  EC7D  F038         	call	___ftge	;wreg free
  1446  007984  B0D8               	btfsc	status,0,c
  1447  007986  0012               	return	
  1448                           
  1449                           ;pid.c: 129: }
  1450                           ;pid.c: 130: pid->outMin = Min;
  1451                           
  1452                           ;pid.c: 128: return;
  1453  007988  EE20 F026          	lfsr	2,38
  1454  00798C  500D               	movf	PID_SetOutputLimits@pid,w,c
  1455  00798E  26D9               	addwf	fsr2l,f,c
  1456  007990  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1457  007992  22DA               	addwfc	fsr2h,f,c
  1458  007994  C00F  FFDE         	movff	PID_SetOutputLimits@Min,postinc2
  1459  007998  C010  FFDE         	movff	PID_SetOutputLimits@Min+1,postinc2
  1460  00799C  C011  FFDE         	movff	PID_SetOutputLimits@Min+2,postinc2
  1461                           
  1462                           ;pid.c: 131: pid->outMax = Max;
  1463  0079A0  EE20 F029          	lfsr	2,41
  1464  0079A4  500D               	movf	PID_SetOutputLimits@pid,w,c
  1465  0079A6  26D9               	addwf	fsr2l,f,c
  1466  0079A8  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1467  0079AA  22DA               	addwfc	fsr2h,f,c
  1468  0079AC  C012  FFDE         	movff	PID_SetOutputLimits@Max,postinc2
  1469  0079B0  C013  FFDE         	movff	PID_SetOutputLimits@Max+1,postinc2
  1470  0079B4  C014  FFDE         	movff	PID_SetOutputLimits@Max+2,postinc2
  1471                           
  1472                           ;pid.c: 133: if (pid->inAuto) {
  1473  0079B8  EE20 F02C          	lfsr	2,44
  1474  0079BC  500D               	movf	PID_SetOutputLimits@pid,w,c
  1475  0079BE  26D9               	addwf	fsr2l,f,c
  1476  0079C0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1477  0079C2  22DA               	addwfc	fsr2h,f,c
  1478  0079C4  50DF               	movf	indf2,w,c
  1479  0079C6  B4D8               	btfsc	status,2,c
  1480  0079C8  0012               	return	
  1481                           
  1482                           ;pid.c: 134: if (pid->myOutput > pid->outMax) {
  1483  0079CA  EE20 F029          	lfsr	2,41
  1484  0079CE  500D               	movf	PID_SetOutputLimits@pid,w,c
  1485  0079D0  26D9               	addwf	fsr2l,f,c
  1486  0079D2  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1487  0079D4  22DA               	addwfc	fsr2h,f,c
  1488  0079D6  CFDE F001          	movff	postinc2,___ftge@ff1
  1489  0079DA  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1490  0079DE  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1491  0079E2  EE20 F016          	lfsr	2,22
  1492  0079E6  500D               	movf	PID_SetOutputLimits@pid,w,c
  1493  0079E8  26D9               	addwf	fsr2l,f,c
  1494  0079EA  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1495  0079EC  22DA               	addwfc	fsr2h,f,c
  1496  0079EE  CFDE F004          	movff	postinc2,___ftge@ff2
  1497  0079F2  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1498  0079F6  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1499  0079FA  EC7D  F038         	call	___ftge	;wreg free
  1500  0079FE  B0D8               	btfsc	status,0,c
  1501  007A00  D003               	goto	l1293
  1502                           
  1503                           ;pid.c: 135: pid->myOutput = pid->outMax;
  1504  007A02  EE20 F029          	lfsr	2,41
  1505  007A06  D01E               	goto	L1
  1506  007A08                     l1293:
  1507  007A08  EE20 F016          	lfsr	2,22
  1508  007A0C  500D               	movf	PID_SetOutputLimits@pid,w,c
  1509  007A0E  26D9               	addwf	fsr2l,f,c
  1510  007A10  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1511  007A12  22DA               	addwfc	fsr2h,f,c
  1512  007A14  CFDE F001          	movff	postinc2,___ftge@ff1
  1513  007A18  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1514  007A1C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1515  007A20  EE20 F026          	lfsr	2,38
  1516  007A24  500D               	movf	PID_SetOutputLimits@pid,w,c
  1517  007A26  26D9               	addwf	fsr2l,f,c
  1518  007A28  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1519  007A2A  22DA               	addwfc	fsr2h,f,c
  1520  007A2C  CFDE F004          	movff	postinc2,___ftge@ff2
  1521  007A30  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1522  007A34  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1523  007A38  EC7D  F038         	call	___ftge	;wreg free
  1524  007A3C  B0D8               	btfsc	status,0,c
  1525  007A3E  D012               	goto	l1297
  1526                           
  1527                           ;pid.c: 137: pid->myOutput = pid->outMin;
  1528  007A40  EE20 F026          	lfsr	2,38
  1529  007A44                     L1:
  1530  007A44  500D               	movf	PID_SetOutputLimits@pid,w,c
  1531  007A46  26D9               	addwf	fsr2l,f,c
  1532  007A48  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1533  007A4A  22DA               	addwfc	fsr2h,f,c
  1534  007A4C  EE10 F016          	lfsr	1,22
  1535  007A50  500D               	movf	PID_SetOutputLimits@pid,w,c
  1536  007A52  26E1               	addwf	fsr1l,f,c
  1537  007A54  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1538  007A56  22E2               	addwfc	fsr1h,f,c
  1539  007A58  CFDE FFE6          	movff	postinc2,postinc1
  1540  007A5C  CFDE FFE6          	movff	postinc2,postinc1
  1541  007A60  CFDE FFE6          	movff	postinc2,postinc1
  1542  007A64                     l1297:
  1543                           
  1544                           ;pid.c: 138: }
  1545                           ;pid.c: 140: if (pid->ITerm > pid->outMax) {
  1546  007A64  EE20 F029          	lfsr	2,41
  1547  007A68  500D               	movf	PID_SetOutputLimits@pid,w,c
  1548  007A6A  26D9               	addwf	fsr2l,f,c
  1549  007A6C  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1550  007A6E  22DA               	addwfc	fsr2h,f,c
  1551  007A70  CFDE F001          	movff	postinc2,___ftge@ff1
  1552  007A74  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1553  007A78  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1554  007A7C  EE20 F01C          	lfsr	2,28
  1555  007A80  500D               	movf	PID_SetOutputLimits@pid,w,c
  1556  007A82  26D9               	addwf	fsr2l,f,c
  1557  007A84  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1558  007A86  22DA               	addwfc	fsr2h,f,c
  1559  007A88  CFDE F004          	movff	postinc2,___ftge@ff2
  1560  007A8C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1561  007A90  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1562  007A94  EC7D  F038         	call	___ftge	;wreg free
  1563  007A98  B0D8               	btfsc	status,0,c
  1564  007A9A  D013               	goto	l1301
  1565                           
  1566                           ;pid.c: 141: pid->ITerm = pid->outMax;
  1567  007A9C  EE20 F029          	lfsr	2,41
  1568  007AA0  500D               	movf	PID_SetOutputLimits@pid,w,c
  1569  007AA2  26D9               	addwf	fsr2l,f,c
  1570  007AA4  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1571  007AA6  22DA               	addwfc	fsr2h,f,c
  1572  007AA8  EE10 F01C          	lfsr	1,28
  1573  007AAC  500D               	movf	PID_SetOutputLimits@pid,w,c
  1574  007AAE  26E1               	addwf	fsr1l,f,c
  1575  007AB0  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1576  007AB2  22E2               	addwfc	fsr1h,f,c
  1577  007AB4  CFDE FFE6          	movff	postinc2,postinc1
  1578  007AB8  CFDE FFE6          	movff	postinc2,postinc1
  1579  007ABC  CFDE FFE6          	movff	postinc2,postinc1
  1580                           
  1581                           ;pid.c: 142: } else if (pid->ITerm < pid->outMin) {
  1582  007AC0  0012               	return	
  1583  007AC2                     l1301:
  1584  007AC2  EE20 F01C          	lfsr	2,28
  1585  007AC6  500D               	movf	PID_SetOutputLimits@pid,w,c
  1586  007AC8  26D9               	addwf	fsr2l,f,c
  1587  007ACA  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1588  007ACC  22DA               	addwfc	fsr2h,f,c
  1589  007ACE  CFDE F001          	movff	postinc2,___ftge@ff1
  1590  007AD2  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1591  007AD6  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1592  007ADA  EE20 F026          	lfsr	2,38
  1593  007ADE  500D               	movf	PID_SetOutputLimits@pid,w,c
  1594  007AE0  26D9               	addwf	fsr2l,f,c
  1595  007AE2  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1596  007AE4  22DA               	addwfc	fsr2h,f,c
  1597  007AE6  CFDE F004          	movff	postinc2,___ftge@ff2
  1598  007AEA  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1599  007AEE  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1600  007AF2  EC7D  F038         	call	___ftge	;wreg free
  1601  007AF6  B0D8               	btfsc	status,0,c
  1602  007AF8  0012               	return	
  1603                           
  1604                           ;pid.c: 143: pid->ITerm = pid->outMin;
  1605  007AFA  EE20 F026          	lfsr	2,38
  1606  007AFE  500D               	movf	PID_SetOutputLimits@pid,w,c
  1607  007B00  26D9               	addwf	fsr2l,f,c
  1608  007B02  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1609  007B04  22DA               	addwfc	fsr2h,f,c
  1610  007B06  EE10 F01C          	lfsr	1,28
  1611  007B0A  500D               	movf	PID_SetOutputLimits@pid,w,c
  1612  007B0C  26E1               	addwf	fsr1l,f,c
  1613  007B0E  500E               	movf	PID_SetOutputLimits@pid+1,w,c
  1614  007B10  22E2               	addwfc	fsr1h,f,c
  1615  007B12  CFDE FFE6          	movff	postinc2,postinc1
  1616  007B16  CFDE FFE6          	movff	postinc2,postinc1
  1617  007B1A  CFDE FFE6          	movff	postinc2,postinc1
  1618  007B1E  0012               	return	
  1619  007B20                     __end_of_PID_SetOutputLimits:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           postinc0	equ	0xFEE
  1626                           postinc1	equ	0xFE6
  1627                           postdec1	equ	0xFE5
  1628                           fsr1h	equ	0xFE2
  1629                           fsr1l	equ	0xFE1
  1630                           indf2	equ	0xFDF
  1631                           postinc2	equ	0xFDE
  1632                           postdec2	equ	0xFDD
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _PID_SetControllerDirection *****************
  1638 ;; Defined at:
  1639 ;;		line 183 in file "pid.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  pid             2   26[COMRAM] PTR struct .
  1642 ;;		 -> main@PID(45), 
  1643 ;;  Direction       1   28[COMRAM] enum E7
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1655 ;;      Params:         3       0       0       0       0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1657 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1658 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1659 ;;Total ram usage:        4 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    1
  1662 ;; This function calls:
  1663 ;;		___ftneg
  1664 ;; This function is called by:
  1665 ;;		_PID_init
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text8
  1670  007300                     __ptext8:
  1671                           	opt stack 0
  1672  007300                     _PID_SetControllerDirection:
  1673                           	opt stack 28
  1674                           
  1675                           ;pid.c: 184: if (pid->inAuto && Direction != pid->controllerDirection) {
  1676                           
  1677                           ;incstack = 0
  1678  007300  EE20 F02C          	lfsr	2,44
  1679  007304  501B               	movf	PID_SetControllerDirection@pid,w,c
  1680  007306  26D9               	addwf	fsr2l,f,c
  1681  007308  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1682  00730A  22DA               	addwfc	fsr2h,f,c
  1683  00730C  50DF               	movf	indf2,w,c
  1684  00730E  B4D8               	btfsc	status,2,c
  1685  007310  D058               	goto	l1311
  1686  007312  EE20 F012          	lfsr	2,18
  1687  007316  501B               	movf	PID_SetControllerDirection@pid,w,c
  1688  007318  26D9               	addwf	fsr2l,f,c
  1689  00731A  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1690  00731C  22DA               	addwfc	fsr2h,f,c
  1691  00731E  501D               	movf	PID_SetControllerDirection@Direction,w,c
  1692  007320  18DE               	xorwf	postinc2,w,c
  1693  007322  B4D8               	btfsc	status,2,c
  1694  007324  D04E               	goto	l1311
  1695                           
  1696                           ;pid.c: 185: pid->kp = (0 - pid->kp);
  1697  007326  EE20 F009          	lfsr	2,9
  1698  00732A  501B               	movf	PID_SetControllerDirection@pid,w,c
  1699  00732C  26D9               	addwf	fsr2l,f,c
  1700  00732E  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1701  007330  22DA               	addwfc	fsr2h,f,c
  1702  007332  CFDE F018          	movff	postinc2,___ftneg@f1
  1703  007336  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1704  00733A  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1705  00733E  ECD7  F037         	call	___ftneg	;wreg free
  1706  007342  EE20 F009          	lfsr	2,9
  1707  007346  501B               	movf	PID_SetControllerDirection@pid,w,c
  1708  007348  26D9               	addwf	fsr2l,f,c
  1709  00734A  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1710  00734C  22DA               	addwfc	fsr2h,f,c
  1711  00734E  C018  FFDE         	movff	?___ftneg,postinc2
  1712  007352  C019  FFDE         	movff	?___ftneg+1,postinc2
  1713  007356  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1714                           
  1715                           ;pid.c: 186: pid->ki = (0 - pid->ki);
  1716  00735A  EE20 F00C          	lfsr	2,12
  1717  00735E  501B               	movf	PID_SetControllerDirection@pid,w,c
  1718  007360  26D9               	addwf	fsr2l,f,c
  1719  007362  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1720  007364  22DA               	addwfc	fsr2h,f,c
  1721  007366  CFDE F018          	movff	postinc2,___ftneg@f1
  1722  00736A  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1723  00736E  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1724  007372  ECD7  F037         	call	___ftneg	;wreg free
  1725  007376  EE20 F00C          	lfsr	2,12
  1726  00737A  501B               	movf	PID_SetControllerDirection@pid,w,c
  1727  00737C  26D9               	addwf	fsr2l,f,c
  1728  00737E  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1729  007380  22DA               	addwfc	fsr2h,f,c
  1730  007382  C018  FFDE         	movff	?___ftneg,postinc2
  1731  007386  C019  FFDE         	movff	?___ftneg+1,postinc2
  1732  00738A  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1733                           
  1734                           ;pid.c: 187: pid->kd = (0 - pid->kd);
  1735  00738E  EE20 F00F          	lfsr	2,15
  1736  007392  501B               	movf	PID_SetControllerDirection@pid,w,c
  1737  007394  26D9               	addwf	fsr2l,f,c
  1738  007396  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1739  007398  22DA               	addwfc	fsr2h,f,c
  1740  00739A  CFDE F018          	movff	postinc2,___ftneg@f1
  1741  00739E  CFDE F019          	movff	postinc2,___ftneg@f1+1
  1742  0073A2  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  1743  0073A6  ECD7  F037         	call	___ftneg	;wreg free
  1744  0073AA  EE20 F00F          	lfsr	2,15
  1745  0073AE  501B               	movf	PID_SetControllerDirection@pid,w,c
  1746  0073B0  26D9               	addwf	fsr2l,f,c
  1747  0073B2  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1748  0073B4  22DA               	addwfc	fsr2h,f,c
  1749  0073B6  C018  FFDE         	movff	?___ftneg,postinc2
  1750  0073BA  C019  FFDE         	movff	?___ftneg+1,postinc2
  1751  0073BE  C01A  FFDE         	movff	?___ftneg+2,postinc2
  1752  0073C2                     l1311:
  1753                           
  1754                           ;pid.c: 188: }
  1755                           ;pid.c: 189: pid->controllerDirection = Direction;
  1756  0073C2  EE20 F012          	lfsr	2,18
  1757  0073C6  501B               	movf	PID_SetControllerDirection@pid,w,c
  1758  0073C8  26D9               	addwf	fsr2l,f,c
  1759  0073CA  501C               	movf	PID_SetControllerDirection@pid+1,w,c
  1760  0073CC  22DA               	addwfc	fsr2h,f,c
  1761  0073CE  C01D  FFDF         	movff	PID_SetControllerDirection@Direction,indf2
  1762  0073D2  0012               	return		;funcret
  1763  0073D4                     __end_of_PID_SetControllerDirection:
  1764                           	opt stack 0
  1765                           tblptru	equ	0xFF8
  1766                           tblptrh	equ	0xFF7
  1767                           tblptrl	equ	0xFF6
  1768                           tablat	equ	0xFF5
  1769                           postinc0	equ	0xFEE
  1770                           postinc1	equ	0xFE6
  1771                           postdec1	equ	0xFE5
  1772                           fsr1h	equ	0xFE2
  1773                           fsr1l	equ	0xFE1
  1774                           indf2	equ	0xFDF
  1775                           postinc2	equ	0xFDE
  1776                           postdec2	equ	0xFDD
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _PID_SetMode *****************
  1782 ;; Defined at:
  1783 ;;		line 153 in file "pid.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  pid             2   11[COMRAM] PTR struct .
  1786 ;;		 -> main@PID(45), 
  1787 ;;  Mode            1   13[COMRAM] enum E3
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  newAuto         1   15[COMRAM] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1799 ;;      Params:         3       0       0       0       0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1802 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1803 ;;Total ram usage:        5 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    2
  1806 ;; This function calls:
  1807 ;;		_PID_Initialize
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text9
  1814  00705E                     __ptext9:
  1815                           	opt stack 0
  1816  00705E                     _PID_SetMode:
  1817                           	opt stack 28
  1818                           
  1819                           ;pid.c: 155: bool newAuto = (Mode == PID_Mode_Automatic);
  1820                           
  1821                           ;incstack = 0
  1822  00705E  040E               	decf	PID_SetMode@Mode,w,c
  1823  007060  A4D8               	btfss	status,2,c
  1824  007062  D002               	goto	u1290
  1825  007064  0E01               	movlw	1
  1826  007066  D001               	goto	u1300
  1827  007068                     u1290:
  1828  007068  0E00               	movlw	0
  1829  00706A                     u1300:
  1830  00706A  6E10               	movwf	PID_SetMode@newAuto,c
  1831                           
  1832                           ;pid.c: 156: if(newAuto != pid->inAuto)
  1833  00706C  EE20 F02C          	lfsr	2,44
  1834  007070  500C               	movf	PID_SetMode@pid,w,c
  1835  007072  26D9               	addwf	fsr2l,f,c
  1836  007074  500D               	movf	PID_SetMode@pid+1,w,c
  1837  007076  22DA               	addwfc	fsr2h,f,c
  1838  007078  5010               	movf	PID_SetMode@newAuto,w,c
  1839  00707A  18DE               	xorwf	postinc2,w,c
  1840  00707C  B4D8               	btfsc	status,2,c
  1841  00707E  D006               	goto	l1433
  1842                           
  1843                           ;pid.c: 157: {
  1844                           ;pid.c: 158: PID_Initialize(pid);
  1845  007080  C00C  F00A         	movff	PID_SetMode@pid,PID_Initialize@pid
  1846  007084  C00D  F00B         	movff	PID_SetMode@pid+1,PID_Initialize@pid+1
  1847  007088  ECD7  F03A         	call	_PID_Initialize	;wreg free
  1848  00708C                     l1433:
  1849                           
  1850                           ;pid.c: 159: }
  1851                           ;pid.c: 160: pid->inAuto = newAuto;
  1852  00708C  EE20 F02C          	lfsr	2,44
  1853  007090  500C               	movf	PID_SetMode@pid,w,c
  1854  007092  26D9               	addwf	fsr2l,f,c
  1855  007094  500D               	movf	PID_SetMode@pid+1,w,c
  1856  007096  22DA               	addwfc	fsr2h,f,c
  1857  007098  C010  FFDF         	movff	PID_SetMode@newAuto,indf2
  1858  00709C  0012               	return		;funcret
  1859  00709E                     __end_of_PID_SetMode:
  1860                           	opt stack 0
  1861                           tblptru	equ	0xFF8
  1862                           tblptrh	equ	0xFF7
  1863                           tblptrl	equ	0xFF6
  1864                           tablat	equ	0xFF5
  1865                           postinc0	equ	0xFEE
  1866                           postinc1	equ	0xFE6
  1867                           postdec1	equ	0xFE5
  1868                           fsr1h	equ	0xFE2
  1869                           fsr1l	equ	0xFE1
  1870                           indf2	equ	0xFDF
  1871                           postinc2	equ	0xFDE
  1872                           postdec2	equ	0xFDD
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _PID_Initialize *****************
  1878 ;; Defined at:
  1879 ;;		line 167 in file "pid.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  pid             2    9[COMRAM] PTR struct .
  1882 ;;		 -> main@PID(45), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         2       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        2 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    1
  1901 ;; This function calls:
  1902 ;;		___ftge
  1903 ;; This function is called by:
  1904 ;;		_PID_SetMode
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text10
  1909  0075AE                     __ptext10:
  1910                           	opt stack 0
  1911  0075AE                     _PID_Initialize:
  1912                           	opt stack 28
  1913                           
  1914                           ;pid.c: 168: pid->ITerm = pid->myOutput;
  1915                           
  1916                           ;incstack = 0
  1917  0075AE  EE20 F016          	lfsr	2,22
  1918  0075B2  500A               	movf	PID_Initialize@pid,w,c
  1919  0075B4  26D9               	addwf	fsr2l,f,c
  1920  0075B6  500B               	movf	PID_Initialize@pid+1,w,c
  1921  0075B8  22DA               	addwfc	fsr2h,f,c
  1922  0075BA  EE10 F01C          	lfsr	1,28
  1923  0075BE  500A               	movf	PID_Initialize@pid,w,c
  1924  0075C0  26E1               	addwf	fsr1l,f,c
  1925  0075C2  500B               	movf	PID_Initialize@pid+1,w,c
  1926  0075C4  22E2               	addwfc	fsr1h,f,c
  1927  0075C6  CFDE FFE6          	movff	postinc2,postinc1
  1928  0075CA  CFDE FFE6          	movff	postinc2,postinc1
  1929  0075CE  CFDE FFE6          	movff	postinc2,postinc1
  1930                           
  1931                           ;pid.c: 169: pid->lastInput = pid->myInput;
  1932  0075D2  EE20 F013          	lfsr	2,19
  1933  0075D6  500A               	movf	PID_Initialize@pid,w,c
  1934  0075D8  26D9               	addwf	fsr2l,f,c
  1935  0075DA  500B               	movf	PID_Initialize@pid+1,w,c
  1936  0075DC  22DA               	addwfc	fsr2h,f,c
  1937  0075DE  EE10 F01F          	lfsr	1,31
  1938  0075E2  500A               	movf	PID_Initialize@pid,w,c
  1939  0075E4  26E1               	addwf	fsr1l,f,c
  1940  0075E6  500B               	movf	PID_Initialize@pid+1,w,c
  1941  0075E8  22E2               	addwfc	fsr1h,f,c
  1942  0075EA  CFDE FFE6          	movff	postinc2,postinc1
  1943  0075EE  CFDE FFE6          	movff	postinc2,postinc1
  1944  0075F2  CFDE FFE6          	movff	postinc2,postinc1
  1945                           
  1946                           ;pid.c: 170: if (pid->ITerm > pid->outMax) {
  1947  0075F6  EE20 F029          	lfsr	2,41
  1948  0075FA  500A               	movf	PID_Initialize@pid,w,c
  1949  0075FC  26D9               	addwf	fsr2l,f,c
  1950  0075FE  500B               	movf	PID_Initialize@pid+1,w,c
  1951  007600  22DA               	addwfc	fsr2h,f,c
  1952  007602  CFDE F001          	movff	postinc2,___ftge@ff1
  1953  007606  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1954  00760A  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1955  00760E  EE20 F01C          	lfsr	2,28
  1956  007612  500A               	movf	PID_Initialize@pid,w,c
  1957  007614  26D9               	addwf	fsr2l,f,c
  1958  007616  500B               	movf	PID_Initialize@pid+1,w,c
  1959  007618  22DA               	addwfc	fsr2h,f,c
  1960  00761A  CFDE F004          	movff	postinc2,___ftge@ff2
  1961  00761E  CFDE F005          	movff	postinc2,___ftge@ff2+1
  1962  007622  CFDD F006          	movff	postdec2,___ftge@ff2+2
  1963  007626  EC7D  F038         	call	___ftge	;wreg free
  1964  00762A  B0D8               	btfsc	status,0,c
  1965  00762C  D013               	goto	l1343
  1966                           
  1967                           ;pid.c: 171: pid->ITerm = pid->outMax;
  1968  00762E  EE20 F029          	lfsr	2,41
  1969  007632  500A               	movf	PID_Initialize@pid,w,c
  1970  007634  26D9               	addwf	fsr2l,f,c
  1971  007636  500B               	movf	PID_Initialize@pid+1,w,c
  1972  007638  22DA               	addwfc	fsr2h,f,c
  1973  00763A  EE10 F01C          	lfsr	1,28
  1974  00763E  500A               	movf	PID_Initialize@pid,w,c
  1975  007640  26E1               	addwf	fsr1l,f,c
  1976  007642  500B               	movf	PID_Initialize@pid+1,w,c
  1977  007644  22E2               	addwfc	fsr1h,f,c
  1978  007646  CFDE FFE6          	movff	postinc2,postinc1
  1979  00764A  CFDE FFE6          	movff	postinc2,postinc1
  1980  00764E  CFDE FFE6          	movff	postinc2,postinc1
  1981                           
  1982                           ;pid.c: 172: } else if (pid->ITerm < pid->outMin) {
  1983  007652  0012               	return	
  1984  007654                     l1343:
  1985  007654  EE20 F01C          	lfsr	2,28
  1986  007658  500A               	movf	PID_Initialize@pid,w,c
  1987  00765A  26D9               	addwf	fsr2l,f,c
  1988  00765C  500B               	movf	PID_Initialize@pid+1,w,c
  1989  00765E  22DA               	addwfc	fsr2h,f,c
  1990  007660  CFDE F001          	movff	postinc2,___ftge@ff1
  1991  007664  CFDE F002          	movff	postinc2,___ftge@ff1+1
  1992  007668  CFDD F003          	movff	postdec2,___ftge@ff1+2
  1993  00766C  EE20 F026          	lfsr	2,38
  1994  007670  500A               	movf	PID_Initialize@pid,w,c
  1995  007672  26D9               	addwf	fsr2l,f,c
  1996  007674  500B               	movf	PID_Initialize@pid+1,w,c
  1997  007676  22DA               	addwfc	fsr2h,f,c
  1998  007678  CFDE F004          	movff	postinc2,___ftge@ff2
  1999  00767C  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2000  007680  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2001  007684  EC7D  F038         	call	___ftge	;wreg free
  2002  007688  B0D8               	btfsc	status,0,c
  2003  00768A  0012               	return	
  2004                           
  2005                           ;pid.c: 173: pid->ITerm = pid->outMin;
  2006  00768C  EE20 F026          	lfsr	2,38
  2007  007690  500A               	movf	PID_Initialize@pid,w,c
  2008  007692  26D9               	addwf	fsr2l,f,c
  2009  007694  500B               	movf	PID_Initialize@pid+1,w,c
  2010  007696  22DA               	addwfc	fsr2h,f,c
  2011  007698  EE10 F01C          	lfsr	1,28
  2012  00769C  500A               	movf	PID_Initialize@pid,w,c
  2013  00769E  26E1               	addwf	fsr1l,f,c
  2014  0076A0  500B               	movf	PID_Initialize@pid+1,w,c
  2015  0076A2  22E2               	addwfc	fsr1h,f,c
  2016  0076A4  CFDE FFE6          	movff	postinc2,postinc1
  2017  0076A8  CFDE FFE6          	movff	postinc2,postinc1
  2018  0076AC  CFDE FFE6          	movff	postinc2,postinc1
  2019  0076B0  0012               	return	
  2020  0076B2                     __end_of_PID_Initialize:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           postinc0	equ	0xFEE
  2027                           postinc1	equ	0xFE6
  2028                           postdec1	equ	0xFE5
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           indf2	equ	0xFDF
  2032                           postinc2	equ	0xFDE
  2033                           postdec2	equ	0xFDD
  2034                           fsr2h	equ	0xFDA
  2035                           fsr2l	equ	0xFD9
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _PID_Compute *****************
  2039 ;; Defined at:
  2040 ;;		line 43 in file "pid.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  pid             2   38[COMRAM] PTR struct .
  2043 ;;		 -> main@PID(45), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  output          3   52[COMRAM] float 
  2046 ;;  input           3   49[COMRAM] float 
  2047 ;;  error           3   46[COMRAM] float 
  2048 ;;  dInput          3   40[COMRAM] float 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      unsigned char 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2058 ;;      Params:         2       0       0       0       0       0       0       0       0
  2059 ;;      Locals:        15       0       0       0       0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2061 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2062 ;;Total ram usage:       17 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    2
  2065 ;; This function calls:
  2066 ;;		___ftadd
  2067 ;;		___ftge
  2068 ;;		___ftmul
  2069 ;;		___ftneg
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text11
  2076  007CE8                     __ptext11:
  2077                           	opt stack 0
  2078  007CE8                     _PID_Compute:
  2079                           	opt stack 28
  2080                           
  2081                           ;pid.c: 44: if (!pid->inAuto) {
  2082                           
  2083                           ;incstack = 0
  2084  007CE8  EE20 F02C          	lfsr	2,44
  2085  007CEC  5027               	movf	PID_Compute@pid,w,c
  2086  007CEE  26D9               	addwf	fsr2l,f,c
  2087  007CF0  5028               	movf	PID_Compute@pid+1,w,c
  2088  007CF2  22DA               	addwfc	fsr2h,f,c
  2089  007CF4  50DF               	movf	indf2,w,c
  2090  007CF6  B4D8               	btfsc	status,2,c
  2091  007CF8  0012               	return	
  2092                           
  2093                           ;pid.c: 46: }
  2094                           ;pid.c: 51: FloatType input = pid->myInput;
  2095                           
  2096                           ;pid.c: 45: return 0;
  2097                           ;	Return value of _PID_Compute is never used
  2098  007CFA  EE20 F013          	lfsr	2,19
  2099  007CFE  5027               	movf	PID_Compute@pid,w,c
  2100  007D00  26D9               	addwf	fsr2l,f,c
  2101  007D02  5028               	movf	PID_Compute@pid+1,w,c
  2102  007D04  22DA               	addwfc	fsr2h,f,c
  2103  007D06  CFDE F032          	movff	postinc2,PID_Compute@input
  2104  007D0A  CFDE F033          	movff	postinc2,PID_Compute@input+1
  2105  007D0E  CFDD F034          	movff	postdec2,PID_Compute@input+2
  2106                           
  2107                           ;pid.c: 52: FloatType error = pid->mySetpoint - input;
  2108  007D12  C032  F018         	movff	PID_Compute@input,___ftneg@f1
  2109  007D16  C033  F019         	movff	PID_Compute@input+1,___ftneg@f1+1
  2110  007D1A  C034  F01A         	movff	PID_Compute@input+2,___ftneg@f1+2
  2111  007D1E  ECD7  F037         	call	___ftneg	;wreg free
  2112  007D22  C018  F01B         	movff	?___ftneg,___ftadd@f1
  2113  007D26  C019  F01C         	movff	?___ftneg+1,___ftadd@f1+1
  2114  007D2A  C01A  F01D         	movff	?___ftneg+2,___ftadd@f1+2
  2115  007D2E  EE20 F019          	lfsr	2,25
  2116  007D32  5027               	movf	PID_Compute@pid,w,c
  2117  007D34  26D9               	addwf	fsr2l,f,c
  2118  007D36  5028               	movf	PID_Compute@pid+1,w,c
  2119  007D38  22DA               	addwfc	fsr2h,f,c
  2120  007D3A  CFDE F01E          	movff	postinc2,___ftadd@f2
  2121  007D3E  CFDE F01F          	movff	postinc2,___ftadd@f2+1
  2122  007D42  CFDD F020          	movff	postdec2,___ftadd@f2+2
  2123  007D46  ECDE  F03B         	call	___ftadd	;wreg free
  2124  007D4A  C01B  F02F         	movff	?___ftadd,PID_Compute@error
  2125  007D4E  C01C  F030         	movff	?___ftadd+1,PID_Compute@error+1
  2126  007D52  C01D  F031         	movff	?___ftadd+2,PID_Compute@error+2
  2127                           
  2128                           ;pid.c: 53: pid->ITerm += (pid->ki * error);
  2129  007D56  EE20 F01C          	lfsr	2,28
  2130  007D5A  5027               	movf	PID_Compute@pid,w,c
  2131  007D5C  26D9               	addwf	fsr2l,f,c
  2132  007D5E  5028               	movf	PID_Compute@pid+1,w,c
  2133  007D60  22DA               	addwfc	fsr2h,f,c
  2134  007D62  CFDE F01B          	movff	postinc2,___ftadd@f1
  2135  007D66  CFDE F01C          	movff	postinc2,___ftadd@f1+1
  2136  007D6A  CFDD F01D          	movff	postdec2,___ftadd@f1+2
  2137  007D6E  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2138  007D72  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2139  007D76  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2140  007D7A  EE20 F00C          	lfsr	2,12
  2141  007D7E  5027               	movf	PID_Compute@pid,w,c
  2142  007D80  26D9               	addwf	fsr2l,f,c
  2143  007D82  5028               	movf	PID_Compute@pid+1,w,c
  2144  007D84  22DA               	addwfc	fsr2h,f,c
  2145  007D86  CFDE F009          	movff	postinc2,___ftmul@f1
  2146  007D8A  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2147  007D8E  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2148  007D92  EC5D  F03A         	call	___ftmul	;wreg free
  2149  007D96  C009  F01E         	movff	?___ftmul,___ftadd@f2
  2150  007D9A  C00A  F01F         	movff	?___ftmul+1,___ftadd@f2+1
  2151  007D9E  C00B  F020         	movff	?___ftmul+2,___ftadd@f2+2
  2152  007DA2  ECDE  F03B         	call	___ftadd	;wreg free
  2153  007DA6  EE20 F01C          	lfsr	2,28
  2154  007DAA  5027               	movf	PID_Compute@pid,w,c
  2155  007DAC  26D9               	addwf	fsr2l,f,c
  2156  007DAE  5028               	movf	PID_Compute@pid+1,w,c
  2157  007DB0  22DA               	addwfc	fsr2h,f,c
  2158  007DB2  C01B  FFDE         	movff	?___ftadd,postinc2
  2159  007DB6  C01C  FFDE         	movff	?___ftadd+1,postinc2
  2160  007DBA  C01D  FFDE         	movff	?___ftadd+2,postinc2
  2161                           
  2162                           ;pid.c: 54: if (pid->ITerm > pid->outMax)
  2163  007DBE  EE20 F029          	lfsr	2,41
  2164  007DC2  5027               	movf	PID_Compute@pid,w,c
  2165  007DC4  26D9               	addwf	fsr2l,f,c
  2166  007DC6  5028               	movf	PID_Compute@pid+1,w,c
  2167  007DC8  22DA               	addwfc	fsr2h,f,c
  2168  007DCA  CFDE F001          	movff	postinc2,___ftge@ff1
  2169  007DCE  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2170  007DD2  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2171  007DD6  EE20 F01C          	lfsr	2,28
  2172  007DDA  5027               	movf	PID_Compute@pid,w,c
  2173  007DDC  26D9               	addwf	fsr2l,f,c
  2174  007DDE  5028               	movf	PID_Compute@pid+1,w,c
  2175  007DE0  22DA               	addwfc	fsr2h,f,c
  2176  007DE2  CFDE F004          	movff	postinc2,___ftge@ff2
  2177  007DE6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2178  007DEA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2179  007DEE  EC7D  F038         	call	___ftge	;wreg free
  2180  007DF2  B0D8               	btfsc	status,0,c
  2181  007DF4  D003               	goto	l1449
  2182                           
  2183                           ;pid.c: 55: pid->ITerm = pid->outMax;
  2184  007DF6  EE20 F029          	lfsr	2,41
  2185  007DFA  D01E               	goto	L2
  2186  007DFC                     l1449:
  2187                           
  2188                           ;pid.c: 56: else if (pid->ITerm < pid->outMin)
  2189  007DFC  EE20 F01C          	lfsr	2,28
  2190  007E00  5027               	movf	PID_Compute@pid,w,c
  2191  007E02  26D9               	addwf	fsr2l,f,c
  2192  007E04  5028               	movf	PID_Compute@pid+1,w,c
  2193  007E06  22DA               	addwfc	fsr2h,f,c
  2194  007E08  CFDE F001          	movff	postinc2,___ftge@ff1
  2195  007E0C  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2196  007E10  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2197  007E14  EE20 F026          	lfsr	2,38
  2198  007E18  5027               	movf	PID_Compute@pid,w,c
  2199  007E1A  26D9               	addwf	fsr2l,f,c
  2200  007E1C  5028               	movf	PID_Compute@pid+1,w,c
  2201  007E1E  22DA               	addwfc	fsr2h,f,c
  2202  007E20  CFDE F004          	movff	postinc2,___ftge@ff2
  2203  007E24  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2204  007E28  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2205  007E2C  EC7D  F038         	call	___ftge	;wreg free
  2206  007E30  B0D8               	btfsc	status,0,c
  2207  007E32  D012               	goto	l1453
  2208                           
  2209                           ;pid.c: 57: pid->ITerm = pid->outMin;
  2210  007E34  EE20 F026          	lfsr	2,38
  2211  007E38                     L2:
  2212  007E38  5027               	movf	PID_Compute@pid,w,c
  2213  007E3A  26D9               	addwf	fsr2l,f,c
  2214  007E3C  5028               	movf	PID_Compute@pid+1,w,c
  2215  007E3E  22DA               	addwfc	fsr2h,f,c
  2216  007E40  EE10 F01C          	lfsr	1,28
  2217  007E44  5027               	movf	PID_Compute@pid,w,c
  2218  007E46  26E1               	addwf	fsr1l,f,c
  2219  007E48  5028               	movf	PID_Compute@pid+1,w,c
  2220  007E4A  22E2               	addwfc	fsr1h,f,c
  2221  007E4C  CFDE FFE6          	movff	postinc2,postinc1
  2222  007E50  CFDE FFE6          	movff	postinc2,postinc1
  2223  007E54  CFDE FFE6          	movff	postinc2,postinc1
  2224  007E58                     l1453:
  2225                           
  2226                           ;pid.c: 58: FloatType dInput = (input - pid->lastInput);
  2227  007E58  EE20 F01F          	lfsr	2,31
  2228  007E5C  5027               	movf	PID_Compute@pid,w,c
  2229  007E5E  26D9               	addwf	fsr2l,f,c
  2230  007E60  5028               	movf	PID_Compute@pid+1,w,c
  2231  007E62  22DA               	addwfc	fsr2h,f,c
  2232  007E64  CFDE F018          	movff	postinc2,___ftneg@f1
  2233  007E68  CFDE F019          	movff	postinc2,___ftneg@f1+1
  2234  007E6C  CFDD F01A          	movff	postdec2,___ftneg@f1+2
  2235  007E70  ECD7  F037         	call	___ftneg	;wreg free
  2236  007E74  C018  F01B         	movff	?___ftneg,___ftadd@f1
  2237  007E78  C019  F01C         	movff	?___ftneg+1,___ftadd@f1+1
  2238  007E7C  C01A  F01D         	movff	?___ftneg+2,___ftadd@f1+2
  2239  007E80  C032  F01E         	movff	PID_Compute@input,___ftadd@f2
  2240  007E84  C033  F01F         	movff	PID_Compute@input+1,___ftadd@f2+1
  2241  007E88  C034  F020         	movff	PID_Compute@input+2,___ftadd@f2+2
  2242  007E8C  ECDE  F03B         	call	___ftadd	;wreg free
  2243  007E90  C01B  F029         	movff	?___ftadd,PID_Compute@dInput
  2244  007E94  C01C  F02A         	movff	?___ftadd+1,PID_Compute@dInput+1
  2245  007E98  C01D  F02B         	movff	?___ftadd+2,PID_Compute@dInput+2
  2246                           
  2247                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2248  007E9C  C029  F00C         	movff	PID_Compute@dInput,___ftmul@f2
  2249  007EA0  C02A  F00D         	movff	PID_Compute@dInput+1,___ftmul@f2+1
  2250  007EA4  C02B  F00E         	movff	PID_Compute@dInput+2,___ftmul@f2+2
  2251  007EA8  EE20 F00F          	lfsr	2,15
  2252  007EAC  5027               	movf	PID_Compute@pid,w,c
  2253  007EAE  26D9               	addwf	fsr2l,f,c
  2254  007EB0  5028               	movf	PID_Compute@pid+1,w,c
  2255  007EB2  22DA               	addwfc	fsr2h,f,c
  2256  007EB4  CFDE F009          	movff	postinc2,___ftmul@f1
  2257  007EB8  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2258  007EBC  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2259  007EC0  EC5D  F03A         	call	___ftmul	;wreg free
  2260  007EC4  C009  F018         	movff	?___ftmul,___ftneg@f1
  2261  007EC8  C00A  F019         	movff	?___ftmul+1,___ftneg@f1+1
  2262  007ECC  C00B  F01A         	movff	?___ftmul+2,___ftneg@f1+2
  2263  007ED0  ECD7  F037         	call	___ftneg	;wreg free
  2264  007ED4  C018  F01E         	movff	?___ftneg,___ftadd@f2
  2265  007ED8  C019  F01F         	movff	?___ftneg+1,___ftadd@f2+1
  2266  007EDC  C01A  F020         	movff	?___ftneg+2,___ftadd@f2+2
  2267  007EE0  C02F  F00C         	movff	PID_Compute@error,___ftmul@f2
  2268  007EE4  C030  F00D         	movff	PID_Compute@error+1,___ftmul@f2+1
  2269  007EE8  C031  F00E         	movff	PID_Compute@error+2,___ftmul@f2+2
  2270  007EEC  EE20 F009          	lfsr	2,9
  2271  007EF0  5027               	movf	PID_Compute@pid,w,c
  2272  007EF2  26D9               	addwf	fsr2l,f,c
  2273  007EF4  5028               	movf	PID_Compute@pid+1,w,c
  2274  007EF6  22DA               	addwfc	fsr2h,f,c
  2275  007EF8  CFDE F009          	movff	postinc2,___ftmul@f1
  2276  007EFC  CFDE F00A          	movff	postinc2,___ftmul@f1+1
  2277  007F00  CFDD F00B          	movff	postdec2,___ftmul@f1+2
  2278  007F04  EC5D  F03A         	call	___ftmul	;wreg free
  2279  007F08  C009  F01B         	movff	?___ftmul,___ftadd@f1
  2280  007F0C  C00A  F01C         	movff	?___ftmul+1,___ftadd@f1+1
  2281  007F10  C00B  F01D         	movff	?___ftmul+2,___ftadd@f1+2
  2282  007F14  ECDE  F03B         	call	___ftadd	;wreg free
  2283  007F18  C01B  F02C         	movff	?___ftadd,_PID_Compute$943
  2284  007F1C  C01C  F02D         	movff	?___ftadd+1,_PID_Compute$943+1
  2285  007F20  C01D  F02E         	movff	?___ftadd+2,_PID_Compute$943+2
  2286                           
  2287                           ;pid.c: 61: FloatType output = pid->kp * error + pid->ITerm - pid->kd * dInput;
  2288  007F24  C02C  F01B         	movff	_PID_Compute$943,___ftadd@f1
  2289  007F28  C02D  F01C         	movff	_PID_Compute$943+1,___ftadd@f1+1
  2290  007F2C  C02E  F01D         	movff	_PID_Compute$943+2,___ftadd@f1+2
  2291  007F30  EE20 F01C          	lfsr	2,28
  2292  007F34  5027               	movf	PID_Compute@pid,w,c
  2293  007F36  26D9               	addwf	fsr2l,f,c
  2294  007F38  5028               	movf	PID_Compute@pid+1,w,c
  2295  007F3A  22DA               	addwfc	fsr2h,f,c
  2296  007F3C  CFDE F01E          	movff	postinc2,___ftadd@f2
  2297  007F40  CFDE F01F          	movff	postinc2,___ftadd@f2+1
  2298  007F44  CFDD F020          	movff	postdec2,___ftadd@f2+2
  2299  007F48  ECDE  F03B         	call	___ftadd	;wreg free
  2300  007F4C  C01B  F035         	movff	?___ftadd,PID_Compute@output
  2301  007F50  C01C  F036         	movff	?___ftadd+1,PID_Compute@output+1
  2302  007F54  C01D  F037         	movff	?___ftadd+2,PID_Compute@output+2
  2303                           
  2304                           ;pid.c: 63: if (output > pid->outMax)
  2305  007F58  EE20 F029          	lfsr	2,41
  2306  007F5C  5027               	movf	PID_Compute@pid,w,c
  2307  007F5E  26D9               	addwf	fsr2l,f,c
  2308  007F60  5028               	movf	PID_Compute@pid+1,w,c
  2309  007F62  22DA               	addwfc	fsr2h,f,c
  2310  007F64  CFDE F001          	movff	postinc2,___ftge@ff1
  2311  007F68  CFDE F002          	movff	postinc2,___ftge@ff1+1
  2312  007F6C  CFDD F003          	movff	postdec2,___ftge@ff1+2
  2313  007F70  C035  F004         	movff	PID_Compute@output,___ftge@ff2
  2314  007F74  C036  F005         	movff	PID_Compute@output+1,___ftge@ff2+1
  2315  007F78  C037  F006         	movff	PID_Compute@output+2,___ftge@ff2+2
  2316  007F7C  EC7D  F038         	call	___ftge	;wreg free
  2317  007F80  B0D8               	btfsc	status,0,c
  2318  007F82  D003               	goto	l1463
  2319                           
  2320                           ;pid.c: 64: output = pid->outMax;
  2321  007F84  EE20 F029          	lfsr	2,41
  2322  007F88  D018               	goto	L3
  2323  007F8A                     l1463:
  2324                           
  2325                           ;pid.c: 65: else if (output < pid->outMin)
  2326  007F8A  C035  F001         	movff	PID_Compute@output,___ftge@ff1
  2327  007F8E  C036  F002         	movff	PID_Compute@output+1,___ftge@ff1+1
  2328  007F92  C037  F003         	movff	PID_Compute@output+2,___ftge@ff1+2
  2329  007F96  EE20 F026          	lfsr	2,38
  2330  007F9A  5027               	movf	PID_Compute@pid,w,c
  2331  007F9C  26D9               	addwf	fsr2l,f,c
  2332  007F9E  5028               	movf	PID_Compute@pid+1,w,c
  2333  007FA0  22DA               	addwfc	fsr2h,f,c
  2334  007FA2  CFDE F004          	movff	postinc2,___ftge@ff2
  2335  007FA6  CFDE F005          	movff	postinc2,___ftge@ff2+1
  2336  007FAA  CFDD F006          	movff	postdec2,___ftge@ff2+2
  2337  007FAE  EC7D  F038         	call	___ftge	;wreg free
  2338  007FB2  B0D8               	btfsc	status,0,c
  2339  007FB4  D00C               	goto	l43
  2340                           
  2341                           ;pid.c: 66: output = pid->outMin;
  2342  007FB6  EE20 F026          	lfsr	2,38
  2343  007FBA                     L3:
  2344  007FBA  5027               	movf	PID_Compute@pid,w,c
  2345  007FBC  26D9               	addwf	fsr2l,f,c
  2346  007FBE  5028               	movf	PID_Compute@pid+1,w,c
  2347  007FC0  22DA               	addwfc	fsr2h,f,c
  2348  007FC2  CFDE F035          	movff	postinc2,PID_Compute@output
  2349  007FC6  CFDE F036          	movff	postinc2,PID_Compute@output+1
  2350  007FCA  CFDD F037          	movff	postdec2,PID_Compute@output+2
  2351  007FCE                     l43:
  2352                           
  2353                           ;pid.c: 67: pid->myOutput = output;
  2354  007FCE  EE20 F016          	lfsr	2,22
  2355  007FD2  5027               	movf	PID_Compute@pid,w,c
  2356  007FD4  26D9               	addwf	fsr2l,f,c
  2357  007FD6  5028               	movf	PID_Compute@pid+1,w,c
  2358  007FD8  22DA               	addwfc	fsr2h,f,c
  2359  007FDA  C035  FFDE         	movff	PID_Compute@output,postinc2
  2360  007FDE  C036  FFDE         	movff	PID_Compute@output+1,postinc2
  2361  007FE2  C037  FFDE         	movff	PID_Compute@output+2,postinc2
  2362                           
  2363                           ;pid.c: 70: pid->lastInput = input;
  2364  007FE6  EE20 F01F          	lfsr	2,31
  2365  007FEA  5027               	movf	PID_Compute@pid,w,c
  2366  007FEC  26D9               	addwf	fsr2l,f,c
  2367  007FEE  5028               	movf	PID_Compute@pid+1,w,c
  2368  007FF0  22DA               	addwfc	fsr2h,f,c
  2369  007FF2  C032  FFDE         	movff	PID_Compute@input,postinc2
  2370  007FF6  C033  FFDE         	movff	PID_Compute@input+1,postinc2
  2371  007FFA  C034  FFDE         	movff	PID_Compute@input+2,postinc2
  2372  007FFE  0012               	return	
  2373  008000                     __end_of_PID_Compute:
  2374                           	opt stack 0
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           postinc0	equ	0xFEE
  2380                           postinc1	equ	0xFE6
  2381                           postdec1	equ	0xFE5
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           indf2	equ	0xFDF
  2385                           postinc2	equ	0xFDE
  2386                           postdec2	equ	0xFDD
  2387                           fsr2h	equ	0xFDA
  2388                           fsr2l	equ	0xFD9
  2389                           status	equ	0xFD8
  2390                           
  2391 ;; *************** function ___ftneg *****************
  2392 ;; Defined at:
  2393 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  f1              3   23[COMRAM] float 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  3   23[COMRAM] float 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         3       0       0       0       0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2410 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        3 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_PID_Compute
  2417 ;;		_PID_SetTunings
  2418 ;;		_PID_SetControllerDirection
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text12
  2423  006FAE                     __ptext12:
  2424                           	opt stack 0
  2425  006FAE                     ___ftneg:
  2426                           	opt stack 28
  2427                           
  2428                           ;incstack = 0
  2429  006FAE  5018               	movf	___ftneg@f1,w,c
  2430  006FB0  1019               	iorwf	___ftneg@f1+1,w,c
  2431  006FB2  101A               	iorwf	___ftneg@f1+2,w,c
  2432  006FB4  B4D8               	btfsc	status,2,c
  2433  006FB6  D006               	goto	l400
  2434  006FB8  0E00               	movlw	0
  2435  006FBA  1A18               	xorwf	___ftneg@f1,f,c
  2436  006FBC  0E00               	movlw	0
  2437  006FBE  1A19               	xorwf	___ftneg@f1+1,f,c
  2438  006FC0  0E80               	movlw	128
  2439  006FC2  1A1A               	xorwf	___ftneg@f1+2,f,c
  2440  006FC4                     l400:
  2441  006FC4  C018  F018         	movff	___ftneg@f1,?___ftneg
  2442  006FC8  C019  F019         	movff	___ftneg@f1+1,?___ftneg+1
  2443  006FCC  C01A  F01A         	movff	___ftneg@f1+2,?___ftneg+2
  2444  006FD0  0012               	return		;funcret
  2445  006FD2                     __end_of___ftneg:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           postinc0	equ	0xFEE
  2452                           postinc1	equ	0xFE6
  2453                           postdec1	equ	0xFE5
  2454                           fsr1h	equ	0xFE2
  2455                           fsr1l	equ	0xFE1
  2456                           indf2	equ	0xFDF
  2457                           postinc2	equ	0xFDE
  2458                           postdec2	equ	0xFDD
  2459                           fsr2h	equ	0xFDA
  2460                           fsr2l	equ	0xFD9
  2461                           status	equ	0xFD8
  2462                           
  2463 ;; *************** function ___ftmul *****************
  2464 ;; Defined at:
  2465 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  f1              3    8[COMRAM] float 
  2468 ;;  f2              3   11[COMRAM] float 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2471 ;;  sign            1   22[COMRAM] unsigned char 
  2472 ;;  cntr            1   21[COMRAM] unsigned char 
  2473 ;;  exp             1   17[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  3    8[COMRAM] float 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2483 ;;      Params:         6       0       0       0       0       0       0       0       0
  2484 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2485 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2486 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2487 ;;Total ram usage:       15 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    1
  2490 ;; This function calls:
  2491 ;;		___ftpack
  2492 ;; This function is called by:
  2493 ;;		_PID_Compute
  2494 ;;		_PID_SetTunings
  2495 ;;		_PID_SetSampleTime
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text13
  2500  0074BA                     __ptext13:
  2501                           	opt stack 0
  2502  0074BA                     ___ftmul:
  2503                           	opt stack 27
  2504                           
  2505                           ;incstack = 0
  2506  0074BA  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2507  0074BE  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2508  0074C0  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2509  0074C2  340A               	rlcf	___ftmul@f1+1,w,c
  2510  0074C4  360F               	rlcf	??___ftmul& (0+255),f,c
  2511  0074C6  E301               	bnc	u831
  2512  0074C8  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2513  0074CA                     u831:
  2514  0074CA  500F               	movf	??___ftmul,w,c
  2515  0074CC  6E12               	movwf	___ftmul@exp,c
  2516  0074CE  5012               	movf	___ftmul@exp,w,c
  2517  0074D0  A4D8               	btfss	status,2,c
  2518  0074D2  D007               	goto	l1209
  2519  0074D4  0E00               	movlw	0
  2520  0074D6  6E09               	movwf	?___ftmul,c
  2521  0074D8  0E00               	movlw	0
  2522  0074DA  6E0A               	movwf	?___ftmul+1,c
  2523  0074DC  0E00               	movlw	0
  2524  0074DE  6E0B               	movwf	?___ftmul+2,c
  2525  0074E0  0012               	return	
  2526  0074E2                     l1209:
  2527  0074E2  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2528  0074E6  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2529  0074E8  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2530  0074EA  340D               	rlcf	___ftmul@f2+1,w,c
  2531  0074EC  360F               	rlcf	??___ftmul& (0+255),f,c
  2532  0074EE  E301               	bnc	u851
  2533  0074F0  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2534  0074F2                     u851:
  2535  0074F2  500F               	movf	??___ftmul,w,c
  2536  0074F4  6E17               	movwf	___ftmul@sign,c
  2537  0074F6  5017               	movf	___ftmul@sign,w,c
  2538  0074F8  A4D8               	btfss	status,2,c
  2539  0074FA  D007               	goto	l1215
  2540  0074FC  0E00               	movlw	0
  2541  0074FE  6E09               	movwf	?___ftmul,c
  2542  007500  0E00               	movlw	0
  2543  007502  6E0A               	movwf	?___ftmul+1,c
  2544  007504  0E00               	movlw	0
  2545  007506  6E0B               	movwf	?___ftmul+2,c
  2546  007508  0012               	return	
  2547  00750A                     l1215:
  2548  00750A  5017               	movf	___ftmul@sign,w,c
  2549  00750C  0F7B               	addlw	123
  2550  00750E  2612               	addwf	___ftmul@exp,f,c
  2551  007510  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2552  007514  500E               	movf	___ftmul@f2+2,w,c
  2553  007516  1A17               	xorwf	___ftmul@sign,f,c
  2554  007518  0E80               	movlw	128
  2555  00751A  1617               	andwf	___ftmul@sign,f,c
  2556  00751C  8E0A               	bsf	___ftmul@f1+1,7,c
  2557  00751E  8E0D               	bsf	___ftmul@f2+1,7,c
  2558  007520  0EFF               	movlw	255
  2559  007522  160C               	andwf	___ftmul@f2,f,c
  2560  007524  0EFF               	movlw	255
  2561  007526  160D               	andwf	___ftmul@f2+1,f,c
  2562  007528  0E00               	movlw	0
  2563  00752A  160E               	andwf	___ftmul@f2+2,f,c
  2564  00752C  0E00               	movlw	0
  2565  00752E  6E13               	movwf	___ftmul@f3_as_product,c
  2566  007530  0E00               	movlw	0
  2567  007532  6E14               	movwf	___ftmul@f3_as_product+1,c
  2568  007534  0E00               	movlw	0
  2569  007536  6E15               	movwf	___ftmul@f3_as_product+2,c
  2570  007538  0E07               	movlw	7
  2571  00753A  6E16               	movwf	___ftmul@cntr,c
  2572  00753C                     l1229:
  2573  00753C  A009               	btfss	___ftmul@f1,0,c
  2574  00753E  D006               	goto	l1233
  2575  007540  500C               	movf	___ftmul@f2,w,c
  2576  007542  2613               	addwf	___ftmul@f3_as_product,f,c
  2577  007544  500D               	movf	___ftmul@f2+1,w,c
  2578  007546  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2579  007548  500E               	movf	___ftmul@f2+2,w,c
  2580  00754A  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2581  00754C                     l1233:
  2582  00754C  90D8               	bcf	status,0,c
  2583  00754E  320B               	rrcf	___ftmul@f1+2,f,c
  2584  007550  320A               	rrcf	___ftmul@f1+1,f,c
  2585  007552  3209               	rrcf	___ftmul@f1,f,c
  2586  007554  90D8               	bcf	status,0,c
  2587  007556  360C               	rlcf	___ftmul@f2,f,c
  2588  007558  360D               	rlcf	___ftmul@f2+1,f,c
  2589  00755A  360E               	rlcf	___ftmul@f2+2,f,c
  2590  00755C  2E16               	decfsz	___ftmul@cntr,f,c
  2591  00755E  D7EE               	goto	l1229
  2592  007560  0E09               	movlw	9
  2593  007562  6E16               	movwf	___ftmul@cntr,c
  2594  007564                     l1239:
  2595  007564  A009               	btfss	___ftmul@f1,0,c
  2596  007566  D006               	goto	l1243
  2597  007568  500C               	movf	___ftmul@f2,w,c
  2598  00756A  2613               	addwf	___ftmul@f3_as_product,f,c
  2599  00756C  500D               	movf	___ftmul@f2+1,w,c
  2600  00756E  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2601  007570  500E               	movf	___ftmul@f2+2,w,c
  2602  007572  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2603  007574                     l1243:
  2604  007574  90D8               	bcf	status,0,c
  2605  007576  320B               	rrcf	___ftmul@f1+2,f,c
  2606  007578  320A               	rrcf	___ftmul@f1+1,f,c
  2607  00757A  3209               	rrcf	___ftmul@f1,f,c
  2608  00757C  90D8               	bcf	status,0,c
  2609  00757E  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2610  007580  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2611  007582  3213               	rrcf	___ftmul@f3_as_product,f,c
  2612  007584  2E16               	decfsz	___ftmul@cntr,f,c
  2613  007586  D7EE               	goto	l1239
  2614  007588  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2615  00758C  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2616  007590  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2617  007594  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  2618  007598  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  2619  00759C  ECC5  F038         	call	___ftpack	;wreg free
  2620  0075A0  C001  F009         	movff	?___ftpack,?___ftmul
  2621  0075A4  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  2622  0075A8  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  2623  0075AC  0012               	return	
  2624  0075AE                     __end_of___ftmul:
  2625                           	opt stack 0
  2626                           tblptru	equ	0xFF8
  2627                           tblptrh	equ	0xFF7
  2628                           tblptrl	equ	0xFF6
  2629                           tablat	equ	0xFF5
  2630                           postinc0	equ	0xFEE
  2631                           postinc1	equ	0xFE6
  2632                           postdec1	equ	0xFE5
  2633                           fsr1h	equ	0xFE2
  2634                           fsr1l	equ	0xFE1
  2635                           indf2	equ	0xFDF
  2636                           postinc2	equ	0xFDE
  2637                           postdec2	equ	0xFDD
  2638                           fsr2h	equ	0xFDA
  2639                           fsr2l	equ	0xFD9
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function ___ftge *****************
  2643 ;; Defined at:
  2644 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  ff1             3    0[COMRAM] float 
  2647 ;;  ff2             3    3[COMRAM] float 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2659 ;;      Params:         6       0       0       0       0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2661 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2663 ;;Total ram usage:        9 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_PID_Compute
  2669 ;;		_PID_SetOutputLimits
  2670 ;;		_PID_Initialize
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text14
  2675  0070FA                     __ptext14:
  2676                           	opt stack 0
  2677  0070FA                     ___ftge:
  2678                           	opt stack 28
  2679                           
  2680                           ;incstack = 0
  2681  0070FA  AE03               	btfss	___ftge@ff1+2,7,c
  2682  0070FC  D016               	goto	l1255
  2683  0070FE  C001  F007         	movff	___ftge@ff1,??___ftge
  2684  007102  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  2685  007106  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  2686  00710A  1E07               	comf	??___ftge,f,c
  2687  00710C  1E08               	comf	??___ftge+1,f,c
  2688  00710E  1E09               	comf	??___ftge+2,f,c
  2689  007110  2A07               	incf	??___ftge,f,c
  2690  007112  0E00               	movlw	0
  2691  007114  2208               	addwfc	??___ftge+1,f,c
  2692  007116  2209               	addwfc	??___ftge+2,f,c
  2693  007118  0E00               	movlw	0
  2694  00711A  2407               	addwf	??___ftge,w,c
  2695  00711C  6E01               	movwf	___ftge@ff1,c
  2696  00711E  0E00               	movlw	0
  2697  007120  2008               	addwfc	??___ftge+1,w,c
  2698  007122  6E02               	movwf	___ftge@ff1+1,c
  2699  007124  0E80               	movlw	128
  2700  007126  2009               	addwfc	??___ftge+2,w,c
  2701  007128  6E03               	movwf	___ftge@ff1+2,c
  2702  00712A                     l1255:
  2703  00712A  AE06               	btfss	___ftge@ff2+2,7,c
  2704  00712C  D016               	goto	l1259
  2705  00712E  C004  F007         	movff	___ftge@ff2,??___ftge
  2706  007132  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  2707  007136  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  2708  00713A  1E07               	comf	??___ftge,f,c
  2709  00713C  1E08               	comf	??___ftge+1,f,c
  2710  00713E  1E09               	comf	??___ftge+2,f,c
  2711  007140  2A07               	incf	??___ftge,f,c
  2712  007142  0E00               	movlw	0
  2713  007144  2208               	addwfc	??___ftge+1,f,c
  2714  007146  2209               	addwfc	??___ftge+2,f,c
  2715  007148  0E00               	movlw	0
  2716  00714A  2407               	addwf	??___ftge,w,c
  2717  00714C  6E04               	movwf	___ftge@ff2,c
  2718  00714E  0E00               	movlw	0
  2719  007150  2008               	addwfc	??___ftge+1,w,c
  2720  007152  6E05               	movwf	___ftge@ff2+1,c
  2721  007154  0E80               	movlw	128
  2722  007156  2009               	addwfc	??___ftge+2,w,c
  2723  007158  6E06               	movwf	___ftge@ff2+2,c
  2724  00715A                     l1259:
  2725  00715A  0E00               	movlw	0
  2726  00715C  1A01               	xorwf	___ftge@ff1,f,c
  2727  00715E  0E00               	movlw	0
  2728  007160  1A02               	xorwf	___ftge@ff1+1,f,c
  2729  007162  0E80               	movlw	128
  2730  007164  1A03               	xorwf	___ftge@ff1+2,f,c
  2731  007166  0E00               	movlw	0
  2732  007168  1A04               	xorwf	___ftge@ff2,f,c
  2733  00716A  0E00               	movlw	0
  2734  00716C  1A05               	xorwf	___ftge@ff2+1,f,c
  2735  00716E  0E80               	movlw	128
  2736  007170  1A06               	xorwf	___ftge@ff2+2,f,c
  2737  007172  5004               	movf	___ftge@ff2,w,c
  2738  007174  5C01               	subwf	___ftge@ff1,w,c
  2739  007176  5005               	movf	___ftge@ff2+1,w,c
  2740  007178  5802               	subwfb	___ftge@ff1+1,w,c
  2741  00717A  5006               	movf	___ftge@ff2+2,w,c
  2742  00717C  5803               	subwfb	___ftge@ff1+2,w,c
  2743  00717E  B0D8               	btfsc	status,0,c
  2744  007180  D002               	goto	l1265
  2745  007182  90D8               	bcf	status,0,c
  2746  007184  0012               	return	
  2747  007186                     l1265:
  2748  007186  80D8               	bsf	status,0,c
  2749  007188  0012               	return	
  2750  00718A                     __end_of___ftge:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           postinc0	equ	0xFEE
  2757                           postinc1	equ	0xFE6
  2758                           postdec1	equ	0xFE5
  2759                           fsr1h	equ	0xFE2
  2760                           fsr1l	equ	0xFE1
  2761                           indf2	equ	0xFDF
  2762                           postinc2	equ	0xFDE
  2763                           postdec2	equ	0xFDD
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function ___ftadd *****************
  2769 ;; Defined at:
  2770 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  f1              3   26[COMRAM] float 
  2773 ;;  f2              3   29[COMRAM] float 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  exp1            1   37[COMRAM] unsigned char 
  2776 ;;  exp2            1   36[COMRAM] unsigned char 
  2777 ;;  sign            1   35[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  3   26[COMRAM] float 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2787 ;;      Params:         6       0       0       0       0       0       0       0       0
  2788 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2789 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2790 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:       12 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    1
  2794 ;; This function calls:
  2795 ;;		___ftpack
  2796 ;; This function is called by:
  2797 ;;		_PID_Compute
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text15
  2802  0077BC                     __ptext15:
  2803                           	opt stack 0
  2804  0077BC                     ___ftadd:
  2805                           	opt stack 28
  2806                           
  2807                           ;incstack = 0
  2808  0077BC  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
  2809  0077C0  6A22               	clrf	(??___ftadd+1)& (0+255),c
  2810  0077C2  6A23               	clrf	(??___ftadd+2)& (0+255),c
  2811  0077C4  341C               	rlcf	___ftadd@f1+1,w,c
  2812  0077C6  3621               	rlcf	??___ftadd& (0+255),f,c
  2813  0077C8  E301               	bnc	u1081
  2814  0077CA  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  2815  0077CC                     u1081:
  2816  0077CC  5021               	movf	??___ftadd,w,c
  2817  0077CE  6E26               	movwf	___ftadd@exp1,c
  2818  0077D0  C020  F021         	movff	___ftadd@f2+2,??___ftadd
  2819  0077D4  6A22               	clrf	(??___ftadd+1)& (0+255),c
  2820  0077D6  6A23               	clrf	(??___ftadd+2)& (0+255),c
  2821  0077D8  341F               	rlcf	___ftadd@f2+1,w,c
  2822  0077DA  3621               	rlcf	??___ftadd& (0+255),f,c
  2823  0077DC  E301               	bnc	u1091
  2824  0077DE  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  2825  0077E0                     u1091:
  2826  0077E0  5021               	movf	??___ftadd,w,c
  2827  0077E2  6E25               	movwf	___ftadd@exp2,c
  2828  0077E4  5026               	movf	___ftadd@exp1,w,c
  2829  0077E6  B4D8               	btfsc	status,2,c
  2830  0077E8  D00B               	goto	l343
  2831  0077EA  5025               	movf	___ftadd@exp2,w,c
  2832  0077EC  5C26               	subwf	___ftadd@exp1,w,c
  2833  0077EE  B0D8               	btfsc	status,0,c
  2834  0077F0  D00E               	goto	l1355
  2835  0077F2  5026               	movf	___ftadd@exp1,w,c
  2836  0077F4  0800               	sublw	0
  2837  0077F6  2425               	addwf	___ftadd@exp2,w,c
  2838  0077F8  6E21               	movwf	??___ftadd& (0+255),c
  2839  0077FA  0E18               	movlw	24
  2840  0077FC  6421               	cpfsgt	??___ftadd,c
  2841  0077FE  D007               	goto	l1355
  2842  007800                     l343:
  2843  007800  C01E  F01B         	movff	___ftadd@f2,?___ftadd
  2844  007804  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
  2845  007808  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
  2846  00780C  0012               	return	
  2847  00780E                     l1355:
  2848  00780E  5025               	movf	___ftadd@exp2,w,c
  2849  007810  B4D8               	btfsc	status,2,c
  2850  007812  D00B               	goto	l347
  2851  007814  5026               	movf	___ftadd@exp1,w,c
  2852  007816  5C25               	subwf	___ftadd@exp2,w,c
  2853  007818  B0D8               	btfsc	status,0,c
  2854  00781A  D00E               	goto	l1361
  2855  00781C  5025               	movf	___ftadd@exp2,w,c
  2856  00781E  0800               	sublw	0
  2857  007820  2426               	addwf	___ftadd@exp1,w,c
  2858  007822  6E21               	movwf	??___ftadd& (0+255),c
  2859  007824  0E18               	movlw	24
  2860  007826  6421               	cpfsgt	??___ftadd,c
  2861  007828  D007               	goto	l1361
  2862  00782A                     l347:
  2863  00782A  C01B  F01B         	movff	___ftadd@f1,?___ftadd
  2864  00782E  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
  2865  007832  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
  2866  007836  0012               	return	
  2867  007838                     l1361:
  2868  007838  0E06               	movlw	6
  2869  00783A  6E24               	movwf	___ftadd@sign,c
  2870  00783C  BE1D               	btfsc	___ftadd@f1+2,7,c
  2871  00783E  8E24               	bsf	___ftadd@sign,7,c
  2872  007840  BE20               	btfsc	___ftadd@f2+2,7,c
  2873  007842  8C24               	bsf	___ftadd@sign,6,c
  2874  007844  8E1C               	bsf	___ftadd@f1+1,7,c
  2875  007846  0EFF               	movlw	255
  2876  007848  161B               	andwf	___ftadd@f1,f,c
  2877  00784A  0EFF               	movlw	255
  2878  00784C  161C               	andwf	___ftadd@f1+1,f,c
  2879  00784E  0E00               	movlw	0
  2880  007850  161D               	andwf	___ftadd@f1+2,f,c
  2881  007852  8E1F               	bsf	___ftadd@f2+1,7,c
  2882  007854  0EFF               	movlw	255
  2883  007856  161E               	andwf	___ftadd@f2,f,c
  2884  007858  0EFF               	movlw	255
  2885  00785A  161F               	andwf	___ftadd@f2+1,f,c
  2886  00785C  0E00               	movlw	0
  2887  00785E  1620               	andwf	___ftadd@f2+2,f,c
  2888  007860  5025               	movf	___ftadd@exp2,w,c
  2889  007862  5C26               	subwf	___ftadd@exp1,w,c
  2890  007864  B0D8               	btfsc	status,0,c
  2891  007866  D01B               	goto	l1387
  2892  007868                     l1377:
  2893  007868  90D8               	bcf	status,0,c
  2894  00786A  361E               	rlcf	___ftadd@f2,f,c
  2895  00786C  361F               	rlcf	___ftadd@f2+1,f,c
  2896  00786E  3620               	rlcf	___ftadd@f2+2,f,c
  2897  007870  0625               	decf	___ftadd@exp2,f,c
  2898  007872  5026               	movf	___ftadd@exp1,w,c
  2899  007874  1825               	xorwf	___ftadd@exp2,w,c
  2900  007876  B4D8               	btfsc	status,2,c
  2901  007878  D00D               	goto	l1385
  2902  00787A  0624               	decf	___ftadd@sign,f,c
  2903  00787C  C024  F021         	movff	___ftadd@sign,??___ftadd
  2904  007880  0E07               	movlw	7
  2905  007882  1621               	andwf	??___ftadd,f,c
  2906  007884  B4D8               	btfsc	status,2,c
  2907  007886  D006               	goto	l1385
  2908  007888  D7EF               	goto	l1377
  2909  00788A                     l1383:
  2910  00788A  90D8               	bcf	status,0,c
  2911  00788C  321D               	rrcf	___ftadd@f1+2,f,c
  2912  00788E  321C               	rrcf	___ftadd@f1+1,f,c
  2913  007890  321B               	rrcf	___ftadd@f1,f,c
  2914  007892  2A26               	incf	___ftadd@exp1,f,c
  2915  007894                     l1385:
  2916  007894  5025               	movf	___ftadd@exp2,w,c
  2917  007896  1826               	xorwf	___ftadd@exp1,w,c
  2918  007898  B4D8               	btfsc	status,2,c
  2919  00789A  D01F               	goto	l358
  2920  00789C  D7F6               	goto	l1383
  2921  00789E                     l1387:
  2922  00789E  5026               	movf	___ftadd@exp1,w,c
  2923  0078A0  5C25               	subwf	___ftadd@exp2,w,c
  2924  0078A2  B0D8               	btfsc	status,0,c
  2925  0078A4  D01A               	goto	l358
  2926  0078A6                     l1389:
  2927  0078A6  90D8               	bcf	status,0,c
  2928  0078A8  361B               	rlcf	___ftadd@f1,f,c
  2929  0078AA  361C               	rlcf	___ftadd@f1+1,f,c
  2930  0078AC  361D               	rlcf	___ftadd@f1+2,f,c
  2931  0078AE  0626               	decf	___ftadd@exp1,f,c
  2932  0078B0  5026               	movf	___ftadd@exp1,w,c
  2933  0078B2  1825               	xorwf	___ftadd@exp2,w,c
  2934  0078B4  B4D8               	btfsc	status,2,c
  2935  0078B6  D00D               	goto	l1397
  2936  0078B8  0624               	decf	___ftadd@sign,f,c
  2937  0078BA  C024  F021         	movff	___ftadd@sign,??___ftadd
  2938  0078BE  0E07               	movlw	7
  2939  0078C0  1621               	andwf	??___ftadd,f,c
  2940  0078C2  B4D8               	btfsc	status,2,c
  2941  0078C4  D006               	goto	l1397
  2942  0078C6  D7EF               	goto	l1389
  2943  0078C8                     l1395:
  2944  0078C8  90D8               	bcf	status,0,c
  2945  0078CA  3220               	rrcf	___ftadd@f2+2,f,c
  2946  0078CC  321F               	rrcf	___ftadd@f2+1,f,c
  2947  0078CE  321E               	rrcf	___ftadd@f2,f,c
  2948  0078D0  2A25               	incf	___ftadd@exp2,f,c
  2949  0078D2                     l1397:
  2950  0078D2  5025               	movf	___ftadd@exp2,w,c
  2951  0078D4  1826               	xorwf	___ftadd@exp1,w,c
  2952  0078D6  A4D8               	btfss	status,2,c
  2953  0078D8  D7F7               	goto	l1395
  2954  0078DA                     l358:
  2955  0078DA  AE24               	btfss	___ftadd@sign,7,c
  2956  0078DC  D00C               	goto	l367
  2957  0078DE  0EFF               	movlw	255
  2958  0078E0  1A1B               	xorwf	___ftadd@f1,f,c
  2959  0078E2  0EFF               	movlw	255
  2960  0078E4  1A1C               	xorwf	___ftadd@f1+1,f,c
  2961  0078E6  0EFF               	movlw	255
  2962  0078E8  1A1D               	xorwf	___ftadd@f1+2,f,c
  2963  0078EA  0E01               	movlw	1
  2964  0078EC  261B               	addwf	___ftadd@f1,f,c
  2965  0078EE  0E00               	movlw	0
  2966  0078F0  221C               	addwfc	___ftadd@f1+1,f,c
  2967  0078F2  0E00               	movlw	0
  2968  0078F4  221D               	addwfc	___ftadd@f1+2,f,c
  2969  0078F6                     l367:
  2970  0078F6  AC24               	btfss	___ftadd@sign,6,c
  2971  0078F8  D00C               	goto	l1403
  2972  0078FA  0EFF               	movlw	255
  2973  0078FC  1A1E               	xorwf	___ftadd@f2,f,c
  2974  0078FE  0EFF               	movlw	255
  2975  007900  1A1F               	xorwf	___ftadd@f2+1,f,c
  2976  007902  0EFF               	movlw	255
  2977  007904  1A20               	xorwf	___ftadd@f2+2,f,c
  2978  007906  0E01               	movlw	1
  2979  007908  261E               	addwf	___ftadd@f2,f,c
  2980  00790A  0E00               	movlw	0
  2981  00790C  221F               	addwfc	___ftadd@f2+1,f,c
  2982  00790E  0E00               	movlw	0
  2983  007910  2220               	addwfc	___ftadd@f2+2,f,c
  2984  007912                     l1403:
  2985  007912  0E00               	movlw	0
  2986  007914  6E24               	movwf	___ftadd@sign,c
  2987  007916  501B               	movf	___ftadd@f1,w,c
  2988  007918  261E               	addwf	___ftadd@f2,f,c
  2989  00791A  501C               	movf	___ftadd@f1+1,w,c
  2990  00791C  221F               	addwfc	___ftadd@f2+1,f,c
  2991  00791E  501D               	movf	___ftadd@f1+2,w,c
  2992  007920  2220               	addwfc	___ftadd@f2+2,f,c
  2993  007922  AE20               	btfss	___ftadd@f2+2,7,c
  2994  007924  D00E               	goto	l1413
  2995  007926  0EFF               	movlw	255
  2996  007928  1A1E               	xorwf	___ftadd@f2,f,c
  2997  00792A  0EFF               	movlw	255
  2998  00792C  1A1F               	xorwf	___ftadd@f2+1,f,c
  2999  00792E  0EFF               	movlw	255
  3000  007930  1A20               	xorwf	___ftadd@f2+2,f,c
  3001  007932  0E01               	movlw	1
  3002  007934  261E               	addwf	___ftadd@f2,f,c
  3003  007936  0E00               	movlw	0
  3004  007938  221F               	addwfc	___ftadd@f2+1,f,c
  3005  00793A  0E00               	movlw	0
  3006  00793C  2220               	addwfc	___ftadd@f2+2,f,c
  3007  00793E  0E01               	movlw	1
  3008  007940  6E24               	movwf	___ftadd@sign,c
  3009  007942                     l1413:
  3010  007942  C01E  F001         	movff	___ftadd@f2,___ftpack@arg
  3011  007946  C01F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3012  00794A  C020  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3013  00794E  C026  F004         	movff	___ftadd@exp1,___ftpack@exp
  3014  007952  C024  F005         	movff	___ftadd@sign,___ftpack@sign
  3015  007956  ECC5  F038         	call	___ftpack	;wreg free
  3016  00795A  C001  F01B         	movff	?___ftpack,?___ftadd
  3017  00795E  C002  F01C         	movff	?___ftpack+1,?___ftadd+1
  3018  007962  C003  F01D         	movff	?___ftpack+2,?___ftadd+2
  3019  007966  0012               	return	
  3020  007968                     __end_of___ftadd:
  3021                           	opt stack 0
  3022                           tblptru	equ	0xFF8
  3023                           tblptrh	equ	0xFF7
  3024                           tblptrl	equ	0xFF6
  3025                           tablat	equ	0xFF5
  3026                           postinc0	equ	0xFEE
  3027                           postinc1	equ	0xFE6
  3028                           postdec1	equ	0xFE5
  3029                           fsr1h	equ	0xFE2
  3030                           fsr1l	equ	0xFE1
  3031                           indf2	equ	0xFDF
  3032                           postinc2	equ	0xFDE
  3033                           postdec2	equ	0xFDD
  3034                           fsr2h	equ	0xFDA
  3035                           fsr2l	equ	0xFD9
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function ___ftpack *****************
  3039 ;; Defined at:
  3040 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  arg             3    0[COMRAM] unsigned um
  3043 ;;  exp             1    3[COMRAM] unsigned char 
  3044 ;;  sign            1    4[COMRAM] unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  3    0[COMRAM] float 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         5       0       0       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3059 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        8 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		___awtoft
  3066 ;;		___ftadd
  3067 ;;		___ftdiv
  3068 ;;		___ftmul
  3069 ;;		___lbtoft
  3070 ;;		___lltoft
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text16
  3075  00718A                     __ptext16:
  3076                           	opt stack 0
  3077  00718A                     ___ftpack:
  3078                           	opt stack 29
  3079                           
  3080                           ;incstack = 0
  3081  00718A  5004               	movf	___ftpack@exp,w,c
  3082  00718C  B4D8               	btfsc	status,2,c
  3083  00718E  D005               	goto	l1125
  3084  007190  5001               	movf	___ftpack@arg,w,c
  3085  007192  1002               	iorwf	___ftpack@arg+1,w,c
  3086  007194  1003               	iorwf	___ftpack@arg+2,w,c
  3087  007196  A4D8               	btfss	status,2,c
  3088  007198  D00C               	goto	l1131
  3089  00719A                     l1125:
  3090  00719A  0E00               	movlw	0
  3091  00719C  6E01               	movwf	?___ftpack,c
  3092  00719E  0E00               	movlw	0
  3093  0071A0  6E02               	movwf	?___ftpack+1,c
  3094  0071A2  0E00               	movlw	0
  3095  0071A4  6E03               	movwf	?___ftpack+2,c
  3096  0071A6  0012               	return	
  3097  0071A8                     l1129:
  3098  0071A8  2A04               	incf	___ftpack@exp,f,c
  3099  0071AA  90D8               	bcf	status,0,c
  3100  0071AC  3203               	rrcf	___ftpack@arg+2,f,c
  3101  0071AE  3202               	rrcf	___ftpack@arg+1,f,c
  3102  0071B0  3201               	rrcf	___ftpack@arg,f,c
  3103  0071B2                     l1131:
  3104  0071B2  0E00               	movlw	0
  3105  0071B4  1401               	andwf	___ftpack@arg,w,c
  3106  0071B6  6E06               	movwf	??___ftpack& (0+255),c
  3107  0071B8  0E00               	movlw	0
  3108  0071BA  1402               	andwf	___ftpack@arg+1,w,c
  3109  0071BC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3110  0071BE  0EFE               	movlw	254
  3111  0071C0  1403               	andwf	___ftpack@arg+2,w,c
  3112  0071C2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3113  0071C4  5006               	movf	??___ftpack,w,c
  3114  0071C6  1007               	iorwf	??___ftpack+1,w,c
  3115  0071C8  1008               	iorwf	??___ftpack+2,w,c
  3116  0071CA  B4D8               	btfsc	status,2,c
  3117  0071CC  D00C               	goto	l1137
  3118  0071CE  D7EC               	goto	l1129
  3119  0071D0                     l1133:
  3120  0071D0  2A04               	incf	___ftpack@exp,f,c
  3121  0071D2  0E01               	movlw	1
  3122  0071D4  2601               	addwf	___ftpack@arg,f,c
  3123  0071D6  0E00               	movlw	0
  3124  0071D8  2202               	addwfc	___ftpack@arg+1,f,c
  3125  0071DA  0E00               	movlw	0
  3126  0071DC  2203               	addwfc	___ftpack@arg+2,f,c
  3127  0071DE  90D8               	bcf	status,0,c
  3128  0071E0  3203               	rrcf	___ftpack@arg+2,f,c
  3129  0071E2  3202               	rrcf	___ftpack@arg+1,f,c
  3130  0071E4  3201               	rrcf	___ftpack@arg,f,c
  3131  0071E6                     l1137:
  3132  0071E6  0E00               	movlw	0
  3133  0071E8  1401               	andwf	___ftpack@arg,w,c
  3134  0071EA  6E06               	movwf	??___ftpack& (0+255),c
  3135  0071EC  0E00               	movlw	0
  3136  0071EE  1402               	andwf	___ftpack@arg+1,w,c
  3137  0071F0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3138  0071F2  0EFF               	movlw	255
  3139  0071F4  1403               	andwf	___ftpack@arg+2,w,c
  3140  0071F6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3141  0071F8  5006               	movf	??___ftpack,w,c
  3142  0071FA  1007               	iorwf	??___ftpack+1,w,c
  3143  0071FC  1008               	iorwf	??___ftpack+2,w,c
  3144  0071FE  B4D8               	btfsc	status,2,c
  3145  007200  D006               	goto	l1141
  3146  007202  D7E6               	goto	l1133
  3147  007204                     l1139:
  3148  007204  0604               	decf	___ftpack@exp,f,c
  3149  007206  90D8               	bcf	status,0,c
  3150  007208  3601               	rlcf	___ftpack@arg,f,c
  3151  00720A  3602               	rlcf	___ftpack@arg+1,f,c
  3152  00720C  3603               	rlcf	___ftpack@arg+2,f,c
  3153  00720E                     l1141:
  3154  00720E  BE02               	btfsc	___ftpack@arg+1,7,c
  3155  007210  D003               	goto	l320
  3156  007212  0E02               	movlw	2
  3157  007214  6004               	cpfslt	___ftpack@exp,c
  3158  007216  D7F6               	goto	l1139
  3159  007218                     l320:
  3160  007218  A004               	btfss	___ftpack@exp,0,c
  3161  00721A  9E02               	bcf	___ftpack@arg+1,7,c
  3162  00721C  90D8               	bcf	status,0,c
  3163  00721E  3204               	rrcf	___ftpack@exp,f,c
  3164  007220  5004               	movf	___ftpack@exp,w,c
  3165  007222  1203               	iorwf	___ftpack@arg+2,f,c
  3166  007224  5005               	movf	___ftpack@sign,w,c
  3167  007226  A4D8               	btfss	status,2,c
  3168  007228  8E03               	bsf	___ftpack@arg+2,7,c
  3169  00722A  C001  F001         	movff	___ftpack@arg,?___ftpack
  3170  00722E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3171  007232  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3172  007236  0012               	return	
  3173  007238                     __end_of___ftpack:
  3174                           	opt stack 0
  3175  0000                     tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           postinc0	equ	0xFEE
  3180                           postinc1	equ	0xFE6
  3181                           postdec1	equ	0xFE5
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           indf2	equ	0xFDF
  3185                           postinc2	equ	0xFDE
  3186                           postdec2	equ	0xFDD
  3187                           fsr2h	equ	0xFDA
  3188                           fsr2l	equ	0xFD9
  3189                           status	equ	0xFD8
  3190                           tblptru	equ	0xFF8
  3191                           tblptrh	equ	0xFF7
  3192                           tblptrl	equ	0xFF6
  3193                           tablat	equ	0xFF5
  3194                           postinc0	equ	0xFEE
  3195                           postinc1	equ	0xFE6
  3196                           postdec1	equ	0xFE5
  3197                           fsr1h	equ	0xFE2
  3198                           fsr1l	equ	0xFE1
  3199                           indf2	equ	0xFDF
  3200                           postinc2	equ	0xFDE
  3201                           postdec2	equ	0xFDD
  3202                           fsr2h	equ	0xFDA
  3203                           fsr2l	equ	0xFD9
  3204                           status	equ	0xFD8
  3205                           
  3206                           	psect	rparam
  3207  0000                     tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           postinc0	equ	0xFEE
  3212                           postinc1	equ	0xFE6
  3213                           postdec1	equ	0xFE5
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      59
    BANK0           160     45      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    PID_SetControllerDirection@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Initialize@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetMode@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetOutputLimits@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_SetTunings@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_Compute@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 

    PID_init@pid	PTR struct . size(2) Largest target is 45
		 -> main@PID(BANK0[45]), 


Critical Paths under _main in COMRAM

    _main->_PID_init
    ___lbtoft->___ftpack
    ___awtoft->___ftpack
    _PID_init->_PID_SetTunings
    _PID_SetTunings->___ftdiv
    ___lltoft->___ftpack
    ___ftdiv->___lltoft
    _PID_SetOutputLimits->___awtoft
    _PID_SetControllerDirection->___ftneg
    _PID_SetMode->_PID_Initialize
    _PID_Initialize->___ftge
    _PID_Compute->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___ftneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0   35271
                                              0 BANK0     45    45      0
                        _PID_Compute
                        _PID_SetMode
                _PID_SetOutputLimits
                           _PID_init
                           ___awtoft
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2566
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2939
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PID_init                                            12     0     12   15029
                                             47 COMRAM    12     0     12
         _PID_SetControllerDirection
                _PID_SetOutputLimits
                     _PID_SetTunings
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      15     4     11   11204
                                             32 COMRAM    15     4     11
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2738
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3504
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  8     0      8    2230
                                             12 COMRAM     8     0      8
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           4     1      3     907
                                             26 COMRAM     4     1      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) _PID_SetMode                                          5     2      3    1893
                                             11 COMRAM     5     2      3
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (2) _PID_Initialize                                       2     0      2    1608
                                              9 COMRAM     2     0      2
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _PID_Compute                                         17    15      2   10332
                                             38 COMRAM    17    15      2
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     513
                                             23 COMRAM     3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3594
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1268
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4126
                                             26 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_Compute
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
   _PID_SetMode
     _PID_Initialize
       ___ftge
   _PID_SetOutputLimits
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _PID_init
     _PID_SetControllerDirection
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
     _PID_SetOutputLimits
       ___awtoft (ARG)
         ___ftpack
       ___ftge (ARG)
     _PID_SetTunings
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
   ___awtoft
     ___ftpack
   ___lbtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      37       5       34.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3B      3B       1       62.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      20        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon May 22 12:17:18 2017

                    PID_SetMode@Mode 000E                                   l43 7FCE  
             __end_of_PID_Initialize 76B2                         ___ftadd@exp1 0026  
                       ___ftadd@exp2 0025                ??_PID_SetOutputLimits 0015  
                       ___ftadd@sign 0024                                  l320 7218  
                                l400 6FC4                                  l343 7800  
                                l347 782A                                  l358 78DA  
                                l367 78F6                                  l378 7488  
                                u801 740C                                  u831 74CA  
                                u851 74F2                                  u781 73E4  
                  PID_Compute@dInput 0029                         ___ftdiv@cntr 001B  
                       ___ftdiv@sign 0020                                 l1131 71B2  
                               l1141 720E                                 l1133 71D0  
                               l1125 719A                                 l1301 7AC2  
                               l1215 750A                                 l1311 73C2  
                               l1137 71E6                                 l1129 71A8  
                               l1233 754C                                 l1209 74E2  
                               l1139 7204                                 l1403 7912  
                               l1243 7574                                 l1163 73FC  
                               l1413 7942                                 l1229 753C  
                               l1255 712A                                 l1239 7564  
                               l1343 7654                                 l1361 7838  
                               l1265 7186                                 l1433 708C  
                               l1169 7424                                 l1355 780E  
                               l1259 715A                                 l1275 70A4  
                               l1453 7E58                                 l1293 7A08  
                               l1189 7462                                 l1277 70B0  
                               l1383 788A                                 l1463 7F8A  
                               l1385 7894                                 l1377 7868  
                               l1449 7DFC                                 l1297 7A64  
                               l1395 78C8                                 l1387 789E  
                               l1397 78D2                                 l1389 78A6  
                               l1477 703A                                 u1300 706A  
                               u1081 77CC                                 u1091 77E0  
                               u1290 7068                    PID_Compute@output 0035  
                               _main 7238                         ___ftpack@arg 0001  
                       ___ftpack@exp 0004                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
             PID_SetOutputLimits@Max 0012               PID_SetOutputLimits@Min 000F  
             PID_SetOutputLimits@pid 000D               __end_of_PID_SetTunings 7CE8  
                               start 0000                         ___ftmul@cntr 0016  
                       ___param_bank 000000                         ___ftmul@sign 0017  
                    ?_PID_Initialize 000A                                ?_main 0001  
                    __end_of___ftadd 7968                      __end_of___ftdiv 74BA  
                    __end_of___ftneg 6FD2                      __end_of___ftmul 75AE  
                       ___lltoft@exp 0011                     __end_of_PID_init 77BC  
                              _Input 0096                        ___awtoft@sign 000C  
                 PID_SetMode@newAuto 0010                        ___ftpack@sign 0005  
                              tablat 000FF5                                status 000FD8  
                    ?_PID_SetTunings 0021                         ?_PID_Compute 0027  
                    __initialization 6FF6                         __end_of_main 7300  
                       ?_PID_SetMode 000C                               ??_main 003C  
                      __activetblptr 000000                     PID_SetTunings@Kd 0029  
                   PID_SetTunings@Ki 0026                     PID_SetTunings@Kp 0023  
                   __end_of___awtoft 705E                     __end_of___ftpack 7238  
                   __end_of___lbtoft 6FF6                     __end_of___lltoft 70FA  
                             _Output 0093                               ___ftge 70FA  
                          ??___ftadd 0021                            ??___ftdiv 0018  
                          ??___ftneg 001B                            ??___ftmul 000F  
              ___ftmul@f3_as_product 0013                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         __accesstop 0060              __end_of__initialization 7020  
                         ___ftadd@f1 001B                           ___ftadd@f2 001E  
                         ___ftge@ff1 0001                           ___ftge@ff2 0004  
                      ___rparam_used 000001                           ___ftdiv@f1 0012  
                         ___ftdiv@f2 0015                           ___ftdiv@f3 001C  
                         ___ftneg@f1 0018                           ___awtoft@c 0009  
                         ___lbtoft@c 000C                           ___ftmul@f1 0009  
                         ___ftmul@f2 000C                       __pcstackCOMRAM 0001  
                          ?_PID_init 0030                         __pidataBANK0 6FA8  
                         ___lltoft@c 0009                           __pbssBANK0 0093  
                  PID_SetTunings@pid 0021                     ??_PID_Initialize 000C  
                            ?___ftge 0001                           ??_PID_init 003C  
        __end_of_PID_SetOutputLimits 7B20                 __size_of_PID_Compute 0318  
               __size_of_PID_SetMode 0040                            ?___awtoft 0009  
                          ?___ftpack 0001                            ?___lbtoft 0009  
                          ?___lltoft 0009                          PID_init@pid 0030  
                   ??_PID_SetTunings 002C                       PID_Compute@pid 0027  
                            __Hparam 0000                              __Lparam 0000  
       ??_PID_SetControllerDirection 001E  PID_SetControllerDirection@Direction 001D  
                    __size_of___ftge 0090                              ___ftadd 77BC  
                            ___ftdiv 73D4                              ___ftneg 6FAE  
                            ___ftmul 74BA                              __pcinit 6FF6  
                         ??___awtoft 000C                           ??___ftpack 0006  
                         ??___lbtoft 000C                              __ramtop 0800  
                         ??___lltoft 000D                              __ptext0 7238  
                            __ptext1 6FD2                              __ptext2 7026  
                            __ptext3 76B2                              __ptext4 7B20  
                            __ptext5 709E                              __ptext6 73D4  
                            __ptext7 7968                              __ptext8 7300  
                            __ptext9 705E          PID_init@ControllerDirection 003B  
                            main@PID 0060                 end_of_initialization 7020  
__size_of_PID_SetControllerDirection 00D4                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                     PID_SetMode@pid 000C                     PID_Compute@error 002F  
                   PID_Compute@input 0032                          ___ftdiv@exp 001F  
                        ___ftmul@exp 0012                       __end_of___ftge 718A  
                  __size_of_PID_init 010A                  start_initialization 6FF6  
                  PID_Initialize@pid 000A   __end_of_PID_SetControllerDirection 73D4  
         _PID_SetControllerDirection 7300                             ??___ftge 0007  
                        __pdataBANK0 008D                    __size_of___awtoft 0038  
                  __size_of___ftpack 00AE                    __size_of___lbtoft 0024  
                  __size_of___lltoft 005C                        __pcstackBANK0 0060  
                      ??_PID_Compute 0029                        ??_PID_SetMode 000F  
                           ?___ftadd 001B                             ?___ftdiv 0012  
                           ?___ftneg 0018                             ?___ftmul 0009  
                         PID_init@Kd 0038                           PID_init@Ki 0035  
                         PID_init@Kp 0032         __size_of_PID_SetOutputLimits 01B8  
                           _PID_init 76B2                  __end_of_PID_Compute 8000  
                __end_of_PID_SetMode 709E              __size_of_PID_Initialize 0104  
                          copy_data0 700A                             __Hrparam 0000  
                           __Lrparam 0000              __size_of_PID_SetTunings 01C8  
                           _Setpoint 008D                     __size_of___ftadd 01AC  
                   __size_of___ftdiv 00E6                     __size_of___ftneg 0024  
                   __size_of___ftmul 00F4                             ___awtoft 7026  
                           ___ftpack 718A                             ___lbtoft 6FD2  
                           ___lltoft 709E                      _PID_Compute$943 002C  
                           __ptext10 75AE                             __ptext11 7CE8  
                           __ptext12 6FAE                             __ptext13 74BA  
                           __ptext14 70FA                             __ptext15 77BC  
                           __ptext16 718A                        __size_of_main 00C8  
                        _PID_Compute 7CE8          ?_PID_SetControllerDirection 001B  
                        _PID_SetMode 705E                          _PID_Out_Max 008F  
                        _PID_Out_Min 0091        PID_SetControllerDirection@pid 001B  
                _PID_SetOutputLimits 7968                       _PID_Initialize 75AE  
               ?_PID_SetOutputLimits 000D        PID_SetTunings@SampleTimeInSec 002D  
                     _PID_SetTunings 7B20  
